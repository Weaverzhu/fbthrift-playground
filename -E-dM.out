#define __S_IFBLK 0060000
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_200(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_201(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_204(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_205(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_206(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_207(s,p,o,m) 0
#define _SC_CHAR_MIN _SC_CHAR_MIN
#define BOOST_PP_INTERCEPT_254 
#define FOLLY_HAS_EXTENSION(x) 0
#define LN_aria_256_cfb128 "aria-256-cfb"
#define BOOST_PP_INTERCEPT_255 
#define OBJ_jurisdictionCountryName 1L,3L,6L,1L,4L,1L,311L,60L,2L,1L,3L
#define NID_setCext_TokenType 618
#define IPV6_2292HOPOPTS 3
#define SN_any_policy "anyPolicy"
#define BOOST_PP_FOR_4_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(5, s) BOOST_PP_IIF(c, BOOST_PP_FOR_5, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(5, s), p, o, m)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_210(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_211(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_212(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_213(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_215(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_217(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_219(s,p,o,m) 0
#define SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE 1111
#define BOOST_VARIANT_ENUM_PARAMS(x) x ## 0, BOOST_VARIANT_MAKE_VARIADIC( (BOOST_VARIANT_CLASS_OR_TYPENAME_TO_SEQ_ ## x), x)
#define NID_id_smime_aa_contentReference 221
#define NID_id_GostR3410_2001DH 817
#define __cpp_attributes 200809L
#define OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet OBJ_cryptopro,35L,2L
#define BOOST_PP_TUPLE_REM_CTOR_O_1(tuple) BOOST_PP_REM tuple
#define BOOST_PP_TUPLE_REM_CTOR_O_2(size,tuple) BOOST_PP_TUPLE_REM_CTOR_O_1(tuple)
#define BOOST_DETAIL_IS_NULLARY_ARGS_R_BOOST_DETAIL_IS_NULLARY_ARGS_C 0, BOOST_PP_NIL
#define SN_setct_CertReqTBEX "setct-CertReqTBEX"
#define AF_MAX PF_MAX
#define _SC_PII _SC_PII
#define TCP_CONGESTION 13
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_221(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_222(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_223(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_224(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_225(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_226(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_227(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_228(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_229(s,p,o,m) 0
#define OPENSSL_VERSION 0
#define BOOST_MPL_CFG_ASSERT_USE_RELATION_NAMES 
#define __UINT_LEAST16_MAX__ 0xffff
#define BLKSECDISCARD _IO(0x12,125)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011011 (1)(0)(0)(1)(1)(0)(1)(1),
#define BOOST_PP_SEQ_SIZE_198(_) BOOST_PP_SEQ_SIZE_199
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011100 (0)(1)(0)(1)(1)(1)(0)(0),
#define IP_ROUTER_ALERT 5
#define BOOST_PREPROCESSOR_DETAIL_IS_BEGIN_PARENS_HPP 
#define _POSIX2_SW_DEV __POSIX2_THIS_VERSION
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_230(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_231(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_232(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_233(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_235(s,p,o,m) 0
#define RE_DUP_MAX (0x7fff)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_237(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_238(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_239(s,p,o,m) 0
#define NID_id_GostR3410_94_TestParamSet 831
#define CHECK_STRNE(s1,s2) CHECK_STROP(strcmp, !=, false, s1, s2)
#define PEM_R_BAD_BASE64_DECODE 100
#define BOOST_EXECUTION_CONTEXT 2
#define BIO_do_connect(b) BIO_do_handshake(b)
#define _mm_maskz_srai_epi64(U,A,B) ((__m128i) __builtin_ia32_psraqi128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)_mm_setzero_si128 (), (__mmask8)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001100 (0)(1)(0)(0)(1)(1)(0)(0),
#define ASN1_R_SEQUENCE_LENGTH_MISMATCH 148
#define OBJ_create_and_add_object(a,b,c) OBJ_create(a,b,c)
#define signal_set(ev,x,cb,arg) event_set((ev), (x), EV_SIGNAL|EV_PERSIST, (cb), (arg))
#define SSL_get0_session SSL_get_session
#define RSA_F_RSA_PARAM_DECODE 164
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_240(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_241(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_242(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_243(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_244(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_246(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_247(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_248(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_249(s,p,o,m) 0
#define _GLIBCXX_USE_FCHMOD 1
#define HEADER_ECERR_H 
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_202(s,p,o,m) 0
#define CHECK_STROP(func,op,expected,s1,s2) while (google::CheckOpString _result = google::Check ##func ##expected ##Impl((s1), (s2), #s1 " " #op " " #s2)) LOG(FATAL) << *_result.str_
#define PRIxLEAST64 __PRI64_PREFIX "x"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_203(s,p,o,m) 0
#define LN_info_access "Authority Information Access"
#define EVP_MAX_MD_SIZE 64
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001110 (0)(1)(0)(0)(1)(1)(1)(0),
#define SSL_F_TLS_CONSTRUCT_STOC_EC_PT_FORMATS 453
#define _EXT_TYPE_TRAITS 1
#define SSL3_TXT_RSA_IDEA_128_SHA "IDEA-CBC-SHA"
#define SN_role "role"
#define BOOST_MOVE_IS_NOTHROW_MOVE_ASSIGNABLE(T) ::boost::move_detail::is_pod<T>::value
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_251(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_252(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_253(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_254(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_255(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_256(s,p,o,m) 0
#define NI_MAXSERV 32
#define BOOST_PP_SEQ_FOLD_LEFT_I_201(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_202, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(202, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256 "ECDHE-RSA-AES128-GCM-SHA256"
#define SSL_R_AT_LEAST_TLS_1_2_NEEDED_IN_SUITEB_MODE 158
#define SSL_EXT_TLS1_3_CERTIFICATE_REQUEST 0x4000
#define TCP_MD5SIG_EXT 32
#define CRYPTO_EX_INDEX_SSL_CTX 1
#define _GLIBCXX_NESTED_EXCEPTION_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_203(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_204, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(204, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_id_GostR3410_94_CryptoPro_D_ParamSet OBJ_cryptopro,32L,5L
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_208(s,p,o,m) 0
#define BOOST_PREPROCESSOR_CONTROL_IIF_HPP 
#define EVENT__HAVE_SYS_WAIT_H 1
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_209(s,p,o,m) 0
#define BOOST_PP_WHILE_67_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_68, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(68, s))
#define NID_aria_128_ctr 1069
#define PRIuPTR __PRIPTR_PREFIX "u"
#define SSL3_AD_CERTIFICATE_REVOKED 44
#define BOOST_PP_SEQ_FOLD_LEFT_I_207(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_208, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(208, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PREPROCESSOR_TUPLE_TO_LIST_HPP 
#define LN_sha224WithRSAEncryption "sha224WithRSAEncryption"
#define BOOST_PP_SEQ_FOLD_LEFT_I_208(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_209, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(209, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_aria_256_ctr "aria-256-ctr"
#define ASN1_F_ASN1_ITEM_EMBED_NEW 121
#define BOOST_PP_FOR_242_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(243, s) BOOST_PP_IIF(c, BOOST_PP_FOR_243, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(243, s), p, o, m)
#define BIO_CTRL_DGRAM_SET_DONT_FRAG 48
#define SSL_F_TLS_PROCESS_CKE_DHE 411
#define BOOST_MPL_AUX_LAMBDA_ARITY_PARAM(param) , param
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_156(p,o,s) 0
#define _PSTL_STRING_CONCAT(x,y) x #y
#define SN_room "room"
#define X509_VP_FLAG_OVERWRITE 0x2
#define SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED 344
#define _mm512_mask_scalef_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_scalefps512_mask(A, B, W, U, C)
#define _mm256_i64gather_epi32(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gatherdiv4si256 ((__v4si) _mm_setzero_si128 (), (int const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4si)_mm_set1_epi32(-1), (int) (SCALE))
#define OBJ_camellia_128_cmac OBJ_camellia,10L
#define SSL_SESSION_ASN1_VERSION 0x0001
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_159(p,o,s) 0
#define BOOST_MPL_AUX_TEMPLATE_ARITY_HPP_INCLUDED 
#define OBJ_crlBag OBJ_pkcs12_BagIds,4L
#define SSL_R_WRONG_SIGNATURE_TYPE 370
#define SSL_CTX_get_session_cache_mode(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_SESS_CACHE_MODE,0,NULL)
#define SN_ieee "ieee"
#define __SCHAR_WIDTH__ 8
#define X509_STORE_get1_crls X509_STORE_CTX_get1_crls
#define BOOST_PP_REPEAT_1_72(m,d) BOOST_PP_REPEAT_1_71(m, d) m(2, 71, d)
#define NID_pbe_WithSHA1And3_Key_TripleDES_CBC 146
#define OPENSSL_secure_clear_free(addr,num) CRYPTO_secure_clear_free(addr, num, OPENSSL_FILE, OPENSSL_LINE)
#define TLSEXT_TYPE_psk 41
#define EDESTADDRREQ 89
#define SSL_F_FINAL_EARLY_DATA 556
#define BOOST_TT_REMOVE_CV_HPP_INCLUDED 
#define X509V3_CTX_REPLACE 0x2
#define BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE mpl_
#define ASN1_R_INVALID_STRING_TABLE_VALUE 218
#define NID_aria_192_cbc 1071
#define _GLIBCXX_HAVE_WRITEV 1
#define BOOST_PP_LIST_FOLD_RIGHT_1(o,s,l) BOOST_PP_LIST_FOLD_LEFT_1(o, s, BOOST_PP_LIST_REVERSE_D(1, l))
#define BOOST_PP_LIST_FOLD_RIGHT_2(o,s,l) BOOST_PP_LIST_FOLD_LEFT_2(o, s, BOOST_PP_LIST_REVERSE_D(2, l))
#define BOOST_PP_LIST_FOLD_RIGHT_3(o,s,l) BOOST_PP_LIST_FOLD_LEFT_3(o, s, BOOST_PP_LIST_REVERSE_D(3, l))
#define X509_PCY_TREE_VALID 1
#define BOOST_PP_LIST_FOLD_RIGHT_5(o,s,l) BOOST_PP_LIST_FOLD_LEFT_5(o, s, BOOST_PP_LIST_REVERSE_D(5, l))
#define BOOST_PP_LIST_FOLD_RIGHT_6(o,s,l) BOOST_PP_LIST_FOLD_LEFT_6(o, s, BOOST_PP_LIST_REVERSE_D(6, l))
#define BOOST_PP_LIST_FOLD_RIGHT_9(o,s,l) BOOST_PP_LIST_FOLD_LEFT_9(o, s, BOOST_PP_LIST_REVERSE_D(9, l))
#define BOOST_PP_ENUM_M_2(z,n,md) BOOST_PP_ENUM_M_2_IM(z, n, BOOST_PP_TUPLE_REM_2 md)
#define TLS1_TXT_SRP_SHA_RSA_WITH_AES_256_CBC_SHA "SRP-RSA-AES-256-CBC-SHA"
#define BOOST_PP_LIST_FOLD_RIGHT_D(d,o,s,l) BOOST_PP_LIST_FOLD_RIGHT_ ## d(o, s, l)
#define OBJ_id_alg_dh_pop OBJ_id_alg,4L
#define TLS1_TXT_DHE_DSS_WITH_AES_128_SHA "DHE-DSS-AES128-SHA"
#define TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDH-RSA-CAMELLIA128-SHA256"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011010 (1)(0)(0)(1)(1)(0)(1)(0),
#define OBJ_aes_192_cfb128 OBJ_aes,24L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111010 (1)(1)(1)(0)(1)(0),
#define _mm256_i64gather_epi64(BASE,INDEX,SCALE) (__m256i) __builtin_ia32_gatherdiv4di ((__v4di) _mm256_setzero_si256 (), (long long const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4di)_mm256_set1_epi64x (-1), (int) (SCALE))
#define _mm512_mask_add_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_addpd512_mask(A, B, W, U, C)
#define CRYPTO_EX_INDEX_ENGINE 10
#define _mm512_maskz_cvt_roundps_epu32(U,A,B) ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))
#define NID_aria_192_ccm 1121
#define _mm512_mask_add_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_addps512_mask(A, B, W, U, C)
#define EVP_VerifyUpdate(a,b,c) EVP_DigestUpdate(a,b,c)
#define NID_id_it_unsupportedOIDs 304
#define BOOST_PP_FOR_93_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(94, s) BOOST_PP_IIF(c, BOOST_PP_FOR_94, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(94, s), p, o, m)
#define BOOST_PP_DEC_144 143
#define OBJ_md2WithRSAEncryption OBJ_pkcs1,2L
#define ITIMER_VIRTUAL ITIMER_VIRTUAL
#define BOOST_MPL_AUX_ARG_TYPEDEF(T,name) 
#define _mm512_mask_sqrt_round_ps(W,U,A,C) (__m512)__builtin_ia32_sqrtps512_mask(A, W, U, C)
#define SSL_R_UNKNOWN_CERTIFICATE_TYPE 247
#define EMLINK 31
#define LN_id_pkix_OCSP_trustRoot "Trust Root"
#define BOOST_ATTRIBUTE_NO_UNIQUE_ADDRESS [[no_unique_address]]
#define NID_sm4_cfb128 1137
#define RSA_NO_PADDING 3
#define pthread_cleanup_push_defer_np(routine,arg) do { __pthread_cleanup_class __clframe (routine, arg); __clframe.__defer ()
#define lh_stats_bio OPENSSL_LH_stats_bio
#define _MM_MALLOC_H_INCLUDED 
#define PEM_STRING_ECPRIVATEKEY "EC PRIVATE KEY"
#define GOOGLE_LOG_DFATAL(counter) google::LogMessage(__FILE__, __LINE__, google::DFATAL_LEVEL, counter, &google::LogMessage::SendToLog)
#define SSL_R_DANE_TLSA_BAD_MATCHING_TYPE 200
#define X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE 5
#define __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
#define _mm512_maskz_cvt_roundps_epu64(U,A,B) ((__m512i)__builtin_ia32_cvtps2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define BIO_get_md_ctx(b,mdcp) BIO_ctrl(b,BIO_C_GET_MD_CTX,0, (char *)(mdcp))
#define __DBL_DENORM_MIN__ double(4.94065645841246544176568792868221372e-324L)
#define IPPROTO_ROUTING IPPROTO_ROUTING
#define SSL3_MT_CLIENT_HELLO 1
#define NID_setext_cv 606
#define MCAST_LEAVE_SOURCE_GROUP 47
#define BOOST_PP_SEQ_FOLD_LEFT_I_109(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_110, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(110, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_MPL_LIMIT_METAFUNCTION_ARITY 5
#define TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"
#define BOOST_TYPE_INDEX_REGISTER_CLASS 
#define BIO_do_handshake(b) BIO_ctrl(b,BIO_C_DO_STATE_MACHINE,0,NULL)
#define SN_grasshopper_ecb "grasshopper-ecb"
#define FIGETBSZ _IO(0x00,2)
#define SN_dhSinglePass_cofactorDH_sha1kdf_scheme "dhSinglePass-cofactorDH-sha1kdf-scheme"
#define BOOST_MPL_AUX_CONFIG_TYPEOF_HPP_INCLUDED 
#define BOOST_CURRENT_LOCATION ::boost::source_location(__FILE__, __LINE__, BOOST_CURRENT_FUNCTION)
#define APACHE_THRIFT_ACCESSOR_interactionId 
#define SMIME_NOCERTS PKCS7_NOCERTS
#define FSCRYPT_KEY_STATUS_PRESENT 2
#define NID_pbe_WithSHA1And128BitRC4 144
#define BOOST_PP_ADD_D(d,x,y) BOOST_PP_TUPLE_ELEM(2, 0, BOOST_PP_WHILE_ ## d(BOOST_PP_ADD_P, BOOST_PP_ADD_O, (x, y)))
#define NID_id_ppl_anyLanguage 664
#define NID_bf_ecb 92
#define BOOST_INTRUSIVE_DETAIL_HOOK_TRAITS_HPP 
#define X509V3_F_NREF_NOS 133
#define MAXFLOAT 3.40282347e+38F
#define _mm_cmpistri(X,Y,M) ((int) __builtin_ia32_pcmpistri128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define _mm_cmpistrm(X,Y,M) ((__m128i) __builtin_ia32_pcmpistrm128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define _mm_cmpistro(X,Y,M) ((int) __builtin_ia32_pcmpistrio128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define _mm_cmpistrs(X,Y,M) ((int) __builtin_ia32_pcmpistris128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define OBJ_basic_constraints OBJ_id_ce,19L
#define _mm_cmpistrz(X,Y,M) ((int) __builtin_ia32_pcmpistriz128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define IP_FREEBIND 15
#define _GLIBCXX_USE_TMPNAM 1
#define EVP_R_EXPECTING_A_EC_KEY 142
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_13(op,st,ss,sz) 0
#define _mm512_fmsub_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmsubps512_mask(A, B, C, -1, R)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_16(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_17(op,st,ss,sz) 0
#define BOOST_PP_BOOL_53 1
#define EC_F_EC_GROUP_GET_TRINOMIAL_BASIS 194
#define OPENSSL_ECC_MAX_FIELD_BITS 661
#define BLKTRACETEARDOWN _IO(0x12,118)
#define __cpp_lib_exchange_function 201304
#define EC_R_OPERATION_NOT_SUPPORTED 152
#define MAP_32BIT 0x40
#define __FLOAT_WORD_ORDER __BYTE_ORDER
#define IPPROTO_BEETPH IPPROTO_BEETPH
#define __RLIM_T_MATCHES_RLIM64_T 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_10(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_11(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_12(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_13(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_14(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_15(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_16(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_17(o,s,l) 0
#define LN_rsa "rsa"
#define APACHE_THRIFT_ACCESSOR_otherMetadata 
#define CLONE_NEWNET 0x40000000
#define BOOST_PP_FOR_61(s,p,o,m) BOOST_PP_FOR_61_C(BOOST_PP_BOOL(p(62, s)), s, p, o, m)
#define _CS_LFS_CFLAGS _CS_LFS_CFLAGS
#define NID_des_cdmf 643
#define BOOST_MPL_SIZEOF_HPP_INCLUDED 
#define U64(C) C ##ULL
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_30(op,st,ss,sz) 0
#define BOOST_INTRUSIVE_PACK_OPTIONS_HPP 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_21(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_22(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_24(o,s,l) 0
#define TH_PUSH 0x08
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_26(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_27(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_28(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_29(o,s,l) 0
#define ASN1_F_ASN1_OBJECT_NEW 123
#define SIGPROF 27
#define TLSEXT_ECPOINTFORMAT_first 0
#define NID_id_GostR3410_94 812
#define BOOST_PP_WHILE_138_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_139, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(139, s))
#define SN_setAttr_Token_B0Prime "setAttr-Token-B0Prime"
#define __cpp_variadic_using 201611L
#define _mm_getmant_round_sd(X,Y,C,D,R) ((__m128d)__builtin_ia32_getmantsd_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), (R)))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_40(op,st,ss,sz) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_30(o,s,l) 0
#define BOOST_ATTRIBUTE_NODISCARD [[nodiscard]]
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_32(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_33(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_34(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_35(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_36(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_37(o,s,l) 0
#define _mm_getmant_round_ss(X,Y,C,D,R) ((__m128)__builtin_ia32_getmantss_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), (R)))
#define BOOST_MPL_ASSERT_RELATION_IMPL(counter,x,rel,y) enum { BOOST_PP_CAT(mpl_assert_rel_value,counter) = (x rel y) }; BOOST_MPL_AUX_ASSERT_CONSTANT( std::size_t , BOOST_PP_CAT(mpl_assertion_in_line_,counter) = sizeof( boost::mpl::assertion_failed<BOOST_PP_CAT(mpl_assert_rel_value,counter)>( (boost::mpl::failed ************ ( boost::mpl::assert_relation< boost::mpl::assert_::relations( sizeof( boost::mpl::assert_::arg rel boost::mpl::assert_::arg ) ) , x , y >::************)) 0 ) ) )
#define BOOST_PP_SEQ_SIZE_82(_) BOOST_PP_SEQ_SIZE_83
#define si_ptr _sifields._rt.si_sigval.sival_ptr
#define FIZZ_UNION_TYPE(X,...) X X ##_;
#define _PSTL_PRAGMA_MESSAGE_IMPL(x) _PSTL_PRAGMA(message(_PSTL_STRING_CONCAT(_PSTL_PRAGMA_LOCATION, x)))
#define BOOST_PP_SEQ_SIZE_83(_) BOOST_PP_SEQ_SIZE_84
#define SN_proxyCertInfo "proxyCertInfo"
#define ENOTTY 25
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_41(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_43(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_44(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_45(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_46(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_47(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_48(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_49(o,s,l) 0
#define NID_textNotice 293
#define SN_id_tc26_wrap_gostr3412_2015_magma "id-tc26-wrap-gostr3412-2015-magma"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_214(s,p,o,m) 0
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
#define BOOST_PP_SEQ_FOLD_LEFT_I_210(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_211, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(211, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_167 167
#define __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
#define OBJ_friendlyCountry OBJ_pilotObjectClass,18L
#define BOOST_PP_SEQ_FOLD_LEFT_I_211(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_212, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(212, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE(t) 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_50(o,s,l) 0
#define ASN1_F_D2I_ASN1_OBJECT 147
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_53(o,s,l) 0
#define L_cuserid 9
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_55(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_56(o,s,l) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_216(s,p,o,m) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_58(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_59(o,s,l) 0
#define evuser_new(b,cb,arg) event_new((b), -1, 0, (cb), (arg))
#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA"
#define FS_IOC_GET_ENCRYPTION_POLICY _IOW('f', 21, struct fscrypt_policy_v1)
#define BOOST_MPL_PAIR_HPP_INCLUDED 
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_218(s,p,o,m) 0
#define EV_PERSIST 0x10
#define _mm256_floor_pd(V) _mm256_round_pd ((V), _MM_FROUND_FLOOR)
#define OBJ_camellia_192_gcm OBJ_camellia,26L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_60(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_61(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_63(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_64(o,s,l) 0
#define _mm256_floor_ps(V) _mm256_round_ps ((V), _MM_FROUND_FLOOR)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_67(o,s,l) 0
#define NID_camellia_192_ofb128 767
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_69(o,s,l) 0
#define SN_des_ede3_cfb64 "DES-EDE3-CFB"
#define OBJ_RSA_SHA3_384 OBJ_sigAlgs,15L
#define TLS1_CK_RSA_PSK_WITH_ARIA_128_GCM_SHA256 0x0300C06E
#define SYSLOG_INFO(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_INFO, counter, &google::LogMessage::SendToSyslogAndLog)
#define S_ISGID __S_ISGID
#define S_IFBLK __S_IFBLK
#define _POSIX_SYMLINK_MAX 255
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_163(p,o,s) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_218(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_219, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(219, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_TUPLE_SIZE(tuple) BOOST_PP_VARIADIC_SIZE tuple
#define BOOST_PP_LIST_REST_D(list) BOOST_PP_LIST_REST_I list
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_70(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_72(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_73(o,s,l) 0
#define BOOST_PP_LIST_REST_I(head,tail) tail
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_76(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_77(o,s,l) 0
#define EVP_CIPH_CUSTOM_COPY 0x400
#define OBJ_ISO_CN OBJ_member_body,156L
#define NID_uacurve0 1160
#define OBJ_X25519 1L,3L,101L,110L
#define NID_uacurve2 1162
#define NID_uacurve4 1164
#define NID_uacurve5 1165
#define NID_uacurve7 1167
#define NID_uacurve8 1168
#define NID_uacurve9 1169
#define LN_id_tc26_signwithdigest_gost3410_2012_256 "GOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)"
#define _BITS_TYPES_LOCALE_T_H 1
#define _LIMITS_H___ 
#define MSG_WAITALL MSG_WAITALL
#define SN_kx_rsa_psk "KxRSA_PSK"
#define DTLS_get_link_min_mtu(ssl) SSL_ctrl((ssl),DTLS_CTRL_GET_LINK_MIN_MTU,0,NULL)
#define __CLANG_PREREQ(maj,min) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_81(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_82(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_83(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_85(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_87(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_88(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_89(o,s,l) 0
#define STA_RONLY (STA_PPSSIGNAL | STA_PPSJITTER | STA_PPSWANDER | STA_PPSERROR | STA_CLOCKERR | STA_NANO | STA_MODE | STA_CLK)
#define __FLT32_MAX_10_EXP__ 38
#define _THRIFT_CONCURRENCY_FUNCTION_RUNNER_H 1
#define X509V3_F_POLICY_CACHE_CREATE 169
#define _mm512_ternarylogic_epi32(A,B,C,I) ((__m512i) __builtin_ia32_pternlogd512_mask ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(I), (__mmask16)-1))
#define _POSIX_V7_LP64_OFF64 1
#define X509_STORE_CTX_trusted_stack X509_STORE_CTX_set0_trusted_stack
#define NID_id_tc26_wrap_gostr3412_2015_magma_kexp15 1181
#define __S_IFMT 0170000
#define TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110000 (0)(1)(1)(0)(0)(0)(0),
#define OBJ_setAttr_SecDevSig OBJ_setAttr_IssCap_Sig,2L
#define SS_DISABLE SS_DISABLE
#define NID_hold_instruction_reject 433
#define SSL_R_NO_PROTOCOLS_AVAILABLE 191
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_90(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_91(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_92(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_95(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_96(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_97(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_99(o,s,l) 0
#define SPLICE_F_GIFT 8
#define CT_V1_HASHLEN SHA256_DIGEST_LENGTH
#define SN_setct_OIData "setct-OIData"
#define BOOST_PP_SEQ_SIZE_70(_) BOOST_PP_SEQ_SIZE_71
#define ASN1_F_ASN1_ITEM_FLAGS_I2D 118
#define BOOST_PP_SEQ_CAT_S_I_A(s,seq) BOOST_PP_SEQ_FOLD_LEFT_ ## s(BOOST_PP_SEQ_CAT_O, BOOST_PP_SEQ_HEAD(seq), BOOST_PP_SEQ_TAIL(seq))
#define LN_aes_256_ctr "aes-256-ctr"
#define OBJ_document OBJ_pilotObjectClass,6L
#define EVENT__HAVE_UINT16_T 1
#define _CS_PATH _CS_PATH
#define _ERRNO_H 1
#define NID_ad_OCSP 178
#define SSL_R_WRONG_VERSION_NUMBER 267
#define __FP_LOGBNAN_IS_MIN 1
#define NID_aria_192_ctr 1074
#define _GLIBCXX_HAVE_ENDIAN_H 1
#define NID_netscape_base_url 72
#define X509_F_X509_ATTRIBUTE_CREATE_BY_NID 136
#define NFDBITS __NFDBITS
#define s6_addr __in6_u.__u6_addr8
#define KU_ENCIPHER_ONLY 0x0001
#define BOOST_FINAL final
#define SSL_DEFAULT_CIPHER_LIST "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
#define LN_dsa_with_SHA3_224 "dsa_with_SHA3-224"
#define EC_F_EC_POINTS_MAKE_AFFINE 136
#define SCNd8 "hhd"
#define EC_F_EC_WNAF_PRECOMPUTE_MULT 188
#define BN_F_BN_STACK_PUSH 148
#define MSG_PEEK MSG_PEEK
#define RSA_F_OLD_RSA_PRIV_DECODE 147
#define SSL_F_TLS_CONSTRUCT_STOC_EMS 454
#define EVENT__HAVE_SYS_EPOLL_H 1
#define _mm256_cmp_epi64_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(P), (__mmask8)-1))
#define _kshiftri_mask64(X,Y) ((__mmask64) __builtin_ia32_kshiftridi ((__mmask64)(X), (__mmask8)(Y)))
#define WCHAR_WIDTH 32
#define BOOST_MPL_BIND_FWD_HPP_INCLUDED 
#define NID_description 107
#define TLS1_CK_DHE_PSK_WITH_AES_256_CCM 0x0300C0A7
#define BOOST_PP_FOR_100_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(101, s) BOOST_PP_IIF(c, BOOST_PP_FOR_101, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(101, s), p, o, m)
#define __HAVE_FLOAT32X 1
#define NID_janetMailbox 492
#define OBJ_itu_t 0L
#define EVP_R_UNKNOWN_PBE_ALGORITHM 121
#define AF_ROSE PF_ROSE
#define ASN1_R_SEQUENCE_NOT_CONSTRUCTED 149
#define SN_id_smime_alg_3DESwrap "id-smime-alg-3DESwrap"
#define FOLLY_PP_STRINGIZE(x) #x
#define FS_NOCOW_FL 0x00800000
#define TLS1_TXT_DHE_PSK_WITH_CHACHA20_POLY1305 "DHE-PSK-CHACHA20-POLY1305"
#define CONF_MFLAGS_SILENT 0x4
#define SIGSEGV 11
#define LN_dsa_with_SHA3_256 "dsa_with_SHA3-256"
#define _mm_gf2p8affine_epi64_epi8(A,B,C) ((__m128i) __builtin_ia32_vgf2p8affineqb_v16qi ((__v16qi)(__m128i)(A), (__v16qi)(__m128i)(B), (int)(C)))
#define SCNd16 "hd"
#define NID_certBag 152
#define CONF_F_MODULE_ADD 122
#define EVENT__HAVE_PUTENV 1
#define X509_PURPOSE_SSL_CLIENT 1
#define NID_id_smime_cd_ldap 248
#define _MEMORYFWD_H 1
#define LN_subjectSignTool "Signing Tool of Subject"
#define BOOST_PP_DEC_103 102
#define BOOST_PP_DEC_104 103
#define BOOST_PP_DEC_106 105
#define BOOST_PP_DEC_107 106
#define BOOST_PP_DEC_109 108
#define DECLARE_PEM_write(name,type) DECLARE_PEM_write_bio(name, type) DECLARE_PEM_write_fp(name, type)
#define SN_kx_dhe "KxDHE"
#define _CS_XBS5_LP64_OFF64_CFLAGS _CS_XBS5_LP64_OFF64_CFLAGS
#define RWF_WRITE_LIFE_NOT_SET 0
#define APACHE_THRIFT_ACCESSOR_service_name 
#define BIO_get_conn_ip_family(b) BIO_ctrl(b,BIO_C_GET_CONNECT,3,NULL)
#define LN_id_on_permanentIdentifier "Permanent Identifier"
#define BOOST_PP_DEC_110 109
#define BOOST_PP_DEC_111 110
#define SCNd32 "d"
#define BOOST_PP_DEC_114 113
#define SCNi8 "hhi"
#define BOOST_PP_DEC_117 116
#define BOOST_PP_DEC_119 118
#define BOOST_TT_IS_CLASS_HPP_INCLUDED 
#define NID_sect113r1 717
#define EVP_R_KEY_SETUP_FAILED 180
#define _MM_ROUND_MASK 0x6000
#define __linux 1
#define BEV_EVENT_WRITING 0x02
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001011 (1)(1)(0)(0)(1)(0)(1)(1),
#define BOOST_PP_REPEAT_1ST BOOST_PP_REPEAT_1
#define BOOST_PP_WHILE_173_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_174, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(174, s))
#define SSL2_VERSION 0x0002
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010000 (1)(0)(1)(0)(0)(0)(0),
#define BOOST_MPL_LIST_AUX_SIZE_HPP_INCLUDED 
#define EC_F_EC_GFP_NISTP256_POINTS_MUL 231
#define _mm_mask_cmp_epu16_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpw128_mask ((__v8hi)(__m128i)(X), (__v8hi)(__m128i)(Y), (int)(P), (__mmask8)(M)))
#define _MM_MK_INSERTPS_NDX(S,D,M) (((S) << 6) | ((D) << 4) | (M))
#define BEV_EVENT_CONNECTED 0x80
#define BOOST_PP_DEC_120 119
#define OBJ_pbeWithSHA1AndRC2_CBC OBJ_pkcs5,11L
#define BOOST_PP_DEC_123 122
#define BOOST_PP_DEC_124 123
#define BOOST_PP_DEC_125 124
#define BOOST_PP_DEC_126 125
#define BOOST_PP_DEC_127 126
#define BOOST_PP_DEC_128 127
#define BOOST_PP_DEC_129 128
#define EVP_R_UNSUPPORTED_KEY_SIZE 108
#define SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG 0x0
#define BOOST_MPL_DISTANCE_FWD_HPP_INCLUDED 
#define PF_BLUETOOTH 31
#define OBJ_supportedAlgorithms OBJ_X509,52L
#define _BITS_PTHREADTYPES_ARCH_H 1
#define JEMALLOC_HAVE_ATTR_FORMAT_GNU_PRINTF 
#define EC_F_EC_POINT_POINT2OCT 123
#define NID_des_ede3_cfb1 658
#define SN_dsa_with_SHA384 "id-dsa-with-sha384"
#define _mm512_rcp28_round_pd(A,C) __builtin_ia32_rcp28pd_mask(A, (__v8df)_mm512_setzero_pd(), -1, C)
#define NID_des_ede3_cfb8 659
#define OBJ_no_rev_avail OBJ_id_ce,56L
#define BOOST_PP_DEC_130 129
#define BOOST_PP_DEC_131 130
#define BOOST_PP_DEC_132 131
#define BOOST_PP_DEC_133 132
#define BOOST_PP_DEC_134 133
#define BOOST_PP_DEC_135 134
#define BOOST_PP_DEC_136 135
#define BOOST_PP_DEC_138 137
#define BOOST_PP_DEC_139 138
#define _mm512_rcp28_round_ps(A,C) __builtin_ia32_rcp28ps_mask(A, (__v16sf)_mm512_setzero_ps(), -1, C)
#define SSL_FILETYPE_ASN1 X509_FILETYPE_ASN1
#define PEM_F_B2I_RSA 129
#define OBJ_ad_ca_issuers OBJ_id_ad,2L
#define NID_joint_iso_itu_t 646
#define SSL_F_SSL_CIPHER_DESCRIPTION 626
#define X509V3_R_ERROR_IN_EXTENSION 128
#define __SIZE_T 
#define FMT_USE_FULL_CACHE_DRAGONBOX 0
#define BOOST_PP_DEC_140 139
#define BOOST_PP_DEC_141 140
#define BOOST_PP_DEC_143 142
#define SCNd64 __PRI64_PREFIX "d"
#define BOOST_PP_DEC_146 145
#define BOOST_PP_DEC_147 146
#define SSL_TXT_aPSK "aPSK"
#define get_rfc2409_prime_1024 BN_get_rfc2409_prime_1024
#define _BITS_POSIX_OPT_H 1
#define BN_F_BN_MOD_LSHIFT_QUICK 119
#define SOL_TCP 6
#define SSL_F_SSL_VERIFY_CERT_CHAIN 207
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_202 202
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_203 203
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_204 204
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_205 205
#define SN_setct_CapRevResTBE "setct-CapRevResTBE"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_208 208
#define PF_WANPIPE 25
#define X509_F_X509_NAME_PRINT 117
#define CPU_ISSET(cpu,cpusetp) __CPU_ISSET_S (cpu, sizeof (cpu_set_t), cpusetp)
#define BOOST_PP_FOR_60_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(61, s) BOOST_PP_IIF(c, BOOST_PP_FOR_61, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(61, s), p, o, m)
#define NID_setct_AuthReqTBE 570
#define BOOST_PP_DEC_150 149
#define BOOST_PP_DEC_151 150
#define BOOST_PP_DEC_153 152
#define BOOST_PP_DEC_155 154
#define _SC_NETWORKING _SC_NETWORKING
#define BOOST_PP_DEC_157 156
#define BOOST_PP_DEC_158 157
#define NID_setct_AuthReqTBS 534
#define __FLT128_MIN_EXP__ (-16381)
#define SN_givenName "GN"
#define DTLS1_TMO_ALERT_COUNT 12
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_211 211
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_212 212
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_213 213
#define APACHE_THRIFT_ACCESSOR_compression 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_215 215
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_216 216
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_217 217
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_218 218
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_219 219
#define X509V3_EXT_MULTILINE 0x4
#define OBJ_R_OID_EXISTS 102
#define OBJ_id_pkix_mod OBJ_id_pkix,0L
#define EVP_R_ARIA_KEY_SETUP_FAILED 176
#define BOOST_PP_DEC_160 159
#define BOOST_PP_DEC_161 160
#define BOOST_PP_DEC_163 162
#define X509V3_F_SXNET_ADD_ID_ASC 125
#define BOOST_PP_DEC_165 164
#define BOOST_PP_DEC_167 166
#define X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE 21
#define BOOST_PP_DEC_169 168
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_220(s,p,o,m) 0
#define BOOST_PP_ADD_P(d,xy) BOOST_PP_TUPLE_ELEM(2, 1, xy)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011011 (1)(1)(0)(1)(1)(0)(1)(1),
#define DH_CHECK_Q_NOT_PRIME 0x10
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_220 220
#define BOOST_MPL_COUNT_IF_HPP_INCLUDED 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_222 222
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_223 223
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_224 224
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_225 225
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_227 227
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_228 228
#define BOOST_PP_DEC_170 169
#define _mm_cvt_roundi64_sd(A,B,C) (__m128d)__builtin_ia32_cvtsi2sd64(A, B, C)
#define BOOST_PP_DEC_173 172
#define BOOST_PP_DEC_174 173
#define SCNo8 "hho"
#define BOOST_PP_DEC_177 176
#define OBJ_id_smime_mod_cms OBJ_id_smime_mod,1L
#define _mm_cvt_roundi64_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss64(A, B, C)
#define MSG_SYN MSG_SYN
#define BOOST_NOEXCEPT_EXPR(Expression) noexcept((Expression))
#define BOOST_EXPLICIT_TEMPLATE_NON_TYPE_SPEC(t,v) 
#define _PC_PRIO_IO _PC_PRIO_IO
#define _AVX512IFMAVLINTRIN_H_INCLUDED 
#define BOOST_PP_EMPTY() 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_235 235
#define SSL_F_DTLS1_READ_FAILED 339
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_239 239
#define __cpp_lib_any 201606L
#define _SIZE_T_DEFINED_ 
#define _mm256_permutexvar_ps(A,B) _mm256_permutevar8x32_ps ((B), (A))
#define __LC_TIME 2
#define LN_sinfo_access "Subject Information Access"
#define EVP_PKEY_CTRL_SET_IV 8
#define BOOST_PP_DEC_180 179
#define BOOST_PP_DEC_182 181
#define BOOST_PP_DEC_183 182
#define BOOST_PP_DEC_184 183
#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA 0x03000087
#define BOOST_PP_DEC_186 185
#define BOOST_PP_DEC_187 186
#define BOOST_PP_DEC_189 188
#define BN_FLG_MALLOCED 0x01
#define BOOST_PP_SEQ_FOLD_LEFT_I_224(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_225, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(225, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PREPROCESSOR_ENUM_SHIFTED_PARAMS_HPP 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_242 242
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_170(p,o,s) 0
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_245 245
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_246 246
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_247 247
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_248 248
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_249 249
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_171(p,o,s) 0
#define BOOST_PP_DEC_190 189
#define RAND_R_INTERNAL_ERROR 113
#define BOOST_PP_DEC_192 191
#define BOOST_PP_DEC_193 192
#define BOOST_PP_DEC_194 193
#define BOOST_PP_DEC_195 194
#define BOOST_PP_DEC_197 196
#define BOOST_PP_DEC_198 197
#define __KERNEL_STRICT_NAMES 
#define LN_des_ede_ecb "des-ede"
#define BIO_R_BAD_FOPEN_MODE 101
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_173(p,o,s) 0
#define TLS1_RT_CRYPTO_SERVER_RANDOM (TLS1_RT_CRYPTO | 0x3)
#define _PSTL_PRAGMA_FORCEINLINE 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_251 251
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_253 253
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_254 254
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_255 255
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_256 256
#define BOOST_PP_COMMA() ,
#define X509_TRUST_DO_SS_COMPAT (1U << 3)
#define MS_NODIRATIME 2048
#define SSL_set_tlsext_debug_arg(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_DEBUG_ARG,0,arg)
#define BOOST_PP_SEQ_SIZE_208(_) BOOST_PP_SEQ_SIZE_209
#define OBJ_ISO_UA OBJ_member_body,804L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011000 (0)(0)(0)(1)(1)(0)(0)(0),
#define TLS1_RFC_DHE_PSK_WITH_ARIA_256_GCM_SHA384 "TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384"
#define BOOST_MOVE_IS_TRIVIALLY_DESTRUCTIBLE(T) BOOST_MOVE_HAS_TRIVIAL_DESTRUCTOR(T)
#define BOOST_PP_SEQ_FOLD_LEFT_6(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_6(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_7(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_7(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVENT__HAVE_EPOLL_CTL 1
#define BOOST_PP_SEQ_FOLD_LEFT_9(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_9(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OBJ_ISO_US OBJ_member_body,840L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_176(p,o,s) 0
#define EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 8)
#define BOOST_PP_SEQ_FOLD_LEFT_F(op,st,ss,sz) st
#define EVP_R_CIPHER_PARAMETER_ERROR 122
#define STA_PPSWANDER 0x0400
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_177(p,o,s) 0
#define EVP_PKEY_OP_DECRYPT (1<<9)
#define BOOST_TT_TYPE_WITH_ALIGNMENT_INCLUDED 
#define BOOST_PP_WHILE_10(p,o,s) BOOST_PP_WHILE_10_C(BOOST_PP_BOOL(p(11, s)), p, o, s)
#define BOOST_PP_WHILE_11(p,o,s) BOOST_PP_WHILE_11_C(BOOST_PP_BOOL(p(12, s)), p, o, s)
#define BOOST_PP_WHILE_12(p,o,s) BOOST_PP_WHILE_12_C(BOOST_PP_BOOL(p(13, s)), p, o, s)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_179(p,o,s) 0
#define FOLLY_HAVE_EXTRANDOM_SFMT19937 1
#define BOOST_PP_WHILE_17(p,o,s) BOOST_PP_WHILE_17_C(BOOST_PP_BOOL(p(18, s)), p, o, s)
#define BOOST_PP_WHILE_18(p,o,s) BOOST_PP_WHILE_18_C(BOOST_PP_BOOL(p(19, s)), p, o, s)
#define BOOST_FALLTHROUGH __attribute__((fallthrough))
#define BOOST_PP_NOT(x) BOOST_PP_COMPL(BOOST_PP_BOOL(x))
#define BIO_F_DOAPR_OUTCH 150
#define NID_rFC822localPart 450
#define BIO_CTRL_PENDING 10
#define BOOST_PP_LIST_FOLD_LEFT_1(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_2, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(2, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm_mask_alignr_epi32(W,U,X,Y,C) ((__m128i)__builtin_ia32_alignd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(C), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define DECLARE_PEM_write_bio(name,type) int PEM_write_bio_ ##name(BIO *bp, type *x);
#define BOOST_PP_WHILE_22(p,o,s) BOOST_PP_WHILE_22_C(BOOST_PP_BOOL(p(23, s)), p, o, s)
#define BOOST_PP_WHILE_24(p,o,s) BOOST_PP_WHILE_24_C(BOOST_PP_BOOL(p(25, s)), p, o, s)
#define SSL_SECOP_SIGALG_MASK (14 | SSL_SECOP_OTHER_SIGALG)
#define BOOST_PP_WHILE_26(p,o,s) BOOST_PP_WHILE_26_C(BOOST_PP_BOOL(p(27, s)), p, o, s)
#define BOOST_PP_FOR_167_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(168, s) BOOST_PP_IIF(c, BOOST_PP_FOR_168, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(168, s), p, o, m)
#define _AVX512PFINTRIN_H_INCLUDED 
#define TCP_NOTSENT_LOWAT 25
#define EVP_PKEY_CTRL_GET_RSA_OAEP_MD (EVP_PKEY_ALG_CTRL + 11)
#define __isascii(c) (((c) & ~0x7f) == 0)
#define __toascii(c) ((c) & 0x7f)
#define _mm512_mask_shrdi_epi16(A,B,C,D,E) ((__m512i) __builtin_ia32_vpshrd_v32hi_mask ((__v32hi)(__m512i)(C), (__v32hi)(__m512i)(D), (int)(E), (__v32hi)(__m512i)(A), (__mmask32)(B)))
#define IN6_IS_ADDR_UNSPECIFIED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == 0; }))
#define SO_TIMESTAMP_OLD 29
#define SSL_CTX_set_tlsext_status_arg(ssl,arg) SSL_CTX_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG,0,arg)
#define BOOST_PP_COMPL(x) BOOST_PP_COMPL_I(x)
#define _mm256_slli_si256(A,N) ((__m256i)__builtin_ia32_pslldqi256 ((__m256i)(A), (int)(N) * 8))
#define NID_telephoneNumber 864
#define __SIZEOF_INT__ 4
#define BOOST_PP_WHILE_30(p,o,s) BOOST_PP_WHILE_30_C(BOOST_PP_BOOL(p(31, s)), p, o, s)
#define BOOST_PP_WHILE_31(p,o,s) BOOST_PP_WHILE_31_C(BOOST_PP_BOOL(p(32, s)), p, o, s)
#define SCNu8 "hhu"
#define __DECL_SIMD_expf32 
#define BOOST_PP_REPEAT_1_0(m,d) 
#define LN_surname "surname"
#define _RANGE_CMP_H 1
#define BOOST_PP_REPEAT_1_4(m,d) BOOST_PP_REPEAT_1_3(m, d) m(2, 3, d)
#define BOOST_PP_REPEAT_1_5(m,d) BOOST_PP_REPEAT_1_4(m, d) m(2, 4, d)
#define BOOST_PP_REPEAT_1_6(m,d) BOOST_PP_REPEAT_1_5(m, d) m(2, 5, d)
#define TLS1_CK_DH_RSA_WITH_SEED_SHA 0x03000098
#define BOOST_PP_REPEAT_1_9(m,d) BOOST_PP_REPEAT_1_8(m, d) m(2, 8, d)
#define _mm_scalef_round_ss(A,B,C) (__m128)__builtin_ia32_scalefss_mask_round (A, B, (__v4sf)_mm_setzero_ps (), -1, C)
#define BOOST_PP_WHILE_105_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_106, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(106, s))
#define BOOST_PP_REPEAT_1_I(c,m,d) BOOST_PP_REPEAT_1_ ## c(m, d)
#define SOL_TLS 282
#define SSL_CTRL_GET_RI_SUPPORT 76
#define BOOST_PP_REPEAT_2_242(m,d) BOOST_PP_REPEAT_2_241(m, d) m(3, 241, d)
#define RLIMIT_LOCKS __RLIMIT_LOCKS
#define BOOST_PP_WHILE_40(p,o,s) BOOST_PP_WHILE_40_C(BOOST_PP_BOOL(p(41, s)), p, o, s)
#define BOOST_PREPROCESSOR_LIST_FOLD_RIGHT_HPP 
#define BOOST_PP_WHILE_42(p,o,s) BOOST_PP_WHILE_42_C(BOOST_PP_BOOL(p(43, s)), p, o, s)
#define BOOST_PP_WHILE_43(p,o,s) BOOST_PP_WHILE_43_C(BOOST_PP_BOOL(p(44, s)), p, o, s)
#define BOOST_PP_WHILE_44(p,o,s) BOOST_PP_WHILE_44_C(BOOST_PP_BOOL(p(45, s)), p, o, s)
#define BOOST_PP_WHILE_45(p,o,s) BOOST_PP_WHILE_45_C(BOOST_PP_BOOL(p(46, s)), p, o, s)
#define FOLLY_INLINE_VARIABLE inline
#define BOOST_PP_WHILE_48(p,o,s) BOOST_PP_WHILE_48_C(BOOST_PP_BOOL(p(49, s)), p, o, s)
#define EVENT__HAVE_GETADDRINFO 1
#define EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES 235
#define SN_crl_reason "CRLReason"
#define FIOSETOWN 0x8901
#define ETH_MAX_MTU 0xFFFFU
#define _mm512_mask_shrdi_epi32(A,B,C,D,E) ((__m512i) __builtin_ia32_vpshrd_v16si_mask ((__v16si)(__m512i)(C), (__v16si)(__m512i)(D), (int)(E), (__v16si)(__m512i)(A), (__mmask16)(B)))
#define DSA_R_BN_DECODE_ERROR 108
#define _CPPLIB_VER_WORKAROUND_GUARD 1
#define EVENT__TIME_WITH_SYS_TIME 1
#define BOOST_PP_WHILE_50(p,o,s) BOOST_PP_WHILE_50_C(BOOST_PP_BOOL(p(51, s)), p, o, s)
#define BOOST_PP_WHILE_51(p,o,s) BOOST_PP_WHILE_51_C(BOOST_PP_BOOL(p(52, s)), p, o, s)
#define _SC_VERSION _SC_VERSION
#define BOOST_PP_WHILE_54(p,o,s) BOOST_PP_WHILE_54_C(BOOST_PP_BOOL(p(55, s)), p, o, s)
#define BOOST_PP_WHILE_55(p,o,s) BOOST_PP_WHILE_55_C(BOOST_PP_BOOL(p(56, s)), p, o, s)
#define BOOST_PP_WHILE_56(p,o,s) BOOST_PP_WHILE_56_C(BOOST_PP_BOOL(p(57, s)), p, o, s)
#define BOOST_PP_WHILE_57(p,o,s) BOOST_PP_WHILE_57_C(BOOST_PP_BOOL(p(58, s)), p, o, s)
#define BOOST_PP_WHILE_59(p,o,s) BOOST_PP_WHILE_59_C(BOOST_PP_BOOL(p(60, s)), p, o, s)
#define BOOST_PP_SEQ_FOLD_LEFT_107(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_107(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_dsa_2 "DSA-old"
#define SN_id_pda_dateOfBirth "id-pda-dateOfBirth"
#define IPPROTO_EGP IPPROTO_EGP
#define NID_wap_wsg 679
#define BOOST_PP_SEQ_FOLD_LEFT_108(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_108(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm256_mask_rol_epi32(W,U,A,B) ((__m256i)__builtin_ia32_prold256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define OBJ_organizationIdentifier OBJ_X509,97L
#define _GLIBCXX_NUM_FACETS 28
#define SN_sm3WithRSAEncryption "RSA-SM3"
#define _mm512_cmp_epu32_mask(X,Y,P) ((__mmask16) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)-1))
#define BOOST_PP_SEQ_FOLD_LEFT_I_160(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_161, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(161, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
#define IORING_FEAT_SUBMIT_STABLE (1U << 2)
#define BOOST_PP_WHILE_60(p,o,s) BOOST_PP_WHILE_60_C(BOOST_PP_BOOL(p(61, s)), p, o, s)
#define SSL3_MT_MESSAGE_HASH 254
#define SCNx8 "hhx"
#define _BITS_ENDIANNESS_H 1
#define BOOST_PP_WHILE_66(p,o,s) BOOST_PP_WHILE_66_C(BOOST_PP_BOOL(p(67, s)), p, o, s)
#define BOOST_PP_WHILE_67(p,o,s) BOOST_PP_WHILE_67_C(BOOST_PP_BOOL(p(68, s)), p, o, s)
#define BOOST_PP_WHILE_68(p,o,s) BOOST_PP_WHILE_68_C(BOOST_PP_BOOL(p(69, s)), p, o, s)
#define FOLLY_INVOKE_QUAL(funcpath) [](auto&&... __folly_param_a) FOLLY_CXX17_CONSTEXPR FOLLY_DETAIL_FORWARD_BODY( funcpath(FOLLY_DETAIL_FORWARD_REF(__folly_param_a)...))
#define DH_R_NO_PRIVATE_VALUE 100
#define SN_streetAddress "street"
#define SCM_TIMESTAMPING_PKTINFO 58
#define BOOST_PP_SEQ_SIZE_142(_) BOOST_PP_SEQ_SIZE_143
#define _IOC_SIZEMASK ((1 << _IOC_SIZEBITS)-1)
#define OBJ_setct_BatchAdminReqTBE OBJ_set_ctype,74L
#define RENAME_NOREPLACE (1 << 0)
#define BOOST_PP_WHILE_70(p,o,s) BOOST_PP_WHILE_70_C(BOOST_PP_BOOL(p(71, s)), p, o, s)
#define BOOST_PP_WHILE_71(p,o,s) BOOST_PP_WHILE_71_C(BOOST_PP_BOOL(p(72, s)), p, o, s)
#define BOOST_PP_WHILE_72(p,o,s) BOOST_PP_WHILE_72_C(BOOST_PP_BOOL(p(73, s)), p, o, s)
#define BOOST_PP_WHILE_73(p,o,s) BOOST_PP_WHILE_73_C(BOOST_PP_BOOL(p(74, s)), p, o, s)
#define BOOST_PP_WHILE_74(p,o,s) BOOST_PP_WHILE_74_C(BOOST_PP_BOOL(p(75, s)), p, o, s)
#define BOOST_PP_WHILE_76(p,o,s) BOOST_PP_WHILE_76_C(BOOST_PP_BOOL(p(77, s)), p, o, s)
#define BOOST_PP_WHILE_77(p,o,s) BOOST_PP_WHILE_77_C(BOOST_PP_BOOL(p(78, s)), p, o, s)
#define EV_INT32_MIN INT32_MIN
#define TLS1_AD_PROTOCOL_VERSION 70
#define _SC_RTSIG_MAX _SC_RTSIG_MAX
#define _mm512_mask_shrdi_epi64(A,B,C,D,E) ((__m512i) __builtin_ia32_vpshrd_v8di_mask ((__v8di)(__m512i)(C), (__v8di)(__m512i)(D), (int)(E), (__v8di)(__m512i)(A), (__mmask8)(B)))
#define SSL_R_INCONSISTENT_EARLY_DATA_ALPN 222
#define NID_setct_PI_TBS 532
#define EVP_PKEY_CTX_get_rsa_oaep_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_GET_RSA_OAEP_MD, 0, (void *)(pmd))
#define BOOST_PP_WHILE_80(p,o,s) BOOST_PP_WHILE_80_C(BOOST_PP_BOOL(p(81, s)), p, o, s)
#define BOOST_PP_WHILE_82(p,o,s) BOOST_PP_WHILE_82_C(BOOST_PP_BOOL(p(83, s)), p, o, s)
#define BOOST_PP_WHILE_83(p,o,s) BOOST_PP_WHILE_83_C(BOOST_PP_BOOL(p(84, s)), p, o, s)
#define BOOST_PP_WHILE_84(p,o,s) BOOST_PP_WHILE_84_C(BOOST_PP_BOOL(p(85, s)), p, o, s)
#define BOOST_PP_WHILE_87(p,o,s) BOOST_PP_WHILE_87_C(BOOST_PP_BOOL(p(88, s)), p, o, s)
#define BOOST_PP_WHILE_88(p,o,s) BOOST_PP_WHILE_88_C(BOOST_PP_BOOL(p(89, s)), p, o, s)
#define BOOST_PP_WHILE_89(p,o,s) BOOST_PP_WHILE_89_C(BOOST_PP_BOOL(p(90, s)), p, o, s)
#define BOOST_HAS_PTHREAD_MUTEXATTR_SETTYPE 
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CBC_SHA "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
#define NID_postalCode 661
#define TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA 0x03000086
#define __glibcxx_requires_sorted(_First,_Last) 
#define OBJ_id_ppl_inheritAll OBJ_id_ppl,1L
#define _mm512_maskz_cvtt_roundpd_epu32(U,A,B) ((__m256i)__builtin_ia32_cvttpd2udq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))
#define _mm256_mask_rol_epi64(W,U,A,B) ((__m256i)__builtin_ia32_prolq256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define BOOST_PP_REPEAT_1_202(m,d) BOOST_PP_REPEAT_1_201(m, d) m(2, 201, d)
#define LN_aes_128_gcm "aes-128-gcm"
#define BOOST_PP_REPEAT_1_204(m,d) BOOST_PP_REPEAT_1_203(m, d) m(2, 203, d)
#define BOOST_PP_REPEAT_1_205(m,d) BOOST_PP_REPEAT_1_204(m, d) m(2, 204, d)
#define BOOST_PP_REPEAT_1_206(m,d) BOOST_PP_REPEAT_1_205(m, d) m(2, 205, d)
#define BOOST_PP_REPEAT_1_207(m,d) BOOST_PP_REPEAT_1_206(m, d) m(2, 206, d)
#define BOOST_PP_REPEAT_1_208(m,d) BOOST_PP_REPEAT_1_207(m, d) m(2, 207, d)
#define BOOST_PP_REPEAT_1_209(m,d) BOOST_PP_REPEAT_1_208(m, d) m(2, 208, d)
#define BOOST_PP_BOOL_61 1
#define EVUTIL_EAI_CANCEL -90001
#define BOOST_PP_WHILE_90(p,o,s) BOOST_PP_WHILE_90_C(BOOST_PP_BOOL(p(91, s)), p, o, s)
#define BOOST_PP_WHILE_91(p,o,s) BOOST_PP_WHILE_91_C(BOOST_PP_BOOL(p(92, s)), p, o, s)
#define BOOST_PP_WHILE_92(p,o,s) BOOST_PP_WHILE_92_C(BOOST_PP_BOOL(p(93, s)), p, o, s)
#define BOOST_PP_WHILE_93(p,o,s) BOOST_PP_WHILE_93_C(BOOST_PP_BOOL(p(94, s)), p, o, s)
#define BOOST_PP_WHILE_94(p,o,s) BOOST_PP_WHILE_94_C(BOOST_PP_BOOL(p(95, s)), p, o, s)
#define BOOST_PP_WHILE_95(p,o,s) BOOST_PP_WHILE_95_C(BOOST_PP_BOOL(p(96, s)), p, o, s)
#define sk_free OPENSSL_sk_free
#define BOOST_PP_WHILE_97(p,o,s) BOOST_PP_WHILE_97_C(BOOST_PP_BOOL(p(98, s)), p, o, s)
#define BOOST_PP_WHILE_98(p,o,s) BOOST_PP_WHILE_98_C(BOOST_PP_BOOL(p(99, s)), p, o, s)
#define BOOST_PP_WHILE_99(p,o,s) BOOST_PP_WHILE_99_C(BOOST_PP_BOOL(p(100, s)), p, o, s)
#define STATX_NLINK 0x00000004U
#define UNIMPLEMENTED() (abort())
#define EVENT__HAVE_TIMERISSET 1
#define _GLIBCXX_MAP 1
#define BOOST_PP_REPEAT_1_211(m,d) BOOST_PP_REPEAT_1_210(m, d) m(2, 210, d)
#define BOOST_PP_REPEAT_1_212(m,d) BOOST_PP_REPEAT_1_211(m, d) m(2, 211, d)
#define EVENT2_VISIBILITY_H_INCLUDED_ 
#define BOOST_PP_REPEAT_1_214(m,d) BOOST_PP_REPEAT_1_213(m, d) m(2, 213, d)
#define FP_INT_TONEARESTFROMZERO 3
#define BOOST_PP_REPEAT_1_218(m,d) BOOST_PP_REPEAT_1_217(m, d) m(2, 217, d)
#define BOOST_PP_REPEAT_1_219(m,d) BOOST_PP_REPEAT_1_218(m, d) m(2, 218, d)
#define BOOST_PP_ARRAY_ELEM(i,array) BOOST_PP_TUPLE_ELEM(BOOST_PP_ARRAY_SIZE(array), i, BOOST_PP_ARRAY_DATA(array))
#define BOOST_PP_BOOL_63 1
#define BOOST_MPL_LIST_AUX_FRONT_HPP_INCLUDED 
#define _mm512_undefined _mm512_undefined_ps
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010011 (1)(0)(1)(0)(0)(1)(1),
#define NID_qcStatements 286
#define OBJ_setext_track2 OBJ_set_msgExt,7L
#define SSL3_TXT_RSA_RC4_128_MD5 "RC4-MD5"
#define SSL_CTRL_GET_SHARED_GROUP 93
#define BOOST_BINARY_LITERAL_D(d,bit_groupings) BOOST_PP_SEQ_CAT ( (0) BOOST_DETAIL_CREATE_BINARY_LITERAL_OCTAL_SEQUENCE( d, bit_groupings ) )
#define BOOST_PP_REPEAT_1_220(m,d) BOOST_PP_REPEAT_1_219(m, d) m(2, 219, d)
#define BOOST_PP_REPEAT_1_222(m,d) BOOST_PP_REPEAT_1_221(m, d) m(2, 221, d)
#define BOOST_PP_REPEAT_1_223(m,d) BOOST_PP_REPEAT_1_222(m, d) m(2, 222, d)
#define BOOST_PP_REPEAT_1_224(m,d) BOOST_PP_REPEAT_1_223(m, d) m(2, 223, d)
#define BOOST_PP_REPEAT_1_225(m,d) BOOST_PP_REPEAT_1_224(m, d) m(2, 224, d)
#define BOOST_PP_REPEAT_1_227(m,d) BOOST_PP_REPEAT_1_226(m, d) m(2, 226, d)
#define BOOST_PP_REPEAT_1_229(m,d) BOOST_PP_REPEAT_1_228(m, d) m(2, 228, d)
#define ILL_ILLOPN ILL_ILLOPN
#define TLS1_CK_DHE_DSS_WITH_SEED_SHA 0x03000099
#define IORING_REGISTER_BUFFERS 0
#define INT_FAST32_MIN (-9223372036854775807L-1)
#define _mm512_undefined_si512 _mm512_undefined_epi32
#define _CMP_GE_OS 0x0d
#define BOOST_PP_REPEAT_1_230(m,d) BOOST_PP_REPEAT_1_229(m, d) m(2, 229, d)
#define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
#define _mm512_maskz_cvtt_roundpd_epu64(U,A,B) ((__m512i)__builtin_ia32_cvttpd2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define BOOST_PP_REPEAT_1_233(m,d) BOOST_PP_REPEAT_1_232(m, d) m(2, 232, d)
#define BOOST_PP_REPEAT_1_237(m,d) BOOST_PP_REPEAT_1_236(m, d) m(2, 236, d)
#define BOOST_PP_REPEAT_1_238(m,d) BOOST_PP_REPEAT_1_237(m, d) m(2, 237, d)
#define MAP_FAILED ((void *) -1)
#define BOOST_PP_SEQ_SIZE_90(_) BOOST_PP_SEQ_SIZE_91
#define X509V3_R_INVALID_OPTION 138
#define ENOLINK 67
#define _EVENT_LOG_WARN EVENT_LOG_WARN
#define _mm256_maskz_cvtps_ph(U,A,I) ((__m128i) __builtin_ia32_vcvtps2ph256_mask ((__v8sf)(__m256) (A), (int) (I), (__v8hi)(__m128i) _mm_setzero_si128 (), (__mmask8) (U)))
#define NID_ipsec3 749
#define TLS1_RT_CRYPTO_PREMASTER (TLS1_RT_CRYPTO | 0x1)
#define BOOST_PP_REPEAT_1_240(m,d) BOOST_PP_REPEAT_1_239(m, d) m(2, 239, d)
#define BOOST_PP_REPEAT_1_241(m,d) BOOST_PP_REPEAT_1_240(m, d) m(2, 240, d)
#define BOOST_PP_REPEAT_1_242(m,d) BOOST_PP_REPEAT_1_241(m, d) m(2, 241, d)
#define BOOST_PP_REPEAT_1_244(m,d) BOOST_PP_REPEAT_1_243(m, d) m(2, 243, d)
#define NID_hmac_md5 780
#define BOOST_PP_REPEAT_1_246(m,d) BOOST_PP_REPEAT_1_245(m, d) m(2, 245, d)
#define BOOST_PP_REPEAT_1_247(m,d) BOOST_PP_REPEAT_1_246(m, d) m(2, 246, d)
#define BOOST_PP_REPEAT_1_248(m,d) BOOST_PP_REPEAT_1_247(m, d) m(2, 247, d)
#define PKCS7_F_PKCS7_BIO_ADD_DIGEST 125
#define BLKROGET _IO(0x12,94)
#define X509_FLAG_NO_EXTENSIONS (1L << 8)
#define BOOST_PP_SEQ_SIZE_92(_) BOOST_PP_SEQ_SIZE_93
#define BOOST_MPL_AUX_MSVC_VALUE_WKND(C) C
#define SN_id_GostR3410_94DH "id-GostR3410-94DH"
#define SO_BROADCAST 6
#define HEADER_X509_VFY_H 
#define BOOST_PP_REPEAT_1_250(m,d) BOOST_PP_REPEAT_1_249(m, d) m(2, 249, d)
#define BOOST_PP_REPEAT_1_252(m,d) BOOST_PP_REPEAT_1_251(m, d) m(2, 251, d)
#define BOOST_PP_REPEAT_1_253(m,d) BOOST_PP_REPEAT_1_252(m, d) m(2, 252, d)
#define __SSIZE_T_TYPE __SWORD_TYPE
#define BOOST_PP_REPEAT_1_255(m,d) BOOST_PP_REPEAT_1_254(m, d) m(2, 254, d)
#define BOOST_PP_REPEAT_1_256(m,d) BOOST_PP_REPEAT_1_255(m, d) m(2, 255, d)
#define __DEV_T_TYPE __UQUAD_TYPE
#define BOOST_MPL_VECTOR_AUX_ITEM_HPP_INCLUDED 
#define FOLLY_OPENSSL_IS_100 (OPENSSL_VERSION_NUMBER >= 0x10000003L && OPENSSL_VERSION_NUMBER < 0x1000105fL)
#define FOLLY_OPENSSL_IS_101 (OPENSSL_VERSION_NUMBER >= 0x1000105fL && OPENSSL_VERSION_NUMBER < 0x1000200fL)
#define FOLLY_OPENSSL_IS_102 (OPENSSL_VERSION_NUMBER >= 0x1000200fL && OPENSSL_VERSION_NUMBER < 0x10100000L)
#define EVP_PKEY_MO_SIGN 0x0001
#define CT_F_CTLOG_NEW_FROM_CONF 119
#define SSL_CONF_TYPE_NONE 0x4
#define IPPROTO_ENCAP IPPROTO_ENCAP
#define CRYPTO_EX_INDEX_X509_STORE 4
#define TLS1_TXT_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 "ECDHE-ECDSA-CHACHA20-POLY1305"
#define BOOST_TT_INTRINSICS_HPP_INCLUDED 
#define ev_uint64_t uint64_t
#define ERR_LIB_BUF 7
#define OBJ_aria_256_cbc OBJ_aria,12L
#define BOOST_PP_ADD_O(d,xy) BOOST_PP_ADD_O_I xy
#define FOLLY_OPENSSL_IS_110 (OPENSSL_VERSION_NUMBER >= 0x10100000L)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_234(s,p,o,m) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_25(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_26, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(26, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_TT_IS_COMPLETE_HPP_INCLUDED 
#define OBJ_X9_62_c2tnb239v1 OBJ_X9_62_c_TwoCurve,11L
#define OBJ_X9_62_c2tnb239v2 OBJ_X9_62_c_TwoCurve,12L
#define OBJ_X9_62_c2tnb239v3 OBJ_X9_62_c_TwoCurve,13L
#define __WIFSIGNALED(status) (((signed char) (((status) & 0x7f) + 1) >> 1) > 0)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_236(s,p,o,m) 0
#define NID_brainpoolP256r1 927
#define TLS1_CK_RSA_WITH_AES_256_CCM 0x0300C09D
#define _PSTL_ICC_18_OMP_SIMD_BROKEN (__INTEL_COMPILER == 1800)
#define __cpp_threadsafe_static_init 200806L
#define NID_whirlpool 804
#define ASN1_F_ASN1_EX_C2I 204
#define BOOST_PP_TUPLE_TO_LIST_5(e0,e1,e2,e3,e4) (e0, (e1, (e2, (e3, (e4, BOOST_PP_NIL)))))
#define BOOST_PP_SEQ_SIZE_213(_) BOOST_PP_SEQ_SIZE_214
#define LN_aria_192_gcm "aria-192-gcm"
#define SSL3_TXT_DHE_DSS_DES_64_CBC_SHA "DHE-DSS-DES-CBC-SHA"
#define EVENT__HAVE_SYS_SENDFILE_H 1
#define CRYPTO_set_locking_callback(func) 
#define encode_int64(evbuf,number) evtag_encode_int64((evbuf), (number))
#define FS_IOC_GET_ENCRYPTION_KEY_STATUS _IOWR('f', 26, struct fscrypt_get_key_status_arg)
#define OBJ_destinationIndicator OBJ_X509,27L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000011 (0)(1)(0)(0)(0)(0)(1)(1),
#define __DECIMAL_BID_FORMAT__ 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_237(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_238, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(238, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_pilotObjectClass OBJ_pilot,4L
#define IPPROTO_ESP IPPROTO_ESP
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_183(p,o,s) 0
#define BOOST_PP_REPEAT_2_9(m,d) BOOST_PP_REPEAT_2_8(m, d) m(3, 8, d)
#define SSL_EXT_TLS_ONLY 0x0001
#define PEM_F_PEM_ASN1_READ_BIO 103
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_184(p,o,s) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_239(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_240, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(240, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_218(_) BOOST_PP_SEQ_SIZE_219
#define BN_F_BN_GF2M_MOD_SQR 136
#define NID_brainpoolP256t1 928
#define BOOST_PP_TUPLE_TO_LIST_8(e0,e1,e2,e3,e4,e5,e6,e7) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, BOOST_PP_NIL))))))))
#define HEADER_TLS1_H 
#define BOOST_PP_SEQ_SIZE_219(_) BOOST_PP_SEQ_SIZE_220
#define _mm_permute2_ps(X,Y,C,I) ((__m128) __builtin_ia32_vpermil2ps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(C), (int)(I)))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_186(p,o,s) 0
#define EVENT__HAVE_STRUCT_IN6_ADDR 1
#define BOOST_PP_FOR_28_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(29, s) BOOST_PP_IIF(c, BOOST_PP_FOR_29, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(29, s), p, o, m)
#define TLS1_RFC_DHE_RSA_WITH_AES_256_GCM_SHA384 "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"
#define __ILP32_OFFBIG_LDFLAGS "-m32"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010011 (0)(0)(1)(0)(0)(1)(1),
#define _GLIBCXX_UNORDERED_MAP 1
#define _POSIX_V7_LPBIG_OFFBIG -1
#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_189(p,o,s) 0
#define ASN1_R_BMPSTRING_IS_WRONG_LENGTH 214
#define SSL_KEY_UPDATE_NOT_REQUESTED 0
#define __S_IFCHR 0020000
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_1(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_2(p,o,s) 0
#define SSL_F_TLS_PROCESS_HELLO_REQ 507
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_5(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_6(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_7(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_8(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_9(p,o,s) 0
#define OBJ_setct_CapReqTBS OBJ_set_ctype,26L
#define _mm512_maskz_srai_epi32(U,X,C) ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))
#define SO_TYPE 3
#define __STDC_ISO_10646__ 201706L
#define SSL_CTRL_SET_TLSEXT_SERVERNAME_CB 53
#define SO_EE_ORIGIN_ICMP6 3
#define __PTRDIFF_WIDTH__ 64
#define EVENT__HAVE_MEMORY_H 1
#define BOOST_MPL_LAMBDA_HPP_INCLUDED 
#define BIO_C_NWRITE0 145
#define _GLIBCXX_ALGORITHMFWD_H 1
#define _SC_C_LANG_SUPPORT_R _SC_C_LANG_SUPPORT_R
#define LN_pbe_WithSHA1And128BitRC2_CBC "pbeWithSHA1And128BitRC2-CBC"
#define SSL_F_TLS_PARSE_STOC_SESSION_TICKET 584
#define BOOST_PP_DEC_154 153
#define APACHE_THRIFT_DETAIL_NIMBLE_CAN_VECTORIZE 0
#define X509V3_R_NO_ISSUER_DETAILS 127
#define BOOST_PP_VARIADIC_ELEM_1(e0,e1,...) e1
#define SSL_R_EE_KEY_TOO_SMALL 399
#define FOLLY_ASSUME_FBVECTOR_COMPATIBLE(...) namespace folly { template <> FOLLY_ASSUME_RELOCATABLE(__VA_ARGS__); }
#define __DECIMAL_DIG__ 21
#define F_SET_FILE_RW_HINT 1038
#define _SYS_UCONTEXT_H 1
#define BOOST_PP_FOR_59_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(60, s) BOOST_PP_IIF(c, BOOST_PP_FOR_60, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(60, s), p, o, m)
#define X509_FLAG_NO_HEADER 1L
#define SSL_F_STATE_MACHINE 353
#define _mm_cvtt_roundss_u32(A,B) ((unsigned)__builtin_ia32_vcvttss2usi32(A, B))
#define PKCS7_F_PKCS7_ADD_SIGNATURE 131
#define SN_id_aes256_wrap_pad "id-aes256-wrap-pad"
#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
#define BOOST_VARIANT_DETAIL_MAKE_VARIANT_LIST_HPP 
#define BOOST_PP_SEQ_FOLD_LEFT_113(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_113(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011100 (1)(0)(0)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011101 (1)(0)(0)(1)(1)(1)(0)(1),
#define EC_F_D2I_ECPRIVATEKEY 146
#define BOOST_PP_SEQ_FOLD_LEFT_114(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_114(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_aria_256_ctr 1079
#define BOOST_MOVE_RET(RET_TYPE,REF) REF
#define BOOST_PP_SEQ_FOLD_LEFT_I_117(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_118, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(118, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define ENETDOWN 100
#define SSL_CTX_clear_chain_certs(ctx) SSL_CTX_set0_chain(ctx,NULL)
#define OBJ_cleanup() while(0) continue
#define _SC_2_SW_DEV _SC_2_SW_DEV
#define LC_TIME __LC_TIME
#define BOOST_PP_SEQ_FOLD_LEFT_117(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_117(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SEGV_ACCADI SEGV_ACCADI
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011110 (1)(0)(0)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011111 (1)(0)(0)(1)(1)(1)(1)(1),
#define BOOST_PP_SEQ_FOLD_LEFT_118(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_118(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_F_FINAL_EMS 486
#define LN_pilotObject "pilotObject"
#define NID_pkcs7_enveloped 23
#define OBJ_id_cmc_senderNonce OBJ_id_cmc,6L
#define PTRDIFF_MAX (9223372036854775807L)
#define _GLIBCXX_USE_CXX11_ABI 1
#define BOOST_PP_FOR_5_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(6, s) BOOST_PP_IIF(c, BOOST_PP_FOR_6, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(6, s), p, o, m)
#define SSL_R_INVALID_CERTIFICATE_OR_ALG 238
#define _mm512_mask_cvt_roundepu64_ps(W,U,A,B) ((__m256)__builtin_ia32_cvtuqq2ps512_mask ((__v8di)(A), (W), (U), (B)))
#define SN_mime_mhs_bodies "mime-mhs-bodies"
#define PRIX8 "X"
#define _SC_UINT_MAX _SC_UINT_MAX
#define LN_setAttr_T2cleartxt "cleartext track 2"
#define _mm_cvtt_roundss_u64(A,B) ((unsigned long long)__builtin_ia32_vcvttss2usi64(A, B))
#define __LDBL_HAS_QUIET_NAN__ 1
#define _GLIBXX_STREAMBUF 1
#define DH_F_DH_CMS_SET_SHARED_INFO 116
#define ASN1_R_TOO_SMALL 224
#define SSL_select_current_cert(s,x509) SSL_ctrl(s,SSL_CTRL_SELECT_CURRENT_CERT,0,(char *)(x509))
#define DC_DISALLOW_COPY_AND_ASSIGN(TypeName) TypeName(const TypeName&); void operator=(const TypeName&)
#define NID_ansi_X9_62 405
#define SSL_R_TLSV13_ALERT_CERTIFICATE_REQUIRED 1116
#define X509_F_X509_OBJECT_NEW 150
#define TLS1_RT_CRYPTO_MAC (TLS1_RT_CRYPTO | 0x5)
#define BOOST_PP_LIST_FOR_EACH_I_M(r,x) BOOST_PP_LIST_FOR_EACH_I_M_D(r, BOOST_PP_TUPLE_ELEM(4, 0, x), BOOST_PP_TUPLE_ELEM(4, 1, x), BOOST_PP_TUPLE_ELEM(4, 2, x), BOOST_PP_TUPLE_ELEM(4, 3, x))
#define BOOST_PP_LIST_FOR_EACH_I_O(r,x) BOOST_PP_LIST_FOR_EACH_I_O_D x
#define BOOST_PP_LIST_FOR_EACH_I_P(r,x) BOOST_PP_LIST_FOR_EACH_I_P_D x
#define BOOST_PP_LIST_FOR_EACH_I_R(r,macro,data,list) BOOST_PP_FOR_ ## r((macro, data, list, 0), BOOST_PP_LIST_FOR_EACH_I_P, BOOST_PP_LIST_FOR_EACH_I_O, BOOST_PP_LIST_FOR_EACH_I_M)
#define NID_id_smime_mod 189
#define BOOST_PP_SEQ_ELEM_215(_) BOOST_PP_SEQ_ELEM_214
#define SSL_R_MISSING_TMP_ECDH_KEY 311
#define X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL 162
#define APACHE_THRIFT_ACCESSOR_unstructured_annotations 
#define OBJ_id_qt OBJ_id_pkix,2L
#define __glibcxx_requires_heap_pred(_First,_Last,_Pred) 
#define htobe32(x) __bswap_32 (x)
#define _mm256_shuffle_f64x2(X,Y,C) ((__m256d) __builtin_ia32_shuf_f64x2_256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(C), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)-1))
#define LN_setAttr_PGWYcap "payment gateway capabilities"
#define ASN1_STRFLGS_ESC_MSB 4
#define AF_BLUETOOTH PF_BLUETOOTH
#define BOOST_PP_NODE_209(p) BOOST_PP_IIF(p(209), 209, 210)
#define L_tmpnam 20
#define _mm512_mask_cmp_epi32_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)(M)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111 (1)(1)(1)(1)(1),
#define _GLIBCXX_USE_UTIMENSAT 1
#define _mm_maskz_srai_epi32(U,A,B) ((__m128i) __builtin_ia32_psradi128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)_mm_setzero_si128 (), (__mmask8)(U)))
#define OBJ_id_tc26_algorithms OBJ_id_tc26,1L
#define MADV_WIPEONFORK 18
#define X509V3_R_BN_TO_ASN1_INTEGER_ERROR 101
#define BOOST_PP_WHILE_247_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_248, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(248, s))
#define __MMX__ 1
#define CHECK_BOUND(B,A) CHECK(B <= (sizeof(A)/sizeof(A[0])))
#define BOOST_PP_FOR_134_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(135, s) BOOST_PP_IIF(c, BOOST_PP_FOR_135, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(135, s), p, o, m)
#define FIZZ_UNION_TYPED_GET(X,...) template <class Extra> struct TypedGet<X, Extra> { template <class Type> static X* get(Type& t) { return t.as ##X(); } template <class Type> static const X* getConst(const Type& t) { return t.as ##X(); } };
#define ARGS_VARIADER_1(x) x ## N...
#define ARGS_VARIADER_2(x) BOOST_VARIANT_CLASS_OR_TYPENAME_TO_VARIADIC_ ## x ## N
#define FOLLY_DETAIL_CREATE_FREE_INVOKE_TRAITS_USING_1(_,funcname,ns) using ns::funcname;
#define X509_VP_FLAG_LOCKED 0x8
#define FMT_FORMAT_AS(Type,Base) template <typename Char> struct formatter<Type, Char> : formatter<Base, Char> { template <typename FormatContext> auto format(Type const& val, FormatContext& ctx) -> decltype(ctx.out()) { return formatter<Base, Char>::format(val, ctx); } }
#define FMT_GCC_VERSION (__GNUC__ * 100 + __GNUC_MINOR__)
#define RSA_R_UNKNOWN_DIGEST 166
#define LIB_URING_H 
#define RSA_R_MP_R_NOT_PRIME 170
#define _GLIBCXX_USE_GET_NPROCS 1
#define PKCS7_type_is_enveloped(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_enveloped)
#define _mm256_mask_alignr_epi32(W,U,X,Y,C) ((__m256i)__builtin_ia32_alignd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define SSL_CTRL_GET_TLSEXT_TICKET_KEYS 58
#define __cpp_lib_interpolate 201902L
#define NID_caRepository 785
#define SSL_R_UNINITIALIZED 276
#define OPENSSL_API_COMPAT OPENSSL_MIN_API
#define NID_certicom_arc 677
#define SN_id_GostR3410_94_aBis "id-GostR3410-94-aBis"
#define EC_R_NOT_INITIALIZED 111
#define SN_domainComponent "DC"
#define EVP_CTRL_SET_RC2_KEY_BITS 0x3
#define BOOST_INTRUSIVE_DETAIL_NODE_HOLDER_HPP 
#define NID_sect113r2 718
#define CLIENT_TYPES_LEN THRIFT_UNKNOWN_CLIENT_TYPE
#define _mm_mask_fnmsub_round_sd(A,U,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_mask (A, -(B), -(C), U, R)
#define EVP_PKEY_assign_DH(pkey,dh) EVP_PKEY_assign((pkey),EVP_PKEY_DH, (char *)(dh))
#define BOOST_PP_FOR_243_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(244, s) BOOST_PP_IIF(c, BOOST_PP_FOR_244, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(244, s), p, o, m)
#define TLS1_RFC_RSA_PSK_WITH_3DES_EDE_CBC_SHA "TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA"
#define EVENT__HAVE_TIMERCLEAR 1
#define LN_dsa_with_SHA384 "dsa_with_SHA384"
#define TLS1_TXT_PSK_WITH_CAMELLIA_128_CBC_SHA256 "PSK-CAMELLIA128-SHA256"
#define NID_id_regInfo 314
#define _mm_mask_roundscale_round_sd(A,U,B,C,I,R) ((__m128d) __builtin_ia32_rndscalesd_mask_round ((__v2df) (__m128d) (B), (__v2df) (__m128d) (C), (int) (I), (__v2df) (__m128d) (A), (__mmask8) (U), (int) (R)))
#define SO_DETACH_REUSEPORT_BPF 68
#define _SC_USER_GROUPS_R _SC_USER_GROUPS_R
#define SN_id_GostR3410_94_CryptoPro_C_ParamSet "id-GostR3410-94-CryptoPro-C-ParamSet"
#define EC_F_PKEY_ECD_DIGESTSIGN25519 276
#define _mm_mask_roundscale_round_ss(A,U,B,C,I,R) ((__m128) __builtin_ia32_rndscaless_mask_round ((__v4sf) (__m128) (B), (__v4sf) (__m128) (C), (int) (I), (__v4sf) (__m128) (A), (__mmask8) (U), (int) (R)))
#define __BIGGEST_ALIGNMENT__ 16
#define BOOST_PP_REPEAT_2_2(m,d) BOOST_PP_REPEAT_2_1(m, d) m(3, 1, d)
#define PTRDIFF_MIN (-9223372036854775807L-1)
#define _mm256_mask_alignr_epi64(W,U,X,Y,C) ((__m256i)__builtin_ia32_alignq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(C), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define ASN1_F_DO_TCREATE 222
#define EC_R_INVALID_COMPRESSION_BIT 109
#define DECLARE_LHASH_DOALL_ARG_FN(name,o_type,a_type) void name ##_LHASH_DOALL_ARG(void *, void *);
#define _mm512_getexp_round_pd(A,R) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, R))
#define SSL_get_cipher_bits(s,np) SSL_CIPHER_get_bits(SSL_get_current_cipher(s),np)
#define TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA"
#define _mm512_getexp_round_ps(A,R) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, R))
#define BOOST_PP_WHILE_70_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_71, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(71, s))
#define _mm256_mask_cmp_ps_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpps256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(P), (__mmask8)(M)))
#define __cpp_lib_clamp 201603
#define __GLIBC_USE_LIB_EXT2 1
#define EVP_PKEY_OP_SIGN (1<<3)
#define SSL_R_COMPRESSION_LIBRARY_ERROR 142
#define PKCS7_F_PKCS7_RECIP_INFO_SET 130
#define OBJ_aria_256_ctr OBJ_aria,15L
#define EVBUFFER_OUTPUT(x) bufferevent_get_output(x)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_245(s,p,o,m) 0
#define BOOST_PP_REPEAT_2_6(m,d) BOOST_PP_REPEAT_2_5(m, d) m(3, 5, d)
#define WTERMSIG(status) __WTERMSIG (status)
#define _GLIBCXX_HAVE_S_ISREG 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_241(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_242, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(242, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_220(_) BOOST_PP_SEQ_SIZE_221
#define SN_ISO_CN "ISO-CN"
#define X509V3_F_I2S_ASN1_INTEGER 120
#define SN_X25519 "X25519"
#define _mm_shuffle_pi16(A,N) ((__m64) __builtin_ia32_pshufw ((__v4hi)(__m64)(A), (int)(N)))
#define PKCS7_OP_GET_DETACHED_SIGNATURE 2
#define BOOST_INLINE_VARIABLE inline
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_68(op,st,ss,sz) 0
#define __FLT32_HAS_INFINITY__ 1
#define LOCK_RW 192
#define BOOST_PP_SEQ_SIZE_223(_) BOOST_PP_SEQ_SIZE_224
#define _mm512_mask_shuffle_i64x2(W,U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define SSL_SESSION_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_SSL_SESSION, l, p, newf, dupf, freef)
#define BOOST_PP_SEQ_FOLD_LEFT_I_245(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_246, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(246, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_246(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_247, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(247, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define sched_priority sched_priority
#define _POSIX_SIGQUEUE_MAX 32
#define SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH 303
#define __NFDBITS (8 * (int) sizeof (__fd_mask))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_192(p,o,s) 0
#define LOCK_SH 1
#define _SYS_MMAN_H 1
#define BOOST_PP_SEQ_SIZE_226(_) BOOST_PP_SEQ_SIZE_227
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS _CS_XBS5_ILP32_OFFBIG_CFLAGS
#define BIO_F_BIO_GET_HOST_IP 106
#define EC_F_EC_GROUP_GET_CURVE_GFP 130
#define NID_email_protect 132
#define TLS1_CK_PSK_WITH_AES_256_GCM_SHA384 0x030000A9
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_164(op,st,ss,sz) 0
#define FMT_FORMAT_H_ 
#define IPV6_DSTOPTS 59
#define SCM_CREDENTIALS SCM_CREDENTIALS
#define BOOST_PP_FOR_94_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(95, s) BOOST_PP_IIF(c, BOOST_PP_FOR_95, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(95, s), p, o, m)
#define BIO_get_write_buf_size(b,size) (size_t)BIO_ctrl(b,BIO_C_GET_WRITE_BUF_SIZE,size,NULL)
#define SN_md5WithRSA "RSA-NP-MD5"
#define IPAddressChoice_addressesOrRanges 1
#define BOOST_PP_REPEAT_3_191(m,d) BOOST_PP_REPEAT_3_190(m, d) m(4, 190, d)
#define X509_V_ERR_OCSP_CERT_UNKNOWN 75
#define PKCS7_R_PKCS7_ADD_SIGNER_ERROR 153
#define SN_set_brand_MasterCard "set-brand-MasterCard"
#define SSL_R_AT_LEAST_TLS_1_0_NEEDED_IN_FIPS_MODE 143
#define OCSPerr(f,r) ERR_PUT_error(ERR_LIB_OCSP,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define _SC_SIGQUEUE_MAX _SC_SIGQUEUE_MAX
#define PRId8 "d"
#define NID_setCext_PGWYcapabilities 615
#define _MM_MASK_INEXACT 0x1000
#define OBJ_X9_62_id_fieldType OBJ_ansi_X9_62,1L
#define V_ASN1_NUMERICSTRING 18
#define OBJ_subtreeMinimumQuality OBJ_pilotAttributeType,51L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100001 (1)(0)(1)(0)(0)(0)(0)(1),
#define LN_aes_192_gcm "aes-192-gcm"
#define __cpp_fold_expressions 201603L
#define _PSTL_PRAGMA_MESSAGE(x) 
#define SSL3_TXT_DHE_RSA_DES_192_CBC3_SHA "DHE-RSA-DES-CBC3-SHA"
#define TLS_MAX_VERSION TLS1_3_VERSION
#define _GLIBCXX_QUOTED_STRING_H 1
#define NL_LANGMAX _POSIX2_LINE_MAX
#define BOOST_MPL_POP_FRONT_FWD_HPP_INCLUDED 
#define __DECL_SIMD_cos 
#define LN_RSA_SHA3_512 "RSA-SHA3-512"
#define SN_anyExtendedKeyUsage "anyExtendedKeyUsage"
#define IORING_REGISTER_PROBE 8
#define EDEADLK 35
#define X509V3_F_S2I_ASN1_IA5STRING 100
#define OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC OBJ_pkcs12_pbeids,3L
#define SSL_TICKET_RETURN_USE 3
#define X509v3_KU_ENCIPHER_ONLY 0x0001
#define BOOST_PP_SEQ_ELEM_125(_) BOOST_PP_SEQ_ELEM_124
#define BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF(trait,name,default_) BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE( ( 4, ( trait, name, BOOST_MPL_LIMIT_METAFUNCTION_ARITY, default_ ) ) , BOOST_MPL_HAS_MEMBER_TEMPLATE_SUBSTITUTE_PARAMETER , BOOST_MPL_HAS_MEMBER_TEMPLATE_ACCESS )
#define SSL3_CK_DHE_RSA_DES_64_CBC_SHA 0x03000015
#define OBJ_ecdsa_with_Specified OBJ_X9_62_id_ecSigType,3L
#define _mm512_maskz_fmsub_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmsubpd512_maskz(A, B, C, U, R)
#define BOOST_PP_SEQ_FOLD_LEFT_I_67(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_68, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(68, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define IMPLEMENT_LHASH_DOALL_ARG_CONST(type,argtype) int_implement_lhash_doall(type, argtype, const type)
#define _CLZEROINTRIN_H_INCLUDED 
#define SSL_F_TLS_CONSTRUCT_CTOS_USE_SRTP 482
#define SSL_set_tlsext_status_ids(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS,0,arg)
#define BOOST_PP_SEQ_FOLD_LEFT_124(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_124(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define X509V3_F_GNAMES_FROM_SECTNAME 156
#define TLS_ANY_VERSION 0x10000
#define TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA384 "TLS_ECDHE_PSK_WITH_NULL_SHA384"
#define _LINUX_STAT_H 
#define SN_id_GostR3410_94_a "id-GostR3410-94-a"
#define SN_id_GostR3410_94_b "id-GostR3410-94-b"
#define _XBS5_LP64_OFF64 1
#define NID_invalidity_date 142
#define BOOST_CATCH_END }
#define BOOST_PP_SEQ_FOLD_LEFT_128(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_128(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PRIi8 "i"
#define TLS_CT_RSA_FIXED_ECDH 65
#define BOOST_PP_SEQ_FOLD_LEFT_129(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_129(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_F_TLS_PARSE_CTOS_COOKIE 614
#define _PRFCHWINTRIN_H_INCLUDED 
#define NID_id_tc26_gost_28147_param_Z 1003
#define BOOST_PP_WHILE_106_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_107, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(107, s))
#define X509V3_R_POLICY_PATH_LENGTH 156
#define _mm256_inserti128_si256(X,Y,M) ((__m256i) __builtin_ia32_insert128i256 ((__v4di)(__m256i)(X), (__v2di)(__m128i)(Y), (int)(M)))
#define _FEATURES_H 1
#define SSL_CTRL_GET_EXTMS_SUPPORT 122
#define _STAT_VER _STAT_VER_LINUX
#define BOOST_PP_SEQ_SIZE_154(_) BOOST_PP_SEQ_SIZE_155
#define _mm256_mask_i64scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8si ((void *) (ADDR), (__mmask8) (MASK), (__v4di)(__m256i) (INDEX), (__v4si)(__m128i) (V1), (int) (SCALE))
#define OPENSSL_lh_new OPENSSL_LH_new
#define FOLLY_ASYNCSERVERSOCKET_ACCEPTINFO_DEFINED 1
#define _GLIBCXX11_USE_C99_STDIO 1
#define BIO_R_NBIO_CONNECT_ERROR 110
#define PKCS7_R_ERROR_ADDING_RECIPIENT 120
#define SSL_CLIENT_HELLO_SUCCESS 1
#define OBJ_pilotAttributeSyntax OBJ_pilot,3L
#define APACHE_THRIFT_ACCESSOR_DEPRECATED_appServerException 
#define PKCS7_F_DO_PKCS7_SIGNED_ATTRIB 136
#define LC_ADDRESS __LC_ADDRESS
#define STATX_MODE 0x00000002U
#define SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS 0x00000800U
#define SN_kx_rsa "KxRSA"
#define OBJ_setCext_setQualf OBJ_set_certExt,6L
#define BOOST_PP_REPEAT_3_199(m,d) BOOST_PP_REPEAT_3_198(m, d) m(4, 198, d)
#define _mm256_bslli_epi128(A,N) ((__m256i)__builtin_ia32_pslldqi256 ((__m256i)(A), (int)(N) * 8))
#define SSL_READ_EARLY_DATA_FINISH 2
#define SSL_set_tlsext_debug_callback(ssl,cb) SSL_callback_ctrl(ssl,SSL_CTRL_SET_TLSEXT_DEBUG_CB, (void (*)(void))cb)
#define BOOST_PP_BOOL_72 1
#define SSL_OP_NO_RENEGOTIATION 0x40000000U
#define SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm "id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm"
#define S_IFCHR __S_IFCHR
#define OBJ_camellia_256_ecb OBJ_camellia,41L
#define __dev_t_defined 
#define BOOST_PP_NODE_217(p) BOOST_PP_IIF(p(217), 217, 218)
#define OBJ_id_smime_alg_RC2wrap OBJ_id_smime_alg,4L
#define OBJ_aes_256_ofb128 OBJ_aes,43L
#define X509_STORE_set_verify_cb_func(ctx,func) X509_STORE_set_verify_cb((ctx),(func))
#define _CS_POSIX_V6_LP64_OFF64_LINTFLAGS _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
#define EVBUFFER_IOVEC_IS_NATIVE_ 
#define _mm256_ceil_ps(V) _mm256_round_ps ((V), _MM_FROUND_CEIL)
#define LN_pbeWithMD5AndRC2_CBC "pbeWithMD5AndRC2-CBC"
#define KU_DATA_ENCIPHERMENT 0x0010
#define NID_ecdsa_with_SHA3_512 1115
#define SO_DONTROUTE 5
#define X509V3_R_BAD_IP_ADDRESS 118
#define _mm_cmpestra(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestria128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define _mm_cmpestrc(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestric128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define X509_R_KEY_VALUES_MISMATCH 116
#define _mm_cmpestri(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestri128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define BN_F_BN_MOD_EXP2_MONT 118
#define _mm_cmpestrm(X,LX,Y,LY,M) ((__m128i) __builtin_ia32_pcmpestrm128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define _mm_cmpestro(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestrio128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define _mm_cmpestrs(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestris128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define SO_PEERNAME 28
#define _mm_cmpestrz(X,LX,Y,LY,M) ((int) __builtin_ia32_pcmpestriz128 ((__v16qi)(__m128i)(X), (int)(LX), (__v16qi)(__m128i)(Y), (int)(LY), (int)(M)))
#define EVLIST_TIMEOUT 0x01
#define EVP_MD_CTX_create() EVP_MD_CTX_new()
#define OBJ_setct_CapTokenTBE OBJ_set_ctype,56L
#define BOOST_PP_WHILE_248_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_249, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(249, s))
#define OBJ_setct_CapTokenTBS OBJ_set_ctype,21L
#define BOOST_PP_SEQ_ELEM_49(_) BOOST_PP_SEQ_ELEM_48
#define EVP_MD_CTRL_MICALG 0x2
#define BIO_FLAGS_READ 0x01
#define PRIo8 "o"
#define BOOST_PP_FOR_26_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(27, s) BOOST_PP_IIF(c, BOOST_PP_FOR_27, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(27, s), p, o, m)
#define NID_kx_dhe 1039
#define SN_id_it_preferredSymmAlg "id-it-preferredSymmAlg"
#define X509_FLAG_NO_VALIDITY (1L << 5)
#define NID_setct_CapTokenData 538
#define SSL3_CC_HANDSHAKE 0x080
#define RSA_R_VALUE_MISSING 147
#define RSA_R_INVALID_MGF1_MD 156
#define _mm_mask_alignr_epi8(W,U,X,Y,N) ((__m128i) __builtin_ia32_palignr128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)((N) * 8), (__v2di)(__m128i)(X), (__mmask16)(U)))
#define TLS1_RFC_PSK_WITH_CHACHA20_POLY1305 "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256"
#define X509_F_X509_ATTRIBUTE_CREATE_BY_TXT 140
#define SSL_R_DIGEST_CHECK_FAILED 149
#define _mm_floor_ps(V) _mm_round_ps ((V), _MM_FROUND_FLOOR)
#define BOOST_PP_DIV_BASE_P_I(d,r,x,y) BOOST_PP_LESS_EQUAL_D(d, y, x)
#define __USECONDS_T_TYPE __U32_TYPE
#define NID_aes_256_cfb128 429
#define SSL_ST_CONNECT 0x1000
#define BOOST_PP_REPEAT_2_0(m,d) 
#define SCOPE_SUCCESS auto FB_ANONYMOUS_VARIABLE(SCOPE_SUCCESS_STATE) = ::folly::detail::ScopeGuardOnSuccess() + [&]()
#define BOOST_PP_SLOT_CC_5(a,b,c,d,e) BOOST_PP_SLOT_CC_5_D(a, b, c, d, e)
#define NID_setct_CardCInitResTBS 560
#define HOST_NAME_MAX 64
#define BLKROTATIONAL _IO(0x12,126)
#define __ATOMIC_HLE_ACQUIRE 65536
#define SN_setAttr_IssCap_CVM "setAttr-IssCap-CVM"
#define _mm512_mask_insertf64x4(W,U,X,Y,C) ((__m512d) __builtin_ia32_insertf64x4_mask ((__v8df)(__m512d) (X), (__v4df)(__m256d) (Y), (int) (C), (__v8df)(__m512d)(W), (__mmask8)(U)))
#define _PC_PIPE_BUF _PC_PIPE_BUF
#define _GLIBCXX_HAVE_POLL 1
#define BOOST_PP_REPEAT_2_4(m,d) BOOST_PP_REPEAT_2_3(m, d) m(3, 3, d)
#define SSL_AD_UNSUPPORTED_CERTIFICATE SSL3_AD_UNSUPPORTED_CERTIFICATE
#define TLS1_RFC_DHE_RSA_WITH_AES_256_CCM "TLS_DHE_RSA_WITH_AES_256_CCM"
#define LLONG_WIDTH 64
#define SN_ISO_UA "ISO-UA"
#define _MM_FROUND_CUR_DIRECTION 0x04
#define SN_ISO_US "ISO-US"
#define SSL_R_BAD_HANDSHAKE_LENGTH 332
#define CRYPTO_LOCK 1
#define _mm_floor_sd(D,V) _mm_round_sd ((D), (V), _MM_FROUND_FLOOR)
#define TLS1_RFC_ADH_WITH_AES_256_GCM_SHA384 "TLS_DH_anon_WITH_AES_256_GCM_SHA384"
#define ASN1_F_ASN1_ITEM_SIGN 195
#define SSL_R_UNKNOWN_ALERT_TYPE 246
#define _mm_floor_ss(D,V) _mm_round_ss ((D), (V), _MM_FROUND_FLOOR)
#define BOOST_PP_SLOT_CC_9(a,b,c,d,e,f,g,h,i) BOOST_PP_SLOT_CC_9_D(a, b, c, d, e, f, g, h, i)
#define BOOST_PP_SEQ_SIZE_233(_) BOOST_PP_SEQ_SIZE_234
#define BOOST_MPL_HAS_MEMBER_IMPLEMENTATION(args,introspect_macro,substitute_macro,member_macro) template< typename T , typename fallback_ = boost::mpl::bool_< BOOST_PP_ARRAY_ELEM(3, args) > > class BOOST_PP_ARRAY_ELEM(0, args) { introspect_macro(args, substitute_macro, member_macro) public: static const bool value = BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args)< T >::value; typedef typename BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args)< T >::type type; };
#define BOOST_PP_SEQ_ELEM_136(_) BOOST_PP_SEQ_ELEM_135
#define SSL_F_SSL_SESSION_NEW 189
#define _LINUX_TYPES_H 
#define LN_md2 "md2"
#define LN_md4 "md4"
#define LN_md5 "md5"
#define BOOST_PP_SEQ_FOLD_LEFT_I_257(op,st,ss,sz) BOOST_PP_ERROR(0x0005)
#define BOOST_PP_REPEAT_2ND BOOST_PP_REPEAT_2
#define SN_setct_HODInput "setct-HODInput"
#define OBJ_NAME_TYPE_CIPHER_METH 0x02
#define HEADER_BUFFER_H 
#define PRIu8 "u"
#define PRIxLEAST8 "x"
#define BOOST_MPL_AUX_PREPROCESSOR_ENUM_HPP_INCLUDED 
#define BOOST_PP_SEQ_SIZE_239(_) BOOST_PP_SEQ_SIZE_240
#define SSL3_MT_NEXT_PROTO 67
#define BOOST_PP_SEQ_SIZE_81(_) BOOST_PP_SEQ_SIZE_82
#define BOOST_PP_FOR_101_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(102, s) BOOST_PP_IIF(c, BOOST_PP_FOR_102, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(102, s), p, o, m)
#define DCHECK_STREQ(str1,str2) CHECK_STREQ(str1, str2)
#define _mm_i64scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv2df ((void *) (ADDR), (__mmask8)0xFF, (__v2di)(__m128i) (INDEX), (__v2df)(__m128d) (V1), (int) (SCALE))
#define OBJ_setct_CRLNotificationTBS OBJ_set_ctype,80L
#define LN_aes_128_cfb128 "aes-128-cfb"
#define _mm_i64scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4sf ((void *) (ADDR), (__mmask8)0xFF, (__v2di)(__m128i) (INDEX), (__v4sf)(__m128) (V1), (int) (SCALE))
#define __putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
#define LN_dnQualifier "dnQualifier"
#define __cpp_initializer_lists 200806L
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP 71
#define OBJ_dsaWithSHA1_2 OBJ_algorithm,27L
#define NID_id_smime_aa_msgSigDigest 216
#define _GLIBCXX_HAVE_SYS_PARAM_H 1
#define _STDIO_H 1
#define FMT_ALWAYS_INLINE inline __attribute__((always_inline))
#define NID_netscape_renewal_url 75
#define BOOST_PP_WHILE_35_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_36, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(36, s))
#define FOLLY_ATTR_VISIBILITY_HIDDEN __attribute__((__visibility__("hidden")))
#define APACHE_THRIFT_ACCESSOR_zlibConfig 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110000 (0)(1)(1)(1)(0)(0)(0)(0),
#define OBJ_X9cm OBJ_X9_57,4L
#define EC_R_RANDOM_NUMBER_GENERATION_FAILED 158
#define RW_SPINLOCK_USE_SSE_INSTRUCTIONS_ 
#define PRIx8 "x"
#define BOOST_PP_REPEAT_2_15(m,d) BOOST_PP_REPEAT_2_14(m, d) m(3, 14, d)
#define SN_info_access "authorityInfoAccess"
#define SSL_ERROR_WANT_ASYNC 9
#define _PTRDIFF_T 
#define BOOST_PP_FOR_210_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(211, s) BOOST_PP_IIF(c, BOOST_PP_FOR_211, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(211, s), p, o, m)
#define _MOVE_H 1
#define _mm512_mask_i32gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gathersiv8df ((__v8df)(__m512d) (V1OLD), (void const *) (ADDR), (__v8si)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SSL_CTRL_GET_SHARED_CURVE SSL_CTRL_GET_SHARED_GROUP
#define __cpp_hex_float 201603L
#define SN_sha1 "SHA1"
#define SN_rc4_40 "RC4-40"
#define BOOST_PP_DEC_205 204
#define BOOST_PP_DEC_206 205
#define BOOST_PP_DEC_207 206
#define M_PI_4f64x __f64x (0.785398163397448309615660845819875721)
#define _MMINTRIN_H_INCLUDED 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110011 (0)(1)(1)(1)(0)(0)(1)(1),
#define BOOST_PP_SEQ_FOLD_LEFT_130(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_130(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OBJ_shake256 OBJ_nist_hashalgs,12L
#define evtimer_initialized(ev) event_initialized(ev)
#define _GLIBCXX_DEBUG_ONLY(_Statement) 
#define OBJ_aria_128_gcm OBJ_aria,34L
#define NID_RSA_SHA3_224 1116
#define THRIFT_ASYNC_THEADERCLIENTCHANNEL_H_ 1
#define BOOST_PP_DEC_210 209
#define BOOST_PP_DEC_211 210
#define BOOST_PP_DEC_212 211
#define BOOST_PP_DEC_213 212
#define BOOST_PP_DEC_218 217
#define BOOST_PP_DEC_219 218
#define _mm256_maskz_dbsad_epu8(U,X,Y,C) ((__m256i) __builtin_ia32_dbpsadbw256_mask ((__v32qi)(__m256i) (X), (__v32qi)(__m256i) (Y), (int) (C), (__v16hi)(__m256i)_mm256_setzero_si256(), (__mmask16)(U)))
#define TLS1_TXT_DHE_DSS_WITH_AES_256_SHA256 "DHE-DSS-AES256-SHA256"
#define NID_grasshopper_mac 1017
#define EVP_R_NO_OPERATION_SET 149
#define BOOST_PP_FOR_50_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(51, s) BOOST_PP_IIF(c, BOOST_PP_FOR_51, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(51, s), p, o, m)
#define BOOST_PP_WHILE_174_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_175, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(175, s))
#define _GLIBCXX_ARRAY 1
#define FS_DIRSYNC_FL 0x00010000
#define _GLIBCXX_HAVE_ENODATA 1
#define BOOST_PP_DEC_220 219
#define BOOST_PP_DEC_221 220
#define BOOST_PP_DEC_222 221
#define BOOST_PP_DEC_223 222
#define BOOST_PP_DEC_224 223
#define BOOST_PP_DEC_225 224
#define BOOST_PP_DEC_226 225
#define SSL_TXT_MEDIUM "MEDIUM"
#define BOOST_PP_DEC_228 227
#define BN_F_BN_BN2DEC 104
#define INT64_MAX (__INT64_C(9223372036854775807))
#define CRYPTO_EX_INDEX_SSL_SESSION 2
#define MFD_CLOEXEC 1U
#define _mm_mask_blend_epi16(__U,__A,__W) ((__m128i) __builtin_ia32_blendmw_128_mask ((__v8hi) (__A), (__v8hi) (__W), (__mmask8) (__U)))
#define BOOST_PP_SEQ_FOLD_LEFT_138(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_138(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __glibc_clang_has_extension(ext) 0
#define EVENT__SIZEOF_TIME_T 8
#define _GLIBCXX_USE_STD_SPEC_FUNCS 1
#define PEM_F_PEM_READ 108
#define BOOST_PP_DEC_231 230
#define BOOST_PP_DEC_233 232
#define BOOST_PP_DEC_234 233
#define BOOST_PP_DEC_235 234
#define BOOST_PP_DEC_236 235
#define BOOST_PP_DEC_238 237
#define BOOST_PP_DEC_239 238
#define APACHE_THRIFT_ACCESSOR_zstdSupported 
#define NID_wap 678
#define _mm256_shuffle_i64x2(X,Y,C) ((__m256i) __builtin_ia32_shuf_i64x2_256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define ERR_LIB_ENGINE 38
#define EC_F_EC_PKEY_PARAM_CHECK 274
#define BIO_CTRL_INFO 3
#define NID_setct_CredRevReqTBS 553
#define SIGCHLD 17
#define NID_RSA_SHA3_256 1117
#define SSL_R_SSL_COMMAND_SECTION_NOT_FOUND 125
#define __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
#define BOOST_PP_DEC_240 239
#define BOOST_PP_DEC_241 240
#define BOOST_PP_DEC_242 241
#define BOOST_PP_DEC_243 242
#define BOOST_PP_DEC_244 243
#define BOOST_PP_DEC_245 244
#define BOOST_PP_DEC_248 247
#define OBJ_aes_256_gcm OBJ_aes,46L
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM 0x0300C0AC
#define _SC_ULONG_MAX _SC_ULONG_MAX
#define __cpp_lambdas 200907L
#define LN_dcObject "dcObject"
#define X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX 52
#define _SC_LEVEL2_CACHE_LINESIZE _SC_LEVEL2_CACHE_LINESIZE
#define OBJ_id_regCtrl_authenticator OBJ_id_regCtrl,2L
#define BOOST_PP_FOR_61_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(62, s) BOOST_PP_IIF(c, BOOST_PP_FOR_62, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(62, s), p, o, m)
#define _LIST_TCC 1
#define _ISTREAM_TCC 1
#define SSL_R_INSUFFICIENT_SECURITY 241
#define BOOST_PP_DEC_252 251
#define BOOST_PP_DEC_253 252
#define BOOST_PP_DEC_254 253
#define ADJ_TIMECONST 0x0020
#define BOOST_PP_DEC_256 255
#define BOOST_PP_DEC_257 256
#define LN_capwapWTP "Ctrl/Provision WAP Termination"
#define _mm_i64gather_epi64(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gatherdiv2di ((__v2di) _mm_setzero_si128 (), (long long const *) (BASE), (__v2di)(__m128i) (INDEX), (__v2di)_mm_set1_epi64x (-1), (int) (SCALE))
#define FOLLY_NOINLINE __attribute__((__noinline__))
#define _mm256_permutex_epi64(X,I) ((__m256i) __builtin_ia32_permdi256_mask ((__v4di)(__m256i)(X), (int)(I), (__v4di)(__m256i) (_mm256_setzero_si256 ()), (__mmask8) -1))
#define SSL_F_TLS_CONSTRUCT_CTOS_VERIFY 358
#define SSL_library_init() OPENSSL_init_ssl(0, NULL)
#define EC_F_ECKEY_PUB_ENCODE 216
#define BOOST_MPL_VECTOR_AUX_TAG_HPP_INCLUDED 
#define NID_issuerSignTool 1008
#define _mm256_mask_extracti64x2_epi64(W,U,X,C) ((__m128i) __builtin_ia32_extracti64x2_256_mask ((__v4di)(__m256i) (X), (int) (C), (__v2di)(__m128i) (W), (__mmask8) (U)))
#define TLS1_RFC_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256"
#define DCHECK_STRNE(str1,str2) CHECK_STRNE(str1, str2)
#define SN_setct_AuthRevReqTBE "setct-AuthRevReqTBE"
#define ASN1_F_ASN1_STRING_TO_BN 228
#define NID_dh_cofactor_kdf 947
#define BOOST_PP_WHILE_CHECK_BOOST_PP_NIL 1
#define BIO_write_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_WRITE,name)
#define __key_t_defined 
#define NID_ct_precert_poison 952
#define __encls_c(leaf,c,retval) __asm__ __volatile__("encls\n\t" : "=a" (retval) : "a" (leaf), "c" (c) : "cc")
#define LN_ad_ca_issuers "CA Issuers"
#define _mm_mask_blend_epi64(__U,__A,__W) ((__m128i) __builtin_ia32_blendmq_128_mask ((__v2di) (__A), (__v2di) (__W), (__mmask8) (__U)))
#define TLS1_RFC_DHE_PSK_WITH_RC4_128_SHA "TLS_DHE_PSK_WITH_RC4_128_SHA"
#define DH_CHECK_P_NOT_PRIME 0x01
#define NID_LocalKeySet 856
#define __FDS_BITS(set) ((set)->fds_bits)
#define _lrotr(a,b) __rorq((a), (b))
#define SO_RCVLOWAT 18
#define BOOST_MPL_VECTOR_AUX_VECTOR0_HPP_INCLUDED 
#define BOOST_PP_DEC_92 91
#define PKCS7_R_NO_SIGNERS 142
#define DH_R_BN_DECODE_ERROR 109
#define CLOCK_REALTIME_COARSE 5
#define _CS_LFS64_LDFLAGS _CS_LFS64_LDFLAGS
#define TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 "ECDHE-ECDSA-ARIA128-GCM-SHA256"
#define BIO_SOCK_NODELAY 0x10
#define UTIME_NOW ((1l << 30) - 1l)
#define _POSIX_JOB_CONTROL 1
#define d2i_DSAparams_bio(bp,x) ASN1_d2i_bio_of(DSA,DSA_new,d2i_DSAparams,bp,x)
#define SSL_F_TLS1_SET_SERVER_SIGALGS 335
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011100 (0)(0)(0)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011101 (0)(0)(0)(1)(1)(1)(0)(1),
#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
#define _mm256_i64scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8sf ((void *) (ADDR), (__mmask8)0xFF, (__v4di)(__m256i) (INDEX), (__v4sf)(__m128) (V1), (int) (SCALE))
#define OBJ_rc5_cbc OBJ_rsadsi,3L,8L
#define BOOST_INTRUSIVE_CIRCULAR_SLIST_ALGORITHMS_HPP 
#define ATOMIC_FLAG_INIT { 0 }
#define EVP_add_cipher_alias(n,alias) OBJ_NAME_add((alias),OBJ_NAME_TYPE_CIPHER_METH|OBJ_NAME_ALIAS,(n))
#define _IOC_NRSHIFT 0
#define ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED (2|ERR_R_FATAL)
#define FS_XFLAG_IMMUTABLE 0x00000008
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011110 (0)(0)(0)(1)(1)(1)(1)(0),
#define LN_domainComponent "domainComponent"
#define __LEAF_ATTR __attribute__ ((__leaf__))
#define SSL_CTRL_SESS_CONNECT_RENEGOTIATE 23
#define DH_CHECK_INVALID_Q_VALUE 0x20
#define __FLT64_MIN_EXP__ (-1021)
#define SN_id_smime_aa_ets_revocationValues "id-smime-aa-ets-revocationValues"
#define _mm512_maskz_fmaddsub_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_maskz(A, B, C, U, R)
#define LN_aria_128_ecb "aria-128-ecb"
#define PKCS7_R_UNSUPPORTED_CONTENT_TYPE 112
#define BOOST_TT_IS_DESTRUCTIBLE_HPP_INCLUDED 
#define BOOST_PP_FOR_168_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(169, s) BOOST_PP_IIF(c, BOOST_PP_FOR_169, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(169, s), p, o, m)
#define NID_distinguishedName 887
#define CT_R_SCT_FUTURE_TIMESTAMP 116
#define OBJ_setct_AuthResTBEX OBJ_set_ctype,54L
#define _SC_V7_LP64_OFF64 _SC_V7_LP64_OFF64
#define sk_push OPENSSL_sk_push
#define EC_F_ECPARAMETERS_PRINT 147
#define LC_COLLATE __LC_COLLATE
#define STATX_ATTR_APPEND 0x00000020
#define BOOST_BINARY_ULL(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, ULL )
#define SN_aria_256_cfb1 "ARIA-256-CFB1"
#define EVP_R_EXPECTING_A_POLY1305_KEY 164
#define SN_aria_256_cfb8 "ARIA-256-CFB8"
#define SN_id_GostR3411_94_with_GostR3410_2001 "id-GostR3411-94-with-GostR3410-2001"
#define OBJ_crl_number OBJ_id_ce,20L
#define TLS1_CK_RSA_PSK_WITH_3DES_EDE_CBC_SHA 0x03000093
#define EVP_PKEY_CTX_set_dsa_paramgen_bits(ctx,nbits) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DSA_PARAMGEN_BITS, nbits, NULL)
#define BOOST_PP_REPEAT_2_1(m,d) m(3, 0, d)
#define BOOST_PP_REPEAT_2_3(m,d) BOOST_PP_REPEAT_2_2(m, d) m(3, 2, d)
#define BOOST_PP_REPEAT_2_5(m,d) BOOST_PP_REPEAT_2_4(m, d) m(3, 4, d)
#define BOOST_PP_REPEAT_2_7(m,d) BOOST_PP_REPEAT_2_6(m, d) m(3, 6, d)
#define BOOST_PP_REPEAT_2_8(m,d) BOOST_PP_REPEAT_2_7(m, d) m(3, 7, d)
#define _mm512_maskz_cvt_roundph_ps(U,A,B) (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)_mm512_setzero_ps(), U, B)
#define __GXX_TYPEINFO_EQUALITY_INLINE 1
#define SSL_set0_chain_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_CHAIN_CERT_STORE,0,(char *)(st))
#define NID_setct_CapResData 546
#define BOOST_PP_REPEAT_2_I(c,m,d) BOOST_PP_REPEAT_2_ ## c(m, d)
#define TLSEXT_TYPE_encrypt_then_mac 22
#define _bswap64(a) __bswapq(a)
#define BIO_set_read_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,0)
#define EVP_PKEY_CTX_set_dh_rfc5114(ctx,gen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_RFC5114, gen, NULL)
#define BOOST_PP_SEQ_SIZE_244(_) BOOST_PP_SEQ_SIZE_245
#define THRIFT_THRIFT_H_ 
#define CRL_REASON_AFFILIATION_CHANGED 3
#define SN_dsa_with_SHA3_224 "id-dsa-with-sha3-224"
#define SSL_set1_client_certificate_types(s,clist,clistlen) SSL_ctrl(s,SSL_CTRL_SET_CLIENT_CERT_TYPES,clistlen,(char *)(clist))
#define _GLIBCXX_HAVE_SYS_SOCKET_H 1
#define RSA_R_PKCS_DECODING_ERROR 159
#define _mm_extract_ps(X,N) (__extension__ ({ union { int i; float f; } __tmp; __tmp.f = __builtin_ia32_vec_ext_v4sf ((__v4sf)(__m128)(X), (int)(N)); __tmp.i; }))
#define BOOST_PP_SEQ_SIZE_247(_) BOOST_PP_SEQ_SIZE_248
#define NID_setCext_Track2Data 617
#define BOOST_PP_BITAND(x,y) BOOST_PP_BITAND_I(x, y)
#define LN_supportedApplicationContext "supportedApplicationContext"
#define ASN1_R_INVALID_SCRYPT_PARAMETERS 227
#define BOOST_PP_SEQ_SIZE_249(_) BOOST_PP_SEQ_SIZE_250
#define MBSTRING_UNIV (MBSTRING_FLAG|4)
#define BOOST_PP_INTERCEPT_172 
#define _mm512_fpclass_ps_mask(x,c) ((__mmask16) __builtin_ia32_fpclassps512_mask ((__v16sf) (__m512) (x), (int) (c),(__mmask8)-1))
#define OBJ_X9_62_c2pnb163v1 OBJ_X9_62_c_TwoCurve,1L
#define OBJ_X9_62_c2pnb163v2 OBJ_X9_62_c_TwoCurve,2L
#define __UINT16_MAX__ 0xffff
#define BIO_ctrl_dgram_connect(b,peer) (int)BIO_ctrl(b,BIO_CTRL_DGRAM_CONNECT,0, (char *)(peer))
#define EIDRM 43
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_10 10
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_11 11
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_12 12
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_14 14
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_15 15
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_16 16
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_17 17
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_18 18
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_19 19
#define _PC_NAME_MAX _PC_NAME_MAX
#define NID_aria_128_ecb 1065
#define MADV_DONTDUMP 16
#define BOOST_PP_ITERATION_FINISH_1_DIGIT_1 6
#define _mm512_mask_rsqrt28_ps(W,U,A) _mm512_mask_rsqrt28_round_ps(W, U, A, _MM_FROUND_CUR_DIRECTION)
#define LN_code_sign "Code Signing"
#define SSL_F_CONSTRUCT_KEY_EXCHANGE_TBS 553
#define UIerr(f,r) ERR_PUT_error(ERR_LIB_UI,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_PP_SEQ_FOLD_LEFT_I_126(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_127, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(127, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __ASSERT_FUNCTION __extension__ __PRETTY_FUNCTION__
#define __glibcxx_requires_non_empty_range(_First,_Last) 
#define OBJ_id_it_suppLangTags OBJ_id_it,16L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_21 21
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_23 23
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_24 24
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_25 25
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_26 26
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_27 27
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_28 28
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_29 29
#define NID_id_smime_alg_3DESwrap 243
#define ADJ_NANO 0x2000
#define EC_R_INCOMPATIBLE_OBJECTS 101
#define SSL3_TXT_DH_RSA_DES_192_CBC3_SHA "DH-RSA-DES-CBC3-SHA"
#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_CBC_SHA "ECDHE-RSA-AES128-SHA"
#define BOOST_PP_REPEAT_2_26(m,d) BOOST_PP_REPEAT_2_25(m, d) m(3, 25, d)
#define _MM_EXCEPT_DIV_ZERO 0x0004
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_30 30
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_32 32
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_34 34
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_35 35
#define _GLIBCXX_HAVE_ISWBLANK 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_38 38
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_39 39
#define BOOST_PP_WHILE_33(p,o,s) BOOST_PP_WHILE_33_C(BOOST_PP_BOOL(p(34, s)), p, o, s)
#define __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
#define TLS1_RFC_DHE_DSS_WITH_AES_128_SHA "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"
#define BOOST_PP_SEQ_FOLD_LEFT_I_128(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_129, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(129, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_REPEAT_2_29(m,d) BOOST_PP_REPEAT_2_28(m, d) m(3, 28, d)
#define OBJ_id_smime_ct_authEnvelopedData OBJ_id_smime_ct,23L
#define SSL_CTRL_SET_CLIENT_CERT_TYPES 104
#define TLS1_TXT_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 "ECDH-ECDSA-ARIA256-GCM-SHA384"
#define EV_INT64_MIN INT64_MIN
#define OBJ_X9_62_c2pnb272w1 OBJ_X9_62_c_TwoCurve,16L
#define SSL_TXT_FIPS "FIPS"
#define FOLLY_MSVC_DISABLE_WARNING(warningNumber) 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_40 40
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_44 44
#define X509_CRL_set_lastUpdate X509_CRL_set1_lastUpdate
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_47 47
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_48 48
#define RSA_R_MGF1_DIGEST_NOT_ALLOWED 152
#define __siginfo_t_defined 1
#define BOOST_PP_REPEAT_3_145(m,d) BOOST_PP_REPEAT_3_144(m, d) m(4, 144, d)
#define BOOST_PP_SEQ_SIZE_162(_) BOOST_PP_SEQ_SIZE_163
#define _SC_JOB_CONTROL _SC_JOB_CONTROL
#define _SC_REALTIME_SIGNALS _SC_REALTIME_SIGNALS
#define MS_MOVE 8192
#define IPV6_2292PKTINFO 2
#define BOOST_PP_SEQ_FOLD_LEFT_231(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_231(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define ASN1_R_ILLEGAL_OPTIONAL_ANY 126
#define ASN1_F_I2D_PUBLICKEY 164
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_51 51
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_54 54
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_55 55
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_56 56
#define OBJ_F_OBJ_ADD_OBJECT 105
#define X509V3_F_PROCESS_PCI_VALUE 150
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_59 59
#define SN_id_pkix_OCSP_trustRoot "trustRoot"
#define _PSTL_PRAGMA_VECTOR_UNALIGNED 
#define TLS1_TXT_ADH_WITH_AES_256_GCM_SHA384 "ADH-AES256-GCM-SHA384"
#define APACHE_THRIFT_ACCESSOR_declaredException 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_60 60
#define SSL_TICKET_SUCCESS 5
#define BOOST_PP_SEQ_SIZE_165(_) BOOST_PP_SEQ_SIZE_166
#define NID_simpleSecurityObject 454
#define ASN1_PKEY_CTRL_PKCS7_SIGN 0x1
#define __UINT64_C(c) c ## UL
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110100 (1)(1)(1)(1)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110101 (1)(1)(1)(1)(0)(1)(0)(1),
#define TLS1_3_VERSION 0x0304
#define PRIXLEAST16 "X"
#define BOOST_MPL_AUX_NESTED_VALUE_WKND(T,C) BOOST_MPL_AUX_VALUE_WKND(C)::value
#define OBJ_secg_scheme OBJ_certicom_arc,1L
#define MCL_ONFAULT 4
#define TCP_ULP 31
#define CRYPTO_set_dynlock_lock_callback(dyn_lock_function) 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_70 70
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_72 72
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_74 74
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_75 75
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_76 76
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_79 79
#define MOVE_MOUNT_F_EMPTY_PATH 0x00000004
#define SSL_MODE_SEND_SERVERHELLO_TIME 0x00000040U
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110110 (1)(1)(1)(1)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110111 (1)(1)(1)(1)(0)(1)(1)(1),
#define TLS1_CK_RSA_WITH_AES_256_SHA256 0x0300003D
#define APACHE_THRIFT_ACCESSOR_minVersion 
#define _mm512_i32scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv16si ((void *) (ADDR), (__mmask16)0xFFFF, (__v16si)(__m512i) (INDEX), (__v16si)(__m512i) (V1), (int) (SCALE))
#define BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR 135
#define _mm_shufflehi_epi16(A,N) ((__m128i)__builtin_ia32_pshufhw ((__v8hi)(__m128i)(A), (int)(N)))
#define _INITIALIZER_LIST 
#define OBJ_sm4_cbc OBJ_sm_scheme,104L,2L
#define EVP_PKEY_CTRL_DH_RFC5114 (EVP_PKEY_ALG_CTRL + 3)
#define NID_protocolInformation 886
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_81 81
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_85 85
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_86 86
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_87 87
#define LN_aria_256_ecb "aria-256-ecb"
#define OBJ_id_cmc_encryptedPOP OBJ_id_cmc,9L
#define SYS_F_CONNECT 2
#define EVENT2_TAG_H_INCLUDED_ 
#define PRIXLEAST32 "X"
#define LN_mime_mhs "MIME MHS"
#define _AVX512VPOPCNTDQVLINTRIN_H_INCLUDED 
#define i2d_SSL_SESSION_bio(bp,s_id) ASN1_i2d_bio_of(SSL_SESSION,i2d_SSL_SESSION,bp,s_id)
#define CONF_R_RECURSIVE_DIRECTORY_INCLUDE 111
#define SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT 300
#define EC_F_EC_GFP_NIST_GROUP_SET_CURVE 202
#define NID_qualityLabelledData 457
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_90 90
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_91 91
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_92 92
#define OBJ_id_it_preferredSymmAlg OBJ_id_it,4L
#define TLS1_TXT_ECDHE_RSA_WITH_DES_192_CBC3_SHA "ECDHE-RSA-DES-CBC3-SHA"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_98 98
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_99 99
#define OPENSSL_INIT_LOAD_SSL_STRINGS 0x00200000L
#define __cpp_decltype_auto 201304L
#define BOOST_PP_WHILE_234_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_235, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(235, s))
#define _mm512_mask_fnmsub_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfnmsubps512_mask(A, B, C, U, R)
#define __cpp_lib_robust_nonmodifying_seq_ops 201304
#define LN_ms_code_com "Microsoft Commercial Code Signing"
#define SSL_F_TLS_CONSTRUCT_END_OF_EARLY_DATA 536
#define DN_RENAME 0x00000010
#define __W_EXITCODE(ret,sig) ((ret) << 8 | (sig))
#define FOLLY_ASYNC_STACK_RETURN_ADDRESS() __builtin_return_address(0)
#define CLOCK_MONOTONIC_RAW 4
#define _GLIBCXX_NATIVE_THREAD_ID pthread_self()
#define _mm512_i32scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv8di ((void *) (ADDR), (__mmask8)0xFF, (__v8si)(__m256i) (INDEX), (__v8di)(__m512i) (V1), (int) (SCALE))
#define _SYS_SOCKET_H 1
#define SN_id_it_caKeyUpdateInfo "id-it-caKeyUpdateInfo"
#define SSL_R_READ_BIO_NOT_SET 211
#define SSL_ST_READ_HEADER 0xF0
#define OBJ_setct_AuthResTBSX OBJ_set_ctype,18L
#define SSL_AD_CERTIFICATE_UNOBTAINABLE TLS1_AD_CERTIFICATE_UNOBTAINABLE
#define BOOST_PP_FOR_209_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(210, s) BOOST_PP_IIF(c, BOOST_PP_FOR_210, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(210, s), p, o, m)
#define TLS1_TXT_DH_RSA_WITH_AES_128_SHA "DH-RSA-AES128-SHA"
#define __FLT128_MAX_EXP__ 16384
#define i2d_DSAparams_bio(bp,x) ASN1_i2d_bio_of_const(DSA,i2d_DSAparams,bp,x)
#define PRIXLEAST64 __PRI64_PREFIX "X"
#define OBJ_id_cct_PKIResponse OBJ_id_cct,3L
#define X509_CHECK_FLAG_NEVER_CHECK_SUBJECT 0x20
#define _mm512_mask_cvt_roundpd_epi64(W,U,A,B) ((__m512i)__builtin_ia32_cvtpd2qq512_mask ((A), (__v8di)(W), (U), (B)))
#define SN_id_cmc_queryPending "id-cmc-queryPending"
#define SSL_TXT_ARIA "ARIA"
#define LN_Independent "Independent"
#define OBJ_des_cdmf OBJ_rsadsi,3L,10L
#define _mm512_shufflelo_epi16(A,B) ((__m512i) __builtin_ia32_pshuflw512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i) _mm512_setzero_si512 (), (__mmask32)-1))
#define NID_netscape_data_type 59
#define SSL_F_SSL_CTX_USE_CERTIFICATE 171
#define SN_sect409k1 "sect409k1"
#define SN_identified_organization "identified-organization"
#define TLSEXT_signature_num 7
#define BOOST_PREPROCESSOR_TUPLE_REM_HPP 
#define RAND_R_DRBG_NOT_INITIALISED 104
#define _mm_cvt_roundsi32_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss32(A, B, C)
#define SN_setct_CapTokenTBE "setct-CapTokenTBE"
#define OBJ_aria_192_gcm OBJ_aria,35L
#define PKCS7_R_UNABLE_TO_FIND_MEM_BIO 107
#define SN_id_smime_ct_TDTInfo "id-smime-ct-TDTInfo"
#define BOOST_INTRUSIVE_SAFE_HOOK_DESTRUCTOR_ASSERT BOOST_ASSERT
#define _GLIBCXX_UNIQUE_LOCK_H 1
#define __DECL_SIMD_expf128 
#define BN_RAND_BOTTOM_ANY 0
#define __S_IFDIR 0040000
#define NID_certificate_issuer 771
#define _POSIX_TRACE_INHERIT -1
#define _THRIFT_PROTOCOL_TPROTOCOLEXCEPTION_H_ 1
#define LN_seed_ecb "seed-ecb"
#define __stub_gtty 
#define __DECL_SIMD_powf128 
#define NID_userClass 465
#define __cpp_aggregate_paren_init 201902L
#define SSL_READ_EARLY_DATA_ERROR 0
#define _mm_mask_i64gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gatherdiv4si ((__v4si)(__m128i) (SRC), (int const *) (BASE), (__v2di)(__m128i) (INDEX), (__v4si)(__m128i) (MASK), (int) (SCALE))
#define OBJ_setCext_setExt OBJ_set_certExt,5L
#define _XOPMMINTRIN_H_INCLUDED 
#define BOOST_CODEGEARC_WORKAROUND_GUARD 1
#define TLS1_CK_DH_RSA_WITH_AES_128_SHA 0x03000031
#define _MM_FROUND_NINT (_MM_FROUND_TO_NEAREST_INT | _MM_FROUND_RAISE_EXC)
#define BOOST_TT_HAS_WORKING_IS_COMPLETE 
#define BOOST_PP_SEQ_SIZE_255(_) BOOST_PP_SEQ_SIZE_256
#define NID_set_policy_root 607
#define EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE 166
#define _mm512_slli_epi16(X,C) ((__m512i)__builtin_ia32_psllwi512_mask ((__v32hi)(__m512i)(X), (int)(C), (__v32hi)(__m512i)_mm512_setzero_si512 (), (__mmask32)-1))
#define BOOST_PP_DETAIL_IBP_SPLIT_0(a,...) a
#define BOOST_PP_DETAIL_IBP_SPLIT_1(a,...) __VA_ARGS__
#define LC_PAPER __LC_PAPER
#define SN_dhSinglePass_stdDH_sha512kdf_scheme "dhSinglePass-stdDH-sha512kdf-scheme"
#define BOOST_PP_FOR_111_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(112, s) BOOST_PP_IIF(c, BOOST_PP_FOR_112, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(112, s), p, o, m)
#define _GLIBCXX_HAVE_TGMATH_H 1
#define EC_R_LADDER_POST_FAILURE 136
#define NID_id_tc26_signwithdigest 984
#define NID_issuer_alt_name 86
#define LN_ms_csp_name "Microsoft CSP Name"
#define FFSYNC O_FSYNC
#define _mm256_extract_epi16(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 3); _mm_extract_epi16 (__Y, (N) % 8); }))
#define BOOST_PP_WHILE_5_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_6, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(6, s))
#define S_IWRITE S_IWUSR
#define PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP { { __PTHREAD_RWLOCK_INITIALIZER (PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP) } }
#define CRL_REASON_UNSPECIFIED 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010100 (0)(1)(0)(1)(0)(1)(0)(0),
#define TLS1_CK_DHE_DSS_WITH_AES_256_SHA256 0x0300006A
#define SSL_SECOP_CIPHER_SHARED (2 | SSL_SECOP_OTHER_CIPHER)
#define X509V3_F_I2S_ASN1_IA5STRING 149
#define FOLLY_APPLE_MACOS 0
#define TLS1_TXT_ECDHE_ECDSA_WITH_RC4_128_SHA "ECDHE-ECDSA-RC4-SHA"
#define NID_pbeWithSHA1AndRC2_CBC 68
#define LN_iana "iana"
#define OBJ_uacurve0 OBJ_dstu4145le,2L,0L
#define OBJ_uacurve1 OBJ_dstu4145le,2L,1L
#define OBJ_uacurve3 OBJ_dstu4145le,2L,3L
#define OBJ_uacurve4 OBJ_dstu4145le,2L,4L
#define OBJ_uacurve6 OBJ_dstu4145le,2L,6L
#define OBJ_uacurve7 OBJ_dstu4145le,2L,7L
#define OBJ_uacurve8 OBJ_dstu4145le,2L,8L
#define NID_ISO_CN 1140
#define OBJ_certificate_policies OBJ_id_ce,32L
#define BOOST_PP_FOR_6_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(7, s) BOOST_PP_IIF(c, BOOST_PP_FOR_7, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(7, s), p, o, m)
#define NID_X25519 1034
#define EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT 0x1a
#define _mm_mask_i64gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gatherdiv2di ((__v2di)(__m128i) (SRC), (long long const *) (BASE), (__v2di)(__m128i) (INDEX), (__v2di)(__m128i) (MASK), (int) (SCALE))
#define BOOST_MPL_AUX_NA_PARAMS(i) BOOST_MPL_PP_ENUM(i, na)
#define SIG_UNBLOCK 1
#define BOOST_CONTEXT_DYN_LINK 1
#define NID_dsaWithSHA 66
#define _mm256_extract_epi32(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 2); _mm_extract_epi32 (__Y, (N) % 4); }))
#define OBJ_X9_62_c2pnb163v3 OBJ_X9_62_c_TwoCurve,3L
#define BIO_F_BIO_NEW_MEM_BUF 126
#define NID_personalSignature 499
#define __DECL_SIMD_exp 
#define IN_CLASSB_MAX 65536
#define _GLIBCXX_USE_C99_INTTYPES_TR1 1
#define SSL_CTX_set_npn_select_cb SSL_CTX_set_next_proto_select_cb
#define _popcnt64(a) __popcntq(a)
#define OBJ_ecdsa_with_SHA224 OBJ_ecdsa_with_Specified,1L
#define _POSIX_MEMLOCK 200809L
#define NID_id_smime_cd 193
#define EVLIST_INIT 0x80
#define _NETINET_TCP_H 1
#define BOOST_PP_REPEAT_2_38(m,d) BOOST_PP_REPEAT_2_37(m, d) m(3, 37, d)
#define CRYPTO_EX_INDEX_RSA 9
#define OBJ_id_aes128_wrap_pad OBJ_aes,8L
#define NID_id_smime_ct 190
#define SSL_F_TLS_CONSTRUCT_CERT_VERIFY 496
#define RLIM64_INFINITY 0xffffffffffffffffuLL
#define SOME_KIND_OF_LOG_EVERY_N(severity,n,what_to_do) static int LOG_OCCURRENCES = 0, LOG_OCCURRENCES_MOD_N = 0; ++LOG_OCCURRENCES; if (++LOG_OCCURRENCES_MOD_N > n) LOG_OCCURRENCES_MOD_N -= n; if (LOG_OCCURRENCES_MOD_N == 1) google::LogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, LOG_OCCURRENCES, &what_to_do).stream()
#define SO_GET_FILTER SO_ATTACH_FILTER
#define EC_F_EC_GFP_NISTP521_POINTS_MUL 234
#define TLS1_RFC_RSA_WITH_AES_128_SHA256 "TLS_RSA_WITH_AES_128_CBC_SHA256"
#define BOOST_PP_SEQ_FOLD_LEFT_153(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_153(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL3_MT_CERTIFICATE_STATUS 22
#define SN_auth_gost01 "AuthGOST01"
#define BYTE_ORDER __BYTE_ORDER
#define NID_setct_AcqCardCodeMsgTBE 576
#define LIKELY(x) (__builtin_expect((x), 1))
#define OBJ_shaWithRSAEncryption OBJ_algorithm,15L
#define SSL_F_TLS_CONSTRUCT_CTOS_NPN 471
#define OBJ_sha512_224WithRSAEncryption OBJ_pkcs1,15L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101100 (1)(1)(0)(1)(1)(0)(0),
#define EVP_F_ENC_NEW 199
#define EVP_R_INVALID_KEY_LENGTH 130
#define BOOST_PP_SLOT_CC_3_D(a,b,c) a ## b ## c
#define _mm256_extract_epi64(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 1); _mm_extract_epi64 (__Y, (N) % 2); }))
#define BOOST_RV_REF_END &&
#define APACHE_THRIFT_ACCESSOR_errorClassification 
#define BOOST_PP_FOR_135_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(136, s) BOOST_PP_IIF(c, BOOST_PP_FOR_136, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(136, s), p, o, m)
#define IPV6_HOPLIMIT 52
#define SN_auth_gost12 "AuthGOST12"
#define _SC_MULTI_PROCESS _SC_MULTI_PROCESS
#define LN_id_tc26_hmac_gost_3411_2012_256 "HMAC GOST 34.11-2012 256 bit"
#define EINVAL 22
#define BOOST_PP_SEQ_FOLD_LEFT_159(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_159(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __WIFEXITED(status) (__WTERMSIG(status) == 0)
#define APACHE_THRIFT_ACCESSOR_code 
#define OBJ_ecdsa_with_SHA256 OBJ_ecdsa_with_Specified,2L
#define BOOST_PP_SEQ_ELEM_12(_) BOOST_PP_SEQ_ELEM_11
#define ADJ_OFFSET 0x0001
#define BOOST_PP_SEQ_ELEM_18(_) BOOST_PP_SEQ_ELEM_17
#define BOOST_PP_SEQ_ELEM_19(_) BOOST_PP_SEQ_ELEM_18
#define __glibc_unlikely(cond) __builtin_expect ((cond), 0)
#define OBJ_x9_63_scheme 1L,3L,133L,16L,840L,63L,0L
#define BOOST_INTRUSIVE_SLIST_HOOK_HPP 
#define __FLT64X_HAS_INFINITY__ 1
#define OBJ_dcObject OBJ_Enterprises,1466L,344L
#define BOOST_PP_WHILE_69_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_70, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(70, s))
#define BOOST_PP_NODE_241(p) BOOST_PP_IIF(p(241), 241, 242)
#define BOOST_PP_SEQ_ELEM_20(_) BOOST_PP_SEQ_ELEM_19
#define BOOST_PP_SEQ_ELEM_21(_) BOOST_PP_SEQ_ELEM_20
#define BOOST_PP_SEQ_ELEM_24(_) BOOST_PP_SEQ_ELEM_23
#define BOOST_PP_SEQ_ELEM_25(_) BOOST_PP_SEQ_ELEM_24
#define BOOST_PP_SEQ_ELEM_26(_) BOOST_PP_SEQ_ELEM_25
#define BOOST_PP_SEQ_ELEM_27(_) BOOST_PP_SEQ_ELEM_26
#define CT_R_LOG_CONF_INVALID 109
#define NS_SSL_CA 0x04
#define X509_STORE_get1_cert X509_STORE_CTX_get1_certs
#define LN_des_cfb8 "des-cfb8"
#define _SC_PIPE _SC_PIPE
#define BOOST_GNU_STDLIB 1
#define TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA256 0x030000C5
#define F_SEAL_SHRINK 0x0002
#define BOOST_PP_SEQ_ELEM_30(_) BOOST_PP_SEQ_ELEM_29
#define BOOST_PP_SEQ_ELEM_32(_) BOOST_PP_SEQ_ELEM_31
#define BOOST_PP_SEQ_ELEM_35(_) BOOST_PP_SEQ_ELEM_34
#define BOOST_PP_SEQ_ELEM_38(_) BOOST_PP_SEQ_ELEM_37
#define NID_setct_PIData 524
#define SSL_R_POST_HANDSHAKE_AUTH_ENCODING_ERR 278
#define TLSEXT_TYPE_session_ticket 35
#define BOOST_PP_NODE_247(p) BOOST_PP_IIF(p(247), 247, 248)
#define _PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT (_MSC_VER >= 1900 || __cplusplus >= 201402L || __cpp_lib_make_reverse_iterator == 201402)
#define TLSEXT_signature_anonymous 0
#define NID_des_cfb8 657
#define BOOST_MPL_LONG_HPP_INCLUDED 
#define X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED 40
#define NID_X9_62_c2tnb359v1 701
#define OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme OBJ_secg_scheme,14L,3L
#define BOOST_PP_SEQ_ELEM_41(_) BOOST_PP_SEQ_ELEM_40
#define _mm256_i64gather_ps(BASE,INDEX,SCALE) (__m128) __builtin_ia32_gatherdiv4sf256 ((__v4sf) _mm_setzero_ps (), (float const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4sf) _mm_cmpeq_ps (_mm_setzero_ps (), _mm_setzero_ps ()), (int) (SCALE))
#define BOOST_PP_SEQ_ELEM_46(_) BOOST_PP_SEQ_ELEM_45
#define BOOST_PP_SEQ_ELEM_47(_) BOOST_PP_SEQ_ELEM_46
#define BOOST_PP_SEQ_ELEM_48(_) BOOST_PP_SEQ_ELEM_47
#define FOLLY_TARGET_ATTRIBUTE(target) __attribute__((__target__(target)))
#define APACHE_THRIFT_ACCESSOR_DEPRECATED_appClientException 
#define BOOST_PP_DEC_12 11
#define SSL_R_CIPHER_OR_HASH_UNAVAILABLE 138
#define BOOST_PP_WHILE_215_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_216, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(216, s))
#define _mm512_mask_prefetch_i32gather_pd(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfdpd ((__mmask8) (MASK), (__v8si)(__m256i) (INDEX), (void const *) (ADDR), (int) (SCALE), (int) (HINT))
#define BOOST_PP_SEQ_ELEM_50(_) BOOST_PP_SEQ_ELEM_49
#define BOOST_PP_SEQ_ELEM_51(_) BOOST_PP_SEQ_ELEM_50
#define SN_X9_62_prime256v1 "prime256v1"
#define BOOST_PP_SEQ_ELEM_53(_) BOOST_PP_SEQ_ELEM_52
#define BOOST_PP_SEQ_ELEM_54(_) BOOST_PP_SEQ_ELEM_53
#define EVP_F_CMLL_T4_INIT_KEY 179
#define SOL_NETBEUI 267
#define BOOST_PP_SEQ_ELEM_58(_) BOOST_PP_SEQ_ELEM_57
#define _SIDD_CMP_EQUAL_ORDERED 0x0c
#define SSL_CONF_FLAG_CMDLINE 0x1
#define SSL_F_SSL3_SETUP_WRITE_BUFFER 291
#define HEADER_SAFESTACK_H 
#define LC_NUMERIC __LC_NUMERIC
#define __cpp_digit_separators 201309L
#define IPV6_PMTUDISC_DO 2
#define EVP_F_AESNI_INIT_KEY 165
#define LN_aes_256_ecb "aes-256-ecb"
#define BOOST_PP_SEQ_ELEM_60(_) BOOST_PP_SEQ_ELEM_59
#define SN_idea_cbc "IDEA-CBC"
#define BOOST_PP_SEQ_ELEM_65(_) BOOST_PP_SEQ_ELEM_64
#define BOOST_PP_SEQ_ELEM_66(_) BOOST_PP_SEQ_ELEM_65
#define STA_MODE 0x4000
#define BOOST_PP_SEQ_ELEM_68(_) BOOST_PP_SEQ_ELEM_67
#define SSL_EXT_TLS1_3_CERTIFICATE 0x1000
#define NID_X9_62_c2tnb431r1 703
#define LN_id_pkix_OCSP_Nonce "OCSP Nonce"
#define _GLIBCXX_DEBUG_MACRO_SWITCH_H 1
#define NID_aria_192_ecb 1070
#define BOOST_PP_SEQ_ELEM_71(_) BOOST_PP_SEQ_ELEM_70
#define BOOST_PP_SEQ_ELEM_72(_) BOOST_PP_SEQ_ELEM_71
#define BOOST_PP_LIST_FOLD_LEFT_12(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_13, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(13, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_ELEM_74(_) BOOST_PP_SEQ_ELEM_73
#define BOOST_PP_SEQ_ELEM_75(_) BOOST_PP_SEQ_ELEM_74
#define SSL_get0_raw_cipherlist(s,plst) SSL_ctrl(s,SSL_CTRL_GET_RAW_CIPHERLIST,0,plst)
#define BOOST_PP_SEQ_ELEM_77(_) BOOST_PP_SEQ_ELEM_76
#define EVENT__HAVE_SETENV 1
#define get_rfc2409_prime_768 BN_get_rfc2409_prime_768
#define X509_R_NAME_TOO_LONG 134
#define BOOST_PP_LIST_FOLD_LEFT_13(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_14, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(14, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_FOR_95_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(96, s) BOOST_PP_IIF(c, BOOST_PP_FOR_96, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(96, s), p, o, m)
#define TCP_THIN_DUPACK 17
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000100 (0)(0)(0)(1)(0)(0),
#define SN_id_it_unsupportedOIDs "id-it-unsupportedOIDs"
#define SSL_F_TLS1_SAVE_U16 628
#define BOOST_PP_SEQ_ELEM_81(_) BOOST_PP_SEQ_ELEM_80
#define BOOST_PP_SEQ_ELEM_82(_) BOOST_PP_SEQ_ELEM_81
#define BOOST_PP_SEQ_ELEM_84(_) BOOST_PP_SEQ_ELEM_83
#define BOOST_PP_SEQ_ELEM_85(_) BOOST_PP_SEQ_ELEM_84
#define BOOST_PP_SEQ_ELEM_86(_) BOOST_PP_SEQ_ELEM_85
#define BOOST_PP_SEQ_ELEM_87(_) BOOST_PP_SEQ_ELEM_86
#define BOOST_PP_SEQ_ELEM_88(_) BOOST_PP_SEQ_ELEM_87
#define BOOST_PP_SEQ_ELEM_89(_) BOOST_PP_SEQ_ELEM_88
#define LN_hmac_sha1 "hmac-sha1"
#define BOOST_PP_SEQ_FOLD_LEFT_I_51(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_52, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(52, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _mm_rsqrt28_round_sd(A,B,R) __builtin_ia32_rsqrt28sd_round(A, B, R)
#define __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
#define SCHED_RESET_ON_FORK 0x40000000
#define BOOST_PP_SEQ_ELEM_90(_) BOOST_PP_SEQ_ELEM_89
#define LN_cast5_ofb64 "cast5-ofb"
#define BOOST_PP_SEQ_ELEM_93(_) BOOST_PP_SEQ_ELEM_92
#define BOOST_PP_SEQ_ELEM_94(_) BOOST_PP_SEQ_ELEM_93
#define _mm512_mask_scalef_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_scalefpd512_mask(A, B, W, U, C)
#define BOOST_PP_SEQ_ELEM_97(_) BOOST_PP_SEQ_ELEM_96
#define BOOST_PP_SEQ_ELEM_98(_) BOOST_PP_SEQ_ELEM_97
#define SO_ERROR 4
#define SN_audio "audio"
#define _POSIX_C_SOURCE 200809L
#define SSL_TXT_TLSV1_2 "TLSv1.2"
#define NID_cmac 894
#define EVLIST_SIGNAL 0x04
#define OBJ_id_smime_cti_ets_proofOfReceipt OBJ_id_smime_cti,2L
#define TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256"
#define SN_manager "manager"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101010 (1)(0)(1)(0)(1)(0),
#define __SSE_MATH__ 1
#define SSL_F_TLS1_GET_CURVELIST 338
#define BOOST_PP_LIST_FOLD_LEFT_18(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_19, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(19, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BN_FLG_CONSTTIME 0x04
#define X509V3_F_BIGNUM_TO_STRING 167
#define FMT_EXCEPTIONS 1
#define __k8 1
#define SSL_R_TLSV1_ALERT_DECRYPTION_FAILED 1021
#define EVP_R_EXPECTING_A_DH_KEY 128
#define BOOST_PP_INTERCEPT_180 
#define _SC_XOPEN_XPG2 _SC_XOPEN_XPG2
#define _SC_XOPEN_XPG3 _SC_XOPEN_XPG3
#define _SC_XOPEN_XPG4 _SC_XOPEN_XPG4
#define __LDBL_REDIR(name,proto) name proto
#define NID_authority_key_identifier 90
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100010 (1)(1)(1)(0)(0)(0)(1)(0),
#define SN_setext_miAuth "setext-miAuth"
#define EVP_CTRL_GET_RC5_ROUNDS 0x4
#define BOOST_PP_WHILE_13_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_14, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(14, s))
#define BOOST_MPL_BACK_INSERTER_HPP_INCLUDED 
#define LN_streetAddress "streetAddress"
#define __bextri_u32(X,I) ((unsigned int)__builtin_ia32_bextri_u32 ((unsigned int)(X), (unsigned int)(I)))
#define BOOST_MOVE_DETAIL_TO_RAW_POINTER_HPP 
#define EVENT_DEFINED_TQENTRY_ 
#define SSL3_CT_RSA_FIXED_DH 3
#define SIGCONT 18
#define BOOST_PP_INTERCEPT_182 
#define MADV_FREE 8
#define RAND_R_ARGUMENT_OUT_OF_RANGE 105
#define BOOST_PP_VARIADIC_ELEM_0(e0,...) e0
#define BOOST_PP_VARIADIC_ELEM_2(e0,e1,e2,...) e2
#define BOOST_PP_VARIADIC_ELEM_3(e0,e1,e2,e3,...) e3
#define BOOST_PP_VARIADIC_ELEM_4(e0,e1,e2,e3,e4,...) e4
#define INT_LEAST64_MAX (__INT64_C(9223372036854775807))
#define BOOST_PP_VARIADIC_ELEM_6(e0,e1,e2,e3,e4,e5,e6,...) e6
#define BOOST_PP_VARIADIC_ELEM_7(e0,e1,e2,e3,e4,e5,e6,e7,...) e7
#define BOOST_PP_VARIADIC_ELEM_8(e0,e1,e2,e3,e4,e5,e6,e7,e8,...) e8
#define BOOST_PP_VARIADIC_ELEM_9(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,...) e9
#define _PATH_SERVICES "/etc/services"
#define ev_uint32_t uint32_t
#define BOOST_REGEX_DYN_LINK 1
#define SSL_R_BAD_SRP_A_LENGTH 347
#define MOUNT_ATTR_STRICTATIME 0x00000020
#define BOOST_PP_INTERCEPT_184 
#define _mm512_maskz_insertf64x2(U,X,Y,C) ((__m512d) __builtin_ia32_insertf64x2_512_mask ((__v8df)(__m512d) (X), (__v2df)(__m128d) (Y), (int) (C), (__v8df)(__m512d) _mm512_setzero_pd (), (__mmask8) (U)))
#define _mm512_maskz_insertf64x4(U,X,Y,C) ((__m512d) __builtin_ia32_insertf64x4_mask ((__v8df)(__m512d) (X), (__v4df)(__m256d) (Y), (int) (C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))
#define _LFS64_LARGEFILE 1
#define __bswap_constant_16(x) ((__uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_229 229
#define NID_ISO_UA 1150
#define ASN1_F_PKCS5_SCRYPT_SET 232
#define SSL_VERIFY_NONE 0x00
#define NID_brainpoolP224r1 925
#define NID_ISO_US 183
#define RSA_F_RSA_PADDING_ADD_PKCS1_PSS 125
#define _mm512_mask_rsqrt28_pd(W,U,A) _mm512_mask_rsqrt28_round_pd(W, U, A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_PP_FOR_170_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(171, s) BOOST_PP_IIF(c, BOOST_PP_FOR_171, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(171, s), p, o, m)
#define FMT_BUILTIN_CTZLL(n) __builtin_ctzll(n)
#define __bextri_u64(X,I) ((unsigned long long)__builtin_ia32_bextri_u64 ((unsigned long long)(X), (unsigned long long)(I)))
#define _mm512_cvt_roundps_pd(A,B) (__m512d)__builtin_ia32_cvtps2pd512_mask(A, (__v8df)_mm512_undefined_pd(), -1, B)
#define BOOST_PP_REPEAT_2_43(m,d) BOOST_PP_REPEAT_2_42(m, d) m(3, 42, d)
#define FALLOC_FL_KEEP_SIZE 0x01
#define __bswap_constant_32(x) ((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))
#define SSL_SECOP_OTHER_CURVE (2 << 16)
#define BOOST_PP_REPEAT_2_45(m,d) BOOST_PP_REPEAT_2_44(m, d) m(3, 44, d)
#define BOOST_PP_SEQ_SIZE_170(_) BOOST_PP_SEQ_SIZE_171
#define SN_host "host"
#define EVP_F_EVP_CIPHER_ASN1_TO_PARAM 204
#define NID_brainpoolP224t1 926
#define X509_R_WRONG_LOOKUP_TYPE 112
#define BOOST_PP_SEQ_ELEM_102(_) BOOST_PP_SEQ_ELEM_101
#define BOOST_MPL_O1_SIZE_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_160(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_160(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define XKU_TIMESTAMP 0x40
#define TLS1_RFC_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"
#define X509_V_FLAG_EXPLICIT_POLICY 0x100
#define _mm512_mask_fixupimm_round_pd(X,U,Y,Z,C,R) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), (R)))
#define X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS 0x4
#define INT8_C(c) c
#define BOOST_PP_SEQ_ELEM_105(_) BOOST_PP_SEQ_ELEM_104
#define SSL_OP_SAFARI_ECDHE_ECDSA_BUG 0x00000040U
#define FS_XFLAG_HASATTR 0x80000000
#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA "DHE-DSS-CAMELLIA128-SHA"
#define TLS1_CK_DH_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C055
#define _SC_DELAYTIMER_MAX _SC_DELAYTIMER_MAX
#define S_IFDIR __S_IFDIR
#define timeout_del(ev) event_del(ev)
#define NR_FILE 8192
#define OBJ_sigAlgs OBJ_nistAlgorithms,3L
#define SSL3_TXT_DHE_RSA_DES_64_CBC_SHA "DHE-RSA-DES-CBC-SHA"
#define BOOST_PP_LIST_FOLD_LEFT_101(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_102, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(102, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 1183
#define BOOST_PP_INTERCEPT_13 
#define SSL_R_COOKIE_MISMATCH 308
#define __bswap_constant_64(x) ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))
#define BN_F_BN_GENERATE_DSA_NONCE 140
#define __FLT32X_MIN_EXP__ (-1021)
#define LN_safeContentsBag "safeContentsBag"
#define BOOST_PP_WHILE_249_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_250, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(250, s))
#define CLONE_NEWPID 0x20000000
#define NID_name_constraints 666
#define _GLIBCXX_ERASE_IF_H 1
#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) 
#define _SC_SAVED_IDS _SC_SAVED_IDS
#define EVP_PKEY_CTRL_GET_RSA_MGF1_MD (EVP_PKEY_ALG_CTRL + 8)
#define _mm512_mask_ror_epi32(W,U,A,B) ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101001 (1)(1)(0)(1)(0)(0)(1),
#define SCHED_BATCH 3
#define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
#define _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED 1
#define BOOST_PP_FOR_27_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(28, s) BOOST_PP_IIF(c, BOOST_PP_FOR_28, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(28, s), p, o, m)
#define _LIB_CPP_THRIFT_CONFIG_H 1
#define BOOST_PP_INC_11 12
#define EC_R_CANNOT_INVERT 165
#define SN_id_smime_aa_ets_CertificateRefs "id-smime-aa-ets-CertificateRefs"
#define BOOST_PP_INC_12 13
#define BOOST_PP_INTERCEPT_17 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101010 (1)(1)(0)(1)(0)(1)(0),
#define _mm_maskz_fnmsub_round_sd(U,A,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_maskz (A, -(B), -(C), U, R)
#define BOOST_PP_SEQ_SIZE_179(_) BOOST_PP_SEQ_SIZE_180
#define _mm_maskz_fnmsub_round_ss(U,A,B,C,R) (__m128) __builtin_ia32_vfmaddss3_maskz (A, -(B), -(C), U, R)
#define INT_LEAST64_MIN (-__INT64_C(9223372036854775807)-1)
#define OBJ_setext_genCrypt OBJ_set_msgExt,1L
#define _mm512_mask_cvtt_roundps_epu32(W,U,A,B) ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)(W), U, B))
#define SN_id_smime_alg_CMSRC2wrap "id-smime-alg-CMSRC2wrap"
#define APACHE_THRIFT_ACCESSOR_underlyingType 
#define BOOST_PP_INC_16 17
#define NID_sm4_cfb8 1138
#define EV_INT8_MAX INT8_MAX
#define BOOST_PP_INC_17 18
#define EROFS 30
#define LOG_FIRST_N(severity,n) SOME_KIND_OF_LOG_FIRST_N(severity, (n), google::LogMessage::SendToLog)
#define SN_id_pda_gender "id-pda-gender"
#define _CMP_EQ_OQ 0x00
#define _CMP_EQ_OS 0x10
#define X509_V_FLAG_IGNORE_CRITICAL 0x10
#define _mm512_mask_ror_epi64(W,U,A,B) ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define LN_x509Certificate "x509Certificate"
#define _mm512_maskz_ror_epi32(U,A,B) ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_setzero_si512 (), (__mmask16)(U)))
#define SSL3_RT_MAX_EXTRA (16384)
#define SN_md4WithRSAEncryption "RSA-MD4"
#define NID_auth_any 1064
#define OBJ_ipsecEndSystem OBJ_id_kp,5L
#define CONF_F_NCONF_LOAD_FP 114
#define OBJ_id_mod_attribute_cert OBJ_id_pkix_mod,12L
#define IDP_INVALID 0x2
#define SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT 272
#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE
#define __WCHAR_T__ 
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_72(s,p,o,m) 0
#define ELIBACC 79
#define OBJ_dsa OBJ_X9cm,1L
#define EVP_CTRL_GCM_SET_IV_INV 0x18
#define RSA_R_INVALID_PSS_SALTLEN 146
#define NID_setct_CredRevReqTBEX 590
#define TLS1_TXT_DH_DSS_WITH_AES_128_SHA256 "DH-DSS-AES128-SHA256"
#define sk_set_cmp_func OPENSSL_sk_set_cmp_func
#define OBJ_wap_wsg_idm_ecid_wtls10 OBJ_wap_wsg_idm_ecid,10L
#define SN_aes_256_ocb "AES-256-OCB"
#define THRIFT_HAVE_CLOCK_GETTIME 1
#define SN_dsa_with_SHA3_256 "id-dsa-with-sha3-256"
#define L_INCR SEEK_CUR
#define APACHE_THRIFT_ACCESSOR_cv_string 
#define _mm256_shuffle_f32x4(X,Y,C) ((__m256) __builtin_ia32_shuf_f32x4_256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(C), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)-1))
#define evtimer_pending(ev,tv) event_pending((ev), EV_TIMEOUT, (tv))
#define ASN1_R_TIME_NOT_ASCII_FORMAT 193
#define LN_ext_key_usage "X509v3 Extended Key Usage"
#define OBJ_facsimileTelephoneNumber OBJ_X509,23L
#define SSL_CTX_get_tlsext_ticket_keys(ctx,keys,keylen) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_TLSEXT_TICKET_KEYS,keylen,keys)
#define LN_pbe_WithSHA1And3_Key_TripleDES_CBC "pbeWithSHA1And3-KeyTripleDES-CBC"
#define _LIBINTL_H 1
#define SCM_TIMESTAMPING_OPT_STATS 54
#define _SGXINTRIN_H_INCLUDED 
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __cpp_lib_constexpr_memory 201811L
#define SN_set_brand_Novus "set-brand-Novus"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000111 (0)(0)(0)(1)(1)(1),
#define OBJ_hmac_md5 OBJ_identified_organization,6L,1L,5L,5L,8L,1L,1L
#define BOOST_PP_FOR_102_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(103, s) BOOST_PP_IIF(c, BOOST_PP_FOR_103, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(103, s), p, o, m)
#define X509_CHECK_FLAG_NO_WILDCARDS 0x2
#define _GLIBCXX_BITS_STD_ABS_H 
#define ASN1_F_ASN1_ENC_SAVE 115
#define BOOST_PP_STRINGIZE(text) BOOST_PP_STRINGIZE_I(text)
#define OBJ_sha256 OBJ_nist_hashalgs,1L
#define __ss_aligntype unsigned long int
#define TLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384 0x0300C028
#define va_end(v) __builtin_va_end(v)
#define X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT 111
#define SSL_R_NO_PEM_EXTENSIONS 389
#define RAND_R_ALREADY_INSTANTIATED 103
#define BOOST_GCC BOOST_GCC_VERSION
#define OBJ_setct_CapTokenTBEX OBJ_set_ctype,57L
#define MADV_UNMERGEABLE 13
#define _STRINGS_H 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_20 20
#define BOOST_PP_WHILE_36_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_37, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(37, s))
#define __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
#define BOOST_TT_IS_INTEGRAL_HPP_INCLUDED 
#define OBJ_id_tc26_hmac_gost_3411_2012_256 OBJ_id_tc26_mac,1L
#define _CMP_EQ_UQ 0x08
#define BOOST_MOVE_CORE_HPP 
#define __INT_LEAST16_MAX__ 0x7fff
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110100 (0)(1)(1)(1)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110101 (0)(1)(1)(1)(0)(1)(0)(1),
#define TLS1_TXT_DHE_PSK_WITH_3DES_EDE_CBC_SHA "DHE-PSK-3DES-EDE-CBC-SHA"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_22 22
#define _SC_THREAD_DESTRUCTOR_ITERATIONS _SC_THREAD_DESTRUCTOR_ITERATIONS
#define UCHAR_WIDTH 8
#define UINT64_WIDTH 64
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_1(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_3(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_4(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_5(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_6(s,p,o,m) 0
#define __INT64_MAX__ 0x7fffffffffffffffL
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_8(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_9(s,p,o,m) 0
#define _mm_cmp_epu8_mask(X,Y,P) ((__mmask16) __builtin_ia32_ucmpb128_mask ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(P), (__mmask16)(-1)))
#define SSL3_CK_DH_RSA_DES_192_CBC3_SHA 0x03000010
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110111 (0)(1)(1)(1)(0)(1)(1)(1),
#define X509V3_F_DO_EXT_I2D 135
#define EV_INT8_MIN INT8_MIN
#define BOOST_PP_REPEAT_3RD BOOST_PP_REPEAT_3
#define EC_F_EC_GFP_SIMPLE_POINT2OCT 104
#define EVP_MAX_BLOCK_LENGTH 32
#define _GLIBCXX_RELEASE 10
#define si_stime _sifields._sigchld.si_stime
#define _GLIBCXX98_USE_C99_WCHAR 1
#define SN_id_GostR3410_2001_ParamSet_cc "id-GostR3410-2001-ParamSet-cc"
#define SSL_set1_client_sigalgs_list(s,str) SSL_ctrl(s,SSL_CTRL_SET_CLIENT_SIGALGS_LIST,0,(char *)(str))
#define __INT_LEAST64_TYPE__ long int
#define BIO_CB_GETS 0x05
#define X509_STORE_set_verify_func(ctx,func) X509_STORE_set_verify((ctx),(func))
#define RSA_F_RSA_PADDING_CHECK_NONE 111
#define _mm512_mask_cvt_roundpd_epi32(W,U,A,B) ((__m256i)__builtin_ia32_cvtpd2dq512_mask(A, (__v8si)(W), U, B))
#define _GLIBCXX_HAVE_FCNTL_H 1
#define BOOST_PP_SEQ_SIZE_93(_) BOOST_PP_SEQ_SIZE_94
#define _GLIBCXX_USE_FCHMODAT 1
#define PKCS7_F_PKCS7_ADD_SIGNER 103
#define BOOST_PP_WHILE_175_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_176, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(176, s))
#define OBJ_setct_AuthRevResData OBJ_set_ctype,24L
#define APACHE_THRIFT_ACCESSOR_structured_annotations 
#define OBJ_id_tc26_cipher_gostr3412_2015_magma OBJ_id_tc26_cipher,1L
#define BN_F_BN_EXPAND_INTERNAL 120
#define OBJ_pagerTelephoneNumber OBJ_pilotAttributeType,42L
#define DECLARE_ASN1_ENCODE_FUNCTIONS_const(type,name) type *d2i_ ##name(type **a, const unsigned char **in, long len); int i2d_ ##name(const type *a, unsigned char **out); DECLARE_ASN1_ITEM(name)
#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define SSL_R_TLSV1_ALERT_DECODE_ERROR 1050
#define NID_secp384r1 715
#define SO_TIMESTAMPNS SO_TIMESTAMPNS_OLD
#define _mm512_mask_shuffle_i32x4(W,U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define CSIGNAL 0x000000ff
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 0x0300C02B
#define AI_IDN 0x0040
#define NID_id_cmc_statusInfo 327
#define OBJ_hold_instruction_none OBJ_holdInstruction,1L
#define SSL_set1_sigalgs_list(s,str) SSL_ctrl(s,SSL_CTRL_SET_SIGALGS_LIST,0,(char *)(str))
#define BOOST_PP_SEQ_ELEM_110(_) BOOST_PP_SEQ_ELEM_109
#define BOOST_PP_FOR_62_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(63, s) BOOST_PP_IIF(c, BOOST_PP_FOR_63, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(63, s), p, o, m)
#define SSL_R_LENGTH_TOO_SHORT 160
#define BOOST_MPL_SEQUENCE_TAG_HPP_INCLUDED 
#define SSL_TXT_AES_CCM_8 "AESCCM8"
#define OBJ_cryptocom OBJ_member_body,643L,2L,9L
#define SSL_F_TLS_CONSTRUCT_CHANGE_CIPHER_SPEC 427
#define SCNdMAX __PRI64_PREFIX "d"
#define __cpp_lib_hypot 201603
#define SSL_R_LENGTH_TOO_LONG 404
#define BOOST_PP_SEQ_ELEM_113(_) BOOST_PP_SEQ_ELEM_112
#define _GLIBCXX_ATOMIC 1
#define SO_BINDTOIFINDEX 62
#define LN_rc2_cfb64 "rc2-cfb"
#define FPE_FLTINV FPE_FLTINV
#define BOOST_TYPE_TRAITS_DECLVAL_HPP_INCLUDED 
#define HEADER_PKCS7ERR_H 
#define BLKRASET _IO(0x12,98)
#define IPV6_ADDRFORM 1
#define EVP_MD_CTX_FLAG_ONESHOT 0x0001
#define BOOST_PP_SEQ_FOLD_LEFT_174(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_174(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BIO_SOCK_KEEPALIVE 0x04
#define F_SETLKW 7
#define M_LOG10Ef128 __f128 (0.434294481903251827651128918916605082)
#define X509V3_R_INVALID_NUMBERS 141
#define LN_sm3 "sm3"
#define get_rfc3526_prime_2048 BN_get_rfc3526_prime_2048
#define M_SQRT1_2f128 __f128 (0.707106781186547524400844362104849039)
#define NID_RSA_SHA3_384 1118
#define SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK 215
#define BOOST_PP_VARIADIC_SIZE(...) BOOST_PP_VARIADIC_SIZE_I(__VA_ARGS__, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1,)
#define EC_F_EC_POINT_IS_ON_CURVE 119
#define BOOST_PP_SEQ_FOLD_LEFT_177(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_177(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __UID_T_TYPE __U32_TYPE
#define EREMOTE 66
#define SSL_CERT_FLAG_BROKEN_PROTOCOL 0x10000000
#define IF_DEBUG_MODE(x) x
#define __FLT32_MIN_10_EXP__ (-37)
#define BOOST_PP_SEQ_FOLD_LEFT_178(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_178(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_179(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_179(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EC_R_BAD_SIGNATURE 156
#define SN_setct_AcqCardCodeMsg "setct-AcqCardCodeMsg"
#define _POSIX2_C_DEV __POSIX2_THIS_VERSION
#define __FLT32X_DIG__ 15
#define BOOST_PP_LIST_FOLD_LEFT_117(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_118, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(118, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __WORDSIZE 64
#define BOOST_PP_INC_20 21
#define BOOST_MOVE_HAS_TRIVIAL_COPY(T) ((__has_trivial_copy(T) BOOST_MOVE_INTEL_TT_OPTS))
#define _mm_add_round_sd(A,B,C) (__m128d)__builtin_ia32_addsd_round(A, B, C)
#define FS_FL_USER_VISIBLE 0x0003DFFF
#define BOOST_PP_FOR_133_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(134, s) BOOST_PP_IIF(c, BOOST_PP_FOR_134, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(134, s), p, o, m)
#define _mm_add_round_ss(A,B,C) (__m128)__builtin_ia32_addss_round(A, B, C)
#define SN_id_cmc_recipientNonce "id-cmc-recipientNonce"
#define _GLIBCXX_HAVE_TRUNCATE 1
#define NID_countryCode3c 1090
#define EVENT_BASE_COUNT_VIRTUAL 2U
#define SSL_F_SSL_WRITE 208
#define DECLARE_ASN1_ALLOC_FUNCTIONS(type) DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, type)
#define NID_setct_CredRevReqTBSX 554
#define NID_setct_PI 523
#define NID_countryCode3n 1091
#define PRIXLEAST8 "X"
#define ENAMETOOLONG 36
#define FMT_SAFEBUFFERS 
#define FMT_CATCH(x) catch (x)
#define OBJ_ac_proxying OBJ_id_pe,10L
#define _WMMINTRIN_H_INCLUDED 
#define BOOST_RETHROW throw;
#define __DBL_HAS_QUIET_NAN__ 1
#define PKCS7_NOCHAIN 0x8
#define _mm512_mask_fmsub_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmsubps512_mask(A, B, C, U, R)
#define BOOST_PP_DEC_21 20
#define BOOST_MPL_VECTOR_AUX_O1_SIZE_HPP_INCLUDED 
#define BOOST_PP_DEC_22 21
#define BOOST_MOVE_DETAIL_TYPE_TRAITS_HPP 
#define UINT_WIDTH 32
#define LN_sshClient "SSH Client"
#define SSL_add1_chain_cert(s,x509) SSL_ctrl(s,SSL_CTRL_CHAIN_CERT,1,(char *)(x509))
#define __code_model_small__ 1
#define FMT_END_NAMESPACE } }
#define _mm512_mask_roundscale_round_ps(A,B,C,D,R) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(C), (int)(D), (__v16sf)(__m512)(A), (__mmask16)(B), R))
#define NID_subtreeMinimumQuality 497
#define NID_id_smime_cti_ets_proofOfDelivery 253
#define __LIBCOMO_VERSION___WORKAROUND_GUARD 1
#define _EXT_RANDOM_TCC 1
#define SN_setAttr_Token_EMV "setAttr-Token-EMV"
#define _BACKWARD_AUTO_PTR_H 1
#define BOOST_PP_FOR_169_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(170, s) BOOST_PP_IIF(c, BOOST_PP_FOR_170, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(170, s), p, o, m)
#define BOOST_MOVE_HAS_NOTHROW_CONSTRUCTOR(T) (__has_nothrow_constructor(T) BOOST_MOVE_INTEL_TT_OPTS)
#define BOOST_PP_DEC_25 24
#define BOOST_PP_NODE_102(p) BOOST_PP_IIF(p(102), BOOST_PP_NODE_101, BOOST_PP_NODE_103)
#define RSA_F_ENCODE_PKCS1 146
#define X509V3_F_DO_DIRNAME 144
#define RWF_DSYNC ((__kernel_rwf_t)0x00000002)
#define AF_LOCAL PF_LOCAL
#define BOOST_PP_REPEAT_3_0(m,d) 
#define BOOST_PP_REPEAT_3_2(m,d) BOOST_PP_REPEAT_3_1(m, d) m(4, 1, d)
#define BOOST_PP_REPEAT_3_4(m,d) BOOST_PP_REPEAT_3_3(m, d) m(4, 3, d)
#define BOOST_PP_REPEAT_3_7(m,d) BOOST_PP_REPEAT_3_6(m, d) m(4, 6, d)
#define LN_aes_128_ofb128 "aes-128-ofb"
#define BOOST_PP_REPEAT_3_9(m,d) BOOST_PP_REPEAT_3_8(m, d) m(4, 8, d)
#define BIO_C_GET_READ_REQUEST 141
#define SSL_R_DANE_TLSA_BAD_CERTIFICATE_USAGE 184
#define BOOST_PP_WHILE_107_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_108, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(108, s))
#define BOOST_PP_LIST_FOLD_RIGHT_70(o,s,l) BOOST_PP_LIST_FOLD_LEFT_70(o, s, BOOST_PP_LIST_REVERSE_D(70, l))
#define MOUNT_ATTR_RELATIME 0x00000000
#define BOOST_INTRUSIVE_DETAIL_TREE_VALUE_COMPARE_HPP 
#define BOOST_PP_DEC_28 27
#define _mm256_blend_ps(X,Y,M) ((__m256) __builtin_ia32_blendps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(M)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_13 13
#define CONF_R_MISSING_CLOSE_SQUARE_BRACKET 100
#define EVP_PKEY_CTX_set0_dh_kdf_oid(ctx,oid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_OID, 0, (void *)(oid))
#define FOLLY_UNLIKELY(...) FOLLY_DETAIL_BUILTIN_EXPECT((__VA_ARGS__), 0)
#define BOOST_PP_DEC_29 28
#define OBJ_setext_miAuth OBJ_set_msgExt,3L
#define EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH 138
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_250(s,p,o,m) 0
#define BOOST_MPL_HAS_MEMBER_INTROSPECT(args,substitute_macro,member_macro) template< typename U > struct BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args) { BOOST_MPL_HAS_MEMBER_SUBSTITUTE(args, substitute_macro) BOOST_MPL_HAS_MEMBER_REJECT(args, member_macro) BOOST_MPL_HAS_MEMBER_ACCEPT(args, member_macro) BOOST_STATIC_CONSTANT( bool, value = BOOST_MPL_HAS_MEMBER_TEST(args) ); typedef boost::mpl::bool_< value > type; };
#define RAND_R_CANNOT_OPEN_FILE 121
#define SSL_F_TLS1_SET_SHARED_SIGALGS 631
#define __stub_chflags 
#define SCNxPTR __PRIPTR_PREFIX "x"
#define BOOST_PP_WHILE_202(p,o,s) BOOST_PP_WHILE_202_C(BOOST_PP_BOOL(p(203, s)), p, o, s)
#define EC_F_EC_GROUP_SET_CURVE_GFP 109
#define BOOST_VARIANT_VARIANT_HPP 
#define BOOST_PP_WHILE_203(p,o,s) BOOST_PP_WHILE_203_C(BOOST_PP_BOOL(p(204, s)), p, o, s)
#define __cpp_decltype 200707L
#define SN_ad_OCSP "OCSP"
#define BOOST_TYPE_TRAITS_TYPE_IDENTITY_HPP_INCLUDED 
#define TLS1_TXT_DHE_RSA_WITH_AES_256_SHA "DHE-RSA-AES256-SHA"
#define MADV_COLD 20
#define LN_id_tc26_hmac_gost_3411_2012_512 "HMAC GOST 34.11-2012 512 bit"
#define BOOST_PP_WHILE_205(p,o,s) BOOST_PP_WHILE_205_C(BOOST_PP_BOOL(p(206, s)), p, o, s)
#define _STACK OPENSSL_STACK
#define __INT_FAST64_MAX__ 0x7fffffffffffffffL
#define BOOST_PP_WHILE_206(p,o,s) BOOST_PP_WHILE_206_C(BOOST_PP_BOOL(p(207, s)), p, o, s)
#define FS_IOC_FSSETXATTR _IOW('X', 32, struct fsxattr)
#define _GLIBCXX98_USE_C99_COMPLEX 1
#define BOOST_PP_WHILE_207(p,o,s) BOOST_PP_WHILE_207_C(BOOST_PP_BOOL(p(208, s)), p, o, s)
#define SSL_CTRL_GET_READ_AHEAD 40
#define RLIMIT_RTTIME __RLIMIT_RTTIME
#define NID_id_it_revPassphrase 309
#define BOOST_PP_WHILE_208(p,o,s) BOOST_PP_WHILE_208_C(BOOST_PP_BOOL(p(209, s)), p, o, s)
#define _GLIBCXX_HAVE_EIDRM 1
#define IMPLEMENT_PEM_write_bio(name,type,str,asn1) int PEM_write_bio_ ##name(BIO *bp, type *x) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ##asn1,str,bp,x,NULL,NULL,0,NULL,NULL); }
#define _POSIX_AIO_MAX 1
#define _mm512_mask_cmp_epu64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)(M)))
#define _THRIFT_TRANSPORT_TVIRTUALTRANSPORT_H_ 1
#define __cpp_lib_enable_shared_from_this 201603
#define IORING_SETUP_CLAMP (1U << 4)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_37 37
#define LN_des_cfb64 "des-cfb"
#define BOOST_PP_INTERCEPT_193 
#define SN_setct_CertInqReqTBS "setct-CertInqReqTBS"
#define _SC_2_PBS _SC_2_PBS
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_6(op,st,ss,sz) 0
#define EVP_MD_CTX_FLAG_FINALISE 0x0200
#define BOOST_PP_BOOL(x) BOOST_PP_BOOL_I(x)
#define TCP_ZEROCOPY_RECEIVE 35
#define OBJ_id_Gost28147_89_None_KeyMeshing OBJ_cryptopro,14L,0L
#define RSA_FLAG_FIPS_METHOD 0x0400
#define BOOST_PP_INTERCEPT_195 
#define SN_dsa_with_SHA3_384 "id-dsa-with-sha3-384"
#define _mm256_maskz_shufflelo_epi16(U,A,B) ((__m256i) __builtin_ia32_pshuflw256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)(__m256i)_mm256_setzero_si256 (), (__mmask16)(U)))
#define APACHE_THRIFT_ACCESSOR_loadMetric 
#define __LC_COLLATE 3
#define X509_STORE_set_lookup_crls_cb(ctx,func) X509_STORE_set_lookup_crls((ctx), (func))
#define BIO_set_retry_special(b) BIO_set_flags(b, (BIO_FLAGS_IO_SPECIAL|BIO_FLAGS_SHOULD_RETRY))
#define EVP_F_ARIA_GCM_CTRL 197
#define _mm512_mask3_fnmsub_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfnmsubpd512_mask3(A, B, C, U, R)
#define OBJ_setct_BatchAdminReqData OBJ_set_ctype,40L
#define _mm512_mask3_fnmsub_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfnmsubps512_mask3(A, B, C, U, R)
#define ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD 154
#define OBJ_aaControls OBJ_id_pe,6L
#define OBJ_id_ct_xml OBJ_id_smime_ct,28L
#define EVP_CTRL_GET_RC2_KEY_BITS 0x2
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_9(op,st,ss,sz) 0
#define NID_setct_BatchAdminResData 559
#define ADJ_TICK 0x4000
#define RWF_APPEND ((__kernel_rwf_t)0x00000010)
#define SSL_R_DANE_ALREADY_ENABLED 172
#define BOOST_PP_INTERCEPT_198 
#define BOOST_PREPROCESSOR_TUPLE_DETAIL_IS_SINGLE_RETURN_HPP 
#define IN6_IS_ADDR_MC_LINKLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x2))
#define SSL_R_MISSING_TMP_DH_KEY 171
#define M_SQRT2 1.41421356237309504880
#define BOOST_PP_LIST_FOLD_RIGHT_78(o,s,l) BOOST_PP_LIST_FOLD_LEFT_78(o, s, BOOST_PP_LIST_REVERSE_D(78, l))
#define TLS1_RFC_DHE_DSS_WITH_AES_128_GCM_SHA256 "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"
#define NID_dhSinglePass_stdDH_sha1kdf_scheme 936
#define SIGCLD SIGCHLD
#define BOOST_PP_REPEAT_2_64(m,d) BOOST_PP_REPEAT_2_63(m, d) m(3, 63, d)
#define SSL_CTRL_SESS_HIT 27
#define SSLeay_version OpenSSL_version
#define BOOST_PP_SEQ_ELEM_120(_) BOOST_PP_SEQ_ELEM_119
#define PEM_F_DO_B2I 132
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011001 (0)(1)(1)(0)(0)(1),
#define BOOST_PP_DETAIL_IBP_SPLIT(i,...) BOOST_PP_DETAIL_IBP_PRIMITIVE_CAT(BOOST_PP_DETAIL_IBP_SPLIT_,i)(__VA_ARGS__)
#define __gid_t_defined 
#define LC_MESSAGES __LC_MESSAGES
#define _mm512_mask_getmant_pd(W,U,X,B,C) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_SEQ_ELEM_123(_) BOOST_PP_SEQ_ELEM_122
#define _mm512_mask_getmant_ps(W,U,X,B,C) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)(W), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define NID_setCext_hashedRoot 608
#define NID_setct_CredRevReqTBE 589
#define BOOST_PP_SEQ_FOLD_LEFT_182(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_182(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_HAVE_ENOTRECOVERABLE 1
#define APACHE_THRIFT_ACCESSOR_name_utf8 
#define BOOST_PP_SEQ_FOLD_LEFT_243(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_243(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _SC_REGEX_VERSION _SC_REGEX_VERSION
#define BOOST_PP_SEQ_ELEM_126(_) BOOST_PP_SEQ_ELEM_125
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_131 131
#define _GLIBCXX_USE_GETTIMEOFDAY 1
#define IPV6_DONTFRAG 62
#define EVP_CCM_TLS_EXPLICIT_IV_LEN 8
#define SN_id_tc26_cipher "id-tc26-cipher"
#define BOOST_PP_SEQ_FOLD_LEFT_185(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_185(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define X509_F_CHECK_NAME_CONSTRAINTS 149
#define __WIFCONTINUED(status) ((status) == __W_CONTINUED)
#define OBJ_id_pkix_OCSP_acceptableResponses OBJ_id_pkix_OCSP,4L
#define _GLIBCXX_HAVE_FENV_H 1
#define SO_EE_CODE_TXTIME_MISSED 2
#define IPAddressOrRange_addressRange 1
#define NID_Security 386
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_132 132
#define LN_ipsec_IKE "ipsec Internet Key Exchange"
#define __UINT_LEAST32_TYPE__ unsigned int
#define BOOST_PP_SEQ_FOLD_LEFT_189(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_189(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define GEN_DIRNAME 4
#define BIO_tell(b) (int)BIO_ctrl(b,BIO_C_FILE_TELL,0,NULL)
#define LN_sOARecord "sOARecord"
#define IPPROTO_GRE IPPROTO_GRE
#define BOOST_PP_SEQ_SIZE_189(_) BOOST_PP_SEQ_SIZE_190
#define LN_pkInitKDC "Signing KDC Response"
#define BOOST_LIBSTDCXX11 
#define OBJ_dhpublicnumber OBJ_ISO_US,10046L,2L,1L
#define B_ASN1_VISIBLESTRING 0x0040
#define __LDBL_MIN_EXP__ (-16381)
#define X509_TRUST_OK_ANY_EKU (1U << 4)
#define SN_ecdsa_with_SHA512 "ecdsa-with-SHA512"
#define BOOST_PP_INC_30 31
#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define BOOST_PP_LIST_FOLD_LEFT_129(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_130, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(130, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL3_CK_RSA_RC2_40_MD5 0x03000006
#define X509V3_EXT_PARSE_UNKNOWN (2L << 16)
#define ASN1_R_ILLEGAL_PADDING 221
#define BOOST_PP_INTERCEPT_29 
#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS 0x0001
#define _POSIX_MAX_CANON 255
#define BOOST_PP_REPEAT_3_3(m,d) BOOST_PP_REPEAT_3_2(m, d) m(4, 2, d)
#define BOOST_MPL_AUX_HAS_BEGIN_HPP_INCLUDED 
#define FOLLY_FORMAT_H_ 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100001 (0)(1)(0)(0)(0)(0)(1),
#define SSL_get1_curves SSL_get1_groups
#define _SC_XBS5_ILP32_OFF32 _SC_XBS5_ILP32_OFF32
#define EVENT__HAVE_INTTYPES_H 1
#define _AVX512VLBWINTRIN_H_INCLUDED 
#define OBJ_id_tc26_digest_constants OBJ_id_tc26_constants,2L
#define X509_PURPOSE_DYNAMIC_NAME 0x2
#define __cpp_template_auto 201606L
#define BIO_C_SSL_MODE 119
#define INTPTR_WIDTH __WORDSIZE
#define IN6_IS_ADDR_MC_GLOBAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0xe))
#define __INT_LEAST8_MAX__ 0x7f
#define STATX_UID 0x00000008U
#define MOVE_MOUNT_T_AUTOMOUNTS 0x00000020
#define DCHECK_NOTNULL(val) CHECK_NOTNULL(val)
#define SN_ms_sgc "msSGC"
#define OBJ_X9_62_tpBasis OBJ_X9_62_id_characteristic_two_basis,2L
#define __FLT32X_MAX_10_EXP__ 308
#define BOOST_VARIANT_DETAIL_APPLY_VISITOR_DELAYED_HPP 
#define BIO_dgram_recv_timedout(b) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP, 0, NULL)
#define TLS1_TXT_RSA_PSK_WITH_CHACHA20_POLY1305 "RSA-PSK-CHACHA20-POLY1305"
#define ____mbstate_t_defined 1
#define RSA_FLAG_EXT_PKEY 0x0020
#define BOOST_PP_LIST_FOLD_RIGHT_4(o,s,l) BOOST_PP_LIST_FOLD_LEFT_4(o, s, BOOST_PP_LIST_REVERSE_D(4, l))
#define SO_ATTACH_REUSEPORT_EBPF 52
#define SN_X9_62_prime192v2 "prime192v2"
#define MAP_GROWSDOWN 0x00100
#define SSL_disable_ct(s) ((void) SSL_set_validation_callback((s), NULL, NULL))
#define O_RDONLY 00
#define BOOST_PP_WHILE_140_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_141, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(141, s))
#define DLOG_ASSERT(condition) LOG_ASSERT(condition)
#define _GLIBCXX_RANGE_ACCESS_H 1
#define BOOST_PP_LIST_FOLD_RIGHT_8(o,s,l) BOOST_PP_LIST_FOLD_LEFT_8(o, s, BOOST_PP_LIST_REVERSE_D(8, l))
#define SN_rsa "RSA"
#define DOUBLE_CONVERSION_UTILS_H_ 
#define EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA_PSS, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_MGF1_MD, 0, (void *)(md))
#define _BITS_SIGNUM_GENERIC_H 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111011 (0)(0)(1)(1)(1)(0)(1)(1),
#define _mm512_mask_srli_epi16(W,U,A,B) ((__m512i) __builtin_ia32_psrlwi512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i)(W), (__mmask32)(U)))
#define _SC_ATEXIT_MAX _SC_ATEXIT_MAX
#define LN_aes_256_ccm "aes-256-ccm"
#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
#define OBJ_id_GostR3410_94DH OBJ_cryptopro,99L
#define BOOST_PP_ENUM_M_1(z,n,md) BOOST_PP_ENUM_M_1_IM(z, n, BOOST_PP_TUPLE_REM_2 md)
#define BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE 50
#define _mm512_i32scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv8df ((void *) (ADDR), (__mmask8)0xFF, (__v8si)(__m256i) (INDEX), (__v8df)(__m512d) (V1), (int) (SCALE))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_32(s,p,o,m) 0
#define TCP_KEEPINTVL 5
#define SSL_F_SSL_SET_SESSION_ID_CONTEXT 218
#define BOOST_PP_ENUM_M_3(z,n,md) BOOST_PP_ENUM_M_3_IM(z, n, BOOST_PP_TUPLE_REM_2 md)
#define __enclu_bc(leaf,b,c,retval) __asm__ __volatile__("enclu\n\t" : "=a" (retval) : "a" (leaf), "b" (b), "c" (c) : "cc")
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_234 234
#define SSLEAY_VERSION OPENSSL_VERSION
#define _BITS_STDINT_INTN_H 1
#define BOOST_DETAIL_IS_NULLARY_ARGS(param) BOOST_DETAIL_LEFT_OF_COMMA ( BOOST_PP_CAT( BOOST_DETAIL_IS_NULLARY_ARGS_R_ , BOOST_DETAIL_IS_NULLARY_ARGS_C param ) )
#define EVP_PKEY_MO_ENCRYPT 0x0004
#define __FLT64_MAX_EXP__ 1024
#define __S_IFSOCK 0140000
#define _mm512_mask_srli_epi32(W,U,X,C) ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define BOOST_PP_WHILE_211(p,o,s) BOOST_PP_WHILE_211_C(BOOST_PP_BOOL(p(212, s)), p, o, s)
#define FMT_LOCALE 1
#define NID_audio 501
#define LN_dsa_with_SHA512 "dsa_with_SHA512"
#define __cpp_return_type_deduction 201304L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001101 (1)(0)(0)(1)(1)(0)(1),
#define BOOST_PP_WHILE_213(p,o,s) BOOST_PP_WHILE_213_C(BOOST_PP_BOOL(p(214, s)), p, o, s)
#define BOOST_PP_FOR_7_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(8, s) BOOST_PP_IIF(c, BOOST_PP_FOR_8, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(8, s), p, o, m)
#define EXFLAG_SET 0x100
#define DLOG_IF(severity,condition) LOG_IF(severity, condition)
#define EC_R_CURVE_DOES_NOT_SUPPORT_ECDH 160
#define _mm_maskz_shldi_epi64(A,B,C,D) ((__m128i) __builtin_ia32_vpshld_v2di_mask ((__v2di)(__m128i)(B), (__v2di)(__m128i)(C),(int)(D), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)(A)))
#define BOOST_TT_FUNCTION_TRAITS_HPP_INCLUDED 
#define OBJ_sha512_256 OBJ_nist_hashalgs,6L
#define EVP_F_EVP_ENCRYPTUPDATE 167
#define NID_organizationName 17
#define __DECL_SIMD_sincosf64x 
#define lh_node_stats OPENSSL_LH_node_stats
#define BOOST_PP_WHILE_217(p,o,s) BOOST_PP_WHILE_217_C(BOOST_PP_BOOL(p(218, s)), p, o, s)
#define NID_sm4_cbc 1134
#define THRIFT_TRANSPORT_THTTPPARSER_H_ 1
#define OBJ_X9_62_primeCurve OBJ_X9_62_ellipticCurve,1L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_42 42
#define __ILP32_OFF32_CFLAGS "-m32"
#define OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme OBJ_x9_63_scheme,3L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_238 238
#define _SC_IOV_MAX _SC_IOV_MAX
#define HUGE_VAL_F64X (__builtin_huge_valf64x ())
#define _SC_PASS_MAX _SC_PASS_MAX
#define BLKRRPART _IO(0x12,95)
#define NID_hmacWithSHA512_224 1193
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_45 45
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011 (1)(0)(1)(1),
#define _mm512_mask_srli_epi64(W,U,X,C) ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define _mm_maskz_fixupimm_ps(U,X,Y,Z,C) ((__m128)__builtin_ia32_fixupimmps128_maskz ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_46 46
#define BOOST_DETAIL_COMPLETE_TRIPLE_SEQUENCE(d,incomplete_nibble_sequence) BOOST_PP_CAT ( BOOST_DETAIL_CREATE_TRIPLE_COMPLETION_SEQUENCE_ , BOOST_PP_MOD_D( d , BOOST_PP_SEQ_SIZE( incomplete_nibble_sequence ) , BOOST_DETAIL_BITS_PER_OCTIT ) ) incomplete_nibble_sequence
#define CRYPTO_EX_INDEX_SSL 0
#define OBJ_sect233k1 OBJ_secg_ellipticCurve,26L
#define OBJ_ipsecUser OBJ_id_kp,7L
#define BOOST_PP_CONFIG_BCC() 0x0010
#define X509_R_CERT_ALREADY_IN_HASH_TABLE 101
#define _SC_LEVEL1_DCACHE_LINESIZE _SC_LEVEL1_DCACHE_LINESIZE
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_248(op,st,ss,sz) 0
#define _mm256_maskz_shuffle_pd(U,A,B,C) ((__m256d)__builtin_ia32_shufpd256_mask ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)(__m256d) _mm256_setzero_pd (), (__mmask8)(U)))
#define BOOST_ATOMIC_DYN_LINK 1
#define _mm256_maskz_shuffle_ps(U,A,B,C) ((__m256) __builtin_ia32_shufps256_mask ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)(U)))
#define BOOST_MPL_CFG_HAS_TYPEOF 
#define SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH 80
#define BOOST_MPL_HAS_XXX_NEEDS_TEMPLATE_SFINAE 0
#define LN_pkcs8ShroudedKeyBag "pkcs8ShroudedKeyBag"
#define BOOST_PP_FOR_136_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(137, s) BOOST_PP_IIF(c, BOOST_PP_FOR_137, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(137, s), p, o, m)
#define SEGV_ADIPERR SEGV_ADIPERR
#define SN_setct_CardCInitResTBS "setct-CardCInitResTBS"
#define __cpp_lib_null_iterators 201304L
#define _GLIBCXX_USE_ST_MTIM 1
#define EVP_PKEY_CTRL_PEER_KEY 2
#define NID_hmacWithSHA512_256 1194
#define _mm_maskz_fixupimm_sd(U,X,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmsd_maskz ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define ENOTCONN 107
#define BOOST_PP_LIST_FOLD_RIGHT_107(o,s,l) BOOST_PP_LIST_FOLD_LEFT_107(o, s, BOOST_PP_LIST_REVERSE_D(107, l))
#define _mm_maskz_fixupimm_ss(U,X,Y,Z,C) ((__m128)__builtin_ia32_fixupimmss_maskz ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define IN_CLASSB_NET 0xffff0000
#define MOD_ESTERROR ADJ_ESTERROR
#define M_2_SQRTPIl 1.128379167095512573896158903121545172L
#define TLS1_RFC_ECDHE_RSA_WITH_AES_256_GCM_SHA384 "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
#define PKCS7_F_PKCS7_FINAL 134
#define SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING 345
#define LN_aes_192_ofb128 "aes-192-ofb"
#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE 179
#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x030000BE
#define OBJ_F_OBJ_CREATE 100
#define BOOST_PP_FOR_245_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(246, s) BOOST_PP_IIF(c, BOOST_PP_FOR_246, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(246, s), p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111000 (1)(0)(1)(1)(1)(0)(0)(0),
#define _SC_CHILD_MAX _SC_CHILD_MAX
#define __cpp_lib_make_unique 201304
#define EVP_PKEY_CTRL_DH_KDF_MD (EVP_PKEY_ALG_CTRL + 7)
#define NID_aria_256_cbc 1076
#define BOOST_PP_SEQ_ELEM_131(_) BOOST_PP_SEQ_ELEM_130
#define __WORDSIZE_TIME64_COMPAT32 1
#define EPFNOSUPPORT 96
#define EVENT__SIZEOF_PTHREAD_T 8
#define NID_ipsecTunnel 295
#define INT_WIDTH 32
#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
#define BOOST_PP_SEQ_FOLD_LEFT_190(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_190(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _MM_EXCEPT_INVALID 0x0001
#define BN_F_BN_RAND 114
#define X509_V_ERR_INVALID_PURPOSE 26
#define SSL_CTRL_CLEAR_MODE 78
#define MADV_RANDOM 1
#define EVP_R_INITIALIZATION_ERROR 134
#define FMT_API 
#define PTHREAD_ONCE_INIT 0
#define BOOST_PP_SEQ_FOLD_LEFT_192(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_192(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __DBL_DECIMAL_DIG__ 17
#define _POPCNTINTRIN_H_INCLUDED 
#define BOOST_MPL_AUX_PASS_THROUGH_LAMBDA_SPEC(i,name) template< BOOST_MPL_PP_PARAMS(i, typename T) , typename Tag > struct lambda< name< BOOST_MPL_PP_PARAMS(i, T) > , Tag BOOST_MPL_AUX_LAMBDA_ARITY_PARAM(int_<i>) > { typedef false_ is_le; typedef name< BOOST_MPL_PP_PARAMS(i, T) > result_; typedef result_ type; };
#define OBJ_ecdsa_with_SHA384 OBJ_ecdsa_with_Specified,3L
#define __arch_swab32 __arch_swab32
#define SN_set_addPolicy "set-addPolicy"
#define BOOST_PP_SEQ_FOLD_LEFT_194(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_194(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BIO_F_CONN_CTRL 127
#define BOOST_MPL_INSERT_FWD_HPP_INCLUDED 
#define BOOST_PP_SEQ_ELEM_137(_) BOOST_PP_SEQ_ELEM_136
#define BOOST_PP_SEQ_FOLD_LEFT_195(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_195(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _WCTYPE_H 1
#define NID_id_smime_spq_ets_sqt_uri 249
#define _IO_ERR_SEEN 0x0020
#define BOOST_PP_SEQ_FOLD_LEFT_196(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_196(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_id_tc26_mac 987
#define _SC_2_PBS_TRACK _SC_2_PBS_TRACK
#define BOOST_PP_INC_2 3
#define EVUTIL_SET_SOCKET_ERROR(errcode) do { errno = (errcode); } while (0)
#define X509V3_R_ERROR_CONVERTING_ZONE 131
#define CRYPTO_F_OPENSSL_SK_DEEP_COPY 127
#define LC_ADDRESS_MASK (1 << __LC_ADDRESS)
#define OBJ_sect233r1 OBJ_secg_ellipticCurve,27L
#define sk_delete_ptr OPENSSL_sk_delete_ptr
#define SA_NOMASK SA_NODEFER
#define SSL_F_TLS1_CHECK_DUPLICATE_EXTENSIONS 341
#define BOOST_PP_LIST_FOLD_LEFT_136(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_137, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(137, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __cpp_lib_atomic_is_always_lock_free 201603
#define LN_singleLevelQuality "singleLevelQuality"
#define RSA_R_INVALID_MULTI_PRIME_KEY 167
#define OBJ_owner OBJ_X509,32L
#define BOOST_PP_INC_6 7
#define BOOST_PP_LIST_FOLD_LEFT_137(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_138, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(138, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_139(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_140, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(140, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define THRIFT_FLAG_DEFINE_bool(_name,_default) THRIFT_FLAG_DEFINE(_name, bool, _default)
#define M_LOG10E 0.43429448190325182765
#define BOOST_PP_INC_42 43
#define _BITS_TYPES_STRUCT_SCHED_PARAM 1
#define BOOST_PP_INC_43 44
#define BOOST_PP_SLOT_TEMP_6 0
#define BOOST_PP_FOR_96_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(97, s) BOOST_PP_IIF(c, BOOST_PP_FOR_97, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(97, s), p, o, m)
#define BOOST_PP_SLOT_TEMP_7 0
#define EC_F_ECD_ITEM_VERIFY 270
#define SN_sha224 "SHA224"
#define SN_kx_ecdhe "KxECDHE"
#define SN_id_cmc_addExtensions "id-cmc-addExtensions"
#define STATX_ATTR_DAX 0x00200000
#define NID_setCext_cCertRequired 611
#define BOOST_PREPROCESSOR_FACILITIES_IS_EMPTY_VARIADIC_HPP 
#define RLIMIT_MEMLOCK __RLIMIT_MEMLOCK
#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA 0x03000088
#define CHAR_WIDTH 8
#define _MM3DNOW_H_INCLUDED 
#define BOOST_PP_NODE_112(p) BOOST_PP_IIF(p(112), BOOST_PP_NODE_104, BOOST_PP_NODE_120)
#define PTHREAD_SCOPE_SYSTEM PTHREAD_SCOPE_SYSTEM
#define SN_selected_attribute_types "selected-attribute-types"
#define SO_ZEROCOPY 60
#define _mm512_maskz_ror_epi64(U,A,B) ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_setzero_si512 (), (__mmask8)(U)))
#define TLSEXT_hash_none 0
#define OBJ_X9_62_prime239v2 OBJ_X9_62_primeCurve,5L
#define OBJ_X9_62_prime239v3 OBJ_X9_62_primeCurve,6L
#define SIGEV_THREAD SIGEV_THREAD
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011011 (0)(1)(1)(0)(1)(1),
#define _GLIBCXX_HAVE_LC_MESSAGES 1
#define ASN1_F_ASN1_COLLECT 106
#define OBJ_sbgp_ipAddrBlock OBJ_id_pe,7L
#define BOOST_MPL_MIN_MAX_HPP_INCLUDED 
#define _SC_TRACE_INHERIT _SC_TRACE_INHERIT
#define SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG 54
#define BOOST_OPERATORS_HPP 
#define LN_id_GostR3411_2012_256 "GOST R 34.11-2012 with 256 bit hash"
#define _CS_LFS64_LIBS _CS_LFS64_LIBS
#define _TBMINTRIN_H_INCLUDED 
#define V_ASN1_GENERALSTRING 27
#define _mm512_mask_cvt_roundpd_ps(W,U,A,B) (__m256)__builtin_ia32_cvtpd2ps512_mask(A, (__v8sf)(W), U, B)
#define SSL_CONF_TYPE_STRING 0x1
#define SSL_R_BAD_LENGTH 271
#define X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM 59
#define LN_hkdf "hkdf"
#define _CS_POSIX_V6_LP64_OFF64_LIBS _CS_POSIX_V6_LP64_OFF64_LIBS
#define EVP_PKEY_CTX_set1_id(ctx,id,id_len) EVP_PKEY_CTX_ctrl(ctx, -1, -1, EVP_PKEY_CTRL_SET1_ID, (int)id_len, (void*)(id))
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)
#define O_NOFOLLOW __O_NOFOLLOW
#define BOOST_PP_SLOT_TEMP_10 0
#define PKCS7_R_CTRL_ERROR 152
#define _AVXINTRIN_H_INCLUDED 
#define TLS1_RFC_DHE_PSK_WITH_CHACHA20_POLY1305 "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256"
#define EVP_PKEY_assign_RSA(pkey,rsa) EVP_PKEY_assign((pkey),EVP_PKEY_RSA, (char *)(rsa))
#define ERR_R_PEM_LIB ERR_LIB_PEM
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110111 (1)(1)(1)(0)(1)(1)(1),
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_212(o,s,l) 0
#define _mm512_max_round_ps(A,B,R) (__m512)__builtin_ia32_maxps512_mask(A, B, (__v16sf)_mm512_undefined_pd(), -1, R)
#define DSA_F_DSA_PUB_DECODE 117
#define F_SEAL_FUTURE_WRITE 0x0010
#define BOOST_PP_WHILE_221(p,o,s) BOOST_PP_WHILE_221_C(BOOST_PP_BOOL(p(222, s)), p, o, s)
#define AF_CAIF PF_CAIF
#define EVENT2_BUFFEREVENT_STRUCT_H_INCLUDED_ 
#define BOOST_PP_WHILE_222(p,o,s) BOOST_PP_WHILE_222_C(BOOST_PP_BOOL(p(223, s)), p, o, s)
#define _CS_POSIX_V7_LP64_OFF64_CFLAGS _CS_POSIX_V7_LP64_OFF64_CFLAGS
#define RAND_R_NO_DRBG_IMPLEMENTATION_SELECTED 128
#define X509_F_X509_CHECK_PRIVATE_KEY 128
#define _CONCEPT_CHECK_H 1
#define NID_id_regCtrl_oldCertID 319
#define __USE_XOPEN_EXTENDED 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_206(o,s,l) 0
#define BOOST_PP_SEQ_FOLD_LEFT_94(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_94(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define ASN1_R_BAD_TEMPLATE 230
#define LN_iA5StringSyntax "iA5StringSyntax"
#define __fsfilcnt_t_defined 
#define BOOST_PP_FOR_171_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(172, s) BOOST_PP_IIF(c, BOOST_PP_FOR_172, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(172, s), p, o, m)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_50 50
#define INT_FAST64_MAX (__INT64_C(9223372036854775807))
#define ub_title 64
#define BOOST_PP_SEQ_FOLD_LEFT_I_145(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_146, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(146, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SN_dvcs "DVCS"
#define OBJ_id_tc26_digest OBJ_id_tc26_algorithms,2L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_52 52
#define NID_sm4_ctr 1139
#define __va_list__ 
#define BOOST_PP_TUPLE_TO_LIST_13(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, BOOST_PP_NIL)))))))))))))
#define NID_id_cmc_identityProof 329
#define BOOST_PREPROCESSOR_FACILITIES_OVERLOAD_HPP 
#define SSL3_SSL_SESSION_ID_LENGTH 32
#define BOOST_PP_WHILE_229(p,o,s) BOOST_PP_WHILE_229_C(BOOST_PP_BOOL(p(230, s)), p, o, s)
#define SO_SNDLOWAT 19
#define OBJ_id_regCtrl_protocolEncrKey OBJ_id_regCtrl,6L
#define IORING_CQE_F_BUFFER (1U << 0)
#define SSL_F_TLS_CONSTRUCT_CTOS_KEY_EXCHANGE 357
#define TLS1_CK_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C079
#define OBJ_id_smime_aa_contentIdentifier OBJ_id_smime_aa,7L
#define _POSIX_ASYNC_IO 1
#define XKU_DVCS 0x80
#define _mm512_cvtt_roundpd_epi32(A,B) ((__m256i)__builtin_ia32_cvttpd2dq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))
#define BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET 141
#define _SC_2_FORT_DEV _SC_2_FORT_DEV
#define OBJ_id_smime_aa_contentReference OBJ_id_smime_aa,10L
#define OBJ_camellia_256_gcm OBJ_camellia,46L
#define BOOST_PP_TUPLE_TO_LIST_18(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, BOOST_PP_NIL))))))))))))))))))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101111 (1)(0)(1)(1)(1)(1),
#define NID_id_mod_ocsp 282
#define BOOST_INTRUSIVE_FORCEINLINE BOOST_FORCEINLINE
#define BOOST_PP_ADD_O_I(x,y) (BOOST_PP_INC(x), BOOST_PP_DEC(y))
#define NID_id_camellia256_wrap 909
#define LN_id_tc26_signwithdigest_gost3410_2012_512 "GOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)"
#define HUGE_VAL (__builtin_huge_val ())
#define __SIZEOF_DOUBLE__ 8
#define _mm256_extracti32x4_epi32(X,C) ((__m128i) __builtin_ia32_extracti32x4_256_mask ((__v8si)(__m256i) (X), (int) (C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)-1))
#define BIO_read_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_READ,(char *)(name))
#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA"
#define ERR_R_DH_LIB ERR_LIB_DH
#define TLSEXT_TYPE_key_share 51
#define __cpp_lib_endian 201907L
#define NID_id_pkix_OCSP_extendedStatus 372
#define BOOST_PP_SEQ_SIZE_190(_) BOOST_PP_SEQ_SIZE_191
#define BOOST_PP_SEQ_ELEM_148(_) BOOST_PP_SEQ_ELEM_147
#define EVP_F_DO_SIGVER_INIT 161
#define OPENSSL_DECLARE_GLOBAL(type,name) OPENSSL_EXPORT type _shadow_ ##name
#define _BITS_POSIX1_LIM_H 1
#define SSL_F_TLS_PARSE_CTOS_PSK 505
#define DSA_F_DSA_DO_SIGN 112
#define EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP 126
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101101 (1)(1)(0)(1)(1)(0)(1),
#define EVENT__HAVE_EPOLL_CREATE1 1
#define _mm512_cvtt_roundpd_epi64(A,B) ((__m512i)__builtin_ia32_cvttpd2qq512_mask ((A), (__v8di) _mm512_setzero_si512 (), -1, (B)))
#define UDP_NO_CHECK6_RX 102
#define LIBEVENT_VERSION_NUMBER EVENT__NUMERIC_VERSION
#define OBJ_pkcs12_pbeids OBJ_pkcs12,1L
#define _mm512_cvt_roundps_ph(A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I), (__v16hi)_mm256_undefined_si256 (), -1))
#define AF_IUCV PF_IUCV
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101110 (1)(1)(0)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101111 (1)(1)(0)(1)(1)(1)(1),
#define SSL_EXT_TLS1_2_SERVER_HELLO 0x0100
#define CT_F_I2O_SCT 107
#define ERR_R_X509V3_LIB ERR_LIB_X509V3
#define OBJ_pSpecified OBJ_pkcs1,9L
#define EVP_GCM_TLS_FIXED_IV_LEN 4
#define BOOST_PP_SEQ_ELEM_140(_) BOOST_PP_SEQ_ELEM_139
#define __FLT32X_HAS_QUIET_NAN__ 1
#define EVENT_DBG_ALL 0xffffffffu
#define EVP_F_EVP_OPENINIT 102
#define FOLLY_HAVE_LIBZ 1
#define SN_wap_wsg_idm_ecid_wtls10 "wap-wsg-idm-ecid-wtls10"
#define SN_wap_wsg_idm_ecid_wtls11 "wap-wsg-idm-ecid-wtls11"
#define SN_wap_wsg_idm_ecid_wtls12 "wap-wsg-idm-ecid-wtls12"
#define BOOST_PP_SEQ_ELEM_142(_) BOOST_PP_SEQ_ELEM_141
#define OBJ_id_GostR3410_94_a OBJ_id_GostR3410_94,1L
#define OBJ_id_GostR3410_94_b OBJ_id_GostR3410_94,3L
#define __GLIBCXX_TYPE_INT_N_0 __int128
#define __INT_FAST16_WIDTH__ 64
#define BOOST_PP_SEQ_ELEM_143(_) BOOST_PP_SEQ_ELEM_142
#define UDP_NO_CHECK6_TX 101
#define _GLIBCXX_MAKE_MOVE_ITERATOR(_Iter) std::make_move_iterator(_Iter)
#define TLSEXT_TYPE_trusted_ca_keys 3
#define ELIBBAD 80
#define __getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
#define NID_setct_CertResTBE 597
#define __glibc_clang_prereq(maj,min) 0
#define BOOST_PP_SEQ_ELEM_146(_) BOOST_PP_SEQ_ELEM_145
#define _mm_mask_cmp_epi32_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(P), (__mmask8)(M)))
#define SSL_F_TLS_PARSE_STOC_PSK 502
#define OBJ_streetAddress OBJ_X509,9L
#define ECONNREFUSED 111
#define NID_sha1WithRSA 115
#define INT_FAST64_MIN (-__INT64_C(9223372036854775807)-1)
#define BOOST_PP_LIST_FOLD_LEFT_141(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_142, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(142, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define OBJ_cNAMERecord OBJ_pilotAttributeType,31L
#define TLS1_RFC_ADH_WITH_AES_128_SHA256 "TLS_DH_anon_WITH_AES_128_CBC_SHA256"
#define ASN1_PKEY_CTRL_PKCS7_ENCRYPT 0x2
#define LIBEVENT_VERSION EVENT__VERSION
#define _RWLOCK_INTERNAL_H 
#define __CONST_SOCKADDR_ARG const struct sockaddr *
#define UINT_FAST8_WIDTH 8
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_11(p,o,s) 0
#define _NODE_HANDLE 1
#define UINT16_MAX (65535)
#define _CS_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS
#define DSA_F_DSA_PRIV_DECODE 115
#define BIO_R_LENGTH_TOO_LONG 102
#define BOOST_INTEL_CXX_VERSION_WORKAROUND_GUARD 1
#define BOOST_PP_LIST_FOLD_LEFT_145(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_146, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(146, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _FMA4INTRIN_H_INCLUDED 
#define LN_dsa_with_SHA3_512 "dsa_with_SHA3-512"
#define TLS_MD_EXTENDED_MASTER_SECRET_CONST_SIZE 22
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_13(p,o,s) 0
#define SSL_F_SSL_CERT_ADD0_CHAIN_CERT 346
#define THRIFT_ASYNC_THEADERSERVERCHANNEL_H_ 1
#define BOOST_PP_INC_50 51
#define BOOST_INTRUSIVE_DETAIL_ALGORITHM_HPP 
#define SIG_IGN ((__sighandler_t) 1)
#define EVENT__HAVE_SYS_IOCTL_H 1
#define _CS_POSIX_V7_LP64_OFF64_LIBS _CS_POSIX_V7_LP64_OFF64_LIBS
#define _GLIBCXX_HAVE_VWSCANF 1
#define OBJ_wap_wsg OBJ_wap,1L
#define ASN1_R_ILLEGAL_FORMAT 177
#define _mm256_dp_ps(X,Y,M) ((__m256) __builtin_ia32_dpps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(M)))
#define BOOST_PP_INC_54 55
#define OBJ_wap_wsg_idm_ecid_wtls3 OBJ_wap_wsg_idm_ecid,3L
#define SN_ripemd160WithRSA "RSA-RIPEMD160"
#define RSA_F_RSA_OSSL_PUBLIC_DECRYPT 103
#define IP_UNICAST_IF 50
#define BOOST_PP_INC_56 57
#define BOOST_PP_FOR_103_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(104, s) BOOST_PP_IIF(c, BOOST_PP_FOR_104, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(104, s), p, o, m)
#define _kor_mask16 _mm512_kor
#define TLS1_TXT_PSK_WITH_AES_128_CBC_SHA "PSK-AES128-CBC-SHA"
#define BOOST_PP_INC_57 58
#define BOOST_TT_IS_NOTHROW_MOVE_CONSTRUCTIBLE_HPP_INCLUDED 
#define SSL_F_TLS_CONSTRUCT_STOC_KEY_EXCHANGE 377
#define BOOST_RESTRICT __restrict__
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_19(p,o,s) 0
#define CPU_AND_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, &)
#define BOOST_PP_FOR_157_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(158, s) BOOST_PP_IIF(c, BOOST_PP_FOR_158, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(158, s), p, o, m)
#define FOLLY_NULLABLE 
#define __WCHAR_MIN __WCHAR_MIN__
#define BOOST_MPL_SEQUENCE_TAG_FWD_HPP_INCLUDED 
#define TLS1_CK_ECDHE_RSA_WITH_CHACHA20_POLY1305 0x0300CCA8
#define SN_ripemd160 "RIPEMD160"
#define PEM_F_DO_B2I_BIO 133
#define ENOBUFS 105
#define FB_ARG_1(a,...) a
#define _PSTL_PRAGMA_SIMD_EARLYEXIT 
#define BOOST_PP_FOR_212_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(213, s) BOOST_PP_IIF(c, BOOST_PP_FOR_213, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(213, s), p, o, m)
#define ASN1_F_DO_DUMP 125
#define BOOST_INTRUSIVE_INVARIANT_ASSERT BOOST_ASSERT
#define TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA "TLS_RSA_PSK_WITH_AES_256_CBC_SHA"
#define DH_CHECK_PUBKEY_TOO_SMALL 0x01
#define PRIdLEAST64 __PRI64_PREFIX "d"
#define EVP_PKEY_OP_KEYGEN (1<<2)
#define IORING_UNREGISTER_FILES 3
#define NID_setct_BCIDistributionTBS 600
#define EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY 202
#define BIO_R_INVALID_ARGUMENT 125
#define EVENT__HAVE_FCNTL 1
#define LOG_TO_STRING_WARNING(message) google::LogMessage( __FILE__, __LINE__, google::GLOG_WARNING, message)
#define SSL_F_SSL_CTX_MAKE_PROFILES 309
#define OBJ_sha384 OBJ_nist_hashalgs,2L
#define _GLIBCXX11_USE_C99_STDLIB 1
#define BOOST_PP_SEQ_ELEM_0(x) x, BOOST_PP_NIL
#define BOOST_PP_SEQ_ELEM_1(_) BOOST_PP_SEQ_ELEM_0
#define BOOST_PP_SEQ_ELEM_2(_) BOOST_PP_SEQ_ELEM_1
#define BOOST_PP_SEQ_ELEM_5(_) BOOST_PP_SEQ_ELEM_4
#define BOOST_PP_SEQ_ELEM_6(_) BOOST_PP_SEQ_ELEM_5
#define BOOST_PP_SEQ_ELEM_7(_) BOOST_PP_SEQ_ELEM_6
#define LN_time_stamp "Time Stamping"
#define __cpp_lib_quoted_string_io 201304
#define FMT_BUILTIN_CLZ(n) __builtin_clz(n)
#define BOOST_PP_SEQ_ELEM_I(i,seq) BOOST_PP_SEQ_ELEM_II(BOOST_PP_SEQ_ELEM_ ## i seq)
#define X509_V_ERR_CERT_HAS_EXPIRED 10
#define __LDBL_MIN_10_EXP__ (-4931)
#define BOOST_PP_WHILE_176_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_177, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(177, s))
#define _SC_FIFO _SC_FIFO
#define FOLLY_IGNORE(...) 
#define SSL_F_ADD_CLIENT_KEY_SHARE_EXT 438
#define BOOST_HAS_DECLTYPE 
#define _MM_DENORMALS_ZERO_MASK 0x0040
#define OBJ_ac_auditEntity OBJ_id_pe,4L
#define SN_id_smime_aa_signingCertificateV2 "id-smime-aa-signingCertificateV2"
#define BOOST_PP_ENUM_SHIFTED_PARAMS_M(z,n,param) BOOST_PP_COMMA_IF(n) BOOST_PP_CAT(param, BOOST_PP_INC(n))
#define _mm512_mask_getexp_pd(W,U,A) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_94_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_95, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(95, s))
#define OPENSSL_secure_actual_size(ptr) CRYPTO_secure_actual_size(ptr)
#define EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID (EVP_PKEY_ALG_CTRL + 1)
#define RSA_F_RSA_SETUP_BLINDING 136
#define BOOST_PP_DETAIL_IBP_IS_VARIADIC_C(...) 1
#define PRIo16 "o"
#define __USE_ATFILE 1
#define SSL_CTX_get_tlsext_status_type(ssl) SSL_CTX_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE,0,NULL)
#define SSL_OP_NETSCAPE_CHALLENGE_BUG 0x0
#define PEM_STRING_X509_TRUSTED "TRUSTED CERTIFICATE"
#define BOOST_PP_TUPLE_TO_LIST_21(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, BOOST_PP_NIL)))))))))))))))))))))
#define _mm512_cmp_epi8_mask(X,Y,P) ((__mmask64) __builtin_ia32_cmpb512_mask ((__v64qi)(__m512i)(X), (__v64qi)(__m512i)(Y), (int)(P), (__mmask64)(-1)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_61 61
#define FOLLY_HAVE_LIBZSTD 1
#define OPENSSL_INIT_ENGINE_CRYPTODEV 0x00001000L
#define SSL_CTX_sess_connect(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CONNECT,0,NULL)
#define LN_x509ExtAdmission "Professional Information or basis for Admission"
#define SN_id_smime_aa_encrypKeyPref "id-smime-aa-encrypKeyPref"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_62 62
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_63 63
#define SSL_CTX_set_dh_auto(ctx,onoff) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_DH_AUTO,onoff,NULL)
#define BOOST_PP_TUPLE_TO_LIST_24(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, BOOST_PP_NIL))))))))))))))))))))))))
#define BOOST_PP_FOR_63_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(64, s) BOOST_PP_IIF(c, BOOST_PP_FOR_64, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(64, s), p, o, m)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_64 64
#define SN_id_alg_des40 "id-alg-des40"
#define PRIo32 "o"
#define BOOST_PP_TUPLE_EAT_10(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9) 
#define BOOST_PP_TUPLE_EAT_13(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12) 
#define BOOST_PP_TUPLE_EAT_14(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13) 
#define _SC_STREAMS _SC_STREAMS
#define BOOST_PP_TUPLE_EAT_16(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) 
#define BOOST_PP_TUPLE_EAT_17(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16) 
#define BOOST_PP_TUPLE_EAT_18(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17) 
#define BOOST_PP_TUPLE_EAT_19(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18) 
#define S_ISFIFO(mode) __S_ISTYPE((mode), __S_IFIFO)
#define __LDBL_NORM_MAX__ 1.18973149535723176502126385303097021e+4932L
#define BOOST_HAS_INT128 
#define PATH_MAX 4096
#define NID_grasshopper_ofb 1014
#define CRYPTO_F_CRYPTO_SET_EX_DATA 102
#define string_to_hex OPENSSL_hexstr2buf
#define BOOST_PP_TUPLE_EAT_20(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19) 
#define BOOST_PP_TUPLE_EAT_21(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20) 
#define BOOST_PP_TUPLE_EAT_22(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21) 
#define BOOST_PP_TUPLE_EAT_23(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22) 
#define BOOST_PP_TUPLE_EAT_24(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23) 
#define BOOST_PP_TUPLE_EAT_25(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24) 
#define BOOST_PP_TUPLE_EAT_26(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25) 
#define BOOST_PP_TUPLE_EAT_27(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26) 
#define BOOST_PP_TUPLE_EAT_28(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27) 
#define BOOST_PP_TUPLE_EAT_29(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28) 
#define _ASM_GENERIC_TYPES_H 
#define JEMALLOC_NOTHROW JEMALLOC_ATTR(nothrow)
#define _mm_i32scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv4sf ((void *) (ADDR), (__mmask8)0xFF, (__v4si)(__m128i) (INDEX), (__v4sf)(__m128) (V1), (int) (SCALE))
#define NID_id_smime_aa_dvcs_dvc 240
#define EOPNOTSUPP 95
#define _IOWR_BAD(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),sizeof(size))
#define NID_sendRouter 1027
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_82(op,st,ss,sz) 0
#define BOOST_PP_TUPLE_EAT_30(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29) 
#define BOOST_PP_TUPLE_EAT_32(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31) 
#define BOOST_PP_TUPLE_EAT_33(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32) 
#define BOOST_PP_TUPLE_EAT_34(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33) 
#define BOOST_PP_TUPLE_EAT_36(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35) 
#define BOOST_PP_TUPLE_EAT_37(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36) 
#define BOOST_PP_TUPLE_EAT_39(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38) 
#define OBJ_id_mod_cmp OBJ_id_pkix_mod,9L
#define PKCS7_NOSIGS 0x4
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256 0x0300C023
#define SN_camellia_192_cfb128 "CAMELLIA-192-CFB"
#define _POSIX_BARRIERS 200809L
#define SN_netscape_revocation_url "nsRevocationUrl"
#define BOOST_PP_LIST_FOLD_RIGHT_119(o,s,l) BOOST_PP_LIST_FOLD_LEFT_119(o, s, BOOST_PP_LIST_REVERSE_D(119, l))
#define PRIo64 __PRI64_PREFIX "o"
#define SN_subject_directory_attributes "subjectDirectoryAttributes"
#define BOOST_MPL_EVAL_IF_HPP_INCLUDED 
#define SN_tls1_prf "TLS1-PRF"
#define FMT_BEGIN_NAMESPACE namespace fmt { FMT_INLINE_NAMESPACE v7 {
#define BOOST_PP_TUPLE_EAT_40(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39) 
#define BOOST_PP_TUPLE_EAT_41(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40) 
#define BOOST_PP_TUPLE_EAT_42(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41) 
#define BOOST_PP_TUPLE_EAT_43(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42) 
#define BOOST_PP_TUPLE_EAT_44(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43) 
#define BOOST_PP_TUPLE_EAT_45(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44) 
#define BOOST_PP_TUPLE_EAT_46(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45) 
#define BOOST_PP_TUPLE_EAT_47(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46) 
#define BOOST_PP_TUPLE_EAT_48(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47) 
#define BOOST_PP_TUPLE_TO_LIST_O_2(size,tuple) BOOST_PP_TUPLE_TO_LIST_O_1(tuple)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_215(op,st,ss,sz) 0
#define __ATOMIC_RELEASE 3
#define OPENSSL_NO_DEVCRYPTOENG 
#define IP_MAX_MEMBERSHIPS 20
#define BOOST_PP_REPEAT_2_94(m,d) BOOST_PP_REPEAT_2_93(m, d) m(3, 93, d)
#define FMT_BUILTIN_CTZ(n) __builtin_ctz(n)
#define TLS1_AD_UNKNOWN_CA 48
#define BOOST_PP_TUPLE_EAT_50(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49) 
#define BOOST_PP_TUPLE_EAT_52(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51) 
#define BOOST_PP_TUPLE_EAT_53(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52) 
#define BOOST_PP_TUPLE_EAT_54(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53) 
#define BOOST_PP_TUPLE_EAT_55(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54) 
#define BOOST_PP_TUPLE_EAT_56(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55) 
#define BOOST_PP_TUPLE_EAT_58(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57) 
#define BOOST_PP_TUPLE_EAT_59(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58) 
#define LN_pkInitClientAuth "PKINIT Client Auth"
#define BOOST_PP_SEQ_ELEM_151(_) BOOST_PP_SEQ_ELEM_150
#define LN_md5WithRSAEncryption "md5WithRSAEncryption"
#define IPV6_RTHDR_TYPE_0 0
#define __STDC__ 1
#define ub_state_name 128
#define _mm512_maskz_insertf32x4(A,X,Y,C) ((__m512) __builtin_ia32_insertf32x4_mask ((__v16sf)(__m512) (X), (__v4sf)(__m128) (Y), (int) (C), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A)))
#define _mm512_maskz_insertf32x8(U,X,Y,C) ((__m512) __builtin_ia32_insertf32x8_mask ((__v16sf)(__m512) (X), (__v8sf)(__m256) (Y), (int) (C), (__v16sf)(__m512)_mm512_setzero_ps (), (__mmask16)(U)))
#define BOOST_MOVE_DETAIL_META_UTILS_HPP 
#define BOOST_PP_REPEAT_2_99(m,d) BOOST_PP_REPEAT_2_98(m, d) m(3, 98, d)
#define BOOST_PP_TUPLE_EAT_60(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59) 
#define BOOST_PP_TUPLE_EAT_61(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60) 
#define BOOST_PP_TUPLE_EAT_62(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61) 
#define BOOST_PP_TUPLE_EAT_63(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62) 
#define BOOST_PP_TUPLE_EAT_64(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63) 
#define _SC_XOPEN_UNIX _SC_XOPEN_UNIX
#define LN_org "org"
#define __FLT32X_MAX_EXP__ 1024
#define ____sigset_t_defined 
#define SO_EE_CODE_ZEROCOPY_COPIED 1
#define MFD_ALLOW_SEALING 2U
#define FS_ENCRYPT_FL 0x00000800
#define BOOST_PP_LIST_FOLD_LEFT_150(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_151, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(151, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EC_F_ECDSA_SIG_NEW 265
#define SSL_CTX_set_split_send_fragment(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SPLIT_SEND_FRAGMENT,m,NULL)
#define SN_sha256WithRSAEncryption "RSA-SHA256"
#define BOOST_PP_LIST_FOLD_LEFT_151(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_152, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(152, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE 194
#define SSL_R_TLS_HEARTBEAT_PENDING 366
#define SSL_TXT_AES "AES"
#define SN_kx_any "KxANY"
#define BOOST_PP_NODE_67(p) BOOST_PP_IIF(p(67), 67, 68)
#define SSL_F_TLS_PARSE_CTOS_EC_PT_FORMATS 569
#define M_PI_2f32 __f32 (1.570796326794896619231321691639751442)
#define SYS_F_SETSOCKOPT 14
#define SSL_R_UNKNOWN_CIPHER_RETURNED 248
#define BOOST_PP_DEC_40 39
#define FSMOUNT_CLOEXEC 0x00000001
#define TCPOPT_WINDOW 3
#define CLOCK_BOOTTIME_ALARM 9
#define RWF_SUPPORTED (RWF_HIPRI | RWF_DSYNC | RWF_SYNC | RWF_NOWAIT | RWF_APPEND)
#define X509V3_R_INCORRECT_POLICY_SYNTAX_TAG 152
#define BOOST_PP_WHILE_108_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_109, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(109, s))
#define RSA_R_INVALID_DIGEST_LENGTH 143
#define EVP_F_EVP_PKEY_SET_ALIAS_TYPE 206
#define SN_dstu28147_cfb "dstu28147-cfb"
#define SSL_F_FINAL_SERVER_NAME 558
#define BOOST_PP_LIST_FOLD_LEFT_158(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_159, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(159, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_AD_PROTOCOL_VERSION TLS1_AD_PROTOCOL_VERSION
#define EC_F_PKEY_ECD_DIGESTSIGN448 277
#define FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER 2
#define BOOST_PP_INC_62 63
#define BIO_set_conn_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_CONNECT,3,f)
#define __cpp_aggregate_nsdmi 201304L
#define __FLT128_MIN_10_EXP__ (-4931)
#define _popcnt32(a) __popcntd(a)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_240 240
#define SSL_CLIENT_HELLO_RETRY (-1)
#define BOOST_PP_WHILE_123_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_124, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(124, s))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000110 (0)(0)(0)(0)(0)(1)(1)(0),
#define BOOST_HASH_SET_HEADER <backward/hash_set>
#define HEADER_EVPERR_H 
#define _SC_LINE_MAX _SC_LINE_MAX
#define M_PI_2f64 __f64 (1.570796326794896619231321691639751442)
#define _mm512_maskz_extracti64x2_epi64(U,X,C) ((__m128i) __builtin_ia32_extracti64x2_512_mask ((__v8di)(__m512i) (X), (int) (C), (__v2di)(__m128i) _mm_setzero_si128 (), (__mmask8) (U)))
#define BOOST_PP_REPEAT_1_43(m,d) BOOST_PP_REPEAT_1_42(m, d) m(2, 42, d)
#define _BITS_SETJMP_H 1
#define LN_hmacWithSHA256 "hmacWithSHA256"
#define _MM_MASK_MASK 0x1f80
#define BOOST_ITERATOR_CATEGORIES_HPP 
#define NID_aria_128_gcm 1123
#define DSA_F_DSA_METH_SET1_NAME 129
#define TLS1_TXT_ECDH_RSA_WITH_AES_256_CBC_SHA "ECDH-RSA-AES256-SHA"
#define PKCS7_R_ERROR_SETTING_CIPHER 121
#define BOOST_PP_LIST_FOLD_LEFT_43(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_44, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(44, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_pkcs7_signedAndEnveloped 24
#define SSL_F_TLS_PARSE_CTOS_KEY_SHARE 463
#define X509V3_R_DISTPOINT_ALREADY_SET 160
#define BOOST_PP_DEC_48 47
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_33 33
#define SN_setCext_cCertRequired "setCext-cCertRequired"
#define BN_R_INVALID_LENGTH 106
#define ev_off_t ev_int64_t
#define _IO_EOF_SEEN 0x0010
#define __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
#define CRYPTO_set_dynlock_destroy_callback(dyn_destroy_function) 
#define IPV6_LEAVE_GROUP 21
#define ERR_TXT_STRING 0x02
#define LN_algorithm "algorithm"
#define TLS1_CK_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C060
#define V_ASN1_PRIMATIVE_TAG V_ASN1_PRIMITIVE_TAG
#define _COMPARE 
#define _GLIBCXX_X86_RDSEED 1
#define RSA_R_KEY_SIZE_TOO_SMALL 120
#define __cpp_designated_initializers 201707L
#define SSL_R_RENEGOTIATION_ENCODING_ERR 336
#define SSL_TXT_ALL "ALL"
#define FOLLY_NAMESPACE_STD_END }
#define __UINT8_MAX__ 0xff
#define NID_ms_sgc 137
#define RSA_F_RSA_METH_DUP 161
#define NID_seed_cfb128 779
#define _SC_TYPED_MEMORY_OBJECTS _SC_TYPED_MEMORY_OBJECTS
#define BOOST_MPL_AUX_CONFIG_LAMBDA_HPP_INCLUDED 
#define OBJ_rsaEncryption OBJ_pkcs1,1L
#define M_PI_4l 0.785398163397448309615660845819875721L
#define _mm512_mask_permute_pd(W,U,X,C) ((__m512d) __builtin_ia32_vpermilpd512_mask ((__v8df)(__m512d)(X), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U)))
#define BOOST_PP_WHILE_240(p,o,s) BOOST_PP_WHILE_240_C(BOOST_PP_BOOL(p(241, s)), p, o, s)
#define _mm512_fixupimm_pd(X,Y,Z,C) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))
#define LHASH_NODE OPENSSL_LH_NODE
#define _mm512_mask_permute_ps(W,U,X,C) ((__m512) __builtin_ia32_vpermilps512_mask ((__v16sf)(__m512)(X), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U)))
#define _mm512_fixupimm_ps(X,Y,Z,C) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(-1), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_241(p,o,s) BOOST_PP_WHILE_241_C(BOOST_PP_BOOL(p(242, s)), p, o, s)
#define __sigset_t_defined 1
#define __FLT32_MIN_EXP__ (-125)
#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 0x030000C4
#define SSL_F_SSL_CIPHER_PROCESS_RULESTR 230
#define SSL_CERT_FLAG_SUITEB_128_LOS_ONLY 0x10000
#define SSL_F_SSL_BYTES_TO_CIPHER_LIST 161
#define BOOST_PP_WHILE_244(p,o,s) BOOST_PP_WHILE_244_C(BOOST_PP_BOOL(p(245, s)), p, o, s)
#define _WCHAR_H 1
#define _CS_LFS_LIBS _CS_LFS_LIBS
#define M_LN10f128 __f128 (2.302585092994045684017991454684364208)
#define STATX_BASIC_STATS 0x000007ffU
#define POLLMSG 0x400
#define BIO_FLAGS_BASE64_NO_NL 0x100
#define BOOST_PP_WHILE_246(p,o,s) BOOST_PP_WHILE_246_C(BOOST_PP_BOOL(p(247, s)), p, o, s)
#define BOOST_PP_WHILE_247(p,o,s) BOOST_PP_WHILE_247_C(BOOST_PP_BOOL(p(248, s)), p, o, s)
#define NID_id_tc26_agreement_gost_3410_2012_256 992
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000000 (1)(0)(0)(0)(0)(0)(0)(0),
#define __GLIBCXX__ 20210110
#define OBJ_dsa_with_SHA3_224 OBJ_sigAlgs,5L
#define INT64_C(c) c ## L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_73 73
#define __PTRDIFF_TYPE__ long int
#define BOOST_PP_TUPLE_TO_LIST_34(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, BOOST_PP_NIL))))))))))))))))))))))))))))))))))
#define _XABORT_RETRY (1 << 1)
#define THRIFT_PLUGGABLE_FUNC_DECLARE(_ret,_name,...) _ret THRIFT__PLUGGABLE_FUNC_DEFAULT_ ##_name(__VA_ARGS__); using THRIFT__PLUGGABLE_FUNC_TYPE_ ##_name = decltype(&THRIFT__PLUGGABLE_FUNC_DEFAULT_ ##_name); extern const ::apache::thrift::detail::pluggable_function_type_t< THRIFT__PLUGGABLE_FUNC_TYPE_ ##_name> _name
#define __GTHREAD_MUTEX_INIT_FUNCTION __gthread_mutex_init_function
#define TLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256 0x030000A4
#define DSA_F_DSA_SIGN_SETUP 107
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000001 (1)(0)(0)(0)(0)(0)(0)(1),
#define BOOST_PP_RELATIVE_START(i) BOOST_PP_CAT(BOOST_PP_RELATIVE_, i)(BOOST_PP_ITERATION_START_)
#define NID_cmcCA 1131
#define _GLIBCXX11_USE_C99_WCHAR 1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_4(p,o,s) 0
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 "ECDH-ECDSA-AES128-GCM-SHA256"
#define CRYPTO_F_OPENSSL_INIT_CRYPTO 116
#define LN_aria_256_gcm "aria-256-gcm"
#define ASYNC_R_FAILED_TO_SET_POOL 101
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_77 77
#define _mm512_roundscale_pd(A,B) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_undefined_pd(), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))
#define _GLIBCXX_USE_RANDOM_TR1 1
#define TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA384 "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384"
#define _SC_2_C_DEV _SC_2_C_DEV
#define EVP_PKEY_CTX_set_rsa_keygen_pubexp(ctx,pubexp) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP, 0, pubexp)
#define AF_IB PF_IB
#define TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA256 "TLS_ECDHE_PSK_WITH_NULL_SHA256"
#define INT16_MAX (32767)
#define SSL_F_DTLS1_HM_FRAGMENT_NEW 623
#define RLIMIT_AS RLIMIT_AS
#define IPV6_NEXTHOP 9
#define SCHED_IDLE 5
#define DEFINE_string(name,val,txt) namespace fLS { using ::fLS::clstring; using ::fLS::StringFlagDestructor; static union { void* align; char s[sizeof(clstring)]; } s_ ##name[2]; clstring* const FLAGS_no ##name = ::fLS:: dont_pass0toDEFINE_string(s_ ##name[0].s, val); static GFLAGS_NAMESPACE::FlagRegisterer o_ ##name( #name, MAYBE_STRIPPED_HELP(txt), __FILE__, FLAGS_no ##name, new (s_ ##name[1].s) clstring(*FLAGS_no ##name)); static StringFlagDestructor d_ ##name(s_ ##name[0].s, s_ ##name[1].s); extern GFLAGS_DLL_DEFINE_FLAG clstring& FLAGS_ ##name; using fLS::FLAGS_ ##name; clstring& FLAGS_ ##name = *FLAGS_no ##name; } using fLS::FLAGS_ ##name
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define SSL_get0_chain_certs(s,px509) SSL_ctrl(s,SSL_CTRL_GET_CHAIN_CERTS,0,px509)
#define LN_international_organizations "International Organizations"
#define BOOST_PP_LIST_REVERSE(list) BOOST_PP_LIST_FOLD_LEFT(BOOST_PP_LIST_REVERSE_O, BOOST_PP_NIL, list)
#define OBJ_dsa_with_SHA3_256 OBJ_sigAlgs,6L
#define _CS_GNU_LIBC_VERSION _CS_GNU_LIBC_VERSION
#define LN_dstu28147_wrap "DSTU Gost 28147-2009 key wrap"
#define EVP_CIPH_OCB_MODE 0x10003
#define _STL_SET_H 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001111 (0)(1)(0)(0)(1)(1)(1)(1),
#define EAI_NONAME -2
#define NID_id_mod_attribute_cert 280
#define OBJ_pbeWithSHA1AndDES_CBC OBJ_pkcs5,10L
#define BOOST_DO_STRINGIZE(X) #X
#define BOOST_EXPLICIT_OPERATOR_BOOL() BOOST_FORCEINLINE explicit operator bool () const { return !this->operator! (); }
#define TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA "DHE-PSK-AES128-CBC-SHA"
#define CERT_PKEY_VALID 0x1
#define BOOST_PP_SEQ_FOLD_LEFT_I_195(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_196, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(196, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_dhSinglePass_stdDH_sha256kdf_scheme OBJ_secg_scheme,11L,1L
#define BOOST_PP_SEQ_FOLD_LEFT_181(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_181(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define FOLLY_PORT_WIN32_OPEN_BINARY 0
#define __FLT64_DECIMAL_DIG__ 17
#define _WINT_T 1
#define BOOST_MOVE_TRAITS_HPP 
#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100100 (0)(1)(0)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100101 (0)(1)(0)(0)(1)(0)(1),
#define BOOST_PP_WHILE_143_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_144, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(144, s))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110001 (0)(1)(1)(0)(0)(0)(1),
#define _mm512_mask_cvt_roundepi64_pd(W,U,A,B) ((__m512d)__builtin_ia32_cvtqq2pd512_mask ((__v8di)(A), (W), (U), (B)))
#define BOOST_PP_SEQ_ELEM_161(_) BOOST_PP_SEQ_ELEM_160
#define EVENT__HAVE_STRING_H 1
#define OPENSSL_THREADS 
#define _mm512_mask_cvt_roundepi64_ps(W,U,A,B) ((__m256)__builtin_ia32_cvtqq2ps512_mask ((__v8di)(A), (W), (U), (B)))
#define _POSIX_DELAYTIMER_MAX 32
#define __HAVE_FLOAT64 1
#define BOOST_PP_SEQ_ELEM_163(_) BOOST_PP_SEQ_ELEM_162
#define NID_netscape 57
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100110 (0)(1)(0)(0)(1)(1)(0),
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_20(p,o,s) 0
#define OPENSSL_INIT_ENGINE_CAPI 0x00002000L
#define TLS1_CK_RSA_PSK_WITH_AES_256_GCM_SHA384 0x030000AD
#define NS_OBJSIGN 0x10
#define FNONBLOCK O_NONBLOCK
#define _SC_SSIZE_MAX _SC_SSIZE_MAX
#define TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA 0x0300C013
#define X509_PCY_TREE_EMPTY 2
#define BOOST_INTEL_TT_OPTS 
#define NID_ecdsa_with_SHA1 416
#define OBJ_sect193r1 OBJ_secg_ellipticCurve,24L
#define OBJ_sect193r2 OBJ_secg_ellipticCurve,25L
#define TLS1_CK_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C094
#define X509V3_F_V2I_POLICY_CONSTRAINTS 146
#define FMT_CONSTEXPR constexpr
#define X509_VP_FLAG_ONCE 0x10
#define SSL_F_TLS_CONSTRUCT_CTOS_MAXFRAGMENTLEN 549
#define _mm512_mask_extracti32x4_epi32(W,U,X,C) ((__m128i) __builtin_ia32_extracti32x4_mask ((__v16si)(__m512i) (X), (int) (C), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define _SC_2_CHAR_TERM _SC_2_CHAR_TERM
#define _mm512_prefetch_i64scatter_pd(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqpd ((__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define __arch_swab64 __arch_swab64
#define SSL_F_TLS_CONSTRUCT_FINISHED 359
#define _mm512_prefetch_i64scatter_ps(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqps ((__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define TLS1_CK_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C097
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNC_CALLED_IGNORE_SIGNATURE(TRAITS_NAME,FUNC_NAME) BOOST_INTRUSIVE_HAS_MEMBER_FUNC_CALLED(TRAITS_NAME ##_ignore_signature, FUNC_NAME) template <typename Type, class> struct TRAITS_NAME : public TRAITS_NAME ##_ignore_signature<Type> {};
#define X509V3_F_POLICY_DATA_NEW 171
#define BOOST_PP_WHILE_252_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_253, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(253, s))
#define TCP_FASTOPEN_NO_COOKIE 34
#define BOOST_PP_LIST_FOLD_LEFT_164(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_165, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(165, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EOWNERDEAD 130
#define EVENT__HAVE___func__ 1
#define _GLIBCXX_USE_C99_COMPLEX_TR1 1
#define SN_setct_PI_TBS "setct-PI-TBS"
#define BOOST_PP_FOR_30_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(31, s) BOOST_PP_IIF(c, BOOST_PP_FOR_31, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(31, s), p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111011 (0)(1)(1)(1)(0)(1)(1),
#define TLS1_TXT_DHE_PSK_WITH_ARIA_256_GCM_SHA384 "DHE-PSK-ARIA256-GCM-SHA384"
#define BOOST_EXPLICIT_TEMPLATE_TYPE(t) 
#define _IOR_BAD(type,nr,size) _IOC(_IOC_READ,(type),(nr),sizeof(size))
#define _mm_cmp_epu64_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(P), (__mmask8)-1))
#define X509_F_GET_CERT_BY_SUBJECT 103
#define DH_R_PARAMETER_ENCODING_ERROR 105
#define __DECL_SIMD_powf32x 
#define BOOST_PP_LIST_FOLD_LEFT_169(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_170, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(170, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_INC_71 72
#define INT16_MIN (-32767-1)
#define OBJ_id_cmc_queryPending OBJ_id_cmc,21L
#define OBJ_id_it_implicitConfirm OBJ_id_it,13L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_27(p,o,s) 0
#define _BITS_ERRNO_H 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_210(o,s,l) 0
#define _mm512_mask_fixupimm_round_ps(X,U,Y,Z,C,R) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), (R)))
#define _GLIBCXX_GTHREAD_USE_WEAK 1
#define CHECKED_I2D_OF(type,i2d) ((i2d_of_void*) (1 ? i2d : ((I2D_OF(type))0)))
#define _CMP_NGT_UQ 0x1a
#define OBJ_commonName OBJ_X509,3L
#define ERR_R_OSSL_STORE_LIB ERR_LIB_OSSL_STORE
#define OBJ_description OBJ_X509,13L
#define DH_F_DH_PUB_ENCODE 109
#define FALLOC_FL_ZERO_RANGE 0x10
#define BOOST_PP_INC_78 79
#define KU_KEY_AGREEMENT 0x0008
#define EC_F_ECKEY_PRIV_ENCODE 214
#define OBJ_sm4_cfb8 OBJ_sm_scheme,104L,6L
#define SN_pbeWithSHA1AndRC2_CBC "PBE-SHA1-RC2-64"
#define BOOST_PP_FOR_8_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(9, s) BOOST_PP_IIF(c, BOOST_PP_FOR_9, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(9, s), p, o, m)
#define LN_id_hex_partial_message "id-hex-partial-message"
#define NID_setct_CapReqTBS 544
#define FS_POLICY_FLAG_DIRECT_KEY FSCRYPT_POLICY_FLAG_DIRECT_KEY
#define __GTHREAD_COND_INIT PTHREAD_COND_INITIALIZER
#define SSL3_CK_DH_DSS_DES_192_CBC3_SHA 0x0300000D
#define PKCS7_F_PKCS7_DATADECODE 112
#define APACHE_THRIFT_ACCESSOR_interactionName 
#define FS_XFLAG_FILESTREAM 0x00004000
#define SSL_R_EXCESSIVE_MESSAGE_SIZE 152
#define __LDBL_REDIR1(name,proto,alias) name proto
#define PKCS7_F_PKCS7_CTRL 104
#define NID_hold_instruction_none 431
#define SSL_TXT_aGOST01 "aGOST01"
#define IORING_OFF_SQES 0x10000000ULL
#define _GLIBCXX_HAVE_FREXPF 1
#define _POSIX_SPIN_LOCKS 200809L
#define _GLIBCXX_HAVE_FREXPL 1
#define TLS1_CK_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C095
#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA 0x03000045
#define BOOST_PP_VARIADIC_ELEM(n,...) BOOST_PP_CAT(BOOST_PP_VARIADIC_ELEM_, n)(__VA_ARGS__,)
#define IDP_ONLYATTR 0x10
#define NID_houseIdentifier 889
#define BIO_C_FILE_TELL 133
#define BOOST_MPL_IS_SEQUENCE_HPP_INCLUDED 
#define LN_SMIME "S/MIME"
#define OBJ_F_OBJ_TXT2OBJ 108
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_216(o,s,l) 0
#define SSL_TXT_aGOST12 "aGOST12"
#define SSL_AD_MISSING_EXTENSION TLS13_AD_MISSING_EXTENSION
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_190 190
#define HEADER_BUFERR_H 
#define RWH_WRITE_LIFE_EXTREME 5
#define EALREADY 114
#define _mm_roundscale_round_ss(A,B,I,R) ((__m128) __builtin_ia32_rndscaless_mask_round ((__v4sf) (__m128) (A), (__v4sf) (__m128) (B), (int) (I), (__v4sf) _mm_setzero_ps (), (__mmask8) (-1), (int) (R)))
#define OBJ_INN OBJ_member_body,643L,3L,131L,1L,1L
#define NID_cmcRA 1132
#define TLS1_RFC_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384"
#define BOOST_PP_FOR_137_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(138, s) BOOST_PP_IIF(c, BOOST_PP_FOR_138, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(138, s), p, o, m)
#define SSL_CTRL_GET_CHAIN_CERTS 115
#define CRLDP_ALL_REASONS 0x807f
#define NID_des_ede3_ofb64 63
#define OBJ_associatedDomain OBJ_pilotAttributeType,37L
#define X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED 154
#define EAI_CANCELED -101
#define BIO_get_cipher_status(b) BIO_ctrl(b,BIO_C_GET_CIPHER_STATUS,0,NULL)
#define SSL_R_SSL_SESSION_VERSION_MISMATCH 210
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_103(p,o,s) 0
#define SSL_F_SSL_BUILD_CERT_CHAIN 332
#define __cpp_lib_shared_mutex 201505
#define POLLRDBAND 0x080
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_48(op,st,ss,sz) 0
#define SN_netscape_ca_revocation_url "nsCaRevocationUrl"
#define APACHE_THRIFT_ACCESSOR_proxiedPayloadMetadata 
#define BOOST_PP_LIST_FOLD_RIGHT_122(o,s,l) BOOST_PP_LIST_FOLD_LEFT_122(o, s, BOOST_PP_LIST_REVERSE_D(122, l))
#define OBJ_id_GostR3410_94_aBis OBJ_id_GostR3410_94,2L
#define _mm256_maskz_rol_epi32(U,A,B) ((__m256i)__builtin_ia32_prold256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm 1177
#define BUF_strdup(s) OPENSSL_strdup(s)
#define BOOST_PP_WHILE_56_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_57, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(57, s))
#define BOOST_PP_WHILE_257(p,o,s) BOOST_PP_ERROR(0x0001)
#define __FLT64X_MAX_10_EXP__ 4932
#define OBJ_id_tc26_gost_3410_2012_256_constants OBJ_id_tc26_sign_constants,1L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_82 82
#define SSL_MAX_KEY_ARG_LENGTH 8
#define _TYPEINFO 
#define SSL_F_SSL_GET_NEW_SESSION 181
#define MAP_TYPE 0x0f
#define SN_pbe_WithSHA1And40BitRC4 "PBE-SHA1-RC4-40"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_83 83
#define BOOST_PP_FOR_246_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(247, s) BOOST_PP_IIF(c, BOOST_PP_FOR_247, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(247, s), p, o, m)
#define _mm512_mask_i64gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256) __builtin_ia32_gatherdiv16sf ((__v8sf)(__m256) (V1OLD), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define _mm_mask_shuffle_epi32(W,U,X,C) ((__m128i) __builtin_ia32_pshufd128_mask ((__v4si)(__m128i)(X), (int)(C), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_84 84
#define FB_CONCATENATE(s1,s2) FB_CONCATENATE_IMPL(s1, s2)
#define BOOST_PP_TUPLE_TO_LIST_45(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))
#define PEM_R_UNSUPPORTED_KEY_COMPONENTS 126
#define TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA"
#define DH_R_DECODE_ERROR 104
#define _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE 1
#define EVP_SignInit(a,b) EVP_DigestInit(a,b)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_108(p,o,s) 0
#define SN_sm4_cbc "SM4-CBC"
#define NID_givenName 99
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_88 88
#define SN_setct_AuthRevResTBEB "setct-AuthRevResTBEB"
#define BIO_F_BIO_CONNECT_NEW 153
#define BOOST_PP_TUPLE_TO_LIST_49(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))
#define EVENT__HAVE_UINT8_T 1
#define _MM_EXCEPT_UNDERFLOW 0x0010
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001101 (0)(1)(0)(0)(1)(1)(0)(1),
#define BIO_C_SET_WRITE_BUF_SIZE 136
#define BOOST_PP_LIST_FOLD_RIGHT_127(o,s,l) BOOST_PP_LIST_FOLD_LEFT_127(o, s, BOOST_PP_LIST_REVERSE_D(127, l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100110 (1)(0)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100111 (1)(0)(0)(1)(1)(1),
#define SN_id_GostR3410_2001_CryptoPro_C_ParamSet "id-GostR3410-2001-CryptoPro-C-ParamSet"
#define BOOST_MSVC_FULL_VER_WORKAROUND_GUARD 1
#define FS_IOC_REMOVE_ENCRYPTION_KEY _IOWR('f', 24, struct fscrypt_remove_key_arg)
#define __cpp_lib_complex_udls 201309
#define BOOST_PP_LIST_FOLD_RIGHT_129(o,s,l) BOOST_PP_LIST_FOLD_LEFT_129(o, s, BOOST_PP_LIST_REVERSE_D(129, l))
#define SSL_set_max_cert_list(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_MAX_CERT_LIST,m,NULL)
#define EVUTIL_EAI_SYSTEM EAI_SYSTEM
#define RSA_R_UNKNOWN_PADDING_TYPE 118
#define NID_id_smime_mod_oid 198
#define __cpp_lib_atomic_ref 201806L
#define OPENSSL_NPN_NEGOTIATED 1
#define __USE_ISOCXX11 1
#define LN_name_constraints "X509v3 Name Constraints"
#define HEADER_OPENSSLV_H 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111000 (1)(1)(1)(0)(0)(0),
#define _mm256_mask_ror_epi32(W,U,A,B) ((__m256i)__builtin_ia32_prord256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define BOOST_HAS_FACET(Type,loc) std::has_facet< Type >(loc)
#define LN_aes_256_gcm "aes-256-gcm"
#define SSL3_CK_ADH_DES_64_CBC_SHA 0x0300001A
#define SSL_R_BAD_RECORD_TYPE 443
#define _mm256_alignr_epi32(X,Y,C) ((__m256i)__builtin_ia32_alignd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C), (__v8si)(__m256i)(X), (__mmask8)-1))
#define EVP_R_PUBLIC_KEY_NOT_RSA 106
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111011 (1)(1)(1)(0)(1)(1),
#define X509_V_ERR_CERT_REJECTED 28
#define BOOST_PP_LIST_FOLD_LEFT_4(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_5, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(5, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_aria_192_gcm 1124
#define CPU_OR_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, |)
#define SSL_TXT_aGOST94 "aGOST94"
#define ASN1_R_DATA_IS_WRONG 109
#define XKU_SSL_SERVER 0x1
#define EC_F_ECX_KEY_OP 266
#define LN_registeredAddress "registeredAddress"
#define BOOST_PP_SEQ_ELEM_170(_) BOOST_PP_SEQ_ELEM_169
#define sk_is_sorted OPENSSL_sk_is_sorted
#define BOOST_PP_FOR_97_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(98, s) BOOST_PP_IIF(c, BOOST_PP_FOR_98, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(98, s), p, o, m)
#define BOOST_PP_SEQ_ELEM_171(_) BOOST_PP_SEQ_ELEM_170
#define OBJ_set_brand_MasterCard OBJ_set_brand,5L
#define BOOST_PP_SEQ_ELEM_172(_) BOOST_PP_SEQ_ELEM_171
#define LN_id_GostR3410_2001_cc "GOST 34.10-2001 Cryptocom"
#define EC_F_EC_ASN1_GROUP2FIELDID 154
#define X509_F_X509_NAME_ENTRY_CREATE_BY_NID 114
#define BOOST_PP_RELATIVE_FINISH(i) BOOST_PP_CAT(BOOST_PP_RELATIVE_, i)(BOOST_PP_ITERATION_FINISH_)
#define BOOST_PP_SEQ_ELEM_174(_) BOOST_PP_SEQ_ELEM_173
#define _SIDD_CMP_EQUAL_EACH 0x08
#define _THRIFT_CONCURRENCY_EXCEPTION_H_ 1
#define _PSTL_USAGE_WARNINGS 0
#define BOOST_PP_FOR_36_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(37, s) BOOST_PP_IIF(c, BOOST_PP_FOR_37, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(37, s), p, o, m)
#define EXFLAG_BCONS 0x1
#define TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA256 "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256"
#define BOOST_PP_LIST_FOLD_LEFT_170(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_171, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(171, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __cpp_inheriting_constructors 201511L
#define LN_netscape_base_url "Netscape Base Url"
#define BOOST_PP_LIST_FOLD_LEFT_171(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_172, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(172, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_18(op,st,ss,sz) 0
#define __LDBL_MAX_EXP__ 16384
#define SN_id_smime_aa_contentReference "id-smime-aa-contentReference"
#define BIO_R_BROKEN_PIPE 124
#define DECLARE_PEM_write_bio_const(name,type) int PEM_write_bio_ ##name(BIO *bp, const type *x);
#define _mm256_alignr_epi64(X,Y,C) ((__m256i)__builtin_ia32_alignq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(C), (__v4di)(__m256i)(X), (__mmask8)-1))
#define BOOST_MPL_ASSERT_MSG(c,msg,types_) BOOST_MPL_ASSERT_MSG_IMPL( BOOST_MPL_AUX_PP_COUNTER(), c, msg, types_ )
#define _XABORT_DEBUG (1 << 4)
#define OBJ_X9_62_c2onb239v4 OBJ_X9_62_c_TwoCurve,14L
#define OBJ_X9_62_c2onb239v5 OBJ_X9_62_c_TwoCurve,15L
#define __glibcxx_function_requires(...) 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000100 (1)(1)(0)(0)(0)(1)(0)(0),
#define __MWERKS___WORKAROUND_GUARD 1
#define ENOTBLK 15
#define BOOST_PP_LIST_FOLD_LEFT_175(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_176, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(176, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define X509V3_ADD_KEEP_EXISTING 4L
#define BIO_R_UNSUPPORTED_PROTOCOL_FAMILY 131
#define EPROTOTYPE 91
#define ASN1_F_NDEF_PREFIX 127
#define _SC_XOPEN_VERSION _SC_XOPEN_VERSION
#define SSL_F_FINAL_SIG_ALGS 497
#define SSL_CTRL_SET_CLIENT_SIGALGS 101
#define BOOST_PP_LIST_FOLD_LEFT_179(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_180, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(180, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define F_SEAL_WRITE 0x0008
#define _mm_mask_i64scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4si ((void *) (ADDR), (__mmask8) (MASK), (__v2di)(__m128i) (INDEX), (__v4si)(__m128i) (V1), (int) (SCALE))
#define CHARTYPE_PRINTABLESTRING 0x10
#define NID_kx_rsa_psk 1042
#define SSL_CTRL_SESS_ACCEPT 24
#define BOOST_IS_UNION(T) __is_union(T)
#define _mm512_cvt_roundepu32_ps(A,B) (__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(A), (__v16sf)_mm512_undefined_ps(), -1, B)
#define BOOST_PP_LIST_FOLD_RIGHT_100(o,s,l) BOOST_PP_LIST_FOLD_LEFT_100(o, s, BOOST_PP_LIST_REVERSE_D(100, l))
#define BOOST_PP_LIST_FOLD_RIGHT_101(o,s,l) BOOST_PP_LIST_FOLD_LEFT_101(o, s, BOOST_PP_LIST_REVERSE_D(101, l))
#define BOOST_PP_DEC_55 54
#define BOOST_PP_LIST_FOLD_RIGHT_104(o,s,l) BOOST_PP_LIST_FOLD_LEFT_104(o, s, BOOST_PP_LIST_REVERSE_D(104, l))
#define BOOST_PP_LIST_FOLD_RIGHT_105(o,s,l) BOOST_PP_LIST_FOLD_LEFT_105(o, s, BOOST_PP_LIST_REVERSE_D(105, l))
#define OBJ_setct_PI OBJ_set_ctype,4L
#define __S_IREAD 0400
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_10(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_12(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_14(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_15(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_16(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_17(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_18(p,o,s) 0
#define BOOST_PP_CAT_I(a,b) a ## b
#define SN_cmcCA "cmcCA"
#define BOOST_PP_LIST_FOLD_RIGHT_110(o,s,l) BOOST_PP_LIST_FOLD_LEFT_110(o, s, BOOST_PP_LIST_REVERSE_D(110, l))
#define BOOST_PP_LIST_FOLD_RIGHT_111(o,s,l) BOOST_PP_LIST_FOLD_LEFT_111(o, s, BOOST_PP_LIST_REVERSE_D(111, l))
#define BOOST_PP_LIST_FOLD_RIGHT_112(o,s,l) BOOST_PP_LIST_FOLD_LEFT_112(o, s, BOOST_PP_LIST_REVERSE_D(112, l))
#define BOOST_PP_LIST_FOLD_RIGHT_114(o,s,l) BOOST_PP_LIST_FOLD_LEFT_114(o, s, BOOST_PP_LIST_REVERSE_D(114, l))
#define BOOST_PP_INC_87 88
#define BOOST_PP_LIST_FOLD_RIGHT_116(o,s,l) BOOST_PP_LIST_FOLD_LEFT_116(o, s, BOOST_PP_LIST_REVERSE_D(116, l))
#define BOOST_PP_LIST_FOLD_RIGHT_117(o,s,l) BOOST_PP_LIST_FOLD_LEFT_117(o, s, BOOST_PP_LIST_REVERSE_D(117, l))
#define BOOST_PP_LIST_FOLD_RIGHT_118(o,s,l) BOOST_PP_LIST_FOLD_LEFT_118(o, s, BOOST_PP_LIST_REVERSE_D(118, l))
#define SN_ffdhe4096 "ffdhe4096"
#define EVP_CCM_TLS_TAG_LEN 16
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010010 (0)(0)(1)(0)(0)(1)(0),
#define BOOST_PP_INC_88 89
#define X509_F_X509_TRUST_SET 141
#define EVP_rc2_cfb EVP_rc2_cfb64
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_43 43
#define NS_ANY_CA (NS_SSL_CA|NS_SMIME_CA|NS_OBJSIGN_CA)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_21(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_22(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_23(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_24(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_25(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_26(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_28(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_29(p,o,s) 0
#define PSK_MAX_PSK_LEN 256
#define SSL_F_CREATE_SYNTHETIC_MESSAGE_HASH 539
#define SN_sha384 "SHA384"
#define BOOST_PP_LIST_FOLD_RIGHT_120(o,s,l) BOOST_PP_LIST_FOLD_LEFT_120(o, s, BOOST_PP_LIST_REVERSE_D(120, l))
#define BOOST_PP_LIST_FOLD_RIGHT_121(o,s,l) BOOST_PP_LIST_FOLD_LEFT_121(o, s, BOOST_PP_LIST_REVERSE_D(121, l))
#define X509V3_F_V2I_CRLD 134
#define _SC_MB_LEN_MAX _SC_MB_LEN_MAX
#define BOOST_INTRUSIVE_DETAIL_EXCEPTION_DISPOSER_HPP 
#define FOLLY_HAVE_NOEXCEPT_FUNCTION_TYPE 1
#define SSL_BUILD_CHAIN_FLAG_CLEAR_ERROR 0x10
#define SSL_F_TLS_PARSE_CTOS_SIG_ALGS_CERT 615
#define EVP_R_NOT_XOF_OR_INVALID_LENGTH 178
#define BOOST_CORE_DEMANGLE_HPP_INCLUDED 
#define CONF_F_NCONF_GET_STRING 109
#define _GLIBCXX_HAVE_ENOSR 1
#define FOLLY_ALLOW_TFO 1
#define _mm_mask_i64scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv2di ((void *) (ADDR), (__mmask8) (MASK), (__v2di)(__m128i) (INDEX), (__v2di)(__m128i) (V1), (int) (SCALE))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_30(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_32(p,o,s) 0
#define _mm_rsqrt28_sd(A,B) __builtin_ia32_rsqrt28sd_round(B, A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_36(p,o,s) 0
#define SSL3_MT_ENCRYPTED_EXTENSIONS 8
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_38(p,o,s) 0
#define EVP_PKEY_HMAC NID_hmac
#define SSL_CTX_set_min_proto_version(ctx,version) SSL_CTX_ctrl(ctx, SSL_CTRL_SET_MIN_PROTO_VERSION, version, NULL)
#define __NTH(fct) __LEAF_ATTR fct throw ()
#define X509_V_ERR_SUBTREE_MINMAX 49
#define BOOST_PP_LIST_FOLD_RIGHT_133(o,s,l) BOOST_PP_LIST_FOLD_LEFT_133(o, s, BOOST_PP_LIST_REVERSE_D(133, l))
#define BOOST_PP_LIST_FOLD_RIGHT_134(o,s,l) BOOST_PP_LIST_FOLD_LEFT_134(o, s, BOOST_PP_LIST_REVERSE_D(134, l))
#define BOOST_PP_LIST_FOLD_RIGHT_135(o,s,l) BOOST_PP_LIST_FOLD_LEFT_135(o, s, BOOST_PP_LIST_REVERSE_D(135, l))
#define EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY 191
#define X509V3_F_LEVEL_ADD_NODE 168
#define SA_ONSTACK 0x08000000
#define RSA_F_PKEY_RSA_CTRL 143
#define _mm_insert_ps(D,S,N) ((__m128) __builtin_ia32_insertps128 ((__v4sf)(__m128)(D), (__v4sf)(__m128)(S), (int)(N)))
#define BOOST_PP_WHILE_21_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_22, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(22, s))
#define _mm256_maskz_slli_epi32(U,X,C) ((__m256i)__builtin_ia32_pslldi256_mask ((__v8si)(__m256i)(X), (int)(C), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define SOL_X25 262
#define BOOST_PP_REPEAT_FROM_TO_M_1_I(z,n,d,f,m,dt) BOOST_PP_REPEAT_FROM_TO_M_1_II(z, BOOST_PP_ADD_D(d, n, f), m, dt)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_40(p,o,s) 0
#define SN_mdc2 "MDC2"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_42(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_44(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_45(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_46(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_47(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_48(p,o,s) 0
#define O_APPEND 02000
#define BOOST_PP_LIST_FOLD_RIGHT_140(o,s,l) BOOST_PP_LIST_FOLD_LEFT_140(o, s, BOOST_PP_LIST_REVERSE_D(140, l))
#define NID_setct_AuthRevReqTBE 577
#define BOOST_PP_LIST_FOLD_RIGHT_144(o,s,l) BOOST_PP_LIST_FOLD_LEFT_144(o, s, BOOST_PP_LIST_REVERSE_D(144, l))
#define BOOST_PP_LIST_FOLD_RIGHT_145(o,s,l) BOOST_PP_LIST_FOLD_LEFT_145(o, s, BOOST_PP_LIST_REVERSE_D(145, l))
#define SN_hmacWithDstu34311 "hmacWithDstu34311"
#define BOOST_PP_LIST_FOLD_RIGHT_148(o,s,l) BOOST_PP_LIST_FOLD_LEFT_148(o, s, BOOST_PP_LIST_REVERSE_D(148, l))
#define _mm256_permute2_pd(X,Y,C,I) ((__m256d) __builtin_ia32_vpermil2pd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (__v4di)(__m256i)(C), (int)(I)))
#define SSL_R_SERVERHELLO_TLSEXT 275
#define _mm512_roundscale_round_pd(A,B,R) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_undefined_pd(), (__mmask8)(-1), R))
#define EC_R_PASSED_NULL_PARAMETER 134
#define _mm512_roundscale_round_ps(A,B,R) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_undefined_ps(), (__mmask16)(-1), R))
#define CRYPTO_F_PKEY_POLY1305_INIT 124
#define RAND_F_DATA_COLLECT_METHOD 127
#define SN_private_key_usage_period "privateKeyUsagePeriod"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_50(p,o,s) 0
#define BIO_dgram_get_mtu_overhead(b) (unsigned int)BIO_ctrl((b), BIO_CTRL_DGRAM_GET_MTU_OVERHEAD, 0, NULL)
#define _mm512_sqrt_round_pd(A,C) (__m512d)__builtin_ia32_sqrtpd512_mask(A, (__v8df)_mm512_undefined_pd(), -1, C)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_53(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_54(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_55(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_57(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_59(p,o,s) 0
#define _mm512_sqrt_round_ps(A,C) (__m512)__builtin_ia32_sqrtps512_mask(A, (__v16sf)_mm512_undefined_ps(), -1, C)
#define BOOST_PP_LIST_FOLD_RIGHT_150(o,s,l) BOOST_PP_LIST_FOLD_LEFT_150(o, s, BOOST_PP_LIST_REVERSE_D(150, l))
#define BOOST_PP_LIST_FOLD_RIGHT_151(o,s,l) BOOST_PP_LIST_FOLD_LEFT_151(o, s, BOOST_PP_LIST_REVERSE_D(151, l))
#define BOOST_PP_LIST_FOLD_RIGHT_152(o,s,l) BOOST_PP_LIST_FOLD_LEFT_152(o, s, BOOST_PP_LIST_REVERSE_D(152, l))
#define BOOST_PP_LIST_FOLD_RIGHT_153(o,s,l) BOOST_PP_LIST_FOLD_LEFT_153(o, s, BOOST_PP_LIST_REVERSE_D(153, l))
#define BOOST_PP_LIST_FOLD_RIGHT_154(o,s,l) BOOST_PP_LIST_FOLD_LEFT_154(o, s, BOOST_PP_LIST_REVERSE_D(154, l))
#define BOOST_PP_LIST_FOLD_RIGHT_155(o,s,l) BOOST_PP_LIST_FOLD_LEFT_155(o, s, BOOST_PP_LIST_REVERSE_D(155, l))
#define DOUBLE_CONVERSION_UNUSED __attribute__((unused))
#define BOOST_PP_LIST_FOLD_RIGHT_159(o,s,l) BOOST_PP_LIST_FOLD_LEFT_159(o, s, BOOST_PP_LIST_REVERSE_D(159, l))
#define SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN 204
#define COLL_WEIGHTS_MAX 255
#define NID_aria_256_cfb128 1077
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_60(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_61(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_62(p,o,s) 0
#define TCP_CORK 3
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_64(p,o,s) 0
#define EVP_MD_CTRL_ALG_CTRL 0x1000
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_66(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_67(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_69(p,o,s) 0
#define SSL_F_SSL_USE_RSAPRIVATEKEY 204
#define OPENSSL_INIT_ENGINE_RDRAND 0x00000200L
#define _GLIBCXX_USE_SENDFILE 1
#define BOOST_PP_LIST_FOLD_RIGHT_160(o,s,l) BOOST_PP_LIST_FOLD_LEFT_160(o, s, BOOST_PP_LIST_REVERSE_D(160, l))
#define BOOST_PP_LIST_FOLD_RIGHT_161(o,s,l) BOOST_PP_LIST_FOLD_LEFT_161(o, s, BOOST_PP_LIST_REVERSE_D(161, l))
#define BOOST_PP_LIST_FOLD_RIGHT_162(o,s,l) BOOST_PP_LIST_FOLD_LEFT_162(o, s, BOOST_PP_LIST_REVERSE_D(162, l))
#define BOOST_PP_LIST_FOLD_RIGHT_163(o,s,l) BOOST_PP_LIST_FOLD_LEFT_163(o, s, BOOST_PP_LIST_REVERSE_D(163, l))
#define __SIZEOF_POINTER__ 8
#define FOLLY_LIBEVENT_COMPAT_PLUCK2(name) ev_evcallback.evcb_cb_union.evcb_ ##name
#define BOOST_PP_LIST_FOLD_RIGHT_166(o,s,l) BOOST_PP_LIST_FOLD_LEFT_166(o, s, BOOST_PP_LIST_REVERSE_D(166, l))
#define BOOST_PP_LIST_FOLD_RIGHT_167(o,s,l) BOOST_PP_LIST_FOLD_LEFT_167(o, s, BOOST_PP_LIST_REVERSE_D(167, l))
#define BOOST_PP_LIST_FOLD_RIGHT_168(o,s,l) BOOST_PP_LIST_FOLD_LEFT_168(o, s, BOOST_PP_LIST_REVERSE_D(168, l))
#define BOOST_PP_LIST_FOLD_RIGHT_169(o,s,l) BOOST_PP_LIST_FOLD_LEFT_169(o, s, BOOST_PP_LIST_REVERSE_D(169, l))
#define X509_TRUST_DYNAMIC (1U << 0)
#define BOOST_PP_DETAIL_IBP_IS_VARIADIC_R_1 1,
#define SSL_get_cipher_name(s) SSL_CIPHER_get_name(SSL_get_current_cipher(s))
#define PTHREAD_COND_INITIALIZER { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }
#define NID_dsa_with_SHA224 802
#define _mm256_maskz_slli_epi64(U,X,C) ((__m256i)__builtin_ia32_psllqi256_mask ((__v4di)(__m256i)(X), (int)(C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_70(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_71(p,o,s) 0
#define IPV6_IPSEC_POLICY 34
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_73(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_74(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_77(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_78(p,o,s) 0
#define BOOST_CONFIG_HELPER_MACROS_HPP_INCLUDED 
#define BOOST_MPL_AUX_CONFIG_DTP_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_RIGHT_171(o,s,l) BOOST_PP_LIST_FOLD_LEFT_171(o, s, BOOST_PP_LIST_REVERSE_D(171, l))
#define BOOST_PP_LIST_FOLD_RIGHT_172(o,s,l) BOOST_PP_LIST_FOLD_LEFT_172(o, s, BOOST_PP_LIST_REVERSE_D(172, l))
#define BOOST_PP_LIST_FOLD_RIGHT_173(o,s,l) BOOST_PP_LIST_FOLD_LEFT_173(o, s, BOOST_PP_LIST_REVERSE_D(173, l))
#define BOOST_PP_LIST_FOLD_RIGHT_174(o,s,l) BOOST_PP_LIST_FOLD_LEFT_174(o, s, BOOST_PP_LIST_REVERSE_D(174, l))
#define BOOST_PP_FOR_29_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(30, s) BOOST_PP_IIF(c, BOOST_PP_FOR_30, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(30, s), p, o, m)
#define BOOST_PP_LIST_FOLD_RIGHT_177(o,s,l) BOOST_PP_LIST_FOLD_LEFT_177(o, s, BOOST_PP_LIST_REVERSE_D(177, l))
#define BOOST_PP_LIST_FOLD_RIGHT_178(o,s,l) BOOST_PP_LIST_FOLD_LEFT_178(o, s, BOOST_PP_LIST_REVERSE_D(178, l))
#define BOOST_PP_LIST_FOLD_RIGHT_179(o,s,l) BOOST_PP_LIST_FOLD_LEFT_179(o, s, BOOST_PP_LIST_REVERSE_D(179, l))
#define TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256 0x0300C02F
#define OBJ_id_mod_kea_profile_88 OBJ_id_pkix_mod,7L
#define IN6_IS_ADDR_MULTICAST(a) (((const uint8_t *) (a))[0] == 0xff)
#define LN_generationQualifier "generationQualifier"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_80(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_81(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_84(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_85(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_86(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_87(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_88(p,o,s) 0
#define BIO_C_NWRITE 146
#define SN_auth_psk "AuthPSK"
#define BOOST_PP_LIST_FOLD_RIGHT_180(o,s,l) BOOST_PP_LIST_FOLD_LEFT_180(o, s, BOOST_PP_LIST_REVERSE_D(180, l))
#define BOOST_PP_LIST_FOLD_RIGHT_181(o,s,l) BOOST_PP_LIST_FOLD_LEFT_181(o, s, BOOST_PP_LIST_REVERSE_D(181, l))
#define BOOST_PP_LIST_FOLD_RIGHT_182(o,s,l) BOOST_PP_LIST_FOLD_LEFT_182(o, s, BOOST_PP_LIST_REVERSE_D(182, l))
#define BOOST_PP_LIST_FOLD_RIGHT_183(o,s,l) BOOST_PP_LIST_FOLD_LEFT_183(o, s, BOOST_PP_LIST_REVERSE_D(183, l))
#define BOOST_PP_LIST_FOLD_RIGHT_186(o,s,l) BOOST_PP_LIST_FOLD_LEFT_186(o, s, BOOST_PP_LIST_REVERSE_D(186, l))
#define BOOST_PP_LIST_FOLD_RIGHT_187(o,s,l) BOOST_PP_LIST_FOLD_LEFT_187(o, s, BOOST_PP_LIST_REVERSE_D(187, l))
#define BOOST_PP_LIST_FOLD_RIGHT_189(o,s,l) BOOST_PP_LIST_FOLD_LEFT_189(o, s, BOOST_PP_LIST_REVERSE_D(189, l))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_93 93
#define __cpp_aligned_new 201606L
#define LN_pbeWithMD2AndRC2_CBC "pbeWithMD2AndRC2-CBC"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_94 94
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_95 95
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_91(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_92(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_94(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_95(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_96(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_97(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_98(p,o,s) 0
#define BIO_set_write_buf_size(b,size) (int)BIO_ctrl(b,BIO_C_SET_WRITE_BUF_SIZE,size,NULL)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_96 96
#define BOOST_PP_LIST_FOLD_RIGHT_190(o,s,l) BOOST_PP_LIST_FOLD_LEFT_190(o, s, BOOST_PP_LIST_REVERSE_D(190, l))
#define BOOST_PP_LIST_FOLD_RIGHT_191(o,s,l) BOOST_PP_LIST_FOLD_LEFT_191(o, s, BOOST_PP_LIST_REVERSE_D(191, l))
#define BOOST_PP_LIST_FOLD_RIGHT_192(o,s,l) BOOST_PP_LIST_FOLD_LEFT_192(o, s, BOOST_PP_LIST_REVERSE_D(192, l))
#define BOOST_PP_LIST_FOLD_RIGHT_193(o,s,l) BOOST_PP_LIST_FOLD_LEFT_193(o, s, BOOST_PP_LIST_REVERSE_D(193, l))
#define BOOST_PP_LIST_FOLD_RIGHT_194(o,s,l) BOOST_PP_LIST_FOLD_LEFT_194(o, s, BOOST_PP_LIST_REVERSE_D(194, l))
#define BOOST_PP_LIST_FOLD_RIGHT_195(o,s,l) BOOST_PP_LIST_FOLD_LEFT_195(o, s, BOOST_PP_LIST_REVERSE_D(195, l))
#define BOOST_PP_LIST_FOLD_RIGHT_199(o,s,l) BOOST_PP_LIST_FOLD_LEFT_199(o, s, BOOST_PP_LIST_REVERSE_D(199, l))
#define SSL_set_max_pipelines(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_MAX_PIPELINES,m,NULL)
#define OBJ_setct_HODInput OBJ_set_ctype,7L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_97 97
#define EC_F_EC_KEY_COPY 178
#define BOOST_MPL_VECTOR_HPP_INCLUDED 
#define SN_sm4_ctr "SM4-CTR"
#define BOOST_PP_INTERCEPT_212 
#define NID_dsa_with_SHA256 803
#define BOOST_PREPROCESSOR_SEQ_SEQ_HPP 
#define BOOST_PP_TUPLE_TO_LIST_59(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, (e58, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define TLS1_TXT_PSK_WITH_AES_256_GCM_SHA384 "PSK-AES256-GCM-SHA384"
#define OPENSSL_GLOBAL_REF(name) _shadow_ ##name
#define FOLLY_HAVE_UNALIGNED_ACCESS 1
#define __END_DECLS }
#define SSL_get_tmp_key(s,pk) SSL_ctrl(s,SSL_CTRL_GET_TMP_KEY,0,pk)
#define X509V3_F_R2I_PCI 155
#define RAND_F_RAND_POOL_GROW 125
#define __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
#define BOOST_PREPROCESSOR_LOGICAL_AND_HPP 
#define FICLONERANGE _IOW(0x94, 13, struct file_clone_range)
#define NID_title 106
#define BOOST_RV_REF_2_TEMPL_ARGS(TYPE,ARG1,ARG2) TYPE<ARG1, ARG2> &&
#define ASN1_F_PKCS5_PBE_SET0_ALGOR 215
#define FOLLY_PPC64 0
#define _mm512_mask_fnmsub_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfnmsubpd512_mask(A, B, C, U, R)
#define BOOST_PP_INTERCEPT_52 
#define EVP_add_digest_alias(n,alias) OBJ_NAME_add((alias),OBJ_NAME_TYPE_MD_METH|OBJ_NAME_ALIAS,(n))
#define M_LOG10Ef32 __f32 (0.434294481903251827651128918916605082)
#define _SC_2_PBS_MESSAGE _SC_2_PBS_MESSAGE
#define _NSIG (__SIGRTMAX + 1)
#define _CMP_LT_OQ 0x11
#define _CMP_LT_OS 0x01
#define EC_F_EC_PRE_COMP_NEW 196
#define _XOPEN_ENH_I18N 1
#define BOOST_PP_INTERCEPT_55 
#define SN_id_cmc_senderNonce "id-cmc-senderNonce"
#define BOOST_PP_IS_BEGIN_PARENS(...) BOOST_PP_DETAIL_IBP_SPLIT ( 0, BOOST_PP_DETAIL_IBP_CAT ( BOOST_PP_DETAIL_IBP_IS_VARIADIC_R_, BOOST_PP_DETAIL_IBP_IS_VARIADIC_C __VA_ARGS__ ) )
#define TCPOLEN_SACK_PERMITTED 2
#define OPENSSL_NO_RC5 
#define BOOST_BORLANDC_WORKAROUND_GUARD 1
#define FOLLY_HAVE_WEAK_SYMBOLS 1
#define _SC_TZNAME_MAX _SC_TZNAME_MAX
#define IP_IPSEC_POLICY 16
#define ASN1_F_UINT32_NEW 139
#define BOOST_DETAIL_BINARY_LITERAL_OPERATION(d,state) BOOST_DETAIL_SPLIT_AND_SWAP ( BOOST_PP_CAT( BOOST_DETAIL_BINARY_LITERAL_ELEMENT_, state ) )
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
#define TLSEXT_TYPE_next_proto_neg 13172
#define BOOST_MPL_PP_DEFAULT_PARAMS(n,param,value) BOOST_PP_REPEAT( n , BOOST_MPL_PP_AUX_DEFAULT_PARAM_FUNC , (param,value) )
#define TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA256 "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256"
#define BOOST_MPL_AUX_PREPROCESSOR_PARAMS_HPP_INCLUDED 
#define EC_F_EC_GROUP_GET_DEGREE 173
#define EVP_CIPHER_CTX_FLAG_WRAP_ALLOW 0x1
#define SSL_CTRL_GET_RAW_CIPHERLIST 110
#define RAND_R_ERROR_ENTROPY_POOL_WAS_IGNORED 127
#define BOOST_MPL_AUX_LAMBDA_SUPPORT(i,name,params) 
#define SN_id_cmc_transactionId "id-cmc-transactionId"
#define M_LOG10Ef64 __f64 (0.434294481903251827651128918916605082)
#define BOOST_PP_SLOT_CC_8_D(a,b,c,d,e,f,g,h) a ## b ## c ## d ## e ## f ## g ## h
#define BOOST_PP_SEQ_ELEM_185(_) BOOST_PP_SEQ_ELEM_184
#define OBJ_member_body OBJ_iso,2L
#define _mm256_maskz_extracti32x4_epi32(U,X,C) ((__m128i) __builtin_ia32_extracti32x4_256_mask ((__v8si)(__m256i) (X), (int) (C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG 0x0
#define RSA_PSS_SALTLEN_MAX_SIGN -2
#define SOL_NETLINK 270
#define APACHE_THRIFT_ACCESSOR_clientTimeoutMs 
#define BOOST_PP_REPEAT_3_205(m,d) BOOST_PP_REPEAT_3_204(m, d) m(4, 204, d)
#define BOOST_PP_SEQ_ELEM_187(_) BOOST_PP_SEQ_ELEM_186
#define _GLIBCXX_C_LOCALE_GNU 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_201(o,s,l) 0
#define SN_id_smime_ct_contentInfo "id-smime-ct-contentInfo"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_34(p,o,s) 0
#define BOOST_PP_WHILE_38_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_39, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(39, s))
#define BOOST_PP_SEQ_ELEM_188(_) BOOST_PP_SEQ_ELEM_187
#define EC_F_PKEY_EC_INIT 282
#define BIO_CTRL_DGRAM_MTU_EXCEEDED 43
#define B_ASN1_VIDEOTEXSTRING 0x0008
#define BOOST_PP_REPEAT_3_207(m,d) BOOST_PP_REPEAT_3_206(m, d) m(4, 206, d)
#define __SHRT_WIDTH__ 16
#define SOCK_DGRAM SOCK_DGRAM
#define _CTYPE_H 1
#define BOOST_PP_LIST_FOLD_LEFT_183(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_184, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(184, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define TLS1_RFC_ECDHE_RSA_WITH_AES_128_GCM_SHA256 "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
#define SN_cmcRA "cmcRA"
#define OBJ_pkcs9_emailAddress OBJ_pkcs9,1L
#define MS_NOEXEC 8
#define SSL_F_TLS_PARSE_STOC_MAXFRAGMENTLEN 581
#define M_LOG2El 1.442695040888963407359924681001892137L
#define BOOST_TT_ADD_CONST_HPP_INCLUDED 
#define BOOST_PP_FOR_213_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(214, s) BOOST_PP_IIF(c, BOOST_PP_FOR_214, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(214, s), p, o, m)
#define NID_RSA_SHA3_512 1119
#define OBJ_Security OBJ_internet,5L
#define BOOST_PP_SEQ_SIZE_207(_) BOOST_PP_SEQ_SIZE_208
#define TLS1_CK_PSK_WITH_NULL_SHA 0x0300002C
#define _GLIBCXX_BITS_SPECFUN_H 1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_37(p,o,s) 0
#define RSA_R_UNSUPPORTED_LABEL_SOURCE 163
#define X509_R_LOADING_CERT_DIR 103
#define EAI_SERVICE -8
#define NID_set_brand_Diners 637
#define __SI_MAX_SIZE 128
#define OBJ_NAME_TYPE_UNDEF 0x00
#define RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE 122
#define IOSQE_IO_HARDLINK (1U << IOSQE_IO_HARDLINK_BIT)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_209(o,s,l) 0
#define OpenSSL_add_all_digests() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_DIGESTS, NULL)
#define OBJ_hold_instruction_code OBJ_id_ce,23L
#define POSIX_MADV_DONTNEED 4
#define TLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA 0x0300C01E
#define BOOST_PP_INC_92 93
#define TLS1_RFC_RSA_PSK_WITH_NULL_SHA256 "TLS_RSA_PSK_WITH_NULL_SHA256"
#define BOOST_PP_REM(...) __VA_ARGS__
#define SSL_OP_NO_SSL_MASK (SSL_OP_NO_SSLv3| SSL_OP_NO_TLSv1|SSL_OP_NO_TLSv1_1|SSL_OP_NO_TLSv1_2|SSL_OP_NO_TLSv1_3)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_39(p,o,s) 0
#define _mm512_cvt_roundpd_epu32(A,B) ((__m256i)__builtin_ia32_cvtpd2udq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))
#define _SS_SIZE 128
#define RSA_R_RSA_OPERATIONS_NOT_SUPPORTED 130
#define RAND_F_RAND_POOL_BYTES_NEEDED 115
#define SCHAR_WIDTH 8
#define SN_id_cct_PKIData "id-cct-PKIData"
#define UDP_MAX_SEGMENTS (1 << 6UL)
#define NID_dhSinglePass_cofactorDH_sha512kdf_scheme 945
#define TLSEXT_hash_md5 1
#define O_TMPFILE __O_TMPFILE
#define __CHAR8_TYPE__ unsigned char
#define OBJ_jurisdictionLocalityName 1L,3L,6L,1L,4L,1L,311L,60L,2L,1L,1L
#define OBJ_mime_mhs_headings OBJ_mime_mhs,1L
#define BOOST_PP_INC_98 99
#define NID_rc2_64_cbc 166
#define PF_ASH 18
#define EXT_IA5STRING(nid) { nid, 0, ASN1_ITEM_ref(ASN1_IA5STRING), 0,0,0,0, (X509V3_EXT_I2S)i2s_ASN1_IA5STRING, (X509V3_EXT_S2I)s2i_ASN1_IA5STRING, 0,0,0,0, NULL}
#define SN_sendOwner "sendOwner"
#define BOOST_PP_REPEAT_1_56(m,d) BOOST_PP_REPEAT_1_55(m, d) m(2, 55, d)
#define IORING_FEAT_POLL_32BITS (1U << 6)
#define MADV_REMOVE 9
#define __WCOREDUMP(status) ((status) & __WCOREFLAG)
#define _WCHAR_T_ 
#define _BITS_SIGCONTEXT_H 1
#define BOOST_PP_REPEAT_1_57(m,d) BOOST_PP_REPEAT_1_56(m, d) m(2, 56, d)
#define EPERM 1
#define SSL_F_SSL3_GENERATE_KEY_BLOCK 238
#define _mm512_maskz_getexp_pd(U,A) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_64(s,p,o,m) 0
#define _mm512_maskz_getexp_ps(U,A) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDHE-ECDSA-CAMELLIA256-SHA384"
#define EVP_CTRL_GCM_SET_TAG EVP_CTRL_AEAD_SET_TAG
#define NID_setext_track2 605
#define BOOST_PP_FOR_64_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(65, s) BOOST_PP_IIF(c, BOOST_PP_FOR_65, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(65, s), p, o, m)
#define NID_crl_reason 141
#define FOLLY_FBV_UNROLL_PTR(first,last,OP) do { for (; (last) - (first) >= 4; (first) += 4) { OP(((first) + 0)); OP(((first) + 1)); OP(((first) + 2)); OP(((first) + 3)); } for (; (first) != (last); ++(first)) OP((first)); } while (0)
#define HUGE_VAL_F32 (__builtin_huge_valf32 ())
#define _mm_i64scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4si ((void *) (ADDR), (__mmask8)0xFF, (__v2di)(__m128i) (INDEX), (__v4si)(__m128i) (V1), (int) (SCALE))
#define APACHE_THRIFT_ACCESSOR_maxVersion 
#define SOL_XDP 283
#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_GCM_SHA384 "ECDHE-RSA-AES256-GCM-SHA384"
#define _PC_MAX_INPUT _PC_MAX_INPUT
#define PRIiFAST8 "i"
#define BOOST_PP_WHILE_115_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_116, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(116, s))
#define MFD_HUGETLB 4U
#define SN_id_smime_aa_ets_signerLocation "id-smime-aa-ets-signerLocation"
#define DH_R_BN_ERROR 106
#define LN_keyBag "keyBag"
#define X509V3_R_INVALID_PROXY_POLICY_SETTING 153
#define SN_md2WithRSAEncryption "RSA-MD2"
#define LN_kx_psk "kx-psk"
#define STA_DEL 0x0020
#define BOOST_PP_LIST_FOLD_RIGHT_131(o,s,l) BOOST_PP_LIST_FOLD_LEFT_131(o, s, BOOST_PP_LIST_REVERSE_D(131, l))
#define M_LOG10Ef32x __f32x (0.434294481903251827651128918916605082)
#define FIZZ_UNION_ACCESSOR(X,...) X* as ##X() { if (type_ == Type::X ##_E) { return &X ##_; } return nullptr; } X& tryAs ##X() { auto ptr = as ##X(); if (!ptr) { throw std::runtime_error("Mismatched access type"); } return *ptr; }
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_114(p,o,s) 0
#define NI_NAMEREQD 8
#define BIO_CTRL_DGRAM_MTU_DISCOVER 39
#define M_SQRT1_2f32x __f32x (0.707106781186547524400844362104849039)
#define _mm_maskz_shldi_epi16(A,B,C,D) ((__m128i) __builtin_ia32_vpshld_v8hi_mask ((__v8hi)(__m128i)(B), (__v8hi)(__m128i)(C),(int)(D), (__v8hi)(__m128i)_mm_setzero_si128 (), (__mmask8)(A)))
#define BOOST_MPL_AUX_HAS_APPLY_HPP_INCLUDED 
#define SN_id_smime_mod_msg_v3 "id-smime-mod-msg-v3"
#define _mm_i64scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv2di ((void *) (ADDR), (__mmask8)0xFF, (__v2di)(__m128i) (INDEX), (__v2di)(__m128i) (V1), (int) (SCALE))
#define BOOST_INTRUSIVE_DETAIL_GET_VALUE_TRAITS_HPP 
#define IORING_SETUP_CQSIZE (1U << 3)
#define BOOST_PP_SEQ_SIZE_4(_) BOOST_PP_SEQ_SIZE_5
#define TLS1_RFC_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"
#define _mm_cvt_roundss_i64(A,B) ((long long)__builtin_ia32_vcvtss2si64(A, B))
#define ASN1_F_NDEF_SUFFIX 136
#define O_EXCL 0200
#define TLS_MD_EXTENDED_MASTER_SECRET_CONST "extended master secret"
#define TLS1_TXT_ECDHE_PSK_WITH_RC4_128_SHA "ECDHE-PSK-RC4-SHA"
#define _mm256_permute4x64_epi64(X,M) ((__m256i) __builtin_ia32_permdi256 ((__v4di)(__m256i)(X), (int)(M)))
#define SOL_IP 0
#define CRYPTO_R_ODD_NUMBER_OF_DIGITS 103
#define BOOST_PP_LIST_FOLD_RIGHT_136(o,s,l) BOOST_PP_LIST_FOLD_LEFT_136(o, s, BOOST_PP_LIST_REVERSE_D(136, l))
#define BIO_CTRL_SET_CLOSE 9
#define _mm_maskz_shldi_epi32(A,B,C,D) ((__m128i) __builtin_ia32_vpshld_v4si_mask ((__v4si)(__m128i)(B), (__v4si)(__m128i)(C),(int)(D), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(A)))
#define TLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA 0x0300C01D
#define ITERATOR_TRAITS_DWA200347_HPP 
#define BOOST_UTILITY_ENABLE_IF_HPP 
#define SN_policy_constraints "policyConstraints"
#define SSL_F_TLS_PROCESS_SERVER_HELLO 369
#define lh_retrieve OPENSSL_LH_retrieve
#define BOOST_PP_REPEAT_3_44(m,d) BOOST_PP_REPEAT_3_43(m, d) m(4, 43, d)
#define LN_id_GostR3411_94_with_GostR3410_2001 "GOST R 34.11-94 with GOST R 34.10-2001"
#define SN_aes_256_cfb1 "AES-256-CFB1"
#define EC_R_LADDER_PRE_FAILURE 153
#define BOOST_PP_SEQ_FOLD_LEFT_13(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_13(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_REPEAT_3_146(m,d) BOOST_PP_REPEAT_3_145(m, d) m(4, 145, d)
#define __HAVE_FLOAT64X 1
#define BOOST_TT_IS_STATELESS_HPP_INCLUDED 
#define LN_rc5_cfb64 "rc5-cfb"
#define CONF_MFLAGS_DEFAULT_SECTION 0x20
#define _UNORDERED_SET_H 
#define X509_R_UNKNOWN_NID 109
#define BOOST_MOVE_FORCEINLINE BOOST_FORCEINLINE
#define ERR_LIB_OBJ 8
#define OBJ_OCSP_sign OBJ_id_kp,9L
#define AT_REMOVEDIR 0x200
#define SN_id_aca_group "id-aca-group"
#define LN_pbeWithMD5AndDES_CBC "pbeWithMD5AndDES-CBC"
#define OBJ_setct_AuthRevReqTBE OBJ_set_ctype,59L
#define SN_dsa_with_SHA3_512 "id-dsa-with-sha3-512"
#define __SOCKADDR_ARG struct sockaddr *__restrict
#define OBJ_setct_AuthRevReqTBS OBJ_set_ctype,23L
#define APACHE_THRIFT_ACCESSOR_t_map 
#define BOOST_PP_WHILE_73_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_74, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(74, s))
#define BOOST_MPL_AUX_CONFIG_FORWARDING_HPP_INCLUDED 
#define BOOST_PP_WHILE_109_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_110, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(110, s))
#define IPPROTO_IPIP IPPROTO_IPIP
#define SN_bf_ofb64 "BF-OFB"
#define _mm512_mask_fixupimm_pd(X,U,Y,Z,C) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define DECLARE_string(name) namespace fLS { extern GFLAGS_DLL_DECLARE_FLAG ::fLS::clstring& FLAGS_ ##name; } using fLS::FLAGS_ ##name
#define __f128(x) x ##q
#define _mm512_mask_fixupimm_ps(X,U,Y,Z,C) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define NID_id_alg_noSignature 324
#define EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL (EVP_PKEY_ALG_CTRL + 12)
#define NID_id_pkix_OCSP_acceptableResponses 368
#define BOOST_PP_SEQ_FOLD_LEFT_19(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_19(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_F_DTLS1_WRITE_BYTES 545
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101110 (0)(0)(1)(0)(1)(1)(1)(0),
#define SN_set_rootKeyThumb "set-rootKeyThumb"
#define GOOGLE_LOG_FATAL(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_FATAL, counter, &google::LogMessage::SendToLog)
#define DSA_FLAG_FIPS_METHOD 0x0400
#define TRAP_BRKPT TRAP_BRKPT
#define EAI_NODATA -5
#define OBJ_seed_ofb128 OBJ_kisa,1L,6L
#define BOOST_PP_REPEAT_3_211(m,d) BOOST_PP_REPEAT_3_210(m, d) m(4, 210, d)
#define BOOST_PP_SEQ_ELEM_193(_) BOOST_PP_SEQ_ELEM_192
#define LN_id_set "Secure Electronic Transactions"
#define BOOST_PP_REPEAT_3_212(m,d) BOOST_PP_REPEAT_3_211(m, d) m(4, 211, d)
#define SSL_AD_UNKNOWN_CA TLS1_AD_UNKNOWN_CA
#define V_ASN1_CONTEXT_SPECIFIC 0x80
#define BOOST_PP_WHILE_218_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_219, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(219, s))
#define __FLT_HAS_DENORM__ 1
#define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
#define BOOST_PP_REPEAT_3_213(m,d) BOOST_PP_REPEAT_3_212(m, d) m(4, 212, d)
#define __aligned_u64 __u64 __attribute__((aligned(8)))
#define BOOST_PP_LIST_FOLD_LEFT_190(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_191, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(191, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define OBJ_id_smime_aa_timeStampToken OBJ_id_smime_aa,14L
#define BOOST_TYPE_INDEX_STL_TYPE_INDEX_HPP 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_211(o,s,l) 0
#define SSL_OP_PKCS1_CHECK_2 0x0
#define _HASHTABLE_POLICY_H 1
#define BOOST_PP_SEQ_ELEM_198(_) BOOST_PP_SEQ_ELEM_197
#define __timeval_defined 1
#define INR_OPEN_MAX 4096
#define BOOST_STRINGIZE(X) BOOST_DO_STRINGIZE(X)
#define EVP_R_INVALID_DIGEST 152
#define ATOMIC_SHORT_LOCK_FREE __GCC_ATOMIC_SHORT_LOCK_FREE
#define TLS1_RT_CRYPTO 0x1000
#define SA_SIGINFO 4
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_214(o,s,l) 0
#define _mm_gf2p8affineinv_epi64_epi8(A,B,C) ((__m128i) __builtin_ia32_vgf2p8affineinvqb_v16qi((__v16qi)(__m128i)(A), (__v16qi)(__m128i)(B), (int)(C)))
#define BOOST_UTILITY_ADDRESSOF_HPP 
#define SSL_set1_chain(s,sk) SSL_ctrl(s,SSL_CTRL_CHAIN,1,(char *)(sk))
#define ELNRNG 48
#define BOOST_PP_LIST_FOLD_LEFT_196(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_197, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(197, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_60(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_61, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(61, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDH-RSA-CAMELLIA256-SHA384"
#define SN_brainpoolP192r1 "brainpoolP192r1"
#define SN_camellia_256_ofb128 "CAMELLIA-256-OFB"
#define BOOST_PP_LIST_FOLD_LEFT_198(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_199, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(199, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_36 36
#define _POSIX_HOST_NAME_MAX 255
#define BOOST_PP_REPEAT_2_113(m,d) BOOST_PP_REPEAT_2_112(m, d) m(3, 112, d)
#define BOOST_PREPROCESSOR_COMMA_IF_HPP 
#define _mm256_mask_insertf32x4(W,U,X,Y,C) ((__m256) __builtin_ia32_insertf32x4_256_mask ((__v8sf)(__m256) (X), (__v4sf)(__m128) (Y), (int) (C), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010 (1)(0)(1)(0),
#define _mm256_shuffle_epi32(A,N) ((__m256i)__builtin_ia32_pshufd256 ((__v8si)(__m256i)(A), (int)(N)))
#define SHA_DIGEST_LENGTH 20
#define _mm256_cvtps_ph(A,I) ((__m128i) __builtin_ia32_vcvtps2ph256 ((__v8sf)(__m256) (A), (int) (I)))
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
#define APACHE_THRIFT_ACCESSOR_return_type 
#define BOOST_PP_SEQ_FOLD_LEFT_I_161(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_162, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(162, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define MSG_DONTROUTE MSG_DONTROUTE
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_53 53
#define SN_hmac_sha3_224 "id-hmacWithSHA3-224"
#define SN_brainpoolP192t1 "brainpoolP192t1"
#define _mm256_mask_fixupimm_pd(X,U,Y,Z,C) ((__m256d)__builtin_ia32_fixupimmpd256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (__v4di)(__m256i)(Z), (int)(C), (__mmask8)(U)))
#define DECLARE_PEM_write_cb_bio(name,type) int PEM_write_bio_ ##name(BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u);
#define _mm_cmpistra(X,Y,M) ((int) __builtin_ia32_pcmpistria128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT 303
#define OBJ_setAttr_Token_EMV OBJ_setAttr_TokenType,1L
#define BIO_set_buffer_read_data(b,buf,num) BIO_ctrl(b,BIO_C_SET_BUFF_READ_DATA,num,buf)
#define NID_joint_iso_ccitt 393
#define _mm_aeskeygenassist_si128(X,C) ((__m128i) __builtin_ia32_aeskeygenassist128 ((__v2di)(__m128i)(X), (int)(C)))
#define ____sigval_t_defined 
#define PEM_F_PEM_SIGNFINAL 112
#define BOOST_PP_ENUM_BINARY_PARAMS_Z(z,count,p1,p2) BOOST_PP_REPEAT_ ## z(count, BOOST_PP_ENUM_BINARY_PARAMS_M, (p1, p2))
#define OBJ_id_smime_spq OBJ_SMIME,5L
#define FOLLY_CPLUSPLUS __cplusplus
#define __FLT32_MAX_EXP__ 128
#define PKCS7_R_UNKNOWN_DIGEST_TYPE 109
#define BOOST_PP_SEQ_FOLD_LEFT_I_163(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_164, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(164, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_F_SSL_SRP_CTX_INIT 313
#define TCP_QUICKACK 12
#define _GLIBCXX_STDIO_SEEK_CUR 1
#define MAP_ANON MAP_ANONYMOUS
#define LN_organizationName "organizationName"
#define _mm256_mask_range_ps(W,U,A,B,C) ((__m256) __builtin_ia32_rangeps256_mask ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define NID_subjectSignTool 1007
#define SSL3_TXT_RSA_RC4_40_MD5 "EXP-RC4-MD5"
#define BIO_CTRL_SET 4
#define LIBURING_UDATA_TIMEOUT ((__u64) -1)
#define SN_title "title"
#define _CS_LFS_LDFLAGS _CS_LFS_LDFLAGS
#define BOOST_PREPROCESSOR_LIST_LIST_FOR_EACH_I_HPP 
#define LONG_BIT 64
#define ERR_R_NESTED_ASN1_ERROR 58
#define BOOST_PP_SEQ_FOLD_LEFT_I_165(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_166, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(166, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000 (1)(0)(0)(0)(0),
#define SSL_F_TLS_PARSE_STOC_STATUS_REQUEST 585
#define BOOST_MPL_LAMBDA_FWD_HPP_INCLUDED 
#define NID_setct_CertResData 565
#define FP_NORMAL 4
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011001 (0)(0)(0)(1)(1)(0)(0)(1),
#define EVENT__HAVE_GETSERVBYNAME 1
#define X509V3_R_UNSUPPORTED_TYPE 167
#define BIO_CB_WRITE 0x03
#define _mm512_setr4_epi32(e0,e1,e2,e3) _mm512_set4_epi32(e3,e2,e1,e0)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010 (1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011 (1)(0)(0)(1)(1),
#define EVP_F_EVP_PKEY_VERIFY_INIT 143
#define _SC_CLK_TCK _SC_CLK_TCK
#define TLSEXT_TYPE_psk_kex_modes 45
#define _mm256_mask_shuffle_i64x2(W,U,X,Y,C) ((__m256i) __builtin_ia32_shuf_i64x2_256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(C), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define V_ASN1_GENERALIZEDTIME 24
#define CONF_MFLAGS_NO_DSO 0x8
#define SSL_R_DTLS_MESSAGE_TOO_BIG 334
#define TLS1_TXT_DH_RSA_WITH_AES_256_GCM_SHA384 "DH-RSA-AES256-GCM-SHA384"
#define TLS1_CK_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C098
#define NID_crlBag 153
#define SSL_R_WRONG_SIGNATURE_SIZE 265
#define SSL_CTRL_SET_SESS_CACHE_MODE 44
#define BOOST_MPL_LIST_AUX_PUSH_BACK_HPP_INCLUDED 
#define LN_sha224 "sha224"
#define _POSIX_THREAD_SPORADIC_SERVER -1
#define X509v3_KU_DIGITAL_SIGNATURE 0x0080
#define SN_pilot "pilot"
#define SN_uniqueIdentifier "uid"
#define X509_V_ERR_OCSP_VERIFY_FAILED 74
#define LN_rc2_ecb "rc2-ecb"
#define FSCRYPT_MODE_ADIANTUM 9
#define IPPROTO_IPV6 IPPROTO_IPV6
#define BIO_TYPE_BIO (19|BIO_TYPE_SOURCE_SINK)
#define OBJ_aria_256_gcm OBJ_aria,36L
#define SYS_F_SOCKET 4
#define MS_SYNC 4
#define X509V3_R_INVALID_NULL_NAME 108
#define ASN1_R_NESTED_ASN1_STRING 197
#define BOOST_PP_INTERCEPT_220 
#define _mm512_setr4_epi64(e0,e1,e2,e3) _mm512_set4_epi64(e3,e2,e1,e0)
#define NID_setct_MeAqCInitResTBS 561
#define __HAVE_FLOAT128X 0
#define BOOST_PP_INTERCEPT_221 
#define BOOST_PP_FOR_163_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(164, s) BOOST_PP_IIF(c, BOOST_PP_FOR_164, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(164, s), p, o, m)
#define X509_R_NO_CERT_SET_FOR_US_TO_VERIFY 105
#define _GLIBCXX_HAVE_GETIPINFO 1
#define BOOST_MPL_FIND_IF_HPP_INCLUDED 
#define BOOST_PP_SEQ_ELEM_152(_) BOOST_PP_SEQ_ELEM_151
#define BOOST_PP_SEQ_TAIL(seq) BOOST_PP_SEQ_TAIL_I seq
#define SSL_CTRL_SET_TMP_DH 3
#define BOOST_MPL_OR_HPP_INCLUDED 
#define __MMX_WITH_SSE__ 1
#define BOOST_PP_INTERCEPT_222 
#define SN_md5 "MD5"
#define SSL_F_TLS_PROCESS_CERTIFICATE_REQUEST 361
#define DH_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_DH, l, p, newf, dupf, freef)
#define OBJ_dsa_with_SHA3_384 OBJ_sigAlgs,7L
#define BN_R_INVALID_SHIFT 119
#define TLS1_RFC_PSK_WITH_AES_128_CCM_8 "TLS_PSK_WITH_AES_128_CCM_8"
#define _POSIX_REGEXP 1
#define __f64(x) x
#define BIO_pending(b) (int)BIO_ctrl(b,BIO_CTRL_PENDING,0,NULL)
#define UINT_LEAST8_MAX (255)
#define _mm512_fmsub_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmsubpd512_mask(A, B, C, -1, R)
#define BOOST_PP_INTERCEPT_61 
#define pthread_cleanup_push(routine,arg) do { __pthread_cleanup_class __clframe (routine, arg)
#define _POSIX_RE_DUP_MAX 255
#define NID_X9_62_c2pnb176v1 687
#define EC_F_EC_POINT_ADD 112
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM 0x0300C0AD
#define TLS1_RFC_RSA_WITH_AES_256_CCM "TLS_RSA_WITH_AES_256_CCM"
#define TLS1_RFC_ADH_WITH_AES_128_GCM_SHA256 "TLS_DH_anon_WITH_AES_128_GCM_SHA256"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111100 (0)(1)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111101 (0)(1)(1)(1)(1)(0)(1),
#define BOOST_PP_WHILE_253_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_254, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(254, s))
#define INFINITY (__builtin_inff ())
#define BIO_F_BIO_BIND 147
#define SSL_SECOP_OTHER_CERT (6 << 16)
#define SN_id_smime_aa_signingCertificate "id-smime-aa-signingCertificate"
#define __O_DSYNC 010000
#define NID_id_pbkdf2 69
#define NID_setct_AuthTokenTBS 537
#define _POSIX_MEMORY_PROTECTION 200809L
#define BOOST_PP_INTERCEPT_64 
#define SSL_TXT_ECDHE "ECDHE"
#define SCOPE_FAIL auto FB_ANONYMOUS_VARIABLE(SCOPE_FAIL_STATE) = ::folly::detail::ScopeGuardOnFail() + [&]() noexcept
#define SELECT_TYPE_DWA20010206_HPP 
#define _EVENT_LOG_ERR EVENT_LOG_ERR
#define GOOGLE_GLOG_DLL_DECL 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111110 (0)(1)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111111 (0)(1)(1)(1)(1)(1)(1),
#define __DEPRECATED 1
#define EAI_SOCKTYPE -7
#define TLS1_TXT_DH_RSA_WITH_AES_128_SHA256 "DH-RSA-AES128-SHA256"
#define _SC_RAW_SOCKETS _SC_RAW_SOCKETS
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_154 154
#define SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA 531
#define EXT_END { -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define FOLLY_HAS_MEMORY_RESOURCE 1
#define SSL3_MASTER_SECRET_SIZE 48
#define _mm512_cmp_epi64_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)-1))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_10(op,st,ss,sz) 0
#define SN_aes_128_cfb8 "AES-128-CFB8"
#define NID_documentPublisher 502
#define DSA_R_BN_ERROR 109
#define BOOST_ITERATOR_ADAPTOR_23022003THW_HPP 
#define PKCS7_F_PKCS7_FIND_DIGEST 127
#define TLS1_RT_CRYPTO_READ 0x0000
#define _SC_THREAD_SPORADIC_SERVER _SC_THREAD_SPORADIC_SERVER
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_12(op,st,ss,sz) 0
#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
#define _GLIBCXX_EXTERN_TEMPLATE 1
#define LN_initials "initials"
#define DHerr(f,r) ERR_PUT_error(ERR_LIB_DH,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define OBJ_sm_scheme OBJ_oscca,1L
#define SSL_R_PROTOCOL_IS_SHUTDOWN 207
#define __DEC128_EPSILON__ 1E-33DL
#define ERR_GET_REASON(l) (int)( (l) & 0xFFFL)
#define BIO_CTRL_SET_FILENAME 30
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_43(p,o,s) 0
#define _POSIX_TIMERS 200809L
#define _mm512_mask_gf2p8affineinv_epi64_epi8(A,B,C,D,E) ((__m512i) __builtin_ia32_vgf2p8affineinvqb_v64qi_mask( (__v64qi)(__m512i)(C), (__v64qi)(__m512i)(D), (int)(E), (__v64qi)(__m512i)(A), (__mmask64)(B)))
#define SSLEAY_BUILT_ON OPENSSL_BUILT_ON
#define PKCS7_DETACHED 0x40
#define SSL_AD_HANDSHAKE_FAILURE SSL3_AD_HANDSHAKE_FAILURE
#define BOOST_PP_SEQ_ELEM_4(_) BOOST_PP_SEQ_ELEM_3
#define B_ASN1_BIT_STRING 0x0400
#define S_BLKSIZE 512
#define SN_rsassaPss "RSASSA-PSS"
#define BOOST_PP_FOR_9_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(10, s) BOOST_PP_IIF(c, BOOST_PP_FOR_10, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(10, s), p, o, m)
#define BOOST_PP_REPEAT_3_224(m,d) BOOST_PP_REPEAT_3_223(m, d) m(4, 223, d)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_98(op,st,ss,sz) 0
#define TLS1_TXT_RSA_WITH_AES_256_CCM_8 "AES256-CCM8"
#define _mm512_maskz_permutex_epi64(M,X,I) ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), (int)(I), (__v8di)(__m512i) (_mm512_setzero_si512 ()), (__mmask8)(M)))
#define BOOST_PP_REPEAT_3_226(m,d) BOOST_PP_REPEAT_3_225(m, d) m(4, 225, d)
#define _mm256_mask_gf2p8affine_epi64_epi8(A,B,C,D,E) ((__m256i) __builtin_ia32_vgf2p8affineqb_v32qi_mask((__v32qi)(__m256i)(C), (__v32qi)(__m256i)(D), (int)(E), (__v32qi)(__m256i)(A), (__mmask32)(B)))
#define OBJ_ecdsa_with_SHA512 OBJ_ecdsa_with_Specified,4L
#define BOOST_PP_SEQ_ELEM_9(_) BOOST_PP_SEQ_ELEM_8
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_223(o,s,l) 0
#define ENOTSUP EOPNOTSUPP
#define BOOST_PP_REPEAT_3_228(m,d) BOOST_PP_REPEAT_3_227(m, d) m(4, 227, d)
#define SEGV_MAPERR SEGV_MAPERR
#define X509_R_BAD_SELECTOR 133
#define EC_F_OSSL_ECDH_COMPUTE_KEY 247
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_225(o,s,l) 0
#define OBJ_id_smime_ct_TDTInfo OBJ_id_smime_ct,5L
#define EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE 233
#define NID_sm4_ecb 1133
#define _mm512_max_round_pd(A,B,R) (__m512d)__builtin_ia32_maxpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, R)
#define SSL_CTRL_GET_SIGNATURE_NID 132
#define SSL_OP_EPHEMERAL_RSA 0x0
#define LOG_EVERY_N_VARNAME(base,line) LOG_EVERY_N_VARNAME_CONCAT(base, line)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_49(p,o,s) 0
#define BOOST_MPL_TAG_HPP_INCLUDED 
#define LN_jurisdictionCountryName "jurisdictionCountryName"
#define BIO_C_DO_STATE_MACHINE 101
#define EVP_MD_FLAG_ONESHOT 0x0001
#define FOLLY_PP_DETAIL_NARGS_1(dummy,_15,_14,_13,_12,_11,_10,_9,_8,_7,_6,_5,_4,_3,_2,_1,_0,...) _0
#define OBJ_id_it_currentCRL OBJ_id_it,6L
#define OBJ_id_pda_gender OBJ_id_pda,3L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100000 (1)(1)(1)(0)(0)(0)(0)(0),
#define OBJ_brainpoolP384r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,11L
#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA 0x03000044
#define _mm512_maskz_rsqrt28_pd(U,A) _mm512_maskz_rsqrt28_round_pd(U, A, _MM_FROUND_CUR_DIRECTION)
#define BIO_TYPE_NULL ( 6|BIO_TYPE_SOURCE_SINK)
#define NID_subject_key_identifier 82
#define TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C073
#define SN_aria_128_cfb128 "ARIA-128-CFB"
#define _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL 1
#define SN_ms_upn "msUPN"
#define RSA_R_NO_PUBLIC_EXPONENT 140
#define AF_RDS PF_RDS
#define __SIZEOF_SIZE_T__ 8
#define BOOST_PP_FOR_138_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(139, s) BOOST_PP_IIF(c, BOOST_PP_FOR_139, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(139, s), p, o, m)
#define __WEXITSTATUS(status) (((status) & 0xff00) >> 8)
#define EVP_PKEY_DSA1 NID_dsa_2
#define EVP_PKEY_DSA2 NID_dsaWithSHA
#define EVP_PKEY_DSA3 NID_dsaWithSHA1
#define EVP_PKEY_DSA4 NID_dsaWithSHA1_2
#define SSL_TXT_CAMELLIA256 "CAMELLIA256"
#define X509_F_X509_CRL_PRINT_FP 147
#define OBJ_brainpoolP384t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,12L
#define EVENT_LOG_DEBUG 0
#define BOOST_PP_WHILE_40_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_41, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(41, s))
#define _GLIBCXX_VERSION_INCLUDED 
#define NO_RECOVERY 3
#define _mm256_maskz_shrdi_epi16(A,B,C,D) ((__m256i) __builtin_ia32_vpshrd_v16hi_mask ((__v16hi)(__m256i)(B), (__v16hi)(__m256i)(C),(int)(D), (__v16hi)(__m256i)_mm256_setzero_si256 (), (__mmask16)(A)))
#define __FD_ZERO(fdsp) do { int __d0, __d1; __asm__ __volatile__ ("cld; rep; " __FD_ZERO_STOS : "=c" (__d0), "=D" (__d1) : "a" (0), "0" (sizeof (fd_set) / sizeof (__fd_mask)), "1" (&__FDS_BITS (fdsp)[0]) : "memory"); } while (0)
#define APACHE_THRIFT_ACCESSOR_agent 
#define INT_LEAST8_WIDTH 8
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_75(s,p,o,m) 0
#define _GLIBCXX_HAVE_INT64_T_LONG 1
#define __FLT64X_MIN_EXP__ (-16381)
#define _mm256_mask_i64gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gatherdiv4si256 ((__v4si)(__m128i) (SRC), (int const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4si)(__m128i) (MASK), (int) (SCALE))
#define SSL3_RFC_ADH_DES_192_CBC_SHA "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"
#define BOOST_PREVENT_MACRO_SUBSTITUTION 
#define THRIFT_IGNORE_ISSET_USE_WARNING_BEGIN 
#define BOOST_PP_FOR_247_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(248, s) BOOST_PP_IIF(c, BOOST_PP_FOR_248, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(248, s), p, o, m)
#define EVP_R_INVALID_IV_LENGTH 194
#define NID_cNAMERecord 483
#define _mm_mask_cmp_epu64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(P), (__mmask8)(M)))
#define OBJ_id_pkix_OCSP_serviceLocator OBJ_id_pkix_OCSP,7L
#define __CORRECT_ISO_CPP_STRING_H_PROTO 
#define _mm256_maskz_shrdi_epi32(A,B,C,D) ((__m256i) __builtin_ia32_vpshrd_v8si_mask ((__v8si)(__m256i)(B), (__v8si)(__m256i)(C),(int)(D), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)(A)))
#define ATOMIC_LONG_LOCK_FREE __GCC_ATOMIC_LONG_LOCK_FREE
#define _mm512_maskz_extractf64x4_pd(U,X,C) ((__m256d) __builtin_ia32_extractf64x4_mask ((__v8df)(__m512d) (X), (int) (C), (__v4df)(__m256d)_mm256_setzero_pd(), (__mmask8)(U)))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_122(p,o,s) 0
#define SSL_TXT_ECDSA "ECDSA"
#define BOOST_INTRUSIVE_DETAIL_DEFAULT_HEADER_HOLDER_HPP 
#define F_SETLEASE 1024
#define TLS1_CK_DHE_RSA_WITH_AES_128_CCM_8 0x0300C0A2
#define X509_TRUST_SSL_CLIENT 2
#define NID_aria_256_ecb 1075
#define SSL_F_DTLS1_WRITE_APP_DATA_BYTES 268
#define _GCC_WCHAR_T 
#define PEM_STRING_PKCS7 "PKCS7"
#define PEM_STRING_PKCS8 "ENCRYPTED PRIVATE KEY"
#define X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION 72
#define _mm256_mask_inserti32x4(W,U,X,Y,C) ((__m256i) __builtin_ia32_inserti32x4_256_mask ((__v8si)(__m256i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define NID_sha384 673
#define TLS1_RFC_PSK_WITH_RC4_128_SHA "TLS_PSK_WITH_RC4_128_SHA"
#define _mm256_mask_i64gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m256i) __builtin_ia32_gatherdiv4di ((__v4di)(__m256i) (SRC), (long long const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4di)(__m256i) (MASK), (int) (SCALE))
#define POLLNVAL 0x020
#define F_SETPIPE_SZ 1031
#define ADJ_TAI 0x0080
#define OBJ_id_smime_aa_signingCertificateV2 OBJ_id_smime_aa,47L
#define SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC 292
#define si_uid _sifields._kill.si_uid
#define OBJ_setCext_cCertRequired OBJ_set_certExt,3L
#define _mm512_mask_fmaddsub_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, C, U, R)
#define __WTERMSIG(status) ((status) & 0x7f)
#define SSL_R_EXT_LENGTH_MISMATCH 163
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111101 (1)(1)(1)(1)(0)(1),
#define _FE_ANON(x) FB_CONCATENATE(FOR_EACH_, FB_CONCATENATE(x, __LINE__))
#define _mm512_mask_fmaddsub_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, C, U, R)
#define _mm512_mask_range_round_pd(W,U,A,B,C,R) ((__m512d) __builtin_ia32_rangepd512_mask ((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U), (R)))
#define SSL3_CC_CLIENT 0x010
#define _mm512_mask_range_round_ps(W,U,A,B,C,R) ((__m512) __builtin_ia32_rangeps512_mask ((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U), (R)))
#define UINT_LEAST16_MAX (65535)
#define BOOST_PP_REPEAT_FROM_TO_M_2_II(z,n,m,dt) m(z, n, dt)
#define ERR_R_BN_LIB ERR_LIB_BN
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111110 (1)(1)(1)(1)(1)(0),
#define TLS13_AD_CERTIFICATE_REQUIRED 116
#define OBJ_private_key_usage_period OBJ_id_ce,16L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_129(p,o,s) 0
#define BOOST_PP_LIST_FOLD_RIGHT_147(o,s,l) BOOST_PP_LIST_FOLD_LEFT_147(o, s, BOOST_PP_LIST_REVERSE_D(147, l))
#define EVP_F_EVP_PKEY_KEYGEN_INIT 147
#define LN_aes_256_cbc "aes-256-cbc"
#define ASN1_STRFLGS_UTF8_CONVERT 0x10
#define SSL_get_tlsext_status_exts(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS,0,arg)
#define SIGQUIT 3
#define BOOST_PP_FOR_98_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(99, s) BOOST_PP_IIF(c, BOOST_PP_FOR_99, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(99, s), p, o, m)
#define CRYPTO_THREADID_current(id) 
#define TH_ACK 0x10
#define SSL_READ_EARLY_DATA_SUCCESS 1
#define BOOST_MPL_ITER_FOLD_HPP_INCLUDED 
#define SSL_ERROR_SSL 1
#define ITIMER_REAL ITIMER_REAL
#define GLOG_ERROR_MSG ERROR_macro_is_defined_Define_GLOG_NO_ABBREVIATED_SEVERITIES_before_including_logging_h_See_the_document_for_detail
#define TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA 0x0300C007
#define JEMALLOC_VERSION_GID_IDENT ea6b3e973b477b8061e0076bb257dbd7f3faa756
#define FOLLY_ALWAYS_INLINE inline __attribute__((__always_inline__))
#define BOOST_PP_SEQ_FOLD_LEFT_23(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_23(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVENT2_KEYVALQ_STRUCT_H_INCLUDED_ 
#define __cpp_lib_result_of_sfinae 201210
#define _mm_cvt_roundss_sd(A,B,C) (__m128d)__builtin_ia32_cvtss2sd_round(A, B, C)
#define BOOST_PP_REPEAT_FROM_TO_M_2_IM(z,n,im) BOOST_PP_REPEAT_FROM_TO_M_2_I(z, n, im)
#define BOOST_PP_LIST_REVERSE_O(d,s,x) (x, s)
#define TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA 0x0300C00D
#define BOOST_PP_CONFIG_DMC() 0x0040
#define HOST_NOT_FOUND 1
#define _mm_fmadd_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, B, C, R)
#define SEGV_ACCERR SEGV_ACCERR
#define LN_hmac "hmac"
#define _mm_fmadd_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, B, C, R)
#define SN_setct_PResData "setct-PResData"
#define BOOST_MPL_VECTOR_AUX_BEGIN_END_HPP_INCLUDED 
#define SYS_F_FCNTL 23
#define OpenSSL_add_ssl_algorithms() SSL_library_init()
#define BOOST_PP_REPEAT_FROM_TO_1(f,l,m,dt) BOOST_PP_REPEAT_FROM_TO_D_1(BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256), f, l, m, dt)
#define BOOST_PP_REPEAT_FROM_TO_3(f,l,m,dt) BOOST_PP_REPEAT_FROM_TO_D_3(BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256), f, l, m, dt)
#define SSL3_CK_DH_DSS_DES_64_CBC_SHA 0x0300000C
#define EVP_get_cipherbynid(a) EVP_get_cipherbyname(OBJ_nid2sn(a))
#define NID_id_tc26_gost_28147_constants 1002
#define X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH 31
#define _mm_maskz_add_round_sd(U,A,B,C) (__m128d)__builtin_ia32_addsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define HEADER_ASYNCERR_H 
#define _POSIX_ADVISORY_INFO 200809L
#define EVENT__HAVE_SYS_MMAN_H 1
#define _LOCALE_FWD_H 1
#define BOOST_HAS_TYPE_TRAITS_INTRINSICS 
#define _mm_maskz_add_round_ss(U,A,B,C) (__m128)__builtin_ia32_addss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define X509V3_F_I2V_AUTHORITY_INFO_ACCESS 138
#define SSL3_TXT_DH_DSS_DES_64_CBC_SHA "DH-DSS-DES-CBC-SHA"
#define _GLIBCXX_STRING_VIEW_TCC 1
#define X509V3_R_EXPECTED_A_SECTION_NAME 137
#define FOLLY_F14_CRC_INTRINSIC_AVAILABLE 0
#define SSL_F_TLS_PROCESS_CERT_STATUS_BODY 495
#define THRIFT_FLAG_DEFINE(_name,_type,_default) apache::thrift::detail::FlagWrapper<_type>& THRIFT_FLAG_WRAPPER__ ##_name() { static constexpr folly::StringPiece flagName = #_name; static folly::Indestructible<apache::thrift::detail::FlagWrapper<_type>> flagWrapper(flagName, _default); return *flagWrapper; } apache::thrift::detail::FlagWrapper<_type>& THRIFT_FLAG_WRAPPER__ ##_name()
#define BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_20(op,st,ss,sz) 0
#define PKCS7_set_detached(p,v) PKCS7_ctrl(p,PKCS7_OP_SET_DETACHED_SIGNATURE,v,NULL)
#define JEMALLOC_ALLOC_SIZE(s) JEMALLOC_ATTR(alloc_size(s))
#define BOOST_PREPROCESSOR_ITERATION_ITERATE_HPP 
#define TLSEXT_max_fragment_length_2048 3
#define EVBUFFER_WRITE BEV_EVENT_WRITING
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_22(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_246(op,st,ss,sz) 0
#define TLSEXT_hash_gostr34112012_256 238
#define BOOST_PP_LIST_FOLD_RIGHT_204(o,s,l) BOOST_PP_LIST_FOLD_LEFT_204(o, s, BOOST_PP_LIST_REVERSE_D(204, l))
#define BOOST_PP_LIST_FOLD_RIGHT_205(o,s,l) BOOST_PP_LIST_FOLD_LEFT_205(o, s, BOOST_PP_LIST_REVERSE_D(205, l))
#define BOOST_PP_LIST_FOLD_RIGHT_206(o,s,l) BOOST_PP_LIST_FOLD_LEFT_206(o, s, BOOST_PP_LIST_REVERSE_D(206, l))
#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 0x030000BD
#define BOOST_PP_LIST_FOLD_RIGHT_208(o,s,l) BOOST_PP_LIST_FOLD_LEFT_208(o, s, BOOST_PP_LIST_REVERSE_D(208, l))
#define BOOST_PP_LIST_FOLD_RIGHT_209(o,s,l) BOOST_PP_LIST_FOLD_LEFT_209(o, s, BOOST_PP_LIST_REVERSE_D(209, l))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_23(op,st,ss,sz) 0
#define _mm512_scalef_round_pd(A,B,C) (__m512d)__builtin_ia32_scalefpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)
#define NID_X9_62_prime_field 406
#define SSL_F_TLS_CONSTRUCT_CLIENT_VERIFY 489
#define SSL3_RT_MAX_ENCRYPTED_LENGTH (SSL3_RT_MAX_ENCRYPTED_OVERHEAD+SSL3_RT_MAX_COMPRESSED_LENGTH)
#define SRTP_AEAD_AES_256_GCM 0x0008
#define BOOST_PP_REPEAT_3_230(m,d) BOOST_PP_REPEAT_3_229(m, d) m(4, 229, d)
#define _GLIBCXX_HAVE_EWOULDBLOCK 1
#define BOOST_PP_SEQ_SIZE_12(_) BOOST_PP_SEQ_SIZE_13
#define _XOPEN_XPG2 1
#define _XOPEN_XPG3 1
#define _XOPEN_XPG4 1
#define BOOST_PP_LIST_FOLD_RIGHT_210(o,s,l) BOOST_PP_LIST_FOLD_LEFT_210(o, s, BOOST_PP_LIST_REVERSE_D(210, l))
#define BOOST_PP_LIST_FOLD_RIGHT_211(o,s,l) BOOST_PP_LIST_FOLD_LEFT_211(o, s, BOOST_PP_LIST_REVERSE_D(211, l))
#define BOOST_PP_LIST_FOLD_RIGHT_212(o,s,l) BOOST_PP_LIST_FOLD_LEFT_212(o, s, BOOST_PP_LIST_REVERSE_D(212, l))
#define __FLT64X_NORM_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define BOOST_PP_LIST_FOLD_RIGHT_215(o,s,l) BOOST_PP_LIST_FOLD_LEFT_215(o, s, BOOST_PP_LIST_REVERSE_D(215, l))
#define BOOST_PP_LIST_FOLD_RIGHT_216(o,s,l) BOOST_PP_LIST_FOLD_LEFT_216(o, s, BOOST_PP_LIST_REVERSE_D(216, l))
#define BOOST_PP_LIST_FOLD_RIGHT_217(o,s,l) BOOST_PP_LIST_FOLD_LEFT_217(o, s, BOOST_PP_LIST_REVERSE_D(217, l))
#define BOOST_PP_LIST_FOLD_RIGHT_218(o,s,l) BOOST_PP_LIST_FOLD_LEFT_218(o, s, BOOST_PP_LIST_REVERSE_D(218, l))
#define BOOST_PP_LIST_FOLD_RIGHT_219(o,s,l) BOOST_PP_LIST_FOLD_LEFT_219(o, s, BOOST_PP_LIST_REVERSE_D(219, l))
#define TLSEXT_ECPOINTFORMAT_last 2
#define BOOST_MPL_AUX_REVERSE_FOLD_IMPL_HPP_INCLUDED 
#define BOOST_PP_REPEAT_3_233(m,d) BOOST_PP_REPEAT_3_232(m, d) m(4, 232, d)
#define SN_id_it_suppLangTags "id-it-suppLangTags"
#define TCP_MD5SIG_MAXKEYLEN 80
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_18(o,s,l) 0
#define BOOST_PP_LIST_FOLD_RIGHT_220(o,s,l) BOOST_PP_LIST_FOLD_LEFT_220(o, s, BOOST_PP_LIST_REVERSE_D(220, l))
#define BOOST_PP_LIST_FOLD_RIGHT_222(o,s,l) BOOST_PP_LIST_FOLD_LEFT_222(o, s, BOOST_PP_LIST_REVERSE_D(222, l))
#define BOOST_PP_LIST_FOLD_RIGHT_224(o,s,l) BOOST_PP_LIST_FOLD_LEFT_224(o, s, BOOST_PP_LIST_REVERSE_D(224, l))
#define BOOST_PP_FOR_173_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(174, s) BOOST_PP_IIF(c, BOOST_PP_FOR_174, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(174, s), p, o, m)
#define BOOST_PP_LIST_FOLD_RIGHT_226(o,s,l) BOOST_PP_LIST_FOLD_LEFT_226(o, s, BOOST_PP_LIST_REVERSE_D(226, l))
#define BOOST_PP_LIST_FOLD_RIGHT_227(o,s,l) BOOST_PP_LIST_FOLD_LEFT_227(o, s, BOOST_PP_LIST_REVERSE_D(227, l))
#define BOOST_PP_LIST_FOLD_RIGHT_228(o,s,l) BOOST_PP_LIST_FOLD_LEFT_228(o, s, BOOST_PP_LIST_REVERSE_D(228, l))
#define THRIFT2_PROTOCOL_TBINARYPROTOCOL_TCC_ 1
#define NID_lastModifiedTime 476
#define IPV6_MULTICAST_IF 17
#define BOOST_PP_REPEAT_3_237(m,d) BOOST_PP_REPEAT_3_236(m, d) m(4, 236, d)
#define _mm256_alignr_epi8(A,B,N) ((__m256i) __builtin_ia32_palignr256 ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (int)(N) * 8))
#define LC_MONETARY_MASK (1 << __LC_MONETARY)
#define CT_F_I2O_SCT_SIGNATURE 109
#define SIGUSR1 10
#define LOG_OCCURRENCES LOG_EVERY_N_VARNAME(occurrences_, __LINE__)
#define BOOST_PP_LIST_FOLD_RIGHT_230(o,s,l) BOOST_PP_LIST_FOLD_LEFT_230(o, s, BOOST_PP_LIST_REVERSE_D(230, l))
#define BOOST_PP_LIST_FOLD_RIGHT_231(o,s,l) BOOST_PP_LIST_FOLD_LEFT_231(o, s, BOOST_PP_LIST_REVERSE_D(231, l))
#define SN_X9_62_id_characteristic_two_basis "id-characteristic-two-basis"
#define BOOST_PP_LIST_FOLD_RIGHT_234(o,s,l) BOOST_PP_LIST_FOLD_LEFT_234(o, s, BOOST_PP_LIST_REVERSE_D(234, l))
#define BOOST_PP_LIST_FOLD_RIGHT_237(o,s,l) BOOST_PP_LIST_FOLD_LEFT_237(o, s, BOOST_PP_LIST_REVERSE_D(237, l))
#define BOOST_PP_LIST_FOLD_RIGHT_238(o,s,l) BOOST_PP_LIST_FOLD_LEFT_238(o, s, BOOST_PP_LIST_REVERSE_D(238, l))
#define PKCS7_F_PKCS7_ENCRYPT 115
#define SIGUSR2 12
#define BOOST_PP_WHILE_111_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_112, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(112, s))
#define FOLLY_APPLE_IOS 0
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE 65
#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA "DHE-DSS-CAMELLIA256-SHA"
#define NID_id_Gost28147_89_CryptoPro_A_ParamSet 824
#define BOOST_TT_IS_LVALUE_REFERENCE_HPP_INCLUDED 
#define _mm256_shufflehi_epi16(A,N) ((__m256i)__builtin_ia32_pshufhw256 ((__v16hi)(__m256i)(A), (int)(N)))
#define BOOST_PP_LIST_FOLD_RIGHT_240(o,s,l) BOOST_PP_LIST_FOLD_LEFT_240(o, s, BOOST_PP_LIST_REVERSE_D(240, l))
#define BOOST_PP_LIST_FOLD_RIGHT_241(o,s,l) BOOST_PP_LIST_FOLD_LEFT_241(o, s, BOOST_PP_LIST_REVERSE_D(241, l))
#define BOOST_PP_LIST_FOLD_RIGHT_242(o,s,l) BOOST_PP_LIST_FOLD_LEFT_242(o, s, BOOST_PP_LIST_REVERSE_D(242, l))
#define BOOST_PP_LIST_FOLD_RIGHT_243(o,s,l) BOOST_PP_LIST_FOLD_LEFT_243(o, s, BOOST_PP_LIST_REVERSE_D(243, l))
#define BOOST_PP_LIST_FOLD_RIGHT_244(o,s,l) BOOST_PP_LIST_FOLD_LEFT_244(o, s, BOOST_PP_LIST_REVERSE_D(244, l))
#define BOOST_PP_LIST_FOLD_RIGHT_246(o,s,l) BOOST_PP_LIST_FOLD_LEFT_246(o, s, BOOST_PP_LIST_REVERSE_D(246, l))
#define BOOST_PP_LIST_FOLD_RIGHT_248(o,s,l) BOOST_PP_LIST_FOLD_LEFT_248(o, s, BOOST_PP_LIST_REVERSE_D(248, l))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_238(o,s,l) 0
#define _GLIBCXX_HAVE_STRINGS_H 1
#define _IOC_NONE 0U
#define BOOST_PP_LIST_FOLD_LEFT_73(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_74, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(74, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _POSIX_THREAD_ATTR_STACKSIZE 200809L
#define SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER 1047
#define BOOST_PP_INC_100 101
#define BOOST_PP_INC_101 102
#define BOOST_PP_INC_102 103
#define BOOST_PP_INC_103 104
#define BOOST_PP_INC_104 105
#define __GTHREAD_TIME_INIT {0,0}
#define BOOST_PP_INC_106 107
#define BOOST_PP_INC_108 109
#define BOOST_PP_INC_109 110
#define SHUT_RDWR SHUT_RDWR
#define PKCS7_R_UNABLE_TO_FIND_CERTIFICATE 106
#define SSL_R_COMPRESSED_LENGTH_TOO_LONG 140
#define BOOST_PP_SEQ_FOLD_LEFT_198(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_198(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_id_mod_cmp "id-mod-cmp"
#define BOOST_PP_LIST_FOLD_RIGHT_251(o,s,l) BOOST_PP_LIST_FOLD_LEFT_251(o, s, BOOST_PP_LIST_REVERSE_D(251, l))
#define BOOST_PP_LIST_FOLD_RIGHT_252(o,s,l) BOOST_PP_LIST_FOLD_LEFT_252(o, s, BOOST_PP_LIST_REVERSE_D(252, l))
#define _mm_cmp_ps_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpps128_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1))
#define BOOST_PP_LIST_FOLD_RIGHT_254(o,s,l) BOOST_PP_LIST_FOLD_LEFT_254(o, s, BOOST_PP_LIST_REVERSE_D(254, l))
#define BOOST_PP_LIST_FOLD_RIGHT_255(o,s,l) BOOST_PP_LIST_FOLD_LEFT_255(o, s, BOOST_PP_LIST_REVERSE_D(255, l))
#define BOOST_PP_LIST_FOLD_RIGHT_256(o,s,l) BOOST_PP_LIST_FOLD_LEFT_256(o, s, BOOST_PP_LIST_REVERSE_D(256, l))
#define O_DSYNC __O_DSYNC
#define BOOST_PREPROCESSOR_CONTROL_IF_HPP 
#define OBJ_ad_timeStamping OBJ_id_ad,3L
#define BOOST_PP_NODE_156(p) BOOST_PP_IIF(p(156), BOOST_PP_NODE_154, BOOST_PP_NODE_158)
#define TLS1_TXT_PSK_WITH_NULL_SHA256 "PSK-NULL-SHA256"
#define _GLIBCXX_HAVE_EBADMSG 1
#define BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED 
#define NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet 830
#define BOOST_PP_INC_110 111
#define BOOST_PP_INC_111 112
#define BOOST_PP_INC_112 113
#define BOOST_PP_INC_113 114
#define BOOST_PP_INC_114 115
#define __DECL_SIMD_cosf128 
#define BOOST_PP_INC_116 117
#define BOOST_PP_INC_117 118
#define BOOST_PP_INC_118 119
#define BOOST_PP_INC_119 120
#define BOOST_PP_WHILE_220_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_221, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(221, s))
#define SN_id_cct_PKIResponse "id-cct-PKIResponse"
#define _GLIBCXX_FUTURE 1
#define EVP_CTRL_RAND_KEY 0x6
#define OBJ_Mail OBJ_internet,7L
#define _mm512_maskz_cvt_roundepu32_ps(U,A,B) (__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(A), (__v16sf)_mm512_setzero_ps(), U, B)
#define THRIFT_UTIL_ENUMUTILS_H_ 1
#define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1
#define BOOST_MPL_LESS_HPP_INCLUDED 
#define NID_telexNumber 865
#define BOOST_PP_INC_120 121
#define BOOST_PP_INC_121 122
#define LN_kx_rsa_psk "kx-rsa-psk"
#define BOOST_PP_INC_123 124
#define BOOST_PP_INC_124 125
#define BOOST_PP_INC_125 126
#define BOOST_PP_INC_126 127
#define BOOST_PP_INC_127 128
#define BOOST_PP_INC_128 129
#define BOOST_PP_INC_129 130
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_67 67
#define TLS1_CK_DH_RSA_WITH_AES_256_SHA 0x03000037
#define SSL_CTRL_SET_SIGALGS_LIST 98
#define BOOST_PP_LIST_FOLD_LEFT_78(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_79, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(79, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm512_mul_round_pd(A,B,C) (__m512d)__builtin_ia32_mulpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)
#define _mm512_mul_round_ps(A,B,C) (__m512)__builtin_ia32_mulps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_68 68
#define BOOST_PP_SEQ_FOLD_LEFT_200(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_200(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000111 (1)(0)(0)(0)(1)(1)(1),
#define SO_PROTOCOL 38
#define BOOST_PP_LIST_FOLD_LEFT_79(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_80, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(80, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_F_TLS13_SAVE_HANDSHAKE_DIGEST_FOR_PHA 618
#define _mm_mask_getmant_pd(W,U,X,B,C) ((__m128d) __builtin_ia32_getmantpd128_mask ((__v2df)(__m128d) (X), (int)(((C)<<2) | (B)), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define BOOST_PP_INC_131 132
#define BOOST_PP_INC_132 133
#define BOOST_PP_INC_133 134
#define BOOST_PP_INC_134 135
#define BOOST_PP_INC_135 136
#define BOOST_PP_INC_136 137
#define BOOST_PP_INC_137 138
#define BOOST_PP_INC_138 139
#define BOOST_PP_VARIADIC_ELEM_11(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,...) e11
#define BOOST_PP_VARIADIC_ELEM_12(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,...) e12
#define BOOST_PP_VARIADIC_ELEM_13(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,...) e13
#define BOOST_PP_VARIADIC_ELEM_14(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,...) e14
#define BOOST_PP_VARIADIC_ELEM_15(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,...) e15
#define BOOST_PP_VARIADIC_ELEM_16(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,...) e16
#define BOOST_PP_VARIADIC_ELEM_17(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,...) e17
#define BOOST_PP_VARIADIC_ELEM_18(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,...) e18
#define BOOST_PP_VARIADIC_ELEM_19(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,...) e19
#define __FLT64X_DECIMAL_DIG__ 21
#define _POSIX_HIWAT _POSIX_PIPE_BUF
#define IP_BIND_ADDRESS_NO_PORT 24
#define X509_V_ERR_PERMITTED_VIOLATION 47
#define IP_MSFILTER 41
#define BOOST_PP_SEQ_ELEM_83(_) BOOST_PP_SEQ_ELEM_82
#define _STLPORT_VERSION_WORKAROUND_GUARD 1
#define BOOST_PP_INC_140 141
#define BOOST_PP_INC_141 142
#define BOOST_PP_INC_142 143
#define BOOST_PP_INC_143 144
#define BOOST_PP_INC_144 145
#define BOOST_PP_INC_145 146
#define BOOST_PP_INC_146 147
#define BOOST_PP_INC_147 148
#define NID_setAttr_PGWYcap 621
#define BOOST_PP_VARIADIC_ELEM_21(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,...) e21
#define BOOST_PP_VARIADIC_ELEM_22(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,...) e22
#define BOOST_PP_VARIADIC_ELEM_23(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,...) e23
#define BOOST_PP_VARIADIC_ELEM_24(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,...) e24
#define BOOST_PP_VARIADIC_ELEM_25(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,...) e25
#define BOOST_PP_VARIADIC_ELEM_26(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,...) e26
#define BOOST_PP_VARIADIC_ELEM_27(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,...) e27
#define EVP_R_ONLY_ONESHOT_SUPPORTED 177
#define BOOST_PP_VARIADIC_ELEM_29(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,...) e29
#define SSL_set_tlsext_host_name(s,name) SSL_ctrl(s,SSL_CTRL_SET_TLSEXT_HOSTNAME,TLSEXT_NAMETYPE_host_name, (void *)name)
#define BIO_set_mem_eof_return(b,v) BIO_ctrl(b,BIO_C_SET_BUF_MEM_EOF_RETURN,v,NULL)
#define PKCS7_S_TAIL 2
#define EVLIST_FINALIZING 0x40
#define BOOST_PP_INC_150 151
#define BOOST_PP_INC_151 152
#define BOOST_PP_INC_152 153
#define BOOST_PP_INC_153 154
#define BOOST_PP_INC_154 155
#define BOOST_PP_INC_156 157
#define BOOST_PP_INC_157 158
#define BOOST_PP_INC_158 159
#define BOOST_PP_VARIADIC_ELEM_31(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,...) e31
#define BOOST_PP_VARIADIC_ELEM_32(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,...) e32
#define BOOST_PP_VARIADIC_ELEM_33(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,...) e33
#define BOOST_PP_VARIADIC_ELEM_34(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,...) e34
#define BOOST_PP_VARIADIC_ELEM_35(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,...) e35
#define BOOST_PP_VARIADIC_ELEM_36(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,...) e36
#define LOGIN_NAME_MAX 256
#define BOOST_PP_VARIADIC_ELEM_39(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,...) e39
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS _CS_XBS5_ILP32_OFFBIG_LDFLAGS
#define _mm_rcp28_ss(A,B) __builtin_ia32_rcp28ss_round(B, A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_PREPROCESSOR_VARIADIC_HAS_OPT_HPP 
#define EDEADLOCK EDEADLK
#define _mm_cmp_epu32_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(P), (__mmask8)-1))
#define BOOST_TT_HAS_ACCURATE_BINARY_OPERATOR_DETECTION 
#define OBJ_md4WithRSAEncryption OBJ_pkcs1,3L
#define BN_prime_checks 0
#define __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X
#define M_PIf32 __f32 (3.141592653589793238462643383279502884)
#define LN_cast5_cfb64 "cast5-cfb"
#define __DEC64_MIN_EXP__ (-382)
#define BOOST_PP_INC_160 161
#define BOOST_PP_INC_161 162
#define BOOST_PP_INC_162 163
#define BOOST_PP_INC_163 164
#define BOOST_PP_INC_164 165
#define _mm512_shldi_epi32(A,B,C) ((__m512i) __builtin_ia32_vpshld_v16si ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B),(int)(C)))
#define BOOST_PP_INC_166 167
#define BOOST_PP_INC_167 168
#define BOOST_PP_INC_168 169
#define BOOST_PP_VARIADIC_ELEM_41(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,...) e41
#define BOOST_PP_VARIADIC_ELEM_42(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,...) e42
#define BOOST_PP_VARIADIC_ELEM_43(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,...) e43
#define BOOST_PP_VARIADIC_ELEM_44(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,...) e44
#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
#define BOOST_PP_VARIADIC_ELEM_46(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,...) e46
#define BOOST_PP_VARIADIC_ELEM_47(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,...) e47
#define BOOST_PP_VARIADIC_ELEM_48(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,...) e48
#define BOOST_PP_VARIADIC_ELEM_49(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,...) e49
#define EXFLAG_XKUSAGE 0x4
#define BOOST_MPL_INTEGRAL_C_HPP_INCLUDED 
#define SN_setct_PIDataUnsigned "setct-PIDataUnsigned"
#define __cpp_lib_invoke 201411L
#define BOOST_PP_SEQ_ELEM_169(_) BOOST_PP_SEQ_ELEM_168
#define BOOST_PP_ENUM_TRAILING_PARAMS_M(z,n,param) , param ## n
#define TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA 0x0300C017
#define BOOST_TT_IS_DEFAULT_CONSTRUCTIBLE_HPP_INCLUDED 
#define OBJ_id_tc26_hmac_gost_3411_2012_512 OBJ_id_tc26_mac,2L
#define BOOST_PP_INC_170 171
#define BOOST_PP_INC_171 172
#define BOOST_PP_INC_172 173
#define BOOST_PP_INC_173 174
#define BOOST_PP_INC_174 175
#define BOOST_PP_INC_175 176
#define BOOST_PP_INC_176 177
#define BOOST_PP_INC_177 178
#define BOOST_PP_INC_178 179
#define BOOST_PP_INC_179 180
#define BOOST_PP_VARIADIC_ELEM_52(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,...) e52
#define BOOST_PP_VARIADIC_ELEM_53(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,...) e53
#define BOOST_PP_VARIADIC_ELEM_54(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,...) e54
#define BOOST_PP_VARIADIC_ELEM_56(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,...) e56
#define BOOST_PP_VARIADIC_ELEM_57(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,...) e57
#define BOOST_PP_VARIADIC_ELEM_59(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,...) e59
#define DSA_F_DSA_METH_NEW 128
#define _GLIBCXX_HAVE_SYMLINK 1
#define THRIFT_PLUGGABLE_FUNC_REGISTER(_ret,_name,...) FOLLY_STORAGE_CONSTEXPR const ::apache::thrift::detail:: pluggable_function_type_t<THRIFT__PLUGGABLE_FUNC_TYPE_ ##_name> _name{THRIFT__PLUGGABLE_FUNC_DEFAULT_ ##_name}; _ret THRIFT__PLUGGABLE_FUNC_DEFAULT_ ##_name(__VA_ARGS__)
#define BOOST_TEMPLATED_STREAM_ELEM(E) E
#define NID_des_ede_cbc 43
#define OBJ_pkInitClientAuth OBJ_id_pkinit,4L
#define BOOST_PP_REPEAT_3_10(m,d) BOOST_PP_REPEAT_3_9(m, d) m(4, 9, d)
#define BOOST_PP_REPEAT_3_11(m,d) BOOST_PP_REPEAT_3_10(m, d) m(4, 10, d)
#define BOOST_PP_REPEAT_3_12(m,d) BOOST_PP_REPEAT_3_11(m, d) m(4, 11, d)
#define BOOST_PP_REPEAT_3_13(m,d) BOOST_PP_REPEAT_3_12(m, d) m(4, 12, d)
#define BOOST_PP_REPEAT_3_16(m,d) BOOST_PP_REPEAT_3_15(m, d) m(4, 15, d)
#define BOOST_PP_REPEAT_3_17(m,d) BOOST_PP_REPEAT_3_16(m, d) m(4, 16, d)
#define _mm256_maskz_shrdi_epi64(A,B,C,D) ((__m256i) __builtin_ia32_vpshrd_v4di_mask ((__v4di)(__m256i)(B), (__v4di)(__m256i)(C),(int)(D), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(A)))
#define BOOST_PP_INC_180 181
#define BOOST_PP_INC_181 182
#define BOOST_PP_INC_182 183
#define BOOST_PP_INC_183 184
#define BOOST_PP_INC_184 185
#define BOOST_PP_INC_185 186
#define BOOST_PP_INC_186 187
#define BOOST_PP_INC_187 188
#define BOOST_PP_VARIADIC_ELEM_60(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,...) e60
#define BOOST_PP_VARIADIC_ELEM_62(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,...) e62
#define BOOST_PP_VARIADIC_ELEM_63(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,...) e63
#define BOOST_PP_SEQ_FOLD_LEFT_207(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_207(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL3_MD_CLIENT_FINISHED_CONST "\x43\x4C\x4E\x54"
#define BOOST_PP_REPEAT_3_20(m,d) BOOST_PP_REPEAT_3_19(m, d) m(4, 19, d)
#define MAX_CANON 255
#define BOOST_PP_REPEAT_3_22(m,d) BOOST_PP_REPEAT_3_21(m, d) m(4, 21, d)
#define BOOST_PP_REPEAT_3_23(m,d) BOOST_PP_REPEAT_3_22(m, d) m(4, 22, d)
#define BOOST_PP_REPEAT_3_24(m,d) BOOST_PP_REPEAT_3_23(m, d) m(4, 23, d)
#define BOOST_PP_REPEAT_3_25(m,d) BOOST_PP_REPEAT_3_24(m, d) m(4, 24, d)
#define BOOST_PP_REPEAT_3_26(m,d) BOOST_PP_REPEAT_3_25(m, d) m(4, 25, d)
#define OBJ_stateOrProvinceName OBJ_X509,8L
#define M_PIf64 __f64 (3.141592653589793238462643383279502884)
#define BOOST_PP_REPEAT_3_29(m,d) BOOST_PP_REPEAT_3_28(m, d) m(4, 28, d)
#define BOOST_PP_ENUM_M_1_IM(z,n,im) BOOST_PP_ENUM_M_1_I(z, n, im)
#define BOOST_PP_INC_190 191
#define BOOST_PP_INC_191 192
#define CRYPTO_THREADID_set_numeric(id,val) 
#define BOOST_PP_INC_193 194
#define BOOST_PP_INC_194 195
#define BOOST_PP_INC_195 196
#define BOOST_PP_INC_196 197
#define BOOST_PP_INC_197 198
#define BOOST_PP_INC_198 199
#define BOOST_PP_INC_199 200
#define SN_pbe_WithSHA1And3_Key_TripleDES_CBC "PBE-SHA1-3DES"
#define SN_id_mod_cmp2000 "id-mod-cmp2000"
#define OBJ_pkcs8ShroudedKeyBag OBJ_pkcs12_BagIds,2L
#define BOOST_PP_FOR_105_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(106, s) BOOST_PP_IIF(c, BOOST_PP_FOR_106, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(106, s), p, o, m)
#define _STL_VECTOR_H 1
#define DTLS1_MT_HELLO_VERIFY_REQUEST 3
#define OBJ_biometricInfo OBJ_id_pe,2L
#define BOOST_PP_REPEAT_3_30(m,d) BOOST_PP_REPEAT_3_29(m, d) m(4, 29, d)
#define BOOST_PP_REPEAT_3_31(m,d) BOOST_PP_REPEAT_3_30(m, d) m(4, 30, d)
#define BOOST_PP_REPEAT_3_32(m,d) BOOST_PP_REPEAT_3_31(m, d) m(4, 31, d)
#define BOOST_PP_REPEAT_3_33(m,d) BOOST_PP_REPEAT_3_32(m, d) m(4, 32, d)
#define BOOST_PP_REPEAT_3_34(m,d) BOOST_PP_REPEAT_3_33(m, d) m(4, 33, d)
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)
#define BOOST_PP_REPEAT_3_36(m,d) BOOST_PP_REPEAT_3_35(m, d) m(4, 35, d)
#define BOOST_PP_REPEAT_3_37(m,d) BOOST_PP_REPEAT_3_36(m, d) m(4, 36, d)
#define BOOST_PP_REPEAT_3_38(m,d) BOOST_PP_REPEAT_3_37(m, d) m(4, 37, d)
#define NID_sect409k1 731
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110110 (1)(0)(1)(1)(0)(1)(1)(0),
#define BOOST_MPL_ITERATOR_RANGE_HPP_INCLUDED 
#define BOOST_PP_INTERCEPT_236 
#define RSA_F_RSA_PADDING_CHECK_SSLV23 114
#define PEM_STRING_ECPARAMETERS "EC PARAMETERS"
#define _GLIBCXX_HAVE_TANHF 1
#define SIG_SETMASK 2
#define _GLIBCXX_HAVE_TANHL 1
#define F_GET_SEALS 1034
#define fscrypt_policy fscrypt_policy_v1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110111 (1)(0)(1)(1)(0)(1)(1)(1),
#define LN_camellia_256_ofb128 "camellia-256-ofb"
#define __cpp_unicode_characters 201411L
#define SN_netscape_base_url "nsBaseUrl"
#define SN_auth_rsa "AuthRSA"
#define BOOST_PP_REPEAT_3_40(m,d) BOOST_PP_REPEAT_3_39(m, d) m(4, 39, d)
#define BOOST_PP_REPEAT_3_42(m,d) BOOST_PP_REPEAT_3_41(m, d) m(4, 41, d)
#define BOOST_PP_REPEAT_3_43(m,d) BOOST_PP_REPEAT_3_42(m, d) m(4, 42, d)
#define BOOST_PP_REPEAT_3_45(m,d) BOOST_PP_REPEAT_3_44(m, d) m(4, 44, d)
#define BOOST_PP_REPEAT_3_46(m,d) BOOST_PP_REPEAT_3_45(m, d) m(4, 45, d)
#define POSIX_MADV_SEQUENTIAL 2
#define _mm_maskz_getmant_sd(U,X,Y,C,D) ((__m128d)__builtin_ia32_getmantsd_mask_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), (__v2df)_mm_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define NID_auth_dss 1049
#define SN_sha512_224 "SHA512-224"
#define SN_id_aes128_wrap_pad "id-aes128-wrap-pad"
#define _mm_maskz_getmant_ss(U,X,Y,C,D) ((__m128)__builtin_ia32_getmantss_mask_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define SCNi16 "hi"
#define TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA 0x0300C019
#define _ISwbit(bit) ((bit) < 8 ? (int) ((1UL << (bit)) << 24) : ((bit) < 16 ? (int) ((1UL << (bit)) << 8) : ((bit) < 24 ? (int) ((1UL << (bit)) >> 8) : (int) ((1UL << (bit)) >> 24))))
#define SSL_EXT_DTLS_ONLY 0x0002
#define _SC_XOPEN_ENH_I18N _SC_XOPEN_ENH_I18N
#define BOOST_PP_REPEAT_3_50(m,d) BOOST_PP_REPEAT_3_49(m, d) m(4, 49, d)
#define BOOST_PP_FOR_214_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(215, s) BOOST_PP_IIF(c, BOOST_PP_FOR_215, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(215, s), p, o, m)
#define BOOST_PP_REPEAT_3_53(m,d) BOOST_PP_REPEAT_3_52(m, d) m(4, 52, d)
#define BOOST_PP_REPEAT_3_54(m,d) BOOST_PP_REPEAT_3_53(m, d) m(4, 53, d)
#define BOOST_PP_REPEAT_3_58(m,d) BOOST_PP_REPEAT_3_57(m, d) m(4, 57, d)
#define BOOST_PP_REPEAT_3_59(m,d) BOOST_PP_REPEAT_3_58(m, d) m(4, 58, d)
#define FS_XFLAG_PROJINHERIT 0x00000200
#define REG_RAX REG_RAX
#define _mm_maskz_rol_epi32(U,A,B) ((__m128i)__builtin_ia32_prold128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define SN_id_smime_aa_receiptRequest "id-smime-aa-receiptRequest"
#define SIGEV_SIGNAL SIGEV_SIGNAL
#define EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED 
#define EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE 150
#define CONF_R_NO_CLOSE_BRACE 102
#define F_UNLCK 2
#define BOOST_PP_REPEAT_3_60(m,d) BOOST_PP_REPEAT_3_59(m, d) m(4, 59, d)
#define BOOST_PP_REPEAT_3_61(m,d) BOOST_PP_REPEAT_3_60(m, d) m(4, 60, d)
#define BOOST_PP_REPEAT_3_62(m,d) BOOST_PP_REPEAT_3_61(m, d) m(4, 61, d)
#define BOOST_PP_REPEAT_3_63(m,d) BOOST_PP_REPEAT_3_62(m, d) m(4, 62, d)
#define BOOST_PP_REPEAT_3_64(m,d) BOOST_PP_REPEAT_3_63(m, d) m(4, 63, d)
#define BOOST_PP_REPEAT_3_65(m,d) BOOST_PP_REPEAT_3_64(m, d) m(4, 64, d)
#define BOOST_PP_REPEAT_3_66(m,d) BOOST_PP_REPEAT_3_65(m, d) m(4, 65, d)
#define BOOST_PP_REPEAT_3_68(m,d) BOOST_PP_REPEAT_3_67(m, d) m(4, 67, d)
#define CMSG_FIRSTHDR(mhdr) ((size_t) (mhdr)->msg_controllen >= sizeof (struct cmsghdr) ? (struct cmsghdr *) (mhdr)->msg_control : (struct cmsghdr *) 0)
#define REG_RBP REG_RBP
#define SCNi32 "i"
#define _mm512_mask_cvtt_roundpd_epi32(W,U,A,B) ((__m256i)__builtin_ia32_cvttpd2dq512_mask(A, (__v8si)(W), U, B))
#define REG_RBX REG_RBX
#define SSL_CTRL_SET_TLSEXT_DEBUG_CB 56
#define __BITS_SOCKET_H 
#define LN_certificateRevocationList "certificateRevocationList"
#define _mm512_div_round_pd(A,B,C) (__m512d)__builtin_ia32_divpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)
#define BIO_FLAGS_NONCLEAR_RST 0x400
#define _GLIBCXX_THROW(_EXC) 
#define _mm512_div_round_ps(A,B,C) (__m512)__builtin_ia32_divps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)
#define SN_X9_62_c2pnb368w1 "c2pnb368w1"
#define __catch(X) catch(X)
#define BOOST_PP_REPEAT_3_70(m,d) BOOST_PP_REPEAT_3_69(m, d) m(4, 69, d)
#define BOOST_PP_REPEAT_3_71(m,d) BOOST_PP_REPEAT_3_70(m, d) m(4, 70, d)
#define BOOST_PP_REPEAT_3_73(m,d) BOOST_PP_REPEAT_3_72(m, d) m(4, 72, d)
#define SSL_CTX_set_tmp_rsa(ctx,rsa) 1
#define st_mtime st_mtim.tv_sec
#define BOOST_PP_REPEAT_3_77(m,d) BOOST_PP_REPEAT_3_76(m, d) m(4, 76, d)
#define BOOST_PP_REPEAT_3_78(m,d) BOOST_PP_REPEAT_3_77(m, d) m(4, 77, d)
#define BOOST_PP_SEQ_SIZE_225(_) BOOST_PP_SEQ_SIZE_226
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_23(o,s,l) 0
#define LHASH_OF(type) struct lhash_st_ ##type
#define CRYPTO_EX_INDEX__COUNT 16
#define _PMMINTRIN_H_INCLUDED 
#define BN_F_BN_BN2HEX 105
#define _GLIBCXX_USE_NOEXCEPT noexcept
#define BOOST_PP_REPEAT_3_241(m,d) BOOST_PP_REPEAT_3_240(m, d) m(4, 240, d)
#define LN_anyExtendedKeyUsage "Any Extended Key Usage"
#define BOOST_PP_REPEAT_3_80(m,d) BOOST_PP_REPEAT_3_79(m, d) m(4, 79, d)
#define BOOST_PP_REPEAT_3_82(m,d) BOOST_PP_REPEAT_3_81(m, d) m(4, 81, d)
#define MSG_PROXY MSG_PROXY
#define BOOST_PP_REPEAT_3_85(m,d) BOOST_PP_REPEAT_3_84(m, d) m(4, 84, d)
#define BOOST_PP_REPEAT_3_86(m,d) BOOST_PP_REPEAT_3_85(m, d) m(4, 85, d)
#define BOOST_PP_REPEAT_3_87(m,d) BOOST_PP_REPEAT_3_86(m, d) m(4, 86, d)
#define OBJ_pkcs9_signingTime OBJ_pkcs9,5L
#define BOOST_PP_REPEAT_3_89(m,d) BOOST_PP_REPEAT_3_88(m, d) m(4, 88, d)
#define TCP_QUEUE_SEQ 21
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_38(op,st,ss,sz) 0
#define REG_RDX REG_RDX
#define NID_setct_AuthRevResTBE 578
#define OBJ_netscape 2L,16L,840L,1L,113730L
#define __INO_T_TYPE __SYSCALL_ULONG_TYPE
#define BOOST_MOVE_IS_TRIVIALLY_DEFAULT_CONSTRUCTIBLE(T) BOOST_MOVE_HAS_TRIVIAL_CONSTRUCTOR(T)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_0 0
#define SSL_F_TLS_PARSE_STOC_RENEGOTIATE 448
#define BOOST_PP_REPEAT_2_122(m,d) BOOST_PP_REPEAT_2_121(m, d) m(3, 121, d)
#define evutil_socket_error_to_string(errcode) (strerror(errcode))
#define NID_biometricInfo 285
#define V_ASN1_NEG 0x100
#define BOOST_PP_REPEAT_3_93(m,d) BOOST_PP_REPEAT_3_92(m, d) m(4, 92, d)
#define BOOST_PP_REPEAT_3_94(m,d) BOOST_PP_REPEAT_3_93(m, d) m(4, 93, d)
#define BOOST_PP_REPEAT_3_95(m,d) BOOST_PP_REPEAT_3_94(m, d) m(4, 94, d)
#define BOOST_PP_REPEAT_3_96(m,d) BOOST_PP_REPEAT_3_95(m, d) m(4, 95, d)
#define BOOST_PP_REPEAT_3_97(m,d) BOOST_PP_REPEAT_3_96(m, d) m(4, 96, d)
#define FOLLY_X64 1
#define _mm_maskz_srli_epi16(U,A,B) ((__m128i) __builtin_ia32_psrlwi128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)_mm_setzero_si128(), (__mmask8)(U)))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_58(p,o,s) 0
#define ASN1_F_ASN1_OUTPUT_DATA 214
#define SSL_CTRL_SESS_CONNECT 21
#define SCNi64 __PRI64_PREFIX "i"
#define _mm512_mask_cvtt_roundpd_epi64(W,U,A,B) ((__m512i)__builtin_ia32_cvttpd2qq512_mask ((A), (__v8di)(W), (U), (B)))
#define F_ULOCK 0
#define TLS1_RFC_RSA_PSK_WITH_NULL_SHA384 "TLS_RSA_PSK_WITH_NULL_SHA384"
#define _FALLOC_H_ 
#define __LDBL_DECIMAL_DIG__ 21
#define EVP_F_EVP_SIGNFINAL 107
#define BOOST_PP_SEQ_SIZE_182(_) BOOST_PP_SEQ_SIZE_183
#define BOOST_PP_FOR_65_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(66, s) BOOST_PP_IIF(c, BOOST_PP_FOR_66, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(66, s), p, o, m)
#define NID_sect409r1 732
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_246(o,s,l) 0
#define _mm256_bsrli_epi128(A,N) ((__m256i)__builtin_ia32_psrldqi256 ((__m256i)(A), (int)(N) * 8))
#define X509_V_FLAG_USE_CHECK_TIME 0x2
#define EDOTDOT 73
#define __sigval_t_defined 
#define BOOST_MPL_AUX_EMPTY_IMPL_HPP_INCLUDED 
#define _GLIBCXX_HAVE_EPERM 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_248(o,s,l) 0
#define TLS1_CK_PSK_WITH_AES_128_GCM_SHA256 0x030000A8
#define _mm_maskz_srli_epi32(U,A,B) ((__m128i) __builtin_ia32_psrldi128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)_mm_setzero_si128 (), (__mmask8)(U)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_5 5
#define BOOST_EMBTC_WORKAROUND_GUARD 1
#define SSL3_MT_SUPPLEMENTAL_DATA 23
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_49 49
#define SSL_CTX_set0_chain(ctx,sk) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN,0,(char *)(sk))
#define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 1
#define LN_camellia_192_cfb128 "camellia-192-cfb"
#define _POSIX_THREAD_PROCESS_SHARED 200809L
#define _GLIBCXX_HAVE_ISINFF 1
#define EVP_CIPH_OFB_MODE 0x4
#define INT_FAST32_MAX (9223372036854775807L)
#define SSL_R_MISSING_SRP_PARAM 358
#define _LOGGING_H_ 
#define LN_delta_crl "X509v3 Delta CRL Indicator"
#define SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY 1071
#define _SC_2_LOCALEDEF _SC_2_LOCALEDEF
#define si_pid _sifields._kill.si_pid
#define __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
#define BOOST_EXPLICIT_TEMPLATE_TYPE_SPEC(t) 
#define OBJ_setct_AcqCardCodeMsg OBJ_set_ctype,22L
#define SN_id_hex_partial_message "id-hex-partial-message"
#define NID_camellia_128_ofb128 766
#define REG_RIP REG_RIP
#define __nlink_t_defined 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_205(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_175(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_176, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(176, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define TLS1_CK_RSA_PSK_WITH_CHACHA20_POLY1305 0x0300CCAE
#define _PSTL_ASSERT(_Condition) __glibcxx_assert(_Condition)
#define LN_aria_128_cfb128 "aria-128-cfb"
#define EVP_PKEY_assign_POLY1305(pkey,polykey) EVP_PKEY_assign((pkey),EVP_PKEY_POLY1305, (char *)(polykey))
#define _MATH_H 1
#define DECLARE_ASN1_PRINT_FUNCTION_fname(stname,fname) int fname ##_print_ctx(BIO *out, stname *x, int indent, const ASN1_PCTX *pctx);
#define DEFINE_VARIABLE(type,shorttype,name,value,help) namespace fL ##shorttype { static const type FLAGS_nono ##name = value; GFLAGS_DLL_DEFINE_FLAG type FLAGS_ ##name = FLAGS_nono ##name; static type FLAGS_no ##name = FLAGS_nono ##name; static GFLAGS_NAMESPACE::FlagRegisterer o_ ##name( #name, MAYBE_STRIPPED_HELP(help), __FILE__, &FLAGS_ ##name, &FLAGS_no ##name); } using fL ##shorttype::FLAGS_ ##name
#define LC_MESSAGES_MASK (1 << __LC_MESSAGES)
#define _mm512_maskz_fmsub_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmsubps512_maskz(A, B, C, U, R)
#define REG_TRAPNO REG_TRAPNO
#define EVP_F_S390X_AES_GCM_CTRL 201
#define THRIFT_FLAG_SET_MOCK(_name,_val) THRIFT_FLAG_WRAPPER__ ##_name().setMockValue(_val)
#define BOOST_PP_REPEAT_2_241(m,d) BOOST_PP_REPEAT_2_240(m, d) m(3, 240, d)
#define EC_F_ECX_PRIV_ENCODE 267
#define TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA 0x0300C008
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_133(p,o,s) 0
#define SSL_get_signature_nid(s,pn) SSL_ctrl(s,SSL_CTRL_GET_SIGNATURE_NID,0,pn)
#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256 0x0300C025
#define _SC_THREAD_ROBUST_PRIO_INHERIT _SC_THREAD_ROBUST_PRIO_INHERIT
#define SSL_F_TLS_EARLY_POST_PROCESS_CLIENT_HELLO 521
#define AI_IDN_USE_STD3_ASCII_RULES __glibc_macro_warning ("AI_IDN_USE_STD3_ASCII_RULES is deprecated") 0x0200
#define PKCS7_get_detached(p) PKCS7_ctrl(p,PKCS7_OP_GET_DETACHED_SIGNATURE,0,NULL)
#define NID_camellia_256_cfb128 759
#define BOOST_PP_SEQ_FOLD_LEFT_57(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_57(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SOMAXCONN 4096
#define BOOST_PP_BOOL_52 1
#define BOOST_TT_IS_POD_HPP_INCLUDED 
#define BOOST_PP_SEQ_SIZE_143(_) BOOST_PP_SEQ_SIZE_144
#define BOOST_PP_SEQ_FOLD_LEFT_I_179(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_180, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(180, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define MADV_DODUMP 17
#define TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C077
#define _GLIBCXX_HAVE_WCSTOF 1
#define BIO_R_IN_USE 123
#define BOOST_PP_FOR_140_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(141, s) BOOST_PP_IIF(c, BOOST_PP_FOR_141, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(141, s), p, o, m)
#define X509V3_F_DO_EXT_NCONF 151
#define _GLIBCXX_WEAK_DEFINITION 
#define FOLLY_SAFE_CHECK(expr,...) FOLLY_DETAIL_SAFE_CHECK_IMPL( 0, 0, (expr), FOLLY_PP_STRINGIZE(expr), __VA_ARGS__)
#define __FLT128_DIG__ 33
#define FOLLY_PACK_POP 
#define SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES 243
#define TLS_MD_KEY_EXPANSION_CONST "key expansion"
#define ASN1_F_UINT32_C2I 105
#define __DEC128_MIN_EXP__ (-6142)
#define BOOST_PP_SEQ_FOLD_LEFT_30(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_30(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_TXT_kEECDH "kEECDH"
#define NID_id_smime_cti_ets_proofOfCreation 256
#define ILL_ILLTRP ILL_ILLTRP
#define OBJ_secp112r1 OBJ_secg_ellipticCurve,6L
#define OBJ_secp112r2 OBJ_secg_ellipticCurve,7L
#define BOOST_PP_SEQ_FOLD_LEFT_31(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_31(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_LIST_FOLD_RIGHT_157(o,s,l) BOOST_PP_LIST_FOLD_LEFT_157(o, s, BOOST_PP_LIST_REVERSE_D(157, l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110010 (0)(1)(1)(1)(0)(0)(1)(0),
#define __cpp_lib_constexpr_functional 201907L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001110 (0)(0)(0)(1)(1)(1)(0),
#define BOOST_PP_LIST_FOLD_RIGHT_2ND BOOST_PP_LIST_FOLD_RIGHT
#define EVP_F_EVP_PKEY_KEYGEN 146
#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
#define SSLv23_method TLS_method
#define OBJ_id_tc26_wrap OBJ_id_tc26_algorithms,7L
#define DSA_FLAG_NO_EXP_CONSTTIME 0x00
#define TLS1_RFC_PSK_WITH_AES_256_CCM_8 "TLS_PSK_WITH_AES_256_CCM_8"
#define TLS1_CK_ECDHE_PSK_WITH_NULL_SHA256 0x0300C03A
#define BIO_get_mem_ptr(b,pp) BIO_ctrl(b,BIO_C_GET_BUF_MEM_PTR,0, (char *)(pp))
#define FOLLY_DETAIL_SAFE_CHECK_LINKAGE static
#define RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1 154
#define X509V3_F_COPY_EMAIL 122
#define BIO_get_conn_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,1))
#define SIXTY_FOUR_BIT_LONG 
#define APACHE_THRIFT_ACCESSOR_opaque 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100000 (0)(1)(0)(0)(0)(0)(0),
#define BOOST_PP_SEQ_FOLD_LEFT_35(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_35(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA 0x0300C00C
#define ERR_LIB_PEM 9
#define BOOST_PP_SEQ_ELEM_157(_) BOOST_PP_SEQ_ELEM_156
#define _mm512_maskz_permutex_pd(U,X,M) ((__m512d) __builtin_ia32_permdf512_mask ((__v8df)(__m512d)(X), (int)(M), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))
#define TLS1_RFC_DHE_DSS_WITH_AES_256_SHA "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"
#define BOOST_PP_SEQ_FOLD_LEFT_37(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_37(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __FD_ZERO_STOS "stosq"
#define THRIFT_VERSION "1.0"
#define BOOST_PP_LIST_FOLD_RIGHT_7(o,s,l) BOOST_PP_LIST_FOLD_LEFT_7(o, s, BOOST_PP_LIST_REVERSE_D(7, l))
#define ESHUTDOWN 108
#define SN_id_cmc_decryptedPOP "id-cmc-decryptedPOP"
#define SSL_R_SRP_A_CALC 361
#define OBJ_setct_CRLNotificationResTBS OBJ_set_ctype,81L
#define OBJ_pbeWithMD5AndCast5_CBC OBJ_ISO_US,113533L,7L,66L,12L
#define BOOST_PP_SUB(x,y) BOOST_PP_TUPLE_ELEM(2, 0, BOOST_PP_WHILE(BOOST_PP_SUB_P, BOOST_PP_SUB_O, (x, y)))
#define _GLIBCXX_MOVE3(_Tp,_Up,_Vp) std::move(_Tp, _Up, _Vp)
#define _UNORDERED_MAP_H 
#define SSL_CTX_set_npn_advertised_cb SSL_CTX_set_next_protos_advertised_cb
#define REG_RSI REG_RSI
#define REG_RSP REG_RSP
#define SSL3_CT_FORTEZZA_DMS 20
#define BOOST_MPL_AUX_PREPROCESSOR_DEF_PARAMS_TAIL_HPP_INCLUDED 
#define EVBUFFER_LENGTH(x) evbuffer_get_length(x)
#define F_SETOWN __F_SETOWN
#define BOOST_PP_WHILE_142_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_143, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(143, s))
#define signal_pending(ev,tv) event_pending((ev), EV_SIGNAL, (tv))
#define NID_pkcs3 27
#define NID_pkcs5 187
#define NID_pkcs7 20
#define NID_pkcs9 47
#define CONF_F_SSL_MODULE_INIT 123
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_41(op,st,ss,sz) 0
#define BIO_C_GET_PREFIX 150
#define OBJ_id_smime_aa_ets_RevocationRefs OBJ_id_smime_aa,22L
#define SMIME_TEXT PKCS7_TEXT
#define SN_LocalKeySet "LocalKeySet"
#define OBJ_set_addPolicy OBJ_setAttr_Cert,1L
#define __INT8_TYPE__ signed char
#define _ALLOCATOR_H 1
#define LN_mailPreferenceOption "mailPreferenceOption"
#define __lwpval64(D2,D1,F) (__builtin_ia32_lwpval64 ((unsigned long long) (D2), (unsigned int) (D1), (unsigned int) (F)))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_43(op,st,ss,sz) 0
#define TLS1_CK_PSK_WITH_AES_256_CCM_8 0x0300C0A9
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_44(op,st,ss,sz) 0
#define NID_set_certExt 517
#define LN_caseIgnoreIA5StringSyntax "caseIgnoreIA5StringSyntax"
#define TLSEXT_hash_num 10
#define SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE 176
#define BOOST_VARIANT_DETAIL_VISITATION_IMPL_HPP 
#define SSL_SECOP_OTHER_PKEY (4 << 16)
#define _mm512_reduce_ps(A,B) ((__m512) __builtin_ia32_reduceps512_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_setzero_ps (), (__mmask16)-1))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_46(op,st,ss,sz) 0
#define LN_role "role"
#define BIO_C_NREAD 144
#define BOOST_PREPROCESSOR_LOGICAL_BITAND_HPP 
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS _CS_POSIX_V6_ILP32_OFF32_CFLAGS
#define OBJ_id_smime_cti_ets_proofOfOrigin OBJ_id_smime_cti,1L
#define ATOMIC_INT_LOCK_FREE __GCC_ATOMIC_INT_LOCK_FREE
#define _mm_cvtps_ph(A,I) ((__m128i) __builtin_ia32_vcvtps2ph ((__v4sf)(__m128) (A), (int) (I)))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_38(o,s,l) 0
#define FOLLY_HAS_INLINE_VARIABLES 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_250(o,s,l) 0
#define EC_F_EC_POINT_GET_AFFINE_COORDINATES 293
#define ASN1_F_ASN1_GENERATE_V3 178
#define ASYNC_F_ASYNC_PAUSE_JOB 103
#define BOOST_PP_LIST_FOLD_LEFT_81(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_82, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(82, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define FMT_USE_INT128 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_71 71
#define OPENSSL_DECLARE_EXIT 
#define _GLIBCXX_HAVE_MBSTATE_T 1
#define OBJ_F_OBJ_NAME_NEW_INDEX 106
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS
#define M_LN10f32x __f32x (2.302585092994045684017991454684364208)
#define SSL_R_RENEGOTIATION_MISMATCH 337
#define BN_RAND_TOP_ANY -1
#define PEM_R_EXPECTING_PUBLIC_KEY_BLOB 120
#define TLS1_CK_DHE_RSA_WITH_AES_128_CCM 0x0300C09E
#define SSL_R_INCONSISTENT_EARLY_DATA_SNI 231
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001000 (1)(1)(0)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100 (1)(0)(1)(0)(0),
#define NID_id_mod_kea_profile_93 276
#define BIO_CTRL_DGRAM_SET_PEEK_MODE 71
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111 (1)(0)(1)(1)(1),
#define __GLIBCXX_BITSIZE_INT_N_0 128
#define SCNdPTR __PRIPTR_PREFIX "d"
#define BOOST_PP_LIST_FOLD_LEFT_86(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_87, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(87, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BIO_CTRL_PEEK 29
#define TLS1_TXT_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 "ECDH-ARIA128-GCM-SHA256"
#define DH_R_BAD_GENERATOR 101
#define SCNxLEAST16 "hx"
#define BIO_C_SET_ACCEPT 118
#define BIO_CTRL_WPENDING 13
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100100 (0)(1)(1)(0)(0)(1)(0)(0),
#define TLS1_3_CK_AES_128_GCM_SHA256 0x03001301
#define LN_distinguishedName "distinguishedName"
#define _POSIX_ARG_MAX 4096
#define LN_idea_ofb64 "idea-ofb"
#define SSL_R_MISSING_DSA_SIGNING_CERT 165
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101000 (1)(1)(0)(1)(0)(0)(0),
#define EVP_CIPH_WRAP_MODE 0x10002
#define OBJ_setct_CertInqReqTBS OBJ_set_ctype,48L
#define BOOST_PP_LIST_FOLD_LEFT_88(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_89, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(89, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define FOLLY_HAVE_ACCEPT4 1
#define BOOST_PP_WHILE_83_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_84, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(84, s))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_78 78
#define ASN1_PKEY_CTRL_DEFAULT_MD_NID 0x3
#define BOOST_PP_LIST_FOLD_LEFT_89(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_90, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(90, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_235(o,s,l) 0
#define EVP_PKEY_CTRL_GET_DH_KDF_MD (EVP_PKEY_ALG_CTRL + 8)
#define SN_id_smime_alg "id-smime-alg"
#define SN_hmac_sha3_384 "id-hmacWithSHA3-384"
#define EVENT2_EVENT_STRUCT_H_INCLUDED_ 
#define BOOST_CONSTEXPR_EXPLICIT_OPERATOR_BOOL() BOOST_FORCEINLINE BOOST_CONSTEXPR explicit operator bool () const BOOST_NOEXCEPT { return !this->operator! (); }
#define _mm512_mask3_fmadd_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmaddps512_mask3(A, B, C, U, R)
#define WIFSTOPPED(status) __WIFSTOPPED (status)
#define _SC_FD_MGMT _SC_FD_MGMT
#define F_TEST 3
#define _mm256_maskz_roundscale_ps(U,A,B) ((__m256) __builtin_ia32_rndscaleps_256_mask ((__v8sf)(__m256)(A), (int)(B), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)(U)))
#define SN_id_mod_attribute_cert "id-mod-attribute-cert"
#define BOOST_MPL_PP_AUX_TAIL_PARAM_FUNC(unused,i,op) , BOOST_PP_CAT( BOOST_PP_TUPLE_ELEM(3, 1, op) , BOOST_PP_ADD_D(1, i, BOOST_PP_INC(BOOST_PP_TUPLE_ELEM(3, 0, op))) ) BOOST_PP_TUPLE_ELEM(3, 2, op)()
#define AF_VSOCK PF_VSOCK
#define SN_id_Gost28147_89 "gost89"
#define EVP_PKT_SIGN 0x0010
#define EVP_F_EVP_PKEY_METH_ADD0 194
#define SSL_R_HTTPS_PROXY_REQUEST 155
#define SSL_F_TLS_PROCESS_CERT_VERIFY 379
#define EVP_des_ede3_cfb EVP_des_ede3_cfb64
#define _mm512_mask_roundscale_round_pd(A,B,C,D,R) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(C), (int)(D), (__v8df)(__m512d)(A), (__mmask8)(B), R))
#define OBJ_id_tc26_gost_3410_2012_256_paramSetA OBJ_id_tc26_gost_3410_2012_256_constants,1L
#define OBJ_id_tc26_gost_3410_2012_256_paramSetB OBJ_id_tc26_gost_3410_2012_256_constants,2L
#define OBJ_id_tc26_gost_3410_2012_256_paramSetC OBJ_id_tc26_gost_3410_2012_256_constants,3L
#define APACHE_THRIFT_DEFINE_ACCESSOR(name) template <> struct access_field<::apache::thrift::tag::name> { template <typename T> FOLLY_ERASE constexpr auto operator()(T&& t) noexcept -> ::folly::like_t<T&&, decltype(::folly::remove_cvref_t<T>::name)> { return static_cast<T&&>(t).name; } }; template <> struct invoke_reffer<::apache::thrift::tag::name> { template <typename T, typename... A> FOLLY_ERASE constexpr auto operator()(T&& t, A&&... a) noexcept( noexcept(static_cast<T&&>(t).name ##_ref(static_cast<A&&>(a)...))) -> decltype(static_cast<T&&>(t).name ##_ref(static_cast<A&&>(a)...)) { return static_cast<T&&>(t).name ##_ref(static_cast<A&&>(a)...); } }; template <> struct invoke_setter<::apache::thrift::tag::name> { template <typename T, typename... A> FOLLY_ERASE constexpr auto operator()(T&& t, A&&... a) noexcept( noexcept(static_cast<T&&>(t).set_ ##name(static_cast<A&&>(a)...))) -> decltype(static_cast<T&&>(t).set_ ##name(static_cast<A&&>(a)...)) { return static_cast<T&&>(t).set_ ##name(static_cast<A&&>(a)...); } }
#define _GLIBCXX_HAVE_LIMIT_RSS 1
#define NID_mime_mhs_bodies 506
#define _mm512_maskz_rcp28_round_ps(U,A,C) __builtin_ia32_rcp28ps_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)
#define OBJ_X9_62_c2onb191v4 OBJ_X9_62_c_TwoCurve,8L
#define SN_setct_CapTokenTBEX "setct-CapTokenTBEX"
#define BOOST_PP_WHILE_145_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_146, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(146, s))
#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA"
#define _GLIBCXX_USE_DUAL_ABI 1
#define _GLIBCXX_HAVE_TIMESPEC_GET 1
#define S_IRUSR __S_IREAD
#define EVP_MD_CTX_FLAG_PAD_X931 0x10
#define NID_ms_upn 649
#define __SIZEOF_PTHREAD_COND_T 48
#define BOOST_MPL_NEXT_PRIOR_HPP_INCLUDED 
#define BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP 38
#define _GLIBCXX_CSTDIO 1
#define BOOST_MPL_AUX_CONFIG_ADL_HPP_INCLUDED 
#define SSL_F_DTLS1_HEARTBEAT 305
#define BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY(i,j,name) namespace aux { template< BOOST_MPL_PP_PARAMS(j, typename T) > struct template_arity< name< BOOST_MPL_PP_PARAMS(j, T) > > : int_<j> { }; template<> struct template_arity< name< BOOST_MPL_PP_ENUM(i, na) > > : int_<-1> { }; }
#define CRYPTO_F_OPENSSL_FOPEN 119
#define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
#define DTLS1_HM_FRAGMENT_RETRY -3
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010000 (0)(0)(1)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010001 (0)(0)(1)(0)(0)(0)(1),
#define SCNxLEAST64 __PRI64_PREFIX "x"
#define BOOST_PLATFORM "linux"
#define BOOST_PP_INTERCEPT_240 
#define BOOST_PP_WHILE_254_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_255, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(255, s))
#define PKCS7_NOATTR 0x100
#define X509_V_ERR_STORE_LOOKUP 70
#define SSL_TXT_kPSK "kPSK"
#define _GLIBCXX_HAVE_UTIME_H 1
#define STA_FLL 0x0008
#define NID_textEncodedORAddress 459
#define OBJ_X9_62_c2pnb208w1 OBJ_X9_62_c_TwoCurve,10L
#define EVP_PKEY_OP_TYPE_CRYPT (EVP_PKEY_OP_ENCRYPT | EVP_PKEY_OP_DECRYPT)
#define BN_R_BIGNUM_TOO_LONG 114
#define BN_F_BN_CTX_GET 116
#define CLOCK_TAI 11
#define BOOST_PP_FOR_32_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(33, s) BOOST_PP_IIF(c, BOOST_PP_FOR_33, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(33, s), p, o, m)
#define BOOST_PP_INTERCEPT_242 
#define SRTP_AES128_F8_SHA1_80 0x0003
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001110 (1)(0)(0)(0)(1)(1)(1)(0),
#define EC_F_EC_KEY_GENERATE_KEY 179
#define EVENT__HAVE_DLFCN_H 1
#define RSA_F_RSA_OSSL_PRIVATE_DECRYPT 101
#define BOOST_PP_INTERCEPT_244 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111111 (1)(1)(1)(1)(1)(1),
#define EVP_PKEY_CTRL_EC_ECDH_COFACTOR (EVP_PKEY_ALG_CTRL + 3)
#define ASN1_F_ASN1_CHECK_TLEN 104
#define NID_setct_CapReqTBEX 581
#define FOLLY_CREATE_STATIC_MEMBER_INVOKER(classname,membername) template <typename T> struct classname { template <typename... Args, typename U = T> FOLLY_MAYBE_UNUSED FOLLY_ERASE constexpr auto operator()(Args&&... args) const noexcept(noexcept(U::membername(static_cast<Args&&>(args)...))) -> decltype(U::membername(static_cast<Args&&>(args)...)) { return U::membername(static_cast<Args&&>(args)...); } }
#define __LC_PAPER 7
#define BOOST_PP_INTERCEPT_245 
#define BOOST_PP_INTERCEPT_82 
#define BOOST_FUNCTIONAL_HASH_FWD_HPP 
#define NID_domainComponent 391
#define BOOST_HAS_UNISTD_H 
#define _THRIFT_CONCURRENCY_THREAD_H_ 1
#define BOOST_VARIANT_DETAIL_BACKUP_HOLDER_HPP 
#define DH_FLAG_NO_EXP_CONSTTIME 0x00
#define SN_dhSinglePass_cofactorDH_sha256kdf_scheme "dhSinglePass-cofactorDH-sha256kdf-scheme"
#define SSL_EARLY_DATA_REJECTED 1
#define _mm_extracti_si64(X,I,L) ((__m128i) __builtin_ia32_extrqi ((__v2di)(__m128i)(X), (unsigned int)(I), (unsigned int)(L)))
#define EPROTO 71
#define _bswap(a) __bswapd(a)
#define BOOST_PREPROCESSOR_LOGICAL_BOOL_HPP 
#define SSL3_AL_WARNING 1
#define PRIdLEAST32 "d"
#define INT16_WIDTH 16
#define LN_physicalDeliveryOfficeName "physicalDeliveryOfficeName"
#define BOOST_PP_INTERCEPT_249 
#define d2i_DSAparams_fp(fp,x) (DSA *)ASN1_d2i_fp((char *(*)())DSA_new, (char *(*)())d2i_DSAparams,(fp),(unsigned char **)(x))
#define SSL_F_BYTES_TO_CIPHER_LIST 519
#define _mm256_maskz_srai_epi16(U,A,B) ((__m256i) __builtin_ia32_psrawi256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)_mm256_setzero_si256 (), (__mmask16)(U)))
#define INT_MAX __INT_MAX__
#define OPENSSL_clear_realloc(addr,old_num,num) CRYPTO_clear_realloc(addr, old_num, num, OPENSSL_FILE, OPENSSL_LINE)
#define ULLONG_MAX (LLONG_MAX * 2ULL + 1)
#define LC_PAPER_MASK (1 << __LC_PAPER)
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM_8 0x0300C0AE
#define BOOST_PP_INTERCEPT_87 
#define SO_COOKIE 57
#define _POSIX_MONOTONIC_CLOCK 0
#define BOOST_PP_REPEAT_1_70(m,d) BOOST_PP_REPEAT_1_69(m, d) m(2, 69, d)
#define FMT_NVCC 0
#define BIO_clear_retry_flags(b) BIO_clear_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY))
#define SSL_CTRL_SET_MSG_CALLBACK 15
#define F_NOTIFY 1026
#define IORING_SQ_CQ_OVERFLOW (1U << 1)
#define BIO_F_ACPT_STATE 100
#define __gwchar_t wchar_t
#define BOOST_VARIANT_GET_HPP 
#define _SC_2_PBS_ACCOUNTING _SC_2_PBS_ACCOUNTING
#define BOOST_OPTIONAL_FLC_19NOV2002_HPP 
#define NID_setCext_setExt 613
#define BOOST_PREPROCESSOR_REPETITION_REPEAT_FROM_TO_HPP 
#define SN_dod "DOD"
#define __UINT_FAST32_MAX__ 0xffffffffffffffffUL
#define SN_hold_instruction_none "holdInstructionNone"
#define ASN1_F_DO_CREATE 124
#define __INT_FAST8_TYPE__ signed char
#define _mm256_maskz_srai_epi32(U,A,B) ((__m256i) __builtin_ia32_psradi256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)_mm256_setzero_si256 (), (__mmask8)(U)))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_50(op,st,ss,sz) 0
#define DEFINE_SPECIAL_STACK_OF_CONST(t1,t2) SKM_DEFINE_STACK_OF(t1, const t2, t2)
#define IN_CLASSA_HOST (0xffffffff & ~IN_CLASSA_NET)
#define M_LOG10El 0.434294481903251827651128918916605082L
#define IP_RECVOPTS 6
#define CHECK_THROW(cond,E) do { if (!(cond)) { folly::throw_exception<E>("Check failed: " #cond); } } while (0)
#define _SC_PII_INTERNET_STREAM _SC_PII_INTERNET_STREAM
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_52(op,st,ss,sz) 0
#define BOOST_PP_SEQ_SIZE_236(_) BOOST_PP_SEQ_SIZE_237
#define BOOST_MOVE_IS_NOTHROW_COPY_CONSTRUCTIBLE(T) BOOST_MOVE_HAS_NOTHROW_COPY(T)
#define __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))
#define BOOST_INTEROPERABLE_23022003THW_HPP 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_42(o,s,l) 0
#define LN_userCertificate "userCertificate"
#define SA_NOCLDWAIT 2
#define BOOST_PP_CONFIG_EDG() 0x0020
#define _mm256_shufflelo_epi16(A,N) ((__m256i)__builtin_ia32_pshuflw256 ((__v16hi)(__m256i)(A), (int)(N)))
#define EVP_PKEY_CTX_get_ecdh_cofactor_mode(ctx) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_ECDH_COFACTOR, -2, NULL)
#define IP_MULTICAST_TTL 33
#define BOOST_USE_FACET(Type,loc) std::use_facet< Type >(loc)
#define BOOST_PP_SEQ_SIZE_238(_) BOOST_PP_SEQ_SIZE_239
#define EC_F_O2I_ECPUBLICKEY 152
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_57(op,st,ss,sz) 0
#define TLS1_CK_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 0x0300C05F
#define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
#define _SC_SEM_NSEMS_MAX _SC_SEM_NSEMS_MAX
#define BOOST_PP_WHILE_154_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_155, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(155, s))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_68(p,o,s) 0
#define _mm512_prefetch_i32scatter_pd(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdpd ((__mmask8)0xFF, (__v8si)(__m256i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define NID_pkcs9_contentType 50
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_58(op,st,ss,sz) 0
#define SSL_F_SSL3_FINISH_MAC 587
#define _mm512_prefetch_i32scatter_ps(ADDR,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdps ((__mmask16)0xFFFF, (__v16si)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE 1113
#define BOOST_PP_WHILE_41_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_42, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(42, s))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_59(op,st,ss,sz) 0
#define NID_ED448 1088
#define PEM_STRING_X509_REQ "CERTIFICATE REQUEST"
#define BIO_C_SET_CONNECT_MODE 155
#define RAND_F_RAND_DRBG_NEW 109
#define _mm256_maskz_srai_epi64(U,A,B) ((__m256i) __builtin_ia32_psraqi256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)_mm256_setzero_si256 (), (__mmask8)(U)))
#define PEM_TYPE_CLEAR 40
#define __LONG_LONG_PAIR(HI,LO) LO, HI
#define SN_dsa "DSA"
#define _mm_cvt_roundi32_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss32(A, B, C)
#define OBJ_pkcs12 OBJ_pkcs,12L
#define RSA_F_RSA_OSSL_PRIVATE_ENCRYPT 102
#define ASN1_R_INVALID_UNIVERSALSTRING_LENGTH 133
#define FOLLY_PACK_ATTR __attribute__((__packed__))
#define ASN1_R_ERROR_GETTING_TIME 173
#define DSA_FLAG_NON_FIPS_ALLOW 0x0400
#define V_ASN1_APP_CHOOSE -2
#define BOOST_PP_BOOL_133 1
#define SSL_R_NO_COOKIE_CALLBACK_SET 287
#define EVP_PKEY_CTX_set_ecdh_kdf_type(ctx,kdf) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_TYPE, kdf, NULL)
#define OBJ_id_hex_partial_message OBJ_mime_mhs_headings,1L
#define OBJ_identified_organization OBJ_iso,3L
#define _GLIBCXX_NAMESPACE_CXX11 __cxx11::
#define SCNuPTR __PRIPTR_PREFIX "u"
#define E2BIG 7
#define _mm256_insertf128_pd(X,Y,O) ((__m256d) __builtin_ia32_vinsertf128_pd256 ((__v4df)(__m256d)(X), (__v2df)(__m128d)(Y), (int)(O)))
#define BOOST_PP_REPEAT_CHECK_BOOST_PP_NIL 1
#define TLS1_RFC_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA "TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA"
#define BOOST_PP_RELATIVE_FLAGS(i) (BOOST_PP_CAT(BOOST_PP_RELATIVE_, i)(BOOST_PP_ITERATION_FLAGS_)())
#define _mm256_insertf128_ps(X,Y,O) ((__m256) __builtin_ia32_vinsertf128_ps256 ((__v8sf)(__m256)(X), (__v4sf)(__m128)(Y), (int)(O)))
#define NID_keyBag 150
#define SSL_F_TLS1_SET_SIGALGS 632
#define FOLLY_F14_VECTOR_INTRINSICS_AVAILABLE 1
#define SSL_R_GOT_A_FIN_BEFORE_A_CCS 154
#define SSL_F_TLS_PARSE_CTOS_PSK_KEX_MODES 572
#define SO_ATTACH_REUSEPORT_CBPF 51
#define NID_id_smime_alg_RC2wrap 244
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_94(s,p,o,m) 0
#define _WCHAR_T_DECLARED 
#define SSL_F_TLS_CONSTRUCT_CTOS_PADDING 472
#define SN_sm4_ecb "SM4-ECB"
#define EVP_F_EVP_PKEY_VERIFY 142
#define IANA_AFI_IPV4 1
#define CLONE_NEWUSER 0x10000000
#define EVP_PKEY_CTX_get_dh_kdf_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_MD, 0, (void *)(pmd))
#define PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE 127
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100111 (0)(1)(1)(0)(0)(1)(1)(1),
#define EVP_PKEY_CTRL_DH_KDF_OID (EVP_PKEY_ALG_CTRL + 13)
#define MS_NOSUID 2
#define BOOST_PP_SEQ_FOLD_LEFT_26(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_26(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __UINT_LEAST32_MAX__ 0xffffffffU
#define TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x030000BC
#define IN6_IS_ADDR_MC_NODELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x1))
#define SN_id_smime_ct_authEnvelopedData "id-smime-ct-authEnvelopedData"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010000 (0)(1)(0)(0)(0)(0),
#define BOOST_PP_WHILE_37_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_38, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(38, s))
#define evutil_timeradd(tvp,uvp,vvp) timeradd((tvp), (uvp), (vvp))
#define _PC_REC_XFER_ALIGN _PC_REC_XFER_ALIGN
#define PEM_R_NOT_ENCRYPTED 106
#define IPPROTO_HOPOPTS IPPROTO_HOPOPTS
#define EVP_CIPHER_name(e) OBJ_nid2sn(EVP_CIPHER_nid(e))
#define BOOST_PP_REPEAT_2_16(m,d) BOOST_PP_REPEAT_2_15(m, d) m(3, 15, d)
#define EVENT2_CORE_EXPORT_SYMBOL EVENT2_EXPORT_SYMBOL
#define FOLLY_ATTR_NO_UNIQUE_ADDRESS [[no_unique_address]]
#define SN_brainpoolP160r1 "brainpoolP160r1"
#define SSL_CONF_FLAG_SERVER 0x8
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010010 (0)(1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010011 (0)(1)(0)(0)(1)(1),
#define SSL3_TXT_RSA_RC2_40_MD5 "EXP-RC2-CBC-MD5"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_99(s,p,o,m) 0
#define SN_issuer_alt_name "issuerAltName"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_143(p,o,s) 0
#define RSA_R_BLOCK_TYPE_IS_NOT_02 107
#define TLS1_RFC_DHE_RSA_WITH_AES_128_SHA256 "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"
#define __EDG___WORKAROUND_GUARD 1
#define SSL_R_UNKNOWN_PROTOCOL 252
#define OBJ_subject_directory_attributes OBJ_id_ce,9L
#define SN_sha512 "SHA512"
#define LN_id_GostR3411_2012_512 "GOST R 34.11-2012 with 512 bit hash"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111100 (1)(1)(1)(1)(0)(0),
#define OBJ_setct_PCertReqData OBJ_set_ctype,38L
#define BOOST_PP_FOR_99_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(100, s) BOOST_PP_IIF(c, BOOST_PP_FOR_100, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(100, s), p, o, m)
#define ENOTDIR 20
#define SN_id_smime_aa "id-smime-aa"
#define TLS1_AD_EXPORT_RESTRICTION 60
#define _PSTL_NUMERIC_FORWARD_DECLARED 1
#define SN_brainpoolP160t1 "brainpoolP160t1"
#define BOOST_TT_IS_ENUM_HPP_INCLUDED 
#define NID_setct_CapReqTBSX 545
#define OBJ_id_cmc_addExtensions OBJ_id_cmc,8L
#define __INT_FAST8_MAX__ 0x7f
#define BOOST_MPL_IF_HPP_INCLUDED 
#define _mm512_mask_cmp_epi16_mask(M,X,Y,P) ((__mmask32) __builtin_ia32_cmpw512_mask ((__v32hi)(__m512i)(X), (__v32hi)(__m512i)(Y), (int)(P), (__mmask32)(M)))
#define ILL_BADSTK ILL_BADSTK
#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384 0x0300C026
#define BOOST_PP_LIST_FOLD_RIGHT_164(o,s,l) BOOST_PP_LIST_FOLD_LEFT_164(o, s, BOOST_PP_LIST_REVERSE_D(164, l))
#define _SYS_TYPES_H 1
#define AF_NETBEUI PF_NETBEUI
#define SN_pkcs1 "pkcs1"
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS 69
#define SN_pkcs3 "pkcs3"
#define SN_pkcs5 "pkcs5"
#define SN_pkcs7 "pkcs7"
#define SN_pkcs9 "pkcs9"
#define ECONNRESET 104
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_147(p,o,s) 0
#define SSL_F_CONSTRUCT_STATELESS_TICKET 637
#define SSLv23_server_method TLS_server_method
#define SSL_R_INVALID_KEY_UPDATE_TYPE 120
#define AF_SNA PF_SNA
#define lh_stats OPENSSL_LH_stats
#define OBJ_SNILS OBJ_member_body,643L,100L,3L
#define LN_personalSignature "personalSignature"
#define ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED 198
#define SN_id_smime_ct "id-smime-ct"
#define BOOST_PP_SEQ_FOLD_LEFT_217(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_217(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_DEBUG_ASSERT(_Condition) 
#define NID_id_cct_crs 360
#define _SC_THREAD_CPUTIME _SC_THREAD_CPUTIME
#define BOOST_PP_TUPLE_EAT_11(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10) 
#define MS_STRICTATIME (1<<24)
#define NID_authorityRevocationList 882
#define BOOST_PP_TUPLE_EAT_12(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11) 
#define __cpp_lib_scoped_lock 201703
#define _GLIBCXX_HAVE_WCTYPE_H 1
#define ASN1_F_ASN1_STR2TYPE 179
#define BOOST_PP_SEQ_FOLD_LEFT_43(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_43(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define CT_F_SCT_SET1_EXTENSIONS 114
#define BIO_F_BIO_NWRITE0 122
#define BOOST_PP_SEQ_FOLD_LEFT_I_112(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_113, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(113, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_TUPLE_EAT_15(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14) 
#define TLS1_CK_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 0x0300C05E
#define BOOST_PP_BOOL_100 1
#define BOOST_PP_BOOL_102 1
#define BOOST_PP_BOOL_103 1
#define BOOST_PP_BOOL_104 1
#define BOOST_PP_BOOL_105 1
#define BOOST_PP_BOOL_106 1
#define BOOST_PP_BOOL_107 1
#define BOOST_PP_BOOL_108 1
#define SYSLOG_DFATAL(counter) google::LogMessage(__FILE__, __LINE__, google::DFATAL_LEVEL, counter, &google::LogMessage::SendToSyslogAndLog)
#define SSL_F_SSL_READ_EARLY_DATA 529
#define OBJ_id_cmc_popLinkWitness OBJ_id_cmc,23L
#define _mm256_mask_shuffle_i32x4(W,U,X,Y,C) ((__m256i) __builtin_ia32_shuf_i32x4_256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define SSL3_AD_CERTIFICATE_EXPIRED 45
#define RSA_PKCS1_PADDING 1
#define OBJ_capwapAC OBJ_id_kp,18L
#define BOOST_PP_BOOL_110 1
#define BOOST_PP_BOOL_112 1
#define BOOST_PP_BOOL_113 1
#define BOOST_PP_BOOL_114 1
#define BOOST_PP_BOOL_116 1
#define BOOST_PP_BOOL_117 1
#define BOOST_PP_BOOL_119 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100 (0)(1)(1)(0)(0),
#define X509_STORE_get_by_subject X509_STORE_CTX_get_by_subject
#define FAPPEND O_APPEND
#define BOOST_PP_BOOL_120 1
#define BOOST_PP_BOOL_121 1
#define BOOST_PP_BOOL_122 1
#define BOOST_PP_BOOL_123 1
#define BOOST_PP_BOOL_124 1
#define BOOST_PP_BOOL_125 1
#define BOOST_PP_BOOL_126 1
#define BOOST_PP_BOOL_128 1
#define BOOST_PP_BOOL_129 1
#define ASN1_F_X509_NAME_EX_D2I 158
#define NID_id_smime_alg 192
#define X509_PCY_TREE_INTERNAL 0
#define __BEGIN_DECLS extern "C" {
#define __LDBL_MANT_DIG__ 64
#define EVP_F_AES_WRAP_CIPHER 170
#define BOOST_PP_SEQ_FOLD_LEFT_49(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_49(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define HEADER_RSAERR_H 
#define BOOST_PP_FOR_174_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(175, s) BOOST_PP_IIF(c, BOOST_PP_FOR_175, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(175, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_I_118(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_119, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(119, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10 (1)(0),
#define BOOST_MPL_EMPTY_HPP_INCLUDED 
#define IPV6_RECVFRAGSIZE 77
#define EVP_PADDING_ZERO 5
#define _mm512_mask_shldi_epi16(A,B,C,D,E) ((__m512i) __builtin_ia32_vpshld_v32hi_mask ((__v32hi)(__m512i)(C), (__v32hi)(__m512i)(D), (int)(E), (__v32hi)(__m512i)(A), (__mmask32)(B)))
#define BOOST_PP_BOOL_130 1
#define BOOST_PP_BOOL_131 1
#define EVP_F_EVP_CIPHER_PARAM_TO_ASN1 205
#define BOOST_PP_BOOL_134 1
#define BOOST_PP_BOOL_135 1
#define BOOST_PP_BOOL_136 1
#define BOOST_PP_BOOL_137 1
#define BOOST_PP_BOOL_138 1
#define BOOST_PP_BOOL_139 1
#define EVENT__HAVE_IFADDRS_H 1
#define ASN1_F_ASN1_DO_LOCK 233
#define BOOST_PREPROCESSOR_SEQ_TRANSFORM_HPP 
#define PEM_F_PEM_DO_HEADER 106
#define SSL3_CK_DHE_RSA_DES_192_CBC3_SHA 0x03000016
#define OBJ_host OBJ_pilotAttributeType,9L
#define BOOST_PP_WHILE_112_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_113, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(113, s))
#define BOOST_PP_BOOL_142 1
#define BOOST_PP_BOOL_143 1
#define BOOST_PP_BOOL_144 1
#define BOOST_PP_BOOL_145 1
#define BOOST_PP_BOOL_146 1
#define BOOST_PP_BOOL_147 1
#define BOOST_PP_BOOL_148 1
#define BOOST_PP_BOOL_149 1
#define LN_id_pkix_OCSP_noCheck "OCSP No Check"
#define _STRING_H 1
#define SSL_F_TLS_CONSTRUCT_CTOS_HELLO 356
#define _mm512_mask_shldi_epi32(A,B,C,D,E) ((__m512i) __builtin_ia32_vpshld_v16si_mask ((__v16si)(__m512i)(C), (__v16si)(__m512i)(D), (int)(E), (__v16si)(__m512i)(A), (__mmask16)(B)))
#define BOOST_PP_BOOL_150 1
#define BOOST_PP_BOOL_152 1
#define BOOST_PP_BOOL_153 1
#define BOOST_PP_BOOL_154 1
#define BOOST_PP_BOOL_155 1
#define BOOST_PP_BOOL_156 1
#define BOOST_PP_BOOL_157 1
#define BOOST_PP_BOOL_158 1
#define OBJ_setct_CredReqTBE OBJ_set_ctype,68L
#define BOOST_PP_INC_202 203
#define BOOST_PP_INC_203 204
#define BOOST_PP_INC_204 205
#define BOOST_PP_INC_205 206
#define BOOST_PP_INC_207 208
#define BOOST_PP_INC_208 209
#define BOOST_PP_INC_209 210
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_61(op,st,ss,sz) 0
#define _XOPEN_REALTIME 1
#define SSL_CTX_select_current_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_SELECT_CURRENT_CERT,0,(char *)(x509))
#define BOOST_PP_SEQ_FOLD_LEFT_I_219(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_220, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(220, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000001 (1)(0)(0)(0)(0)(0)(1),
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_52(o,s,l) 0
#define BOOST_PP_BOOL_161 1
#define BOOST_PP_BOOL_163 1
#define BOOST_PP_BOOL_164 1
#define BOOST_PP_BOOL_165 1
#define BOOST_PP_BOOL_166 1
#define BOOST_PP_BOOL_167 1
#define BOOST_PP_INC_210 211
#define BOOST_PP_INC_211 212
#define BOOST_PP_INC_212 213
#define BOOST_PP_INC_213 214
#define BOOST_PP_INC_214 215
#define BOOST_PP_INC_215 216
#define BOOST_PP_INC_216 217
#define BOOST_PP_INC_217 218
#define BOOST_PP_INC_218 219
#define BOOST_PP_INC_219 220
#define BOOST_PP_INTERCEPT_239 
#define SSL_F_SSL_RENEGOTIATE 516
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_54(o,s,l) 0
#define BOOST_PP_WHILE_221_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_222, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(222, s))
#define __cpp_lib_is_null_pointer 201309
#define __ino_t_defined 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_66(op,st,ss,sz) 0
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_80 80
#define SN_id_smime_ct_TSTInfo "id-smime-ct-TSTInfo"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_57 57
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_67(op,st,ss,sz) 0
#define TLS1_CK_DH_DSS_WITH_AES_256_SHA256 0x03000068
#define BOOST_PP_BOOL_170 1
#define BOOST_PP_BOOL_171 1
#define BOOST_PP_BOOL_172 1
#define ASN1_PKEY_CTRL_CMS_SIGN 0x5
#define BOOST_PP_BOOL_174 1
#define BOOST_PP_BOOL_175 1
#define BOOST_PP_BOOL_176 1
#define BOOST_PP_BOOL_177 1
#define BOOST_PP_INC_220 221
#define BOOST_PP_INC_222 223
#define BOOST_PP_INC_223 224
#define MAYBE_STRIPPED_HELP(txt) txt
#define BOOST_PP_INC_225 226
#define BOOST_PP_INC_226 227
#define BOOST_PP_INC_227 228
#define BOOST_PP_INC_228 229
#define BOOST_PP_INC_229 230
#define BOOST_PP_ERROR_0x0001 BOOST_PP_ERROR(0x0001, BOOST_PP_WHILE_OVERFLOW)
#define BOOST_PP_ERROR_0x0002 BOOST_PP_ERROR(0x0002, BOOST_PP_FOR_OVERFLOW)
#define BOOST_PP_ERROR_0x0003 BOOST_PP_ERROR(0x0003, BOOST_PP_REPEAT_OVERFLOW)
#define BOOST_PP_ERROR_0x0004 BOOST_PP_ERROR(0x0004, BOOST_PP_LIST_FOLD_OVERFLOW)
#define BOOST_PP_ERROR_0x0006 BOOST_PP_ERROR(0x0006, BOOST_PP_ARITHMETIC_OVERFLOW)
#define PRIoMAX __PRI64_PREFIX "o"
#define _mm512_mask_shldi_epi64(A,B,C,D,E) ((__m512i) __builtin_ia32_vpshld_v8di_mask ((__v8di)(__m512i)(C), (__v8di)(__m512i)(D), (int)(E), (__v8di)(__m512i)(A), (__mmask8)(B)))
#define BOOST_MPL_DISTANCE_HPP_INCLUDED 
#define BOOST_PP_BOOL_181 1
#define BOOST_PP_BOOL_182 1
#define BOOST_PP_BOOL_183 1
#define BOOST_PP_BOOL_184 1
#define BOOST_PP_BOOL_185 1
#define BOOST_PP_BOOL_186 1
#define BOOST_PP_BOOL_187 1
#define BOOST_PP_BOOL_188 1
#define BOOST_PP_BOOL_189 1
#define BOOST_PP_INC_232 233
#define BOOST_PP_INC_235 236
#define BOOST_PP_INC_236 237
#define BOOST_PP_INC_237 238
#define BOOST_PP_INC_238 239
#define BOOST_PP_INC_239 240
#define TLS1_RFC_ECDHE_ECDSA_WITH_NULL_SHA "TLS_ECDHE_ECDSA_WITH_NULL_SHA"
#define PEM_R_INCONSISTENT_HEADER 121
#define __UINTPTR_MAX__ 0xffffffffffffffffUL
#define _POSIX_MQ_OPEN_MAX 8
#define CRYPTO_F_CRYPTO_OCB128_COPY_CTX 121
#define BOOST_PP_BOOL_190 1
#define BOOST_PP_BOOL_191 1
#define EVENT__HAVE_MMAP 1
#define BOOST_PP_BOOL_194 1
#define BOOST_PP_BOOL_195 1
#define BOOST_PP_BOOL_196 1
#define BOOST_PP_BOOL_197 1
#define BOOST_PP_INC_241 242
#define BOOST_PP_INC_242 243
#define BOOST_PP_INC_244 245
#define BOOST_PP_INC_245 246
#define BOOST_PP_INC_246 247
#define BOOST_PP_INC_247 248
#define BOOST_PP_INC_248 249
#define BOOST_PP_INC_249 250
#define TLS1_CK_PSK_WITH_AES_128_CCM 0x0300C0A4
#define __DADDR_T_TYPE __S32_TYPE
#define SODIUM_EXPORT_WEAK SODIUM_EXPORT __attribute__((weak))
#define _mm256_mmask_i64gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128i) __builtin_ia32_gather3div8si ((__v4si)(__m128i) (V1OLD), (void const *) (ADDR), (__v4di)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define _mm_maskz_permute_pd(U,X,C) ((__m128d) __builtin_ia32_vpermilpd_mask ((__v2df)(__m128d)(X), (int)(C), (__v2df)(__m128d)_mm_setzero_pd (), (__mmask8)(U)))
#define BOOST_PP_NODE_178(p) BOOST_PP_IIF(p(178), BOOST_PP_NODE_177, BOOST_PP_NODE_179)
#define _GLIBCXX_TR1_BETA_FUNCTION_TCC 1
#define SSL_R_APP_DATA_IN_HANDSHAKE 100
#define SN_id_cmc_identityProof "id-cmc-identityProof"
#define _mm512_rcp28_ps(A) _mm512_rcp28_round_ps(A, _MM_FROUND_CUR_DIRECTION)
#define _mm_maskz_permute_ps(U,X,C) ((__m128) __builtin_ia32_vpermilps_mask ((__v4sf)(__m128)(X), (int)(C), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)(U)))
#define SSL_AD_CERTIFICATE_REQUIRED TLS13_AD_CERTIFICATE_REQUIRED
#define SSL_ERROR_WANT_CLIENT_HELLO_CB 11
#define BOOST_PP_INC_251 252
#define BOOST_PP_INC_252 253
#define BOOST_PP_INC_255 256
#define BOOST_PP_INC_256 256
#define M_SQRT2f32 __f32 (1.414213562373095048801688724209698079)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011110 (1)(0)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011111 (1)(0)(1)(1)(1)(1)(1),
#define BOOST_PP_TUPLE_REM_0() 
#define EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M 183
#define BOOST_PP_WHILE_23(p,o,s) BOOST_PP_WHILE_23_C(BOOST_PP_BOOL(p(24, s)), p, o, s)
#define INT_FAST16_WIDTH __WORDSIZE
#define BOOST_PP_REPEAT_2_139(m,d) BOOST_PP_REPEAT_2_138(m, d) m(3, 138, d)
#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
#define X509V3_ADD_REPLACE_EXISTING 3L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_89 89
#define BOOST_PP_SEQ_CAT_I(seq) BOOST_PP_SEQ_FOLD_LEFT(BOOST_PP_SEQ_CAT_O, BOOST_PP_SEQ_HEAD(seq), BOOST_PP_SEQ_TAIL(seq))
#define _PSTL_CONFIG_H 
#define SSL_CTX_set_max_send_fragment(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_MAX_SEND_FRAGMENT,m,NULL)
#define M_2_PIf32 __f32 (0.636619772367581343075535053490057448)
#define _SC_NL_SETMAX _SC_NL_SETMAX
#define __FLT64X_MAX_EXP__ 16384
#define BOOST_PP_TUPLE_REM_5(e0,e1,e2,e3,e4) e0, e1, e2, e3, e4
#define __UINT_FAST64_TYPE__ long unsigned int
#define BN_R_CALLED_WITH_EVEN_MODULUS 102
#define OSSL_STOREerr(f,r) ERR_PUT_error(ERR_LIB_OSSL_STORE,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define APACHE_THRIFT_ACCESSOR_queueingTimeMs 
#define FMT_USE_CONSTEXPR (FMT_HAS_FEATURE(cxx_relaxed_constexpr) || FMT_MSC_VER >= 1910 || (FMT_GCC_VERSION >= 600 && __cplusplus >= 201402L)) && !FMT_NVCC && !FMT_ICC_VERSION
#define EC_R_UNKNOWN_ORDER 114
#define BOOST_PP_WHILE_25(p,o,s) BOOST_PP_WHILE_25_C(BOOST_PP_BOOL(p(26, s)), p, o, s)
#define BOOST_PP_REPEAT_2_127(m,d) BOOST_PP_REPEAT_2_126(m, d) m(3, 126, d)
#define BOOST_PREPROCESSOR_ITERATE_HPP 
#define STDIN_FILENO 0
#define UINT_FAST8_MAX (255)
#define BOOST_PP_REPEAT_2_129(m,d) BOOST_PP_REPEAT_2_128(m, d) m(3, 128, d)
#define _GLIBCXX_HAVE_MEMORY_H 1
#define __INT_MAX__ 0x7fffffff
#define NID_wap_wsg_idm_ecid_wtls1 735
#define NID_wap_wsg_idm_ecid_wtls3 736
#define NID_wap_wsg_idm_ecid_wtls4 737
#define NID_wap_wsg_idm_ecid_wtls5 738
#define NID_wap_wsg_idm_ecid_wtls6 739
#define NID_wap_wsg_idm_ecid_wtls7 740
#define NID_wap_wsg_idm_ecid_wtls9 742
#define _EXT_OPT_RANDOM_H 1
#define __cpp_lib_gcd 201606
#define APACHE_THRIFT_ACCESSOR_codecConfig 
#define DH_F_DH_METH_NEW 118
#define FMT_USE_USER_DEFINED_LITERALS 1
#define BOOST_PP_LIST_FOLD_LEFT_34(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_35, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(35, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_MPL_ASSERT_MSG_IMPL(counter,c,msg,types_) struct msg; typedef struct BOOST_PP_CAT(msg,counter) : boost::mpl::assert_ { static boost::mpl::failed ************ (msg::************ assert_arg()) types_ { return 0; } } BOOST_PP_CAT(mpl_assert_arg,counter); BOOST_MPL_AUX_ASSERT_CONSTANT( std::size_t , BOOST_PP_CAT(mpl_assertion_in_line_,counter) = sizeof( boost::mpl::assertion_failed<(c)>( BOOST_PP_CAT(mpl_assert_arg,counter)::assert_arg() ) ) )
#define OPENSSL_RAND_SEED_OS 
#define X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY 108
#define __COMO___WORKAROUND_GUARD 1
#define BOOST_PP_FOR_106_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(107, s) BOOST_PP_IIF(c, BOOST_PP_FOR_107, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(107, s), p, o, m)
#define BOOST_PP_LIST_FOLD_LEFT BOOST_PP_CAT(BOOST_PP_LIST_FOLD_LEFT_, BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256))
#define TLS1_1_VERSION_MINOR 0x02
#define M_2_PIf64 __f64 (0.636619772367581343075535053490057448)
#define OPENSSL_RSA_MAX_PUBEXP_BITS 64
#define SSL_TXT_aDH "aDH"
#define TLSEXT_TYPE_elliptic_curves TLSEXT_TYPE_supported_groups
#define _T_SIZE_ 
#define SN_auth_srp "AuthSRP"
#define LLONG_MAX __LONG_LONG_MAX__
#define BOOST_MPL_PP_ENUM(n,param) BOOST_PP_REPEAT( n , BOOST_MPL_PP_AUX_ENUM_FUNC , param )
#define EVP_PKEY_MO_VERIFY 0x0002
#define __CPU_SETSIZE 1024
#define MBSTRING_BMP (MBSTRING_FLAG|2)
#define OBJ_id_tc26_sign OBJ_id_tc26_algorithms,1L
#define LN_pbe_WithSHA1And40BitRC4 "pbeWithSHA1And40BitRC4"
#define NID_netscape_comment 78
#define TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "ECDHE-PSK-CAMELLIA256-SHA384"
#define ASN1_F_X509_CRL_ADD0_REVOKED 169
#define RLIMIT_RTPRIO __RLIMIT_RTPRIO
#define NID_setext_miAuth 602
#define PKCS7_F_PKCS7_VERIFY 117
#define OPENSSL_INIT_NO_LOAD_SSL_STRINGS 0x00100000L
#define OPENSSL_IMPLEMENT_GLOBAL(type,name,value) type _shadow_ ##name=value;
#define SSL_CTRL_SESS_ACCEPT_GOOD 25
#define EVBUFFER_ERROR BEV_EVENT_ERROR
#define X509V3_F_X509_PURPOSE_ADD 137
#define __glibcxx_integral_traps true
#define BOOST_PP_FOR_215_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(216, s) BOOST_PP_IIF(c, BOOST_PP_FOR_216, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(216, s), p, o, m)
#define _mm_i32scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv2df ((void *) (ADDR), (__mmask8)0xFF, (__v4si)(__m128i) (INDEX), (__v2df)(__m128d) (V1), (int) (SCALE))
#define _SC_ADVISORY_INFO _SC_ADVISORY_INFO
#define BOOST_PP_ITERATE() BOOST_PP_CAT(BOOST_PP_ITERATE_, BOOST_PP_INC(BOOST_PP_ITERATION_DEPTH()))
#define FOLLY_CREATE_FREE_INVOKER(classname,funcname,...) namespace classname ##__folly_detail_invoke_ns { FOLLY_MAYBE_UNUSED void funcname( ::folly::detail::invoke_private_overload&); FOLLY_DETAIL_CREATE_FREE_INVOKE_TRAITS_USING(_, funcname, __VA_ARGS__) struct __folly_detail_invoke_obj { template <typename... Args> FOLLY_MAYBE_UNUSED FOLLY_ERASE_HACK_GCC constexpr auto operator()( Args&&... args) const noexcept(noexcept(funcname(static_cast<Args&&>(args)...))) -> decltype(funcname(static_cast<Args&&>(args)...)) { return funcname(static_cast<Args&&>(args)...); } }; } struct classname : classname ##__folly_detail_invoke_ns::__folly_detail_invoke_obj {}
#define BOOST_PP_INTERCEPT_92 
#define SN_ED448 "ED448"
#define NID_id_GostR3410_94_CryptoPro_XchC_ParamSet 838
#define SSL_CTRL_SET_SPLIT_SEND_FRAGMENT 125
#define SSL3_MT_SERVER_DONE 14
#define CONF_F_CONF_LOAD_FP 103
#define SSL_F_SSL3_FINAL_FINISH_MAC 285
#define BOOST_PP_WHILE_179_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_180, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(180, s))
#define BOOST_PP_SLOT_CC_9_D(a,b,c,d,e,f,g,h,i) a ## b ## c ## d ## e ## f ## g ## h ## i
#define EVP_PKEY_CTX_set0_rsa_oaep_label(ctx,l,llen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_RSA_OAEP_LABEL, llen, (void *)(l))
#define BIO_CTRL_POP 7
#define EDQUOT 122
#define STDOUT_FILENO 1
#define BOOST_VARIANT_DETAIL_CONFIG_HPP 
#define _GLIBCXX_CXX_LOCALE_H 1
#define LN_sha512_224WithRSAEncryption "sha512-224WithRSAEncryption"
#define SSL_F_OSSL_STATEM_CLIENT_CONSTRUCT_MESSAGE 430
#define FSPICK_NO_AUTOMOUNT 0x00000004
#define SSL_F_TLS13_ENC 609
#define NID_pkcs7_digest 25
#define NID_id_cmc_encryptedPOP 335
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_72(p,o,s) 0
#define NID_aes_192_cbc_hmac_sha256 949
#define F_LOCK 1
#define EV_UINT32_MAX UINT32_MAX
#define COMP_F_BIO_ZLIB_READ 101
#define BOOST_OPTIONAL_DETAIL_OPTIONAL_RELOPS_AJK_03OCT2015_HPP 
#define evsignal_add(ev,tv) event_add((ev), (tv))
#define BOOST_STATIC_ASSERT_BOOL_CAST(...) ((__VA_ARGS__) != 0)
#define BOOST_PP_FOR_66_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(67, s) BOOST_PP_IIF(c, BOOST_PP_FOR_67, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(67, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_210(op,st,ss,sz) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101000 (0)(1)(0)(1)(0)(0)(0),
#define OBJ_id_smime_alg_CMSRC2wrap OBJ_id_smime_alg,7L
#define _POSIX_THREAD_PRIO_INHERIT 200809L
#define __cpp_lib_string_udls 201304
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_75(p,o,s) 0
#define SSL_R_TLSV1_ALERT_ACCESS_DENIED 1049
#define BN_F_BN_MOD_SQRT 121
#define IPAddressOrRange_addressPrefix 0
#define LLONG_MIN (-LLONG_MAX-1)
#define _FCNTL_H 1
#define TCP_TIMESTAMP 24
#define OBJ_id_smime_cd OBJ_SMIME,4L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_71(op,st,ss,sz) 0
#define SYSLOG_0 GLOG_ERROR_MSG
#define LOG_IF(severity,condition) static_cast<void>(0), !(condition) ? (void) 0 : google::LogMessageVoidify() & LOG(severity)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_72(op,st,ss,sz) 0
#define COMPACT_GOOGLE_LOG_ERROR google::LogMessage( __FILE__, __LINE__, google::GLOG_ERROR)
#define SIGTSTP 20
#define LN_x121Address "x121Address"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_62(o,s,l) 0
#define BLKALIGNOFF _IO(0x12,122)
#define SSL3_AL_FATAL 2
#define LN_description "description"
#define TLS1_AD_BAD_CERTIFICATE_HASH_VALUE 114
#define SN_id_cmc_getCRL "id-cmc-getCRL"
#define LN_kx_rsa "kx-rsa"
#define _mm512_maskz_max_round_pd(U,A,B,R) (__m512d)__builtin_ia32_maxpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, R)
#define __BLKCNT64_T_TYPE __SQUAD_TYPE
#define SSL_TLSEXT_ERR_ALERT_WARNING 1
#define _mm512_maskz_max_round_ps(U,A,B,R) (__m512)__builtin_ia32_maxps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, R)
#define SSL_OP_PKCS1_CHECK_1 0x0
#define _POSIX_SEMAPHORES 200809L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_79(p,o,s) 0
#define FOLLY_DEFINE_CPO(Type,Name) namespace folly_cpo__ { inline constexpr Type Name{}; } using namespace folly_cpo__;
#define DSA_R_Q_NOT_PRIME 113
#define __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
#define BOOST_PP_INC_10 11
#define __DBL_EPSILON__ double(2.22044604925031308084726333618164062e-16L)
#define BOOST_PP_INC_13 14
#define BOOST_PP_INC_14 15
#define BOOST_PP_INC_15 16
#define BOOST_PP_INC_19 20
#define EVENT2_BUFFEREVENT_COMPAT_H_INCLUDED_ 
#define LN_md5_sha1 "md5-sha1"
#define TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDHE-RSA-CAMELLIA256-SHA384"
#define SN_id_smime_cti_ets_proofOfOrigin "id-smime-cti-ets-proofOfOrigin"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_78(op,st,ss,sz) 0
#define _mm_mask_fnmsub_round_ss(A,U,B,C,R) (__m128) __builtin_ia32_vfmaddss3_mask (A, -(B), -(C), U, R)
#define EVENT__PACKAGE_TARNAME "libevent"
#define BOOST_SYSTEM_DYN_LINK 1
#define SN_sect131r1 "sect131r1"
#define le16toh(x) __uint16_identity (x)
#define BC_SCALE_MAX _POSIX2_BC_SCALE_MAX
#define XATTR_NAME_MAX 255
#define X509_TRUST_MAX 8
#define _RDSEEDINTRIN_H_INCLUDED 
#define BOOST_PP_INC_21 22
#define BOOST_PP_INC_22 23
#define BOOST_PP_INC_23 24
#define BOOST_PP_INC_24 25
#define BOOST_PP_INC_25 26
#define BOOST_PP_INC_26 27
#define BOOST_PP_INC_27 28
#define BOOST_PP_INC_28 29
#define BOOST_PP_INC_29 30
#define SSL_F_TLS_CONSTRUCT_CKE_RSA 409
#define TLS1_TXT_DHE_DSS_WITH_AES_128_GCM_SHA256 "DHE-DSS-AES128-GCM-SHA256"
#define BOOST_HAS_SLIST 
#define BN_BLINDING_NO_UPDATE 0x00000001
#define BOOST_PP_WHILE_10_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_11, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(11, s))
#define OBJ_id_smime_spq_ets_sqt_unotice OBJ_id_smime_spq,2L
#define BOOST_PP_REPEAT_2_21(m,d) BOOST_PP_REPEAT_2_20(m, d) m(3, 20, d)
#define SIGKILL 9
#define BOOST_PP_ITERATION_START() BOOST_PP_CAT(BOOST_PP_ITERATION_START_, BOOST_PP_ITERATION_DEPTH())
#define BOOST_PP_INC_31 32
#define BOOST_PP_INC_32 33
#define BOOST_PP_INC_33 34
#define BOOST_PP_INC_34 35
#define BOOST_PP_INC_35 36
#define BOOST_PP_INC_36 37
#define BOOST_PP_INC_37 38
#define BOOST_PP_INC_38 39
#define BOOST_PP_INC_39 40
#define SSL3_CK_DH_RSA_DES_64_CBC_SHA 0x0300000F
#define SOL_CAIF 278
#define SSL3_AD_ILLEGAL_PARAMETER 47
#define P_tmpdir "/tmp"
#define OBJ_ED25519 1L,3L,101L,112L
#define SSL_F_OSSL_STATEM_SERVER_WRITE_TRANSITION 604
#define LN_setext_cv "additional verification"
#define BOOST_PP_INC_40 41
#define BOOST_PP_INC_41 42
#define BOOST_PP_INC_44 45
#define BOOST_PP_INC_46 47
#define BOOST_PP_INC_47 48
#define BOOST_PP_INC_48 49
#define BOOST_PP_INC_49 50
#define BNerr(f,r) ERR_PUT_error(ERR_LIB_BN,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define _GLIBCXX_USE_C99_WCHAR _GLIBCXX11_USE_C99_WCHAR
#define _mm512_rsqrt28_pd(A) _mm512_rsqrt28_round_pd(A, _MM_FROUND_CUR_DIRECTION)
#define NID_id_smime_aa_encrypKeyPref 222
#define DTLS_CTRL_HANDLE_TIMEOUT 74
#define SCNiFAST16 __PRIPTR_PREFIX "i"
#define SOME_KIND_OF_LOG_FIRST_N(severity,n,what_to_do) static int LOG_OCCURRENCES = 0; if (LOG_OCCURRENCES <= n) ++LOG_OCCURRENCES; if (LOG_OCCURRENCES <= n) google::LogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, LOG_OCCURRENCES, &what_to_do).stream()
#define BOOST_PP_FOR_141_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(142, s) BOOST_PP_IIF(c, BOOST_PP_FOR_142, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(142, s), p, o, m)
#define BOOST_PP_INC_51 52
#define BOOST_PP_INC_52 53
#define BOOST_PP_INC_53 54
#define BOOST_PP_INC_55 56
#define BOOST_PP_INC_58 59
#define BOOST_PP_INC_59 60
#define ASN1_R_ODD_NUMBER_OF_CHARS 145
#define MSG_DONTWAIT MSG_DONTWAIT
#define OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet OBJ_cryptopro,33L,3L
#define JEMALLOC_HAVE_ATTR_FORMAT_ARG 
#define SSL_TXT_DES "DES"
#define EV_WRITE 0x04
#define BOOST_PP_REPEAT_2_133(m,d) BOOST_PP_REPEAT_2_132(m, d) m(3, 132, d)
#define BIO_CB_FREE 0x01
#define _GLIBCXX_STD_C std
#define FOLLY_OPENSSL_PREREQ(major,minor,fix) (OPENSSL_VERSION_NUMBER >= FOLLY_OPENSSL_CALCULATE_VERSION(major, minor, fix))
#define BOOST_PP_LIST_FOLD_RIGHT_170(o,s,l) BOOST_PP_LIST_FOLD_LEFT_170(o, s, BOOST_PP_LIST_REVERSE_D(170, l))
#define OBJ_id_GostR3410_94_CryptoPro_B_ParamSet OBJ_cryptopro,32L,3L
#define BOOST_PP_INC_60 61
#define BOOST_PP_INC_61 62
#define BOOST_PP_INC_63 64
#define BOOST_PP_INC_64 65
#define BOOST_PP_INC_65 66
#define BOOST_PP_INC_66 67
#define BOOST_PP_INC_67 68
#define BOOST_PP_INC_68 69
#define BOOST_PP_INC_69 70
#define SN_id_DHBasedMac "id-DHBasedMac"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_31 31
#define RSA_R_DIGEST_DOES_NOT_MATCH 158
#define BOOST_PP_LIST_FOLD_LEFT_2ND BOOST_PP_LIST_FOLD_LEFT
#define _XOPEN_UNIX 1
#define SSL_F_SSL_SESSION_SET1_ID_CONTEXT 312
#define NID_nSRecord 481
#define BOOST_PP_REPEAT_2_136(m,d) BOOST_PP_REPEAT_2_135(m, d) m(3, 135, d)
#define BOOST_PP_WHILE_75_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_76, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(76, s))
#define SSL3_RFC_DHE_RSA_DES_192_CBC3_SHA "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"
#define SCNiFAST32 __PRIPTR_PREFIX "i"
#define BOOST_PP_INC_70 71
#define BOOST_PP_INC_72 73
#define BOOST_PP_INC_73 74
#define BOOST_PP_INC_74 75
#define BOOST_PP_INC_75 76
#define BOOST_PP_INC_76 77
#define BOOST_PP_INC_77 78
#define _mm_roundscale_round_sd(A,B,I,R) ((__m128d) __builtin_ia32_rndscalesd_mask_round ((__v2df) (__m128d) (A), (__v2df) (__m128d) (B), (int) (I), (__v2df) _mm_setzero_pd (), (__mmask8) (-1), (int) (R)))
#define BOOST_PP_INC_79 80
#define SSL_COOKIE_LENGTH 4096
#define FIZZ_DECLARE_COPYABLE_VARIANT_TYPE(NAME,X) struct NAME { enum class Type { X(FIZZ_ENUM_TYPES) }; X(FIZZ_UNION_CTORS, NAME) X(FIZZ_UNION_COPY_CTORS, NAME) NAME(NAME&& other) { switch (other.type_) { X(FIZZ_UNION_MOVE_CASES, other) } type_ = other.type_; } NAME& operator=(NAME&& other) { destroyVariant(); switch (other.type_) { X(FIZZ_UNION_MOVE_CASES, other) } type_ = other.type_; return *this; } NAME(const NAME& other) { switch (other.type_) { X(FIZZ_UNION_COPY_CASES, other) } type_ = other.type_; } NAME& operator=(const NAME& other) { destroyVariant(); switch (other.type_) { X(FIZZ_UNION_COPY_CASES, other) } type_ = other.type_; return *this; } bool operator==(const NAME& other) const { if (other.type() != type_) { return false; } switch (other.type_) { X(FIZZ_UNION_EQUALITY_CASES, other) } return false; } ~NAME() { destroyVariant(); } Type type() const { return type_; } X(FIZZ_UNION_ACCESSOR) X(FIZZ_CONST_UNION_ACCESSOR) template <class T, class E> struct TypedGet {}; X(FIZZ_UNION_TYPED_GET) template <class T> T* getType() { return TypedGet<T, int>::get(*this); } template <class T> const T* getType() const { return TypedGet<T, int>::getConst(*this); } private: union { X(FIZZ_UNION_TYPE) }; void destroyVariant() { switch (type_) { X(FIZZ_DESTRUCTOR_CASES) } } Type type_; };
#define BOOST_PP_FOR_250_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(251, s) BOOST_PP_IIF(c, BOOST_PP_FOR_251, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(251, s), p, o, m)
#define ASN1_F_ASN1_STRING_TYPE_NEW 130
#define SN_camellia_128_ctr "CAMELLIA-128-CTR"
#define _GLIBCXX_STDIO_SEEK_END 2
#define MADV_SEQUENTIAL 2
#define OBJ_camellia_192_cfb128 OBJ_camellia,24L
#define BOOST_PP_INC_80 81
#define BOOST_PP_INC_81 82
#define BOOST_PP_INC_82 83
#define BOOST_PP_INC_83 84
#define BOOST_PP_INC_84 85
#define BOOST_PP_INC_85 86
#define BOOST_PP_INC_86 87
#define _mm256_cmp_pd_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmppd256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(P), (__mmask8)-1))
#define BOOST_PP_INC_89 90
#define SSL_TXT_DHE "DHE"
#define SSL_R_NO_SHARED_CIPHER 193
#define SSL_OP_SINGLE_ECDH_USE 0x0
#define BOOST_PP_SEQ_HEAD(seq) BOOST_PP_SEQ_ELEM(0, seq)
#define BOOST_PP_SLOT_OFFSET_6(x) BOOST_PP_SLOT_OFFSET_7(x) % 100000UL
#define TLS1_CK_DH_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C054
#define EVP_R_MESSAGE_DIGEST_IS_NULL 159
#define NID_x509Certificate 158
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_158(p,o,s) 0
#define BOOST_PP_INC_90 91
#define BOOST_PP_INC_91 92
#define _mm_getexp_round_ss(A,B,R) ((__m128)__builtin_ia32_getexpss128_round((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), R))
#define BOOST_PP_INC_93 94
#define BOOST_PP_INC_94 95
#define BOOST_PP_INC_95 96
#define BOOST_PP_INC_96 97
#define BOOST_PP_INC_97 98
#define NID_dSAQuality 495
#define BOOST_PP_INC_99 100
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_41 41
#define _STL_DEQUE_H 1
#define OBJ_id_smime_aa_encrypKeyPref OBJ_id_smime_aa,11L
#define X509_TRUST_MIN 1
#define BOOST_DETAIL_SPLIT_AND_SWAP_PARAMS(first_param,second_param) second_param first_param
#define SN_dstu34311 "dstu34311"
#define SCNiFAST64 __PRI64_PREFIX "i"
#define TLSEXT_TYPE_max_fragment_length 1
#define BIO_ctrl_set_connected(b,peer) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_CONNECTED, 0, (char *)(peer))
#define OBJ_id_smime_aa_ets_CertificateRefs OBJ_id_smime_aa,21L
#define FOLLY_DISABLE_ADDRESS_SANITIZER 
#define __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)
#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 "DHE-RSA-CAMELLIA256-SHA256"
#define NID_setct_AuthTokenTBE 573
#define OBJ_generationQualifier OBJ_X509,44L
#define OBJ_id_mod_cmc OBJ_id_pkix_mod,6L
#define NID_proxyCertInfo 663
#define BOOST_MPL_AUX_CONFIG_HAS_XXX_HPP_INCLUDED 
#define TLS1_CK_ECDHE_PSK_WITH_NULL_SHA384 0x0300C03B
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_56(p,o,s) 0
#define BOOST_PP_TUPLE_EAT_31(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30) 
#define EVP_R_UNSUPPORTED_SALT_TYPE 126
#define SN_id_mod_crmf "id-mod-crmf"
#define __kernel_old_uid_t __kernel_old_uid_t
#define NID_id_tc26_agreement_gost_3410_2012_512 993
#define NID_setAttr_IssCap_Sig 630
#define R_OK 4
#define TLS1_TXT_DH_DSS_WITH_AES_128_GCM_SHA256 "DH-DSS-AES128-GCM-SHA256"
#define SSL_R_DATA_LENGTH_TOO_LONG 146
#define BUFerr(f,r) ERR_PUT_error(ERR_LIB_BUF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define SN_aria_192_ofb128 "ARIA-192-OFB"
#define _BITS_TYPES___LOCALE_T_H 1
#define BOOST_PP_TUPLE_EAT_35(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34) 
#define __FXSR__ 1
#define SSL_CTX_get_max_proto_version(ctx) SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MAX_PROTO_VERSION, 0, NULL)
#define BOOST_PP_OVERLOAD(prefix,...) BOOST_PP_CAT(prefix, BOOST_PP_VARIADIC_SIZE(__VA_ARGS__))
#define _GLIBCXX_TUPLE 1
#define SN_time_stamp "timeStamping"
#define _mm_cvtt_roundss_i64(A,B) ((long long)__builtin_ia32_vcvttss2si64(A, B))
#define PRIxFAST8 "x"
#define BOOST_PP_SEQ_FOLD_LEFT_115(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_115(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __ULONG32_TYPE unsigned int
#define APACHE_THRIFT_ACCESSOR_payloadMetadata 
#define si_syscall _sifields._sigsys._syscall
#define BOOST_PP_SEQ_ELEM_116(_) BOOST_PP_SEQ_ELEM_115
#define NID_jurisdictionLocalityName 955
#define NID_dsaWithSHA1_2 70
#define BIO_TYPE_NBIO_TEST (16|BIO_TYPE_FILTER)
#define TEMP_FAILURE_RETRY(expression) (__extension__ ({ long int __result; do __result = (long int) (expression); while (__result == -1L && errno == EINTR); __result; }))
#define _mm512_mask_cvt_roundps_epu32(W,U,A,B) ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)(W), U, B))
#define CLONE_CHILD_CLEARTID 0x00200000
#define BOOST_INTRUSIVE_DETAIL_KEY_NODEPTR_COMP_HPP 
#define SSL_OP_CRYPTOPRO_TLSEXT_BUG 0x80000000U
#define SSL_VERIFY_CLIENT_ONCE 0x04
#define _kandn_mask16 _mm512_kandn
#define SSL_R_NO_APPLICATION_PROTOCOL 235
#define __S_TYPEISMQ(buf) ((buf)->st_mode - (buf)->st_mode)
#define __suseconds_t_defined 
#define FOLLY_HAVE_LIBLZMA 1
#define IMPLEMENT_OBJ_BSEARCH_CMP_FN(type1,type2,nm) static int nm ##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_) { type1 const *a = a_; type2 const *b = b_; return nm ##_cmp(a,b); } static type2 *OBJ_bsearch_ ##nm(type1 *key, type2 const *base, int num) { return (type2 *)OBJ_bsearch_(key, base, num, sizeof(type2), nm ##_cmp_BSEARCH_CMP_FN); } extern void dummy_prototype(void)
#define POLLPRI 0x002
#define TLS1_TXT_ECDH_RSA_WITH_RC4_128_SHA "ECDH-RSA-RC4-SHA"
#define BOOST_PP_SEQ_FOLD_LEFT_I_129(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_130, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(130, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_seed_cbc 777
#define PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR 124
#define OBJ_dsa_with_SHA3_512 OBJ_sigAlgs,8L
#define BOOST_PP_SEQ_FOLD_LEFT_119(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_119(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_hold_instruction_code 430
#define NID_certificate_policies 89
#define BIO_C_GET_CIPHER_CTX 129
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001101 (1)(0)(0)(0)(1)(1)(0)(1),
#define RLIM_SAVED_MAX RLIM_INFINITY
#define PEM_F_PEM_READ_BIO_DHPARAMS 141
#define STATX_CTIME 0x00000080U
#define BOOST_PREPROCESSOR_DETAIL_AUTO_REC_HPP 
#define BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args) BOOST_PP_CAT(BOOST_PP_ARRAY_ELEM(0, args) , _introspect)
#define BOOST_CORE_CHECKED_DELETE_HPP 
#define BOOST_MPL_HAS_XXX_NO_EXPLICIT_TEST_FUNCTION 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000010 (1)(0)(0)(0)(0)(1)(0),
#define __GLIBC_USE_IEC_60559_FUNCS_EXT 1
#define __INO64_T_TYPE __UQUAD_TYPE
#define EC_F_ECP_NISTZ256_WINDOWED_MUL 242
#define _mm512_maskz_extracti32x8_epi32(U,X,C) ((__m256i) __builtin_ia32_extracti32x8_mask ((__v16si)(__m512i) (X), (int) (C), (__v8si)(__m256i) _mm256_setzero_si256 (), (__mmask8) (U)))
#define BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT 45
#define _GLIBCXX_SET 1
#define L_SET SEEK_SET
#define _LIBC_LIMITS_H_ 1
#define __USE_XOPEN2K8XSI 1
#define BOOST_MPL_CFG_GPU_ENABLED BOOST_GPU_ENABLED
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_80(op,st,ss,sz) 0
#define BN_F_BN_DIV_RECP 130
#define BOOST_PP_NODE_181(p) BOOST_PP_IIF(p(181), 181, 182)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_81(op,st,ss,sz) 0
#define SSL_F_TLS_CONSTRUCT_CTOS_EMS 468
#define BOOST_VARIANT_DETAIL_ELEMENT_INDEX_HPP 
#define SSL_F_OSSL_STATEM_SERVER13_WRITE_TRANSITION 600
#define SSL3_TXT_RSA_RC4_128_SHA "RC4-SHA"
#define __size_t__ 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_83(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_84(op,st,ss,sz) 0
#define SSL_TICKET_FATAL_ERR_OTHER 1
#define CPU_ALLOC_SIZE(count) __CPU_ALLOC_SIZE (count)
#define PRIoPTR __PRIPTR_PREFIX "o"
#define POLL_IN POLL_IN
#define SSL_R_BAD_LEGACY_VERSION 292
#define _mm512_cvt_roundepu64_pd(A,B) ((__m512d)__builtin_ia32_cvtuqq2pd512_mask ((__v8di)(A), (__v8df)_mm512_setzero_pd (), -1, (B)))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_75(o,s,l) 0
#define __cpp_lib_ssize 201902L
#define TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA "DHE-PSK-AES256-CBC-SHA"
#define EVP_MD_CTX_block_size(e) EVP_MD_block_size(EVP_MD_CTX_md(e))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_116(op,st,ss,sz) 0
#define LN_dstu4145be "DSTU 4145-2002 big endian"
#define NID_documentTitle 469
#define SSL_TXT_DSS "DSS"
#define NID_id_GostR3411_94_with_GostR3410_94 808
#define TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA 0x03000084
#define BOOST_FILESYSTEM_DYN_LINK 1
#define EVP_CTRL_GET_IVLEN 0x25
#define AF_DECnet PF_DECnet
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011100 (0)(1)(1)(1)(0)(0),
#define _mm512_shuffle_f32x4(X,Y,C) ((__m512) __builtin_ia32_shuf_f32x4_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)-1))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_118(op,st,ss,sz) 0
#define EVP_PKEY_CTX_set_rsa_keygen_primes(ctx,primes) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES, primes, NULL)
#define _mm256_rol_epi32(A,B) ((__m256i)__builtin_ia32_prold256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define CT_R_LOG_CONF_MISSING_DESCRIPTION 111
#define __S_IFIFO 0010000
#define BOOST_FUNCTIONAL_HASH_DETAIL_FLOAT_FUNCTIONS_HPP 
#define X509V3_R_UNKNOWN_EXTENSION_NAME 130
#define RSA_PSS_SALTLEN_AUTO -2
#define LN_lastModifiedBy "lastModifiedBy"
#define SN_setAttr_GenCryptgrm "setAttr-GenCryptgrm"
#define BOOST_PP_REPEAT_3_1(m,d) m(4, 0, d)
#define TLS1_TXT_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 "ECDH-ECDSA-ARIA128-GCM-SHA256"
#define _GLIBCXX_HAVE_FLOAT_H 1
#define OBJ_preferredDeliveryMethod OBJ_X509,28L
#define _mm256_mask_blend_pd(__U,__A,__W) ((__m256d) __builtin_ia32_blendmpd_256_mask ((__v4df) (__A), (__v4df) (__W), (__mmask8) (__U)))
#define TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA 0x0300C014
#define ENOPROTOOPT 92
#define SSL_EXT_TLS1_3_ONLY 0x0020
#define _mm512_maskz_mul_round_pd(U,A,B,C) (__m512d)__builtin_ia32_mulpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)
#define _XABORT_CAPACITY (1 << 3)
#define _HASHTABLE_H 1
#define _mm512_maskz_mul_round_ps(U,A,B,C) (__m512)__builtin_ia32_mulps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)
#define _GLIBCXX_TR1_SPECIAL_FUNCTION_UTIL_H 1
#define SMIME_NOSIGS PKCS7_NOSIGS
#define MS_SYNCHRONOUS 16
#define BOOST_INTRUSIVE_DETAIL_EQUAL_TO_VALUE_HPP 
#define TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDH-ECDSA-CAMELLIA256-SHA384"
#define OBJ_aes_128_ofb128 OBJ_aes,3L
#define EMFILE 24
#define BOOST_PREPROCESSOR_FACILITIES_IDENTITY_HPP 
#define _mm256_rol_epi64(A,B) ((__m256i)__builtin_ia32_prolq256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define _GLIBCXX_HAVE_ETXTBSY 1
#define BOOST_PP_WHILE_255_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_256, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(256, s))
#define M_1_PI 0.31830988618379067154
#define BOOST_PP_FOR_201_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(202, s) BOOST_PP_IIF(c, BOOST_PP_FOR_202, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(202, s), p, o, m)
#define X509_F_DIR_CTRL 102
#define OBJ_camellia_256_cfb128 OBJ_camellia,44L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010110 (0)(0)(1)(0)(1)(1)(0),
#define IPPROTO_ICMPV6 IPPROTO_ICMPV6
#define UINT_MAX (INT_MAX * 2U + 1U)
#define EC_F_EC_GF2M_SIMPLE_LADDER_POST 285
#define __cpp_lib_shared_timed_mutex 201402
#define BOOST_PP_EXPR_IIF(bit,expr) BOOST_PP_EXPR_IIF_I(bit, expr)
#define BOOST_PP_FOR_33_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(34, s) BOOST_PP_IIF(c, BOOST_PP_FOR_34, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(34, s), p, o, m)
#define SSL_F_TLS_CONSTRUCT_CTOS_ETM 469
#define _MM_MASK_INVALID 0x0080
#define _IOC_DIRSHIFT (_IOC_SIZESHIFT+_IOC_SIZEBITS)
#define _GLIBCXX_HAVE_NETDB_H 1
#define BOOST_PP_REPEAT_2_147(m,d) BOOST_PP_REPEAT_2_146(m, d) m(3, 146, d)
#define MSG_EOR MSG_EOR
#define __AVX512VNNIINTRIN_H_INCLUDED 
#define BOOST_PP_REPEAT_2_149(m,d) BOOST_PP_REPEAT_2_148(m, d) m(3, 148, d)
#define _ASSERT_H 1
#define CONF_R_ERROR_LOADING_DSO 110
#define BIO_RR_SSL_X509_LOOKUP 0x01
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101011 (1)(0)(1)(0)(1)(1),
#define EC_F_PKEY_ECD_CTRL 271
#define X509V3_R_EXTENSION_EXISTS 145
#define NID_id_smime_cti_ets_proofOfSender 254
#define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1
#define IN_MULTICAST(a) IN_CLASSD(a)
#define __DECL_SIMD_expf64x 
#define _GLIBCXX_UNORDERED_SET 1
#define i2d_ECPKParameters_bio(bp,x) ASN1_i2d_bio_of_const(EC_GROUP,i2d_ECPKParameters,bp,x)
#define MOUNT_ATTR_RDONLY 0x00000001
#define OBJ_uacurve2 OBJ_dstu4145le,2L,2L
#define __INTMAX_TYPE__ long int
#define _mm256_mask_getmant_pd(W,U,X,B,C) ((__m256d) __builtin_ia32_getmantpd256_mask ((__v4df)(__m256d) (X), (int)(((C)<<2) | (B)), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define IPPROTO_DCCP IPPROTO_DCCP
#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
#define LN_rsassaPss "rsassaPss"
#define BOOST_HAS_VIRTUAL_DESTRUCTOR(T) __has_virtual_destructor(T)
#define _mm256_mask_getmant_ps(W,U,X,B,C) ((__m256) __builtin_ia32_getmantps256_mask ((__v8sf)(__m256) (X), (int)(((C)<<2) | (B)), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define X509_F_X509_PUBKEY_SET 120
#define BOOST_IS_EMPTY(T) __is_empty(T)
#define _mm512_fnmsub_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfnmsubpd512_mask(A, B, C, -1, R)
#define EVENT__HAVE_EPOLL 1
#define SSL_ERROR_WANT_ASYNC_JOB 10
#define __DECL_SIMD_powf64x 
#define _GLIBCXX_USE_TBB_PAR_BACKEND __has_include(<tbb/tbb.h>)
#define NID_uacurve1 1161
#define _mm512_fnmsub_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfnmsubps512_mask(A, B, C, -1, R)
#define SYS_F_GETSOCKNAME 16
#define __DEC128_MAX_EXP__ 6145
#define RSA_R_FIRST_OCTET_INVALID 133
#define V3_ASID_ASNUM 0
#define SSL_OP_MICROSOFT_SESS_ID_BUG 0x0
#define WORD_BIT 32
#define NID_uacurve3 1163
#define EVP_F_EVP_PKEY_DECRYPT_OLD 151
#define NID_aes_128_cfb128 421
#define ASN1_R_ILLEGAL_NULL_VALUE 182
#define SSL_set_tmp_ecdh(ssl,ecdh) SSL_ctrl(ssl,SSL_CTRL_SET_TMP_ECDH,0,(char *)(ecdh))
#define BOOST_PREPROCESSOR_FACILITIES_EXPAND_HPP 
#define ASN1_R_MIME_SIG_PARSE_ERROR 208
#define OBJ_uacurve9 OBJ_dstu4145le,2L,9L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_101 101
#define NID_uacurve6 1166
#define SSL_R_INVALID_ALERT 205
#define BOOST_PP_LIST_FOR_EACH_O_D(r,m,d,elem) m(r, d, elem)
#define SMIME_NOCHAIN PKCS7_NOCHAIN
#define ASN1_R_ILLEGAL_ZERO_CONTENT 222
#define NID_sha512 674
#define BMAP_IOCTL 1
#define HEADER_D1_SRTP_H 
#define LN_dstu4145le "DSTU 4145-2002 little endian"
#define FMT_DEPRECATED_NUMERIC_ALIGN 0
#define SSL_TXT_ARIA128 "ARIA128"
#define _mm_cmp_ss_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1,_MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_LIST_FOLD_RIGHT_200(o,s,l) BOOST_PP_LIST_FOLD_LEFT_200(o, s, BOOST_PP_LIST_REVERSE_D(200, l))
#define DECLARE_VARIABLE(type,shorttype,name) namespace fL ##shorttype { extern GFLAGS_DLL_DECLARE_FLAG type FLAGS_ ##name; } using fL ##shorttype::FLAGS_ ##name
#define PEM_F_DO_PK8PKEY_FP 125
#define TLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256 0x0300C027
#define BOOST_PP_LIST_FOLD_RIGHT_201(o,s,l) BOOST_PP_LIST_FOLD_LEFT_201(o, s, BOOST_PP_LIST_REVERSE_D(201, l))
#define HAVE_VSNPRINTF_ERRORS 1
#define SSL_F_OSSL_STATEM_CLIENT_WRITE_TRANSITION 599
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111 (0)(1)(1)(1)(1),
#define SSL_R_STILL_IN_INIT 121
#define NID_id_smime_spq 194
#define FBTHRIFT_CPP_DEFINE_MEMBER_INDIRECTION_FN(...) struct __fbthrift_cpp2_indirection_fn { template <typename __fbthrift_t> FOLLY_ERASE constexpr auto operator()(__fbthrift_t&& __fbthrift_v) const noexcept( noexcept(static_cast<__fbthrift_t&&>(__fbthrift_v).__VA_ARGS__)) -> decltype(( static_cast<__fbthrift_t&&>(__fbthrift_v).__VA_ARGS__)) { return static_cast<__fbthrift_t&&>(__fbthrift_v).__VA_ARGS__; } }
#define _PSTL_STRING(x) _PSTL_STRING_AUX(x)
#define POSIX_FADV_RANDOM 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_104 104
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110001 (1)(1)(1)(0)(0)(0)(1),
#define __ATOMIC_ACQ_REL 4
#define HEADER_X509V3ERR_H 
#define SSL_R_BAD_SIGNATURE 123
#define SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet "id-GostR3410-2001-CryptoPro-XchB-ParamSet"
#define SSL_F_SSL_ENABLE_CT 402
#define ASN1_R_OBJECT_NOT_ASCII_FORMAT 191
#define EC_R_KEYS_NOT_SET 140
#define SN_ct_precert_poison "ct_precert_poison"
#define __SI_ALIGNMENT 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_105 105
#define BOOST_PP_TUPLE_TO_LIST_O_1(tuple) BOOST_PP_CAT(BOOST_PP_TUPLE_TO_LIST_, BOOST_PP_VARIADIC_SIZE tuple) tuple
#define LN_member_body "ISO Member Body"
#define BOOST_PP_LIST_FOLD_RIGHT_207(o,s,l) BOOST_PP_LIST_FOLD_LEFT_207(o, s, BOOST_PP_LIST_REVERSE_D(207, l))
#define BOOST_PP_SEQ_SIZE_252(_) BOOST_PP_SEQ_SIZE_253
#define BOOST_PP_WHILE_190_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_191, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(191, s))
#define RSA_F4 0x10001L
#define NID_id_smime_aa 191
#define EC_F_EC_POINT_CMP 113
#define FMT_USE_UDL_TEMPLATE 1
#define NID_netscape_cert_extension 58
#define THRIFT_ASYNC_MESSAGECHANNEL_H_ 1
#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
#define NID_id_Gost28147_89_CryptoPro_KeyMeshing 819
#define TLS1_RFC_RSA_WITH_AES_128_CCM_8 "TLS_RSA_WITH_AES_128_CCM_8"
#define _mm512_maskz_div_round_pd(U,A,B,C) (__m512d)__builtin_ia32_divpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)
#define BOOST_PP_WHILE_42_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_43, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(43, s))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_83(p,o,s) 0
#define V_ASN1_UNDEF -1
#define _mm512_maskz_div_round_ps(U,A,B,C) (__m512)__builtin_ia32_divps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)
#define BOOST_PP_SEQ_SIZE_254(_) BOOST_PP_SEQ_SIZE_255
#define SI_TIMER SI_TIMER
#define __LC_MONETARY 4
#define LN_lastModifiedTime "lastModifiedTime"
#define BOOST_OPTIONAL_DETAIL_OPTIONAL_REFERENCE_SPEC_AJK_03OCT2015_HPP 
#define _mm512_getexp_ps(A) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_65 65
#define SSL_R_NOT_ON_RECORD_BOUNDARY 182
#define SM2err(f,r) ERR_PUT_error(ERR_LIB_SM2,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define RAND_R_ERROR_INSTANTIATING_DRBG 108
#define TLS1_TXT_PSK_WITH_ARIA_256_GCM_SHA384 "PSK-ARIA256-GCM-SHA384"
#define BOOST_PP_FOR_249_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(250, s) BOOST_PP_IIF(c, BOOST_PP_FOR_250, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(250, s), p, o, m)
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
#define RSA_F_RSA_PSS_GET_PARAM 151
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_66 66
#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
#define _mm256_mask_srli_epi16(W,U,A,B) ((__m256i) __builtin_ia32_psrlwi256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)(__m256i)(W), (__mmask16)(U)))
#define X509_set_notAfter X509_set1_notAfter
#define BOOST_PP_TUPLE_TO_LIST_1(e0) (e0, BOOST_PP_NIL)
#define BIO_get_cipher_ctx(b,c_pp) BIO_ctrl(b,BIO_C_GET_CIPHER_CTX,0, (char *)(c_pp))
#define EVP_F_EVP_PKEY_GET0_EC_KEY 131
#define BOOST_PP_TUPLE_REM_48(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47
#define OBJ_member OBJ_X509,31L
#define SCNoLEAST16 "ho"
#define BOOST_PP_TUPLE_TO_LIST_3(e0,e1,e2) (e0, (e1, (e2, BOOST_PP_NIL)))
#define APACHE_THRIFT_ACCESSOR_is_union 
#define OBJ_setct_AuthRevResTBEB OBJ_set_ctype,61L
#define BOOST_PP_WHILE_181_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_182, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(182, s))
#define NID_aria_256_gcm 1125
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_80(o,s,l) 0
#define __ATOMIC_SEQ_CST 5
#define BOOST_PP_TUPLE_EAT_N_I(size) BOOST_PP_TUPLE_EAT_ ## size
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_92(op,st,ss,sz) 0
#define NID_setct_CredReqTBEX 587
#define BOOST_PP_REPEAT_2_145(m,d) BOOST_PP_REPEAT_2_144(m, d) m(3, 144, d)
#define CONF_F_STR_COPY 101
#define OBJ_set_ctype OBJ_id_set,0L
#define EVP_F_RC5_CTRL 125
#define _mm256_mask_srli_epi32(W,U,A,B) ((__m256i) __builtin_ia32_psrldi256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_69 69
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_84(o,s,l) 0
#define SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD 81
#define ERR_LIB_FIPS 45
#define BOOST_PP_TUPLE_TO_LIST_9(e0,e1,e2,e3,e4,e5,e6,e7,e8) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, BOOST_PP_NIL)))))))))
#define sk_sort OPENSSL_sk_sort
#define BOOST_PREPROCESSOR_SLOT_DETAIL_DEF_HPP 
#define CT_F_CTLOG_STORE_LOAD_CTX_NEW 122
#define __FLT32X_MIN_10_EXP__ (-307)
#define SYNCHRONIZED_DUAL(n1,e1,n2,e2) if (bool SYNCHRONIZED_VAR(state) = false) { (void)::folly::detail::SYNCHRONIZED_macro_is_deprecated{}; } else for (auto SYNCHRONIZED_VAR(ptrs) = acquireLockedPair(e1, e2); !SYNCHRONIZED_VAR(state); SYNCHRONIZED_VAR(state) = true) for (auto& n1 = *SYNCHRONIZED_VAR(ptrs).first; !SYNCHRONIZED_VAR(state); SYNCHRONIZED_VAR(state) = true) for (auto& n2 = *SYNCHRONIZED_VAR(ptrs).second; !SYNCHRONIZED_VAR(state); SYNCHRONIZED_VAR(state) = true)
#define BOOST_MPL_AUX_CONFIG_OVERLOAD_RESOLUTION_HPP_INCLUDED 
#define PF_IB 27
#define BN_F_BN_COMPUTE_WNAF 142
#define OBJ_hmacWithSHA512_224 OBJ_rsadsi,2L,12L
#define BASE_LOG_SEVERITY_H__ 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_99(op,st,ss,sz) 0
#define _mm512_scalef_round_ps(A,B,C) (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)
#define _mm_mask_getexp_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_getexpsd_mask_round(A, B, W, U, C)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010110 (0)(1)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010111 (0)(1)(0)(1)(1)(1),
#define TLS1_CK_RSA_WITH_AES_128_CCM_8 0x0300C0A0
#define NID_md5WithRSA 104
#define BOOST_PP_REPEAT_2_31(m,d) BOOST_PP_REPEAT_2_30(m, d) m(3, 30, d)
#define RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE 144
#define _mm_mask_getexp_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_getexpss_mask_round(A, B, W, U, C)
#define COMP_F_COMP_CTX_NEW 103
#define BOOST_PP_SEQ_FOLD_LEFT_29(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_29(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_streetAddress 660
#define EKEYREVOKED 128
#define __attribute_deprecated__ __attribute__ ((__deprecated__))
#define FMT_CLANG_VERSION 0
#define BOOST_VARIANT_DETAIL_APPLY_VISITOR_UNARY_HPP 
#define EVENT__SIZEOF_SIZE_T 8
#define BOOST_PP_WHILE_184_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_185, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(185, s))
#define _MM_FROUND_RINT (_MM_FROUND_CUR_DIRECTION | _MM_FROUND_RAISE_EXC)
#define TLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384 0x0300C030
#define OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme OBJ_secg_scheme,14L,2L
#define _mm256_mask_srli_epi64(W,U,A,B) ((__m256i) __builtin_ia32_psrlqi256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define APACHE_THRIFT_ACCESSOR_headersPayloadContent 
#define CONF_F_NCONF_GET_SECTION 108
#define SSL_VERIFY_FAIL_IF_NO_PEER_CERT 0x02
#define BOOST_TYPE_TRAITS_EXT_ADD_LVALUE_REFERENCE__HPP 
#define __cpp_lib_parallel_algorithm 201603L
#define BOOST_PP_WHILE_34(p,o,s) BOOST_PP_WHILE_34_C(BOOST_PP_BOOL(p(35, s)), p, o, s)
#define TLS1_CK_PSK_WITH_AES_128_CBC_SHA256 0x030000AE
#define SSL_VERIFY_PEER 0x01
#define SN_cryptocom "cryptocom"
#define BOOST_INTRUSIVE_DETAIL_EBO_HOLDER_HPP 
#define LN_pilotAttributeType27 "pilotAttributeType27"
#define _GLIBCXX_HAVE_ASINF 1
#define __DECL_SIMD_cosf128x 
#define MALLOCX_ARENA(a) ((((int)(a))+1) << 20)
#define _mm256_mask_cmp_epu32_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(P), (__mmask8)(M)))
#define STATX_TYPE 0x00000001U
#define BOOST_PP_REPEAT_2_150(m,d) BOOST_PP_REPEAT_2_149(m, d) m(3, 149, d)
#define SN_id_mod_qualified_cert_88 "id-mod-qualified-cert-88"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_162(p,o,s) 0
#define PRIO_MAX 20
#define BOOST_PP_REPEAT_2_37(m,d) BOOST_PP_REPEAT_2_36(m, d) m(3, 36, d)
#define BOOST_PP_REPEAT_2_152(m,d) BOOST_PP_REPEAT_2_151(m, d) m(3, 151, d)
#define BOOST_TT_HAS_TRIVIAL_COPY_HPP_INCLUDED 
#define BOOST_PP_FOR_251_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(252, s) BOOST_PP_IIF(c, BOOST_PP_FOR_252, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(252, s), p, o, m)
#define SN_id_mod_qualified_cert_93 "id-mod-qualified-cert-93"
#define OBJ_sect163k1 OBJ_secg_ellipticCurve,1L
#define BOOST_PP_REPEAT_1_2(m,d) BOOST_PP_REPEAT_1_1(m, d) m(2, 1, d)
#define EVP_R_BAD_DECRYPT 100
#define SN_sinfo_access "subjectInfoAccess"
#define BIO_R_GETTING_SOCKTYPE 134
#define TLS1_RFC_DHE_PSK_WITH_AES_128_CCM "TLS_DHE_PSK_WITH_AES_128_CCM"
#define LN_sha1 "sha1"
#define __POSIX2_THIS_VERSION 200809L
#define INTMAX_WIDTH 64
#define SSL_TICKET_NO_DECRYPT 4
#define SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN 1046
#define OBJ_secp256k1 OBJ_secg_ellipticCurve,10L
#define _mm256_reduce_ps(A,B) ((__m256) __builtin_ia32_reduceps256_mask ((__v8sf)(__m256)(A), (int)(B), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1))
#define KU_CRL_SIGN 0x0002
#define BOOST_PP_BOOL_200 1
#define BOOST_PP_BOOL_201 1
#define BOOST_PP_BOOL_203 1
#define EAI_INTR -104
#define BOOST_PP_BOOL_206 1
#define BOOST_PP_BOOL_207 1
#define BOOST_PP_BOOL_208 1
#define BOOST_PP_BOOL_209 1
#define APACHE_THRIFT_ACCESSOR_hostname 
#define _mm256_mask_slli_epi16(W,U,X,C) ((__m256i)__builtin_ia32_psllwi256_mask ((__v16hi)(__m256i)(X), (int)(C), (__v16hi)(__m256i)(W), (__mmask16)(U)))
#define CT_R_BASE64_DECODE_ERROR 108
#define APACHE_THRIFT_ACCESSOR_valueType 
#define OBJ_X9_62_c2tnb431r1 OBJ_X9_62_c_TwoCurve,20L
#define LN_tlsfeature "TLS Feature"
#define BLKGETSIZE _IO(0x12,96)
#define NID_documentIdentifier 468
#define SN_id_pkix1_implicit_88 "id-pkix1-implicit-88"
#define SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE 1040
#define BOOST_PP_BOOL_210 1
#define BOOST_PP_BOOL_211 1
#define BOOST_PP_BOOL_212 1
#define BOOST_PP_BOOL_213 1
#define BOOST_PP_BOOL_214 1
#define BOOST_PP_BOOL_215 1
#define BOOST_PP_BOOL_216 1
#define BOOST_PP_BOOL_217 1
#define BOOST_PP_BOOL_218 1
#define BOOST_PP_BOOL_219 1
#define SSL_set1_client_sigalgs(s,slist,slistlen) SSL_ctrl(s,SSL_CTRL_SET_CLIENT_SIGALGS,slistlen,(int *)(slist))
#define __FD_ISSET(d,set) ((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)
#define SSL_get_secure_renegotiation_support(ssl) SSL_ctrl((ssl), SSL_CTRL_GET_RI_SUPPORT, 0, NULL)
#define EVP_PKEY_assign_DSA(pkey,dsa) EVP_PKEY_assign((pkey),EVP_PKEY_DSA, (char *)(dsa))
#define EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT 165
#define SN_sha1WithRSAEncryption "RSA-SHA1"
#define BOOST_PP_WHILE_102_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_103, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(103, s))
#define _mm_maskz_fixupimm_round_ss(U,X,Y,Z,C,R) ((__m128)__builtin_ia32_fixupimmss_maskz ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))
#define LN_Domain "Domain"
#define SN_id_pkix1_implicit_93 "id-pkix1-implicit-93"
#define SIGURG 23
#define OBJ_account OBJ_pilotObjectClass,5L
#define BOOST_PP_LIST_FOLD_RIGHT_188(o,s,l) BOOST_PP_LIST_FOLD_LEFT_188(o, s, BOOST_PP_LIST_REVERSE_D(188, l))
#define BOOST_PP_BOOL_220 1
#define BOOST_PP_BOOL_221 1
#define BOOST_PP_BOOL_222 1
#define BOOST_PP_BOOL_223 1
#define BOOST_PP_BOOL_225 1
#define BOOST_PP_BOOL_226 1
#define BOOST_PP_BOOL_227 1
#define BOOST_PP_BOOL_228 1
#define F_SETOWN_EX __F_SETOWN_EX
#define EVENT__HAVE_GETEGID 1
#define OPENSSL_memdup(str,s) CRYPTO_memdup((str), s, OPENSSL_FILE, OPENSSL_LINE)
#define NID_des_ede3_cfb64 61
#define PKCS7_R_WRONG_PKCS7_TYPE 114
#define S_IFIFO __S_IFIFO
#define __WCHAR_T 
#define TCP_NODELAY 1
#define BOOST_PP_FOR_175_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(176, s) BOOST_PP_IIF(c, BOOST_PP_FOR_176, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(176, s), p, o, m)
#define _mm_fpclass_ps_mask(X,C) ((__mmask8) __builtin_ia32_fpclassps128_mask ((__v4sf) (__m128) (X), (int) (C),(__mmask8)-1))
#define SSL_R_NO_SRTP_PROFILES 359
#define BOOST_PP_REPEAT_1_7(m,d) BOOST_PP_REPEAT_1_6(m, d) m(2, 6, d)
#define BOOST_PP_BOOL_230 1
#define BOOST_PP_BOOL_231 1
#define BOOST_PP_BOOL_232 1
#define BOOST_PP_BOOL_233 1
#define BOOST_PP_BOOL_235 1
#define BOOST_PP_BOOL_236 1
#define BOOST_PP_BOOL_238 1
#define BOOST_PP_BOOL_239 1
#define SN_set_brand "set-brand"
#define O_WRONLY 01
#define __FP_LONG_MAX 0x7fffffffffffffffL
#define _RANGES_UNINITIALIZED_H 1
#define STATX_ATTR_AUTOMOUNT 0x00001000
#define BOOST_PP_SEQ_FOLD_LEFT_I_134(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_135, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(135, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EHWPOISON 133
#define _mm512_mask_max_round_pd(W,U,A,B,R) (__m512d)__builtin_ia32_maxpd512_mask(A, B, W, U, R)
#define TLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256 0x0300C031
#define BOOST_PP_BOOL_240 1
#define BOOST_PP_BOOL_241 1
#define _mm512_mask_max_round_ps(W,U,A,B,R) (__m512)__builtin_ia32_maxps512_mask(A, B, W, U, R)
#define BOOST_PP_BOOL_243 1
#define BOOST_PP_BOOL_244 1
#define BOOST_PP_BOOL_245 1
#define BOOST_PP_BOOL_246 1
#define SSL_WRITING 2
#define BOOST_PP_BOOL_248 1
#define BOOST_PP_BOOL_249 1
#define __DBL_MIN_EXP__ (-1021)
#define SN_id_tc26_mac "id-tc26-mac"
#define BOOST_CORE_ADDRESSOF_HPP 
#define BOOST_PP_BOOL_250 1
#define BOOST_PP_BOOL_251 1
#define BOOST_PP_BOOL_252 1
#define BOOST_PP_BOOL_253 1
#define BOOST_PP_BOOL_254 1
#define BOOST_PP_BOOL_256 1
#define X509_F_X509_STORE_CTX_NEW 142
#define BN_R_BITS_TOO_SMALL 118
#define FOLLY_ASSUME_RELOCATABLE(...) struct IsRelocatable<__VA_ARGS__> : std::true_type {}
#define BOOST_PP_SEQ_FOLD_LEFT_I_137(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_138, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(138, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_LIST_FOLD_RIGHT_213(o,s,l) BOOST_PP_LIST_FOLD_LEFT_213(o, s, BOOST_PP_LIST_REVERSE_D(213, l))
#define SSL_CTRL_GET_MAX_CERT_LIST 50
#define _POSIX_THREAD_PRIORITY_SCHEDULING 200809L
#define BOOST_PP_LIST_FOLD_RIGHT_214(o,s,l) BOOST_PP_LIST_FOLD_LEFT_214(o, s, BOOST_PP_LIST_REVERSE_D(214, l))
#define OBJ_sect163r1 OBJ_secg_ellipticCurve,2L
#define OBJ_sect163r2 OBJ_secg_ellipticCurve,15L
#define LN_seed_ofb128 "seed-ofb"
#define _AVX512IFMAINTRIN_H_INCLUDED 
#define F_SET_RW_HINT 1036
#define ASN1_PKEY_CTRL_CMS_RI_TYPE 0x8
#define FIZZ_DECLARE_VARIANT_TYPE(NAME,X) struct NAME { enum class Type { X(FIZZ_ENUM_TYPES) }; X(FIZZ_UNION_CTORS, NAME) NAME(NAME&& other) { switch (other.type_) { X(FIZZ_UNION_MOVE_CASES, other) } type_ = other.type_; } NAME& operator=(NAME&& other) { destroyVariant(); switch (other.type_) { X(FIZZ_UNION_MOVE_CASES, other) } type_ = other.type_; return *this; } ~NAME() { destroyVariant(); } Type type() const { return type_; } X(FIZZ_UNION_ACCESSOR) X(FIZZ_CONST_UNION_ACCESSOR) template <class T, class E> struct TypedGet {}; X(FIZZ_UNION_TYPED_GET) template <class T> T* getType() { return TypedGet<T, int>::get(*this); } template <class T> const T* getType() const { return TypedGet<T, int>::getConst(*this); } private: union { X(FIZZ_UNION_TYPE) }; void destroyVariant() { switch (type_) { X(FIZZ_DESTRUCTOR_CASES) } } Type type_; };
#define NID_dsa_with_SHA512 1107
#define BOOST_PP_WHILE_222_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_223, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(223, s))
#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256"
#define __FLT128_MAX_10_EXP__ 4932
#define ATOMIC_CHAR16_T_LOCK_FREE __GCC_ATOMIC_CHAR16_T_LOCK_FREE
#define OBJ_id_regInfo_certReq OBJ_id_regInfo,2L
#define SN_set_brand_JCB "set-brand-JCB"
#define NID_setct_CredReqTBSX 551
#define _CXXABI_TWEAKS_H 1
#define _mm512_mask_shuffle_pd(W,U,X,Y,C) ((__m512d)__builtin_ia32_shufpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U)))
#define __DECL_SIMD_cosf32x 
#define _mm512_mask_shuffle_ps(W,U,X,Y,C) ((__m512)__builtin_ia32_shufps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U)))
#define SN_mgf1 "MGF1"
#define NID_set_brand_Novus 642
#define NID_pagerTelephoneNumber 489
#define BOOST_TT_HAS_NOTHROW_ASSIGN_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_I_2(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_3, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(3, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define PEM_R_BAD_MAGIC_NUMBER 116
#define EVP_F_EVP_MD_SIZE 162
#define ASN1_R_NOT_ENOUGH_DATA 142
#define BOOST_PP_SEQ_FOLD_LEFT_I_3(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_4, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(4, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_MPL_INT_FWD_HPP_INCLUDED 
#define FOLLY_HAVE_OPENSSL_ASN1_TIME_DIFF 1
#define BOOST_PP_LIST_FOR_EACH_I_M_D(r,m,d,l,i) m(r, d, i, BOOST_PP_LIST_FIRST(l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010010 (0)(0)(0)(1)(0)(0)(1)(0),
#define TLS1_RFC_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256"
#define SSL_F_SSL_SET_RFD 194
#define EVP_MD_CTX_FLAG_PAD_MASK 0xF0
#define BOOST_WORKAROUND(symbol,test) ((symbol ## _WORKAROUND_GUARD + 0 == 0) && (symbol != 0) && (1 % (( (symbol test) ) + 1)))
#define _SC_IPV6 _SC_IPV6
#define RWH_WRITE_LIFE_SHORT 2
#define SN_pbeWithSHA1AndDES_CBC "PBE-SHA1-DES"
#define BOOST_PP_NODE_190(p) BOOST_PP_IIF(p(190), BOOST_PP_NODE_189, BOOST_PP_NODE_191)
#define _MM_FROUND_RAISE_EXC 0x00
#define _SC_XOPEN_REALTIME _SC_XOPEN_REALTIME
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_122(op,st,ss,sz) 0
#define NID_setct_AuthRevReqBaggage 528
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010011 (0)(0)(0)(1)(0)(0)(1)(1),
#define IOSQE_FIXED_FILE (1U << IOSQE_FIXED_FILE_BIT)
#define SO_SNDBUF 7
#define si_arch _sifields._sigsys._arch
#define OBJ_NAME_TYPE_MD_METH 0x01
#define BOOST_VARIANT_RECURSIVE_WRAPPER_FWD_HPP 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001100 (1)(0)(0)(0)(1)(1)(0)(0),
#define SSL_F_DTLS1_PROCESS_RECORD 257
#define __SQUAD_TYPE long int
#define DECLARE_PEM_read_bio(name,type) type *PEM_read_bio_ ##name(BIO *bp, type **x, pem_password_cb *cb, void *u);
#define _XABORT_EXPLICIT (1 << 0)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_125(op,st,ss,sz) 0
#define DH_CHECK_INVALID_J_VALUE 0x40
#define SSL_CTRL_GET_CURVES SSL_CTRL_GET_GROUPS
#define SSL_F_SRP_VERIFY_SERVER_PARAM 596
#define NID_Private 385
#define __rusage_defined 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_94(o,s,l) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_4(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_5, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(5, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SO_DOMAIN 39
#define M_LOG2Ef128 __f128 (1.442695040888963407359924681001892137)
#define SN_sect409r1 "sect409r1"
#define X509_PURPOSE_SSL_SERVER 2
#define BOOST_SUFFIXED_BINARY_LITERAL(bit_groupings,suffix) BOOST_SUFFIXED_BINARY_LITERAL_D( BOOST_PP_DEDUCE_D(), bit_groupings, suffix )
#define BUF_F_BUF_MEM_GROW_CLEAN 105
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_117(s,p,o,m) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_128(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_242(op,st,ss,sz) 0
#define _SYS_STAT_H 1
#define RSA_SSLV23_PADDING 2
#define EREMCHG 78
#define OBJ_iso 1L
#define BOOST_COPYABLE_AND_MOVABLE(TYPE) 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_98(o,s,l) 0
#define OBJ_domainComponent OBJ_pilotAttributeType,25L
#define SSL_TLSEXT_ERR_OK 0
#define TLS1_2_VERSION_MAJOR 0x03
#define LN_aes_256_cfb128 "aes-256-cfb"
#define EVENT__HAVE_SYS_RANDOM_H 1
#define TCP_MSS_DESIRED 1220U
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_118(s,p,o,m) 0
#define X509_V_ERR_EE_KEY_TOO_SMALL 66
#define DH_F_PKEY_DH_INIT 125
#define TLS1_CK_PSK_WITH_CHACHA20_POLY1305 0x0300CCAB
#define _mm512_maskz_rsqrt28_round_ps(U,A,C) __builtin_ia32_rsqrt28ps_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)
#define FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS 0x00000002
#define _STRINGFWD_H 1
#define NID_id_Gost28147_89_CryptoPro_D_ParamSet 827
#define SN_magma_cbc "magma-cbc"
#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 "DH-RSA-CAMELLIA128-SHA256"
#define OBJ_set_msgExt OBJ_id_set,1L
#define _mm_mask3_fmsub_round_sd(A,B,C,U,R) (__m128d) __builtin_ia32_vfmsubsd3_mask3 (A, B, C, U, R)
#define NID_shaWithRSAEncryption 42
#define EVP_GCM_TLS_TAG_LEN 16
#define OBJ_hmac_sha3_224 OBJ_nist_hashalgs,13L
#define BOOST_PP_FOR_107_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(108, s) BOOST_PP_IIF(c, BOOST_PP_FOR_108, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(108, s), p, o, m)
#define _mm_mask3_fmsub_round_ss(A,B,C,U,R) (__m128) __builtin_ia32_vfmsubss3_mask3 (A, B, C, U, R)
#define BOOST_PP_WHILE_165_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_166, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(166, s))
#define IMPLEMENT_PEM_write_cb(name,type,str,asn1) IMPLEMENT_PEM_write_cb_bio(name, type, str, asn1) IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1)
#define __DBL_NORM_MAX__ double(1.79769313486231570814527423731704357e+308L)
#define EVP_MD_FLAG_DIGALGID_CUSTOM 0x0018
#define FILE_DEDUPE_RANGE_DIFFERS 1
#define stderr stderr
#define OBJ_id_cct_PKIData OBJ_id_cct,2L
#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP 70
#define EC_F_ECP_NISTZ256_PRE_COMP_NEW 244
#define NID_id_smime_aa_ets_certCRLTimestamp 237
#define SSL_R_EXTRA_DATA_IN_MESSAGE 153
#define EVP_CTRL_GCM_IV_GEN 0x13
#define BOOST_PP_REPEAT_FROM_TO_2(f,l,m,dt) BOOST_PP_REPEAT_FROM_TO_D_2(BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256), f, l, m, dt)
#define _SC_V7_ILP32_OFF32 _SC_V7_ILP32_OFF32
#define MS_MANDLOCK 64
#define ERR_PACK(l,f,r) ( (((unsigned int)(l) & 0x0FF) << 24L) | (((unsigned int)(f) & 0xFFF) << 12L) | (((unsigned int)(r) & 0xFFF) ) )
#define SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_GROUPS 544
#define SSL_CLIENT_HELLO_ERROR 0
#define PF_DECnet 12
#define SN_id_mod_ocsp "id-mod-ocsp"
#define OBJ_personalTitle OBJ_pilotAttributeType,40L
#define UINT_FAST16_WIDTH __WORDSIZE
#define TLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA 0x0300C021
#define EC_R_INVALID_DIGEST_TYPE 138
#define OBJ_hmac_sha3_256 OBJ_nist_hashalgs,14L
#define BOOST_PP_REPEAT_2_167(m,d) BOOST_PP_REPEAT_2_166(m, d) m(3, 166, d)
#define SN_magma_cfb "magma-cfb"
#define CRYPTO_F_CMAC_CTX_NEW 120
#define _mm512_fixupimm_round_pd(X,Y,Z,C,R) ((__m512d)__builtin_ia32_fixupimmpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(-1), (R)))
#define _mm512_maskz_fixupimm_pd(U,X,Y,Z,C) ((__m512d)__builtin_ia32_fixupimmpd512_maskz ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define IMPLEMENT_PEM_write_fp(name,type,str,asn1) int PEM_write_ ##name(FILE *fp, type *x) { return PEM_ASN1_write((i2d_of_void *)i2d_ ##asn1,str,fp,x,NULL,NULL,0,NULL,NULL); }
#define LN_sha "sha"
#define RSA_R_PSS_SALTLEN_TOO_SMALL 164
#define FSPICK_EMPTY_PATH 0x00000008
#define _mm512_mask_getexp_ps(W,U,A) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(W), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define __STATFS_MATCHES_STATFS64 1
#define CLONE_NEWUTS 0x04000000
#define BOOST_PP_IS_EMPTY_NO_OPT(...) BOOST_PP_DETAIL_IS_EMPTY_IIF ( BOOST_PP_IS_BEGIN_PARENS ( __VA_ARGS__ ) ) ( BOOST_PP_IS_EMPTY_ZERO, BOOST_PP_DETAIL_IS_EMPTY_PROCESS ) (__VA_ARGS__)
#define BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE(t,v) 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100110 (1)(0)(1)(0)(0)(1)(1)(0),
#define NID_aes_256_xts 914
#define _mm256_maskz_ror_epi32(U,A,B) ((__m256i)__builtin_ia32_prord256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i) _mm256_setzero_si256 (), (__mmask8)(U)))
#define RSA_F_RSA_CHECK_KEY 123
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100111 (1)(0)(1)(0)(0)(1)(1)(1),
#define X509_get_notAfter X509_getm_notAfter
#define EVP_PKEY_CTX_get_signature_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, -1, EVP_PKEY_OP_TYPE_SIG, EVP_PKEY_CTRL_GET_MD, 0, (void *)(pmd))
#define SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG 273
#define BOOST_PP_ITERATION_FINISH() BOOST_PP_CAT(BOOST_PP_ITERATION_FINISH_, BOOST_PP_ITERATION_DEPTH())
#define B_ASN1_SEQUENCE 0x10000
#define B_ASN1_DIRECTORYSTRING B_ASN1_PRINTABLESTRING| B_ASN1_TELETEXSTRING| B_ASN1_BMPSTRING| B_ASN1_UNIVERSALSTRING| B_ASN1_UTF8STRING
#define EVP_F_RC2_MAGIC_TO_METH 109
#define FOLLY_NAMESPACE_STD_BEGIN namespace std {
#define _mm_mask_range_round_sd(W,U,A,B,C,R) ((__m128d) __builtin_ia32_rangesd128_mask_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U), (R)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001001 (1)(0)(0)(0)(1)(0)(0)(1),
#define __unix__ 1
#define EVP_CTRL_GCM_SET_IVLEN EVP_CTRL_AEAD_SET_IVLEN
#define MBSTRING_ASC (MBSTRING_FLAG|1)
#define EVP_F_EVP_PKEY_SET1_ENGINE 187
#define SSL_F_TLS_PROCESS_CLIENT_HELLO 381
#define _SC_THREAD_PRIO_INHERIT _SC_THREAD_PRIO_INHERIT
#define _mm512_exp2a23_round_pd(A,C) __builtin_ia32_exp2pd_mask(A, (__v8df)_mm512_setzero_pd(), -1, C)
#define APACHE_THRIFT_ACCESSOR_interfaceKind 
#define BOOST_PP_SEQ_CAT_S_I_B(s,seq) BOOST_PP_SEQ_HEAD(seq)
#define BOOST_DETAIL_FIXED_COMPL_1 0
#define _mm512_exp2a23_round_ps(A,C) __builtin_ia32_exp2ps_mask(A, (__v16sf)_mm512_setzero_ps(), -1, C)
#define TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256"
#define _mm256_maskz_ror_epi64(U,A,B) ((__m256i)__builtin_ia32_prorq256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define BOOST_PP_FOR_46_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(47, s) BOOST_PP_IIF(c, BOOST_PP_FOR_47, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(47, s), p, o, m)
#define _mm512_getmant_round_pd(X,B,C,R) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1, (R)))
#define _mm512_getmant_round_ps(X,B,C,R) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)-1, (R)))
#define BOOST_PP_FOR_67_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(68, s) BOOST_PP_IIF(c, BOOST_PP_FOR_68, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(68, s), p, o, m)
#define LN_Management "Management"
#define OBJ_wap_wsg_idm_ecid_wtls11 OBJ_wap_wsg_idm_ecid,11L
#define OBJ_wap_wsg_idm_ecid_wtls12 OBJ_wap_wsg_idm_ecid,12L
#define LN_sm2 "sm2"
#define PEM_R_EXPECTING_PRIVATE_KEY_BLOB 119
#define EC_F_EC_GROUP_SET_CURVE_GF2M 176
#define APACHE_THRIFT_ACCESSOR_cv_map 
#define SN_sha1WithRSA "RSA-SHA1-2"
#define SN_X9_62_c2tnb191v1 "c2tnb191v1"
#define SN_X9_62_c2tnb191v2 "c2tnb191v2"
#define SN_X9_62_c2tnb191v3 "c2tnb191v3"
#define NID_id_GostR3410_94_CryptoPro_A_ParamSet 832
#define _mm256_maskz_alignr_epi8(U,X,Y,N) ((__m256i) __builtin_ia32_palignr256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)((N) * 8), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask32)(U)))
#define LN_kx_srp "kx-srp"
#define BOOST_PP_LIST_FOLD_RIGHT_223(o,s,l) BOOST_PP_LIST_FOLD_LEFT_223(o, s, BOOST_PP_LIST_REVERSE_D(223, l))
#define _mm512_mask_cmp_round_pd_mask(M,X,Y,P,R) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)(M), R))
#define OBJ_setCext_TokenType OBJ_set_certExt,10L
#define BIO_C_RESET_READ_REQUEST 147
#define _mm_ceil_ps(V) _mm_round_ps ((V), _MM_FROUND_CEIL)
#define OBJ_id_smime_alg_CMS3DESwrap OBJ_id_smime_alg,6L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_220(op,st,ss,sz) 0
#define NID_id_pda_placeOfBirth 349
#define BN_GF2m_cmp(a,b) BN_ucmp((a), (b))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001111 (1)(0)(0)(0)(1)(1)(1)(1),
#define SSL_SESS_CACHE_BOTH (SSL_SESS_CACHE_CLIENT|SSL_SESS_CACHE_SERVER)
#define SSL_ASYNC_PAUSED 5
#define OBJ_netscape_base_url OBJ_netscape_cert_extension,2L
#define EVP_PKEY_CTX_set_rsa_keygen_bits(ctx,bits) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_KEYGEN_BITS, bits, NULL)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_93(p,o,s) 0
#define __lwpins64(D2,D1,F) (__builtin_ia32_lwpins64 ((unsigned long long) (D2), (unsigned int) (D1), (unsigned int) (F)))
#define LN_setAttr_IssCap "issuer capabilities"
#define __CFLOAT128 __cfloat128
#define NID_iA5StringSyntax 442
#define USHRT_WIDTH 16
#define NID_pilotPerson 445
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100000 (1)(0)(1)(0)(0)(0)(0)(0),
#define sa_sigaction __sigaction_handler.sa_sigaction
#define LN_setAttr_GenCryptgrm "generate cryptogram"
#define _mm512_mask_mul_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_mulpd512_mask(A, B, W, U, C)
#define __cpp_unicode_literals 200710L
#define _mm512_mask_mul_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_mulps512_mask(A, B, W, U, C)
#define LN_issuerSignTool "Signing Tool of Issuer"
#define SN_sha3_256 "SHA3-256"
#define BOOST_PP_LIST_FOLD_LEFT_2(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_3, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(3, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_3(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_4, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(4, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_6(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_7, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(7, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_F_SSL_CTX_USE_SERVERINFO_EX 543
#define BOOST_PP_LIST_FOLD_LEFT_8(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_9, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(9, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define DTLS_MAX_VERSION DTLS1_2_VERSION
#define BOOST_PP_REPEAT_FROM_TO_D BOOST_PP_CAT(BOOST_PP_REPEAT_FROM_TO_D_, BOOST_PP_AUTO_REC(BOOST_PP_REPEAT_P, 4))
#define BOOST_MPL_ITER_FOLD_IF_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_LEFT_D(d,o,s,l) BOOST_PP_LIST_FOLD_LEFT_ ## d(o, s, l)
#define DECLARE_LHASH_COMP_FN(name,o_type) int name ##_LHASH_COMP(const void *, const void *);
#define SSL_R_BLOCK_CIPHER_PAD_IS_WRONG 129
#define BOOST_DETAIL_LEFT_OF_COMMA(params) BOOST_PP_IDENTITY( BOOST_DETAIL_FIRST_MACRO_PARAM )()( params )
#define GAI_NOWAIT 1
#define _mm256_maskz_shufflehi_epi16(U,A,B) ((__m256i) __builtin_ia32_pshufhw256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)(__m256i)_mm256_setzero_si256 (), (__mmask16)(U)))
#define SSL_F_TLS_PARSE_STOC_SUPPORTED_VERSIONS 612
#define TLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA 0x0300C020
#define EVP_F_EVP_PKEY_NEW_CMAC_KEY 193
#define _ASM_X86_POSIX_TYPES_64_H 
#define SSL_TXT_ADH "ADH"
#define BN_F_BNRAND_RANGE 138
#define SIGXFSZ 25
#define __DISABLE_AVX512VLCD__ 
#define M_LOG10Ef64x __f64x (0.434294481903251827651128918916605082)
#define _BITS_SIGEVENT_CONSTS_H 1
#define _MM_FROUND_TO_POS_INF 0x02
#define M_SQRT1_2f64x __f64x (0.707106781186547524400844362104849039)
#define BLKTRACESTART _IO(0x12,116)
#define _EVENT_LOG_DEBUG EVENT_LOG_DEBUG
#define OPENSSL_NO_MD2 
#define NID_id_smime_aa_ets_escTimeStamp 236
#define PKCS7_S_HEADER 0
#define OPENSSL_malloc(num) CRYPTO_malloc(num, OPENSSL_FILE, OPENSSL_LINE)
#define NID_camellia_128_cfb1 760
#define DECLARE_ASN1_NDEF_FUNCTION(name) int i2d_ ##name ##_NDEF(name *a, unsigned char **out);
#define TLS1_TXT_ECDH_ECDSA_WITH_RC4_128_SHA "ECDH-ECDSA-RC4-SHA"
#define FOLLY_PRINTF_FORMAT_ATTR(format_param,dots_param) __attribute__((__format__(__printf__, format_param, dots_param)))
#define d2i_DHxparams_fp(fp,x) (DH *)ASN1_d2i_fp((char *(*)())DH_new, (char *(*)())d2i_DHxparams, (fp), (unsigned char **)(x))
#define OBJ_X9_57 OBJ_ISO_US,10040L
#define OBJ_id_cmc_statusInfo OBJ_id_cmc,1L
#define OBJ_pbe_WithSHA1And128BitRC4 OBJ_pkcs12_pbeids,1L
#define SSL_TXT_EDH "EDH"
#define BOOST_CONSTEXPR constexpr
#define __GNUC_PATCHLEVEL__ 1
#define EVP_F_AES_OCB_CIPHER 169
#define IPV6_HOPOPTS 54
#define _AVX512BITALGINTRIN_H_INCLUDED 
#define SN_sect233k1 "sect233k1"
#define SMIME_BINARY PKCS7_BINARY
#define SN_set_brand_AmericanExpress "set-brand-AmericanExpress"
#define SN_ipsecUser "ipsecUser"
#define _BITS_SIGTHREAD_H 1
#define BOOST_PP_FOR_142_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(143, s) BOOST_PP_IIF(c, BOOST_PP_FOR_143, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(143, s), p, o, m)
#define lh_strhash OPENSSL_LH_strhash
#define MBSTRING_UTF8 (MBSTRING_FLAG)
#define SSL_F_TLS_CONSTRUCT_CLIENT_CERTIFICATE 484
#define SN_id_smime_aa_contentIdentifier "id-smime-aa-contentIdentifier"
#define SO_SECURITY_AUTHENTICATION 22
#define NID_setCext_TokenIdentifier 616
#define __UINT_FAST8_MAX__ 0xff
#define EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK 0x400000
#define _mm512_gf2p8affineinv_epi64_epi8(A,B,C) ((__m512i) __builtin_ia32_vgf2p8affineinvqb_v64qi ( (__v64qi)(__m512i)(A), (__v64qi)(__m512i)(B), (int)(C)))
#define SN_id_HMACGostR3411_94 "id-HMACGostR3411-94"
#define ASN1_R_ILLEGAL_NESTED_TAGGING 181
#define SCNdLEAST8 "hhd"
#define EVP_PKEY_CTX_set_dh_kdf_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_MD, 0, (void *)(md))
#define OBJ_setct_PCertResTBS OBJ_set_ctype,39L
#define _XOPEN_XCU_VERSION 4
#define EC_FLAG_COFACTOR_ECDH 0x1000
#define SSL_OP_CIPHER_SERVER_PREFERENCE 0x00400000U
#define BOOST_PP_ARRAY_DATA(array) BOOST_PP_TUPLE_ELEM(2, 1, array)
#define _mm_mask_add_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_addsd_mask_round(A, B, W, U, C)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_227(op,st,ss,sz) 0
#define NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet 843
#define BOOST_INTRUSIVE_SLIST_HPP 
#define _mm_mask_add_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_addss_mask_round(A, B, W, U, C)
#define NID_id_tc26_digest 981
#define _mm_mask_fpclass_ps_mask(u,X,C) ((__mmask8) __builtin_ia32_fpclassps128_mask ((__v4sf) (__m128) (X), (int) (C),(__mmask8)(u)))
#define SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB 77
#define __INT_LEAST8_WIDTH__ 8
#define SN_magma_ctr "magma-ctr"
#define OBJ_id_smime_mod_msg_v3 OBJ_id_smime_mod,4L
#define _mm512_maskz_shuffle_f32x4(U,X,Y,C) ((__m512) __builtin_ia32_shuf_f32x4_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U)))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_228(op,st,ss,sz) 0
#define __stub_sigreturn 
#define EVP_F_EVP_PKEY_GET0_SIPHASH 172
#define _XBS5_LPBIG_OFFBIG -1
#define BOOST_COPY_ASSIGN_REF_3_TEMPL_ARGS(TYPE,ARG1,ARG2,ARG3) const TYPE<ARG1, ARG2, ARG3>&
#define OBJ_Directory OBJ_internet,1L
#define __always_inline __inline __attribute__ ((__always_inline__))
#define _LINUX_MOUNT_H 
#define BOOST_PP_WHILE_146_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_147, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(147, s))
#define BIO_C_SET_BIND_MODE 131
#define CRL_REASON_PRIVILEGE_WITHDRAWN 9
#define LN_pbeWithMD2AndDES_CBC "pbeWithMD2AndDES-CBC"
#define BOOST_PP_WHILE_29_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_30, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(30, s))
#define LN_issuing_distribution_point "X509v3 Issuing Distribution Point"
#define BOOST_PP_REPEAT_2_170(m,d) BOOST_PP_REPEAT_2_169(m, d) m(3, 169, d)
#define _SC_CHARCLASS_NAME_MAX _SC_CHARCLASS_NAME_MAX
#define FOLLY_GFLAGS_NAMESPACE gflags
#define ASN1_F_ASN1_ITEM_SIGN_CTX 220
#define ASN1_R_MISSING_VALUE 189
#define TSerr(f,r) ERR_PUT_error(ERR_LIB_TS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define X509_V_ERR_SUITE_B_INVALID_VERSION 56
#define TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 "TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_175(p,o,s) 0
#define SSL_want_async(s) (SSL_want(s) == SSL_ASYNC_PAUSED)
#define _mm512_cvt_roundpd_epi64(A,B) ((__m512i)__builtin_ia32_cvtpd2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define _GLIBCXX_TR1_RIEMANN_ZETA_TCC 1
#define EC_R_INVALID_TRINOMIAL_BASIS 137
#define BOOST_PP_REPEAT_2_176(m,d) BOOST_PP_REPEAT_2_175(m, d) m(3, 175, d)
#define SN_aria_192_gcm "ARIA-192-GCM"
#define BOOST_INTRUSIVE_SAFE_HOOK_DEFAULT_ASSERT BOOST_ASSERT
#define BOOST_PP_FOR_90_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(91, s) BOOST_PP_IIF(c, BOOST_PP_FOR_91, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(91, s), p, o, m)
#define TLS1_TXT_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 "RSA-PSK-CAMELLIA256-SHA384"
#define BOOST_PP_REPEAT_2_178(m,d) BOOST_PP_REPEAT_2_177(m, d) m(3, 177, d)
#define OBJ_sm4_cfb128 OBJ_sm_scheme,104L,4L
#define BOOST_PP_SEQ_FOLD_LEFT_70(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_70(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_camellia_256_cfb1 762
#define __cpp_lib_integer_comparison_functions 202002L
#define NID_camellia_256_cfb8 765
#define ERR_R_DISABLED (5|ERR_R_FATAL)
#define _mm512_mask_div_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_divps512_mask(A, B, W, U, C)
#define SN_hmac_sha3_512 "id-hmacWithSHA3-512"
#define NID_set_attr 515
#define BOOST_PP_SEQ_FOLD_LEFT_71(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_71(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __mbstate_t_defined 1
#define TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA 0x0300C001
#define SSL_R_CA_KEY_TOO_SMALL 397
#define BOOST_PP_LIST_FOLD_RIGHT_198(o,s,l) BOOST_PP_LIST_FOLD_LEFT_198(o, s, BOOST_PP_LIST_REVERSE_D(198, l))
#define _GLIBCXX_HAVE_EOWNERDEAD 1
#define SSL_get_shared_group(s,n) SSL_ctrl(s,SSL_CTRL_GET_SHARED_GROUP,n,NULL)
#define FOLLY_EXCEPTION_COUNT_USE_CXA_GET_GLOBALS 
#define EVP_CIPH_CTR_MODE 0x5
#define BIO_get_read_request(b) (int)BIO_ctrl(b,BIO_C_GET_READ_REQUEST,0,NULL)
#define PF_SECURITY 14
#define SSL_SECOP_TICKET (10 | SSL_SECOP_OTHER_NONE)
#define TCP_REPAIR_OFF_NO_WP -1
#define _GLIBCXX_HAVE_ATANF 1
#define BOOST_PP_WHILE_245(p,o,s) BOOST_PP_WHILE_245_C(BOOST_PP_BOOL(p(246, s)), p, o, s)
#define NID_id_cmc_popLinkWitness 345
#define FOLLY_PP_DETAIL_FOR_EACH_REC_4(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_3(fn, __VA_ARGS__)
#define LN_private_key_usage_period "X509v3 Private Key Usage Period"
#define BOOST_PP_SEQ_FOLD_LEFT_74(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_74(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define IORING_REGISTER_PERSONALITY 9
#define NID_ffdhe4096 1128
#define _GLIBCXX_NODISCARD [[__nodiscard__]]
#define BIO_CTRL_DGRAM_QUERY_MTU 40
#define _POSIX_THREAD_CPUTIME 0
#define __DBL_MANT_DIG__ 53
#define BOOST_PP_SEQ_FOLD_LEFT_I_144(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_145, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(145, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_F_SSL_INIT_WBIO_BUFFER 184
#define OBJ_initials OBJ_X509,43L
#define BOOST_PP_SEQ_FOLD_LEFT_134(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_134(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OPENSSL_DSA_MAX_MODULUS_BITS 10000
#define ULONG_LONG_MAX (LONG_LONG_MAX * 2ULL + 1ULL)
#define OBJ_ad_dvcs OBJ_id_ad,4L
#define _GLIBCXX_HAVE_SYS_TIME_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_77(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_77(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define RAND_R_PERSONALISATION_STRING_TOO_LONG 116
#define _mm_maskz_getexp_sd(U,A,B) (__m128d)__builtin_ia32_getexpsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, _MM_FROUND_CUR_DIRECTION)
#define __unix 1
#define X509V3_F_SXNET_GET_ID_ASC 128
#define SN_id_mod_kea_profile_88 "id-mod-kea-profile-88"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110101 (1)(1)(1)(0)(1)(0)(1),
#define BOOST_PP_SEQ_FOLD_LEFT_136(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_136(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define APACHE_THRIFT_ACCESSOR_services 
#define __UINT32_MAX__ 0xffffffffU
#define _BITS_SS_FLAGS_H 1
#define TLS1_TXT_ECDH_anon_WITH_NULL_SHA "AECDH-NULL-SHA"
#define _GLIBCXX_CONDITION_VARIABLE 1
#define SSL_R_LENGTH_MISMATCH 159
#define MSG_CMSG_CLOEXEC MSG_CMSG_CLOEXEC
#define SSL_R_TLSV1_ALERT_RECORD_OVERFLOW 1022
#define SN_ecdsa_with_SHA3_256 "id-ecdsa-with-sha3-256"
#define _mm512_mask_i32scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv16si ((void *) (ADDR), (__mmask16) (MASK), (__v16si)(__m512i) (INDEX), (__v16si)(__m512i) (V1), (int) (SCALE))
#define OBJ_brainpoolP320t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,10L
#define NID_id_GostR3410_2001_CryptoPro_B_ParamSet 841
#define _CS_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS
#define _SC_USHRT_MAX _SC_USHRT_MAX
#define _SC_DEVICE_SPECIFIC_R _SC_DEVICE_SPECIFIC_R
#define BOOST_PP_LIST_FOLD_RIGHT_235(o,s,l) BOOST_PP_LIST_FOLD_LEFT_235(o, s, BOOST_PP_LIST_REVERSE_D(235, l))
#define MSG_CONFIRM MSG_CONFIRM
#define BIO_TYPE_DGRAM (21|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
#define __glibcxx_assert(_Condition) 
#define SCNuLEAST16 "hu"
#define BOOST_PP_LIST_FOLD_RIGHT_236(o,s,l) BOOST_PP_LIST_FOLD_LEFT_236(o, s, BOOST_PP_LIST_REVERSE_D(236, l))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_58 58
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_NIL 1
#define FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED 3
#define __statx_defined 1
#define BOOST_MOVE_DOC0PTR(TYPE) TYPE
#define HEADER_ENVELOPE_H 
#define PKCS7_F_PKCS7_ENCODE_RINFO 132
#define __U16_TYPE unsigned short int
#define EC_R_NEED_NEW_SETUP_VALUES 157
#define BOOST_PP_LIST_FOLD_RIGHT_239(o,s,l) BOOST_PP_LIST_FOLD_LEFT_239(o, s, BOOST_PP_LIST_REVERSE_D(239, l))
#define PF_IEEE802154 36
#define ERESTART 85
#define EVENT__HAVE_STRUCT_SOCKADDR_STORAGE 1
#define TLS1_CK_DHE_RSA_WITH_AES_256_CCM_8 0x0300C0A3
#define _GLIBCXX_GUARD_PENDING_BIT __guard_test_bit (1, 1)
#define __cpp_lib_unwrap_ref 201811L
#define SCNxFAST16 __PRIPTR_PREFIX "x"
#define ub_locality_name 128
#define _HASH_BYTES_H 1
#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA "DHE-RSA-CAMELLIA256-SHA"
#define SN_member "member"
#define EISNAM 120
#define NID_itu_t 645
#define SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET 428
#define NID_id_aes192_wrap_pad 900
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100 (0)(0)(1)(0)(0),
#define SSL3_SESSION_ID_SIZE 32
#define BOOST_DETAIL_FIXED_COMPL(bit) BOOST_PP_CAT( BOOST_DETAIL_FIXED_COMPL_, bit )
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101 (0)(0)(1)(0)(1),
#define _mm512_mask_i32scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv8di ((void *) (ADDR), (__mmask8) (MASK), (__v8si)(__m256i) (INDEX), (__v8di)(__m512i) (V1), (int) (SCALE))
#define SN_bf_cfb64 "BF-CFB"
#define _mm_mask_shufflelo_epi16(W,U,A,B) ((__m128i) __builtin_ia32_pshuflw128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)(__m128i)(W), (__mmask8)(U)))
#define RAND_R_FAILED_TO_CREATE_LOCK 126
#define OBJ_textNotice OBJ_id_qt,3L
#define RENAME_EXCHANGE (1 << 1)
#define IN6ADDR_ANY_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }
#define _mm512_maskz_getmant_pd(U,X,B,C) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define __LDBL_REDIR_NTH(name,proto) name proto __THROW
#define AF_FILE PF_FILE
#define EVP_VerifyInit(a,b) EVP_DigestInit(a,b)
#define DECLARE_PEM_write_fp_const(name,type) int PEM_write_ ##name(FILE *fp, const type *x);
#define CLONE_THREAD 0x00010000
#define __USE_KERNEL_IPV6_DEFS 0
#define SN_pkcs "pkcs"
#define _XSAVECINTRIN_H_INCLUDED 
#define SSL_F_SSL_LOG_RSA_CLIENT_KEY_EXCHANGE 499
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS 66
#define ERR_LIB_RSA 4
#define BOOST_PP_REPEAT_1_38(m,d) BOOST_PP_REPEAT_1_37(m, d) m(2, 37, d)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_137(op,st,ss,sz) 0
#define __INT64_C(c) c ## L
#define LN_pbeWithMD5AndCast5_CBC "pbeWithMD5AndCast5CBC"
#define SCNuLEAST64 __PRI64_PREFIX "u"
#define _mm256_mask_permute_pd(W,U,X,C) ((__m256d) __builtin_ia32_vpermilpd256_mask ((__v4df)(__m256d)(X), (int)(C), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define _mm256_mask_permute_ps(W,U,X,C) ((__m256) __builtin_ia32_vpermilps256_mask ((__v8sf)(__m256)(X), (int)(C), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define EVENT_DEFINED_LISTENTRY_ 
#define SSL_TXT_kRSA "kRSA"
#define EVLOOP_NO_EXIT_ON_EMPTY 0x04
#define X509_PURPOSE_MIN 1
#define _mm256_mmask_i64gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256d) __builtin_ia32_gather3div4df ((__v4df)(__m256d) (V1OLD), (void const *) (ADDR), (__v4di)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define X509V3_R_INVALID_SECTION 135
#define EVP_R_CTRL_NOT_IMPLEMENTED 132
#define _mm256_mmask_i64gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128) __builtin_ia32_gather3div8sf ((__v4sf)(__m128) (V1OLD), (void const *) (ADDR), (__v4di)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define BOOST_PP_FOR_34_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(35, s) BOOST_PP_IIF(c, BOOST_PP_FOR_35, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(35, s), p, o, m)
#define BOOST_MSVC6_MEMBER_TEMPLATES 
#define SN_seed_cfb128 "SEED-CFB"
#define BOOST_MPL_INSERT_HPP_INCLUDED 
#define BOOST_PP_SEQ_ELEM_3(_) BOOST_PP_SEQ_ELEM_2
#define SN_SNILS "SNILS"
#define _GLIBCXX_HAVE_AT_QUICK_EXIT 1
#define SSL_F_TLS_CONSTRUCT_STOC_CRYPTOPRO_BUG 452
#define DEFFILEMODE (S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)
#define TLS1_RFC_PSK_WITH_AES_256_CBC_SHA384 "TLS_PSK_WITH_AES_256_CBC_SHA384"
#define NID_sha512WithRSAEncryption 670
#define S_IRWXG (S_IRWXU >> 3)
#define _SC_2_UPE _SC_2_UPE
#define EADDRINUSE 98
#define BOOST_PP_WHILE_46(p,o,s) BOOST_PP_WHILE_46_C(BOOST_PP_BOOL(p(47, s)), p, o, s)
#define DSS_prime_checks 64
#define S_IRWXO (S_IRWXG >> 3)
#define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
#define FMT_HAS_GXX_CXX11 FMT_GCC_VERSION
#define EVP_CTRL_SET_PIPELINE_INPUT_LENS 0x24
#define SSL_set_msg_callback_arg(ssl,arg) SSL_ctrl((ssl), SSL_CTRL_SET_MSG_CALLBACK_ARG, 0, (arg))
#define OBJ_secretBag OBJ_pkcs12_BagIds,5L
#define _SIDD_CMP_RANGES 0x04
#define SSL_EXT_TLS1_3_HELLO_RETRY_REQUEST 0x0800
#define SN_id_smime_cti "id-smime-cti"
#define S_IFMT __S_IFMT
#define TCP_COOKIE_MIN 8
#define CLOCK_REALTIME 0
#define FS_UNRM_FL 0x00000002
#define FSCRYPT_KEY_IDENTIFIER_SIZE 16
#define _mm_mask_cmp_ps_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpps128_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)(M)))
#define OBJ_X9_62_c_TwoCurve OBJ_X9_62_ellipticCurve,0L
#define BOOST_PP_REPEAT_2_182(m,d) BOOST_PP_REPEAT_2_181(m, d) m(3, 181, d)
#define SN_id_cmc_statusInfo "id-cmc-statusInfo"
#define BOOST_PP_SEQ_ELEM_8(_) BOOST_PP_SEQ_ELEM_7
#define __wint_t_defined 1
#define APACHE_THRIFT_ACCESSOR_fields 
#define ASN1_R_UNEXPECTED_EOC 159
#define BIO_TYPE_ASN1 (22|BIO_TYPE_FILTER)
#define BOOST_PP_REPEAT_FROM_TO_M_2_I(z,n,d,f,m,dt) BOOST_PP_REPEAT_FROM_TO_M_2_II(z, BOOST_PP_ADD_D(d, n, f), m, dt)
#define BOOST_PP_REPEAT_2_185(m,d) BOOST_PP_REPEAT_2_184(m, d) m(3, 184, d)
#define BOOST_HAS_LONG_LONG 
#define ASN1_F_ASN1_STRING_GET_INT64 227
#define _GLIBCXX_USE_ALLOCATOR_NEW 1
#define _mm_mask_srli_epi32(W,U,A,B) ((__m128i) __builtin_ia32_psrldi128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define BIO_F_NBIOF_NEW 154
#define TLS1_TXT_PSK_WITH_ARIA_128_GCM_SHA256 "PSK-ARIA128-GCM-SHA256"
#define NID_target_information 402
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100110 (1)(1)(1)(0)(0)(1)(1)(0),
#define BOOST_PP_REPEAT_2_187(m,d) BOOST_PP_REPEAT_2_186(m, d) m(3, 186, d)
#define LN_pkcs9_countersignature "countersignature"
#define BOOST_PP_ENUM_BINARY_PARAMS_M_I(z,n,p1,p2) BOOST_PP_ENUM_BINARY_PARAMS_M_II(z, n, p1, p2)
#define LN_roleOccupant "roleOccupant"
#define SSL_SECOP_PEER_CA_KEY (SSL_SECOP_CA_KEY | SSL_SECOP_PEER)
#define TLS1_TXT_PSK_WITH_CHACHA20_POLY1305 "PSK-CHACHA20-POLY1305"
#define EVP_F_ARIA_CCM_INIT_KEY 175
#define _SC_POLL _SC_POLL
#define IN_BADCLASS(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xf0000000)
#define MAP_PRIVATE 0x02
#define RSA_F_CHECK_PADDING_MD 140
#define SSL_AD_NO_CERTIFICATE SSL3_AD_NO_CERTIFICATE
#define LN_roomNumber "roomNumber"
#define SN_aes_192_cbc "AES-192-CBC"
#define __iscanonical(x) ((void) (__typeof (x)) (x), 1)
#define _STL_ALGO_H 1
#define BOOST_PP_SUB_P(d,xy) BOOST_PP_TUPLE_ELEM(2, 1, xy)
#define TCPOLEN_TIMESTAMP 10
#define SSL_TXT_aECDSA "aECDSA"
#define CRL_REASON_CESSATION_OF_OPERATION 5
#define _GLIBCXX_COMPLEX 1
#define _BITS_UINTN_IDENTITY_H 1
#define _GLIBCXX_GUARD_SET(x) *(char *) (x) = 1
#define RSA_F_RSA_PADDING_ADD_SSLV23 110
#define BOOST_PP_IIF(bit,t,f) BOOST_PP_IIF_I(bit, t, f)
#define X509V3_F_X509V3_ADD_VALUE 105
#define LN_homePostalAddress "homePostalAddress"
#define LN_postalAddress "postalAddress"
#define SSL_TXT_ARIA256 "ARIA256"
#define BUS_OBJERR BUS_OBJERR
#define BOOST_PP_ENUM_SHIFTED_PARAMS_Z(z,count,param) BOOST_PP_REPEAT_ ## z(BOOST_PP_DEC(count), BOOST_PP_ENUM_SHIFTED_PARAMS_M, param)
#define LN_friendlyCountry "friendlyCountry"
#define NID_sendOwner 1029
#define SSL_CTRL_SELECT_CURRENT_CERT 116
#define SN_aria_192_cfb1 "ARIA-192-CFB1"
#define OBJ_setct_PResData OBJ_set_ctype,14L
#define SN_aria_192_cfb8 "ARIA-192-CFB8"
#define TLS1_TXT_RSA_PSK_WITH_AES_256_GCM_SHA384 "RSA-PSK-AES256-GCM-SHA384"
#define evuser_initialized(ev) event_initialized(ev)
#define EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES (EVP_PKEY_ALG_CTRL + 13)
#define BN_FLG_STATIC_DATA 0x02
#define PROT_EXEC 0x4
#define NID_id_mod_dvcs 283
#define _mm512_clmulepi64_epi128(A,B,C) ((__m512i) __builtin_ia32_vpclmulqdq_v8di ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (int)(C)))
#define BOOST_PP_DIV_BASE_P_IM(d,im) BOOST_PP_DIV_BASE_P_I(d, im)
#define SSL_MODE_ASYNC 0x00000100U
#define _BSD_SIZE_T_DEFINED_ 
#define _STAT_VER_KERNEL 0
#define SSL_CONF_FLAG_FILE 0x2
#define SSL_R_NO_PRIVATE_KEY_ASSIGNED 190
#define NID_aria_256_cfb1 1082
#define SN_crl_number "crlNumber"
#define __blkcnt_t_defined 
#define X509V3_R_UNABLE_TO_GET_ISSUER_KEYID 123
#define NID_aria_256_cfb8 1085
#define BOOST_PP_WHILE_182_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_183, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(183, s))
#define get_rfc3526_prime_1536 BN_get_rfc3526_prime_1536
#define EC_R_UNKNOWN_COFACTOR 164
#define FMT_EXTERN extern
#define _mm512_extractf64x2_pd(X,C) ((__m128d) __builtin_ia32_extractf64x2_512_mask ((__v8df)(__m512d) (X), (int) (C), (__v2df)(__m128d) _mm_setzero_pd (), (__mmask8)-1))
#define BOOST_MPL_LIMITS_LIST_HPP_INCLUDED 
#define SN_dhSinglePass_cofactorDH_sha224kdf_scheme "dhSinglePass-cofactorDH-sha224kdf-scheme"
#define s6_addr16 __in6_u.__u6_addr16
#define BOOST_PP_REPEAT_FROM_TO BOOST_PP_CAT(BOOST_PP_REPEAT_FROM_TO_, BOOST_PP_AUTO_REC(BOOST_PP_REPEAT_P, 4))
#define X509V3_R_INVALID_BOOLEAN_STRING 104
#define V_ASN1_BMPSTRING 30
#define _mm256_maskz_getmant_ps(U,X,B,C) ((__m256) __builtin_ia32_getmantps256_mask ((__v8sf)(__m256) (X), (int)(((C)<<2) | (B)), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)(U)))
#define TLSEXT_STATUSTYPE_ocsp 1
#define BOOST_BINARY(bit_groupings) BOOST_BINARY_LITERAL_D( BOOST_PP_DEDUCE_D(), bit_groupings )
#define BOOST_PP_LIST_FOLD_RIGHT_249(o,s,l) BOOST_PP_LIST_FOLD_LEFT_249(o, s, BOOST_PP_LIST_REVERSE_D(249, l))
#define _GLIBCXX_BEGIN_NAMESPACE_ALGO 
#define EVP_PADDING_PKCS7 1
#define NID_id_cmc_responseInfo 342
#define BIO_R_UNABLE_TO_REUSEADDR 139
#define SN_subject_alt_name "subjectAltName"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111 (0)(0)(1)(1)(1),
#define __O_LARGEFILE 0
#define BOOST_HAS_NOTHROW_CONSTRUCTOR(T) (__has_nothrow_constructor(T) && is_default_constructible<T>::value BOOST_INTEL_TT_OPTS)
#define TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C09A
#define SI_ASYNCNL SI_ASYNCNL
#define SCM_TXTIME SO_TXTIME
#define __INT64_TYPE__ long int
#define BIO_R_WRITE_TO_READ_ONLY_BIO 126
#define OBJ_X9_62_c2pnb304w1 OBJ_X9_62_c_TwoCurve,17L
#define TLSEXT_hash_gostr34112012_512 239
#define _ANSI_STDDEF_H 
#define X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT 0x1
#define SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE 320
#define TLS1_TXT_RSA_WITH_ARIA_256_GCM_SHA384 "ARIA256-GCM-SHA384"
#define BOOST_PP_REPEAT_1_216(m,d) BOOST_PP_REPEAT_1_215(m, d) m(2, 215, d)
#define BIO_shutdown_wr(b) (int)BIO_ctrl(b, BIO_C_SHUTDOWN_WR, 0, NULL)
#define SSL_CTX_sess_hits(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_HIT,0,NULL)
#define EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS 263
#define _SC_MEMLOCK _SC_MEMLOCK
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001000 (0)(0)(0)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001001 (0)(0)(0)(0)(1)(0)(0)(1),
#define BOOST_PP_FOR_204_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(205, s) BOOST_PP_IIF(c, BOOST_PP_FOR_205, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(205, s), p, o, m)
#define SO_ACCEPTCONN 30
#define FOLLY_HAVE_LIBGLOG 1
#define OBJ_ipsecTunnel OBJ_id_kp,6L
#define _GLIBCXX_ATOMIC_WORD_H 1
#define OBJ_ct_precert_signer 1L,3L,6L,1L,4L,1L,11129L,2L,4L,4L
#define _PSTL_CPP14_INTEGER_SEQUENCE_PRESENT (_MSC_VER >= 1900 || __cplusplus >= 201402L)
#define LN_pkcs9_messageDigest "messageDigest"
#define __GLIBC_USE_DEPRECATED_GETS 0
#define EC_F_PKEY_EC_KDF_DERIVE 283
#define OBJ_id_Gost28147_89_CryptoPro_A_ParamSet OBJ_cryptopro,31L,1L
#define BOOST_CORE_USE_DEFAULT_HPP 
#define BOOST_PP_ITERATE_1 <boost/preprocessor/iteration/detail/iter/forward1.hpp>
#define BOOST_PP_ITERATE_2 <boost/preprocessor/iteration/detail/iter/forward2.hpp>
#define BOOST_PP_ITERATE_4 <boost/preprocessor/iteration/detail/iter/forward4.hpp>
#define BOOST_TT_IS_MEMBER_FUNCTION_POINTER_CXX_11_HPP_INCLUDED 
#define LN_selected_attribute_types "Selected Attribute Types"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111100 (0)(0)(1)(1)(1)(1)(0)(0),
#define __SIZE_WIDTH__ 64
#define BOOST_PREPROCESSOR_VARIADIC_DETAIL_HAS_OPT_HPP 
#define LN_X500algorithms "directory services - algorithms"
#define SSL_F_OSSL_STATEM_SERVER_POST_WORK 602
#define SN_setct_CredResTBE "setct-CredResTBE"
#define SSL_set1_groups_list(s,str) SSL_ctrl(s,SSL_CTRL_SET_GROUPS_LIST,0,(char *)(str))
#define ASN1_STRING_FLAG_MSTRING 0x040
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010100 (0)(0)(1)(0)(1)(0)(0),
#define BOOST_PP_REPEAT_2_56(m,d) BOOST_PP_REPEAT_2_55(m, d) m(3, 55, d)
#define X509_L_FILE_LOAD 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010101 (0)(0)(1)(0)(1)(0)(1),
#define X509V3_R_NO_SUBJECT_DETAILS 125
#define SSL_F_SSL_UNDEFINED_VOID_FUNCTION 244
#define BOOST_PREPROCESSOR_LIST_FOR_EACH_HPP 
#define BOOST_FUNCTIONAL_HASH_HASH_HPP 
#define __NTHNL(fct) fct throw ()
#define _mm_maskz_fmadd_round_sd(U,A,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_maskz (A, B, C, U, R)
#define BOOST_PP_INC_105 106
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111001 (1)(0)(1)(1)(1)(0)(0)(1),
#define F_DUPFD 0
#define SSL_F_READ_STATE_MACHINE 352
#define TCPOPT_MAXSEG 2
#define SSL3_RT_MAX_PLAIN_LENGTH 16384
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_3(op,st,ss,sz) 0
#define X509V3_F_X509V3_EXT_ADD_ALIAS 106
#define BOOST_PP_REPEAT_2_190(m,d) BOOST_PP_REPEAT_2_189(m, d) m(3, 189, d)
#define BOOST_PP_FOR_176_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(177, s) BOOST_PP_IIF(c, BOOST_PP_FOR_177, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(177, s), p, o, m)
#define CLOCK_BOOTTIME 7
#define BOOST_PP_WHILE_88_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_89, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(89, s))
#define BOOST_BASE_FROM_MEMBER_MAX_ARITY 10
#define DEPRECATEDIN_1_1_0(f) DECLARE_DEPRECATED(f)
#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
#define EC_F_ECPKPARAMETERS_PRINT 149
#define X509V3_F_V2I_AUTHORITY_INFO_ACCESS 139
#define DH_F_DH_BUILTIN_GENPARAMS 106
#define _PC_FILESIZEBITS _PC_FILESIZEBITS
#define LN_mdc2WithRSA "mdc2WithRSA"
#define FOLLY_CREATE_QUAL_INVOKER(classname,funcpath) struct classname { template <typename... A> FOLLY_MAYBE_UNUSED FOLLY_ERASE_HACK_GCC constexpr auto operator()( A&&... a) const FOLLY_DETAIL_FORWARD_BODY(funcpath(static_cast<A&&>(a)...)) }
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000000 (1)(0)(0)(0)(0)(0)(0),
#define THRIFT_FLAG_OBSERVE(_name) THRIFT_FLAG_WRAPPER__ ##_name().observe()
#define FS_XFLAG_NOSYMLINKS 0x00000400
#define SN_X9_62_c2pnb304w1 "c2pnb304w1"
#define FOLLY_LIKELY(...) FOLLY_DETAIL_BUILTIN_EXPECT((__VA_ARGS__), 1)
#define _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1
#define _XSAVEOPTINTRIN_H_INCLUDED 
#define JEMALLOC_ATTR(s) __attribute__((s))
#define BOOST_TT_REMOVE_BOUNDS_HPP_INCLUDED 
#define SN_setct_CredResData "setct-CredResData"
#define SN_aes_128_xts "AES-128-XTS"
#define OBJ_csor 2L,16L,840L,1L,101L,3L
#define __FLT64X_MIN_10_EXP__ (-4931)
#define OBJ_nSRecord OBJ_pilotAttributeType,29L
#define SSLEAY_VERSION_NUMBER OPENSSL_VERSION_NUMBER
#define BIO_FAMILY_IPANY 256
#define SO_TIMESTAMPNS_NEW 64
#define ADJ_MICRO 0x1000
#define PCHECK(condition) PLOG_IF(FATAL, GOOGLE_PREDICT_BRANCH_NOT_TAKEN(!(condition))) << "Check failed: " #condition " "
#define DH_F_PKEY_DH_DERIVE 112
#define FS_POLICY_FLAGS_PAD_4 FSCRYPT_POLICY_FLAGS_PAD_4
#define SYS_F_LISTEN 7
#define FS_POLICY_FLAGS_PAD_8 FSCRYPT_POLICY_FLAGS_PAD_8
#define V_ASN1_INTEGER 2
#define OPENSSL_no_config() OPENSSL_init_crypto(OPENSSL_INIT_NO_LOAD_CONFIG, NULL)
#define BOOST_MPL_AUX_FULL_LAMBDA_HPP_INCLUDED 
#define __attribute_const__ __attribute__ ((__const__))
#define D2I_OF(type) type *(*)(type **,const unsigned char **,long)
#define X509_F_X509_LOAD_CERT_CRL_FILE 132
#define BOOST_PP_WHILE_223_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_224, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(224, s))
#define SSL_set0_verify_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_VERIFY_CERT_STORE,0,(char *)(st))
#define EVP_R_WRAP_MODE_NOT_ALLOWED 170
#define _mm256_shrdi_epi16(A,B,C) ((__m256i) __builtin_ia32_vpshrd_v16hi ((__v16hi)(__m256i)(A), (__v16hi)(__m256i)(B),(int)(C)))
#define BOOST_PP_SEQ_FOLD_LEFT_I_154(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_155, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(155, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BIO_CB_PUTS 0x04
#define EVP_PKEY_OP_ENCRYPT (1<<8)
#define evtimer_add(ev,tv) event_add((ev), (tv))
#define OBJ_postalCode OBJ_X509,17L
#define SSL_TXT_3DES "3DES"
#define NID_dhSinglePass_stdDH_sha384kdf_scheme 939
#define OBJ_certBag OBJ_pkcs12_BagIds,3L
#define BOOST_PP_SEQ_FOLD_LEFT_145(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_145(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_CXX_ALLOCATOR_H 1
#define EVP_PKEY_CTX_set_ecdh_kdf_outlen(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_OUTLEN, len, NULL)
#define lh_free OPENSSL_LH_free
#define SSL_R_DH_KEY_TOO_SMALL 394
#define SSL3_CC_EARLY 0x040
#define BOOST_TT_IS_MEMBER_FUNCTION_POINTER_HPP_INCLUDED 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001 (0)(0)(0)(1),
#define BOOST_MPL_CLEAR_FWD_HPP_INCLUDED 
#define BOOST_VERSION 107400
#define NS_SMIME_CA 0x02
#define TLS1_TXT_DHE_PSK_WITH_ARIA_128_GCM_SHA256 "DHE-PSK-ARIA128-GCM-SHA256"
#define _mm256_shrdi_epi32(A,B,C) ((__m256i) __builtin_ia32_vpshrd_v8si ((__v8si)(__m256i)(A), (__v8si)(__m256i)(B),(int)(C)))
#define BOOST_PP_SEQ_FOLD_LEFT_147(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_147(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define FOLLY_DETAIL_SAFE_CHECK_IMPL(d,p,expr,expr_s,...) do { if ((!d || ::folly::kIsDebug || ::folly::kIsSanitize) && !static_cast<bool>(expr)) { FOLLY_DETAIL_SAFE_CHECK_LINKAGE constexpr auto __folly_detail_safe_assert_fun = __func__; FOLLY_DETAIL_SAFE_CHECK_LINKAGE constexpr ::folly::detail:: safe_assert_arg __folly_detail_safe_assert_arg{ FOLLY_PP_STRINGIZE(expr_s), __FILE__, __LINE__, __folly_detail_safe_assert_fun, ::folly::detail::safe_assert_msg_types< decltype(::folly::detail::safe_assert_msg_types_seq_of( __VA_ARGS__))>::value.data}; ::folly::detail::safe_assert_terminate<p>( __folly_detail_safe_assert_arg FOLLY_PP_DETAIL_APPEND_VA_ARG( __VA_ARGS__)); } } while (false)
#define NID_countryName 14
#define __OFF64_T_TYPE __SQUAD_TYPE
#define _CETINTRIN_H_INCLUDED 
#define NID_homeTelephoneNumber 473
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100001 (1)(1)(1)(0)(0)(0)(0)(1),
#define OBJ_shake128 OBJ_nist_hashalgs,11L
#define __DMC___WORKAROUND_GUARD 1
#define LN_userClass "userClass"
#define POSIX_FADV_WILLNEED 3
#define BOOST_OPTIONAL_OPTIONAL_DETAIL_OPTIONAL_FACTORY_SUPPORT_AJK_12FEB2016_HPP 
#define LN_id_HMACGostR3411_94 "HMAC GOST 34.11-94"
#define OBJ_ms_ext_req 1L,3L,6L,1L,4L,1L,311L,2L,1L,14L
#define PEM_FLAG_ONLY_B64 0x4
#define OBJ_id_mod_cmp2000 OBJ_id_pkix_mod,16L
#define SSL_SECOP_CIPHER_CHECK (3 | SSL_SECOP_OTHER_CIPHER)
#define BOOST_PP_SEQ_ELEM_13(_) BOOST_PP_SEQ_ELEM_12
#define X509_EXT_PACK_STRING 2
#define FOLLY_LIBRARY_SANITIZE_ADDRESS 0
#define _mm_mask_getmant_ps(W,U,X,B,C) ((__m128) __builtin_ia32_getmantps128_mask ((__v4sf)(__m128) (X), (int)(((C)<<2) | (B)), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define _mm512_prefetch_i64gather_pd(INDEX,ADDR,SCALE,HINT) __builtin_ia32_gatherpfqpd ((__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define BOOST_PP_SEQ_ELEM_14(_) BOOST_PP_SEQ_ELEM_13
#define OPENSSL_TLS_SECURITY_LEVEL 1
#define _LINUX_FS_H 
#define _mm512_prefetch_i64gather_ps(INDEX,ADDR,SCALE,HINT) __builtin_ia32_gatherpfqps ((__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA256 "CAMELLIA256-SHA256"
#define BOOST_PP_LIST_FOLD_RIGHT_257(o,s,l) BOOST_PP_ERROR(0x0004)
#define OBJ_setct_PIDataUnsigned OBJ_set_ctype,6L
#define BOOST_PP_SEQ_ELEM_16(_) BOOST_PP_SEQ_ELEM_15
#define _mm256_shrdi_epi64(A,B,C) ((__m256i) __builtin_ia32_vpshrd_v4di ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B),(int)(C)))
#define _SC_BC_STRING_MAX _SC_BC_STRING_MAX
#define FOLLY_HAVE_BACKTRACE 1
#define LN_hold_instruction_code "Hold Instruction Code"
#define __LP64_OFF64_LDFLAGS "-m64"
#define BIO_F_BIO_NEW_FILE 109
#define STDERR_FILENO 2
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_143(op,st,ss,sz) 0
#define ERR_LIB_CRYPTO 15
#define JEMALLOC_VERSION_GID "ea6b3e973b477b8061e0076bb257dbd7f3faa756"
#define BOOST_MPL_O1_SIZE_IMPL_HPP_INCLUDED 
#define __FLT64_MAX_10_EXP__ 308
#define _STL_CONSTRUCT_H 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001110 (1)(1)(0)(0)(1)(1)(1)(0),
#define OBJ_seed_cbc OBJ_kisa,1L,4L
#define SA_NODEFER 0x40000000
#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_145(op,st,ss,sz) 0
#define SSL_F_TLS_PARSE_CLIENTHELLO_TLSEXT 449
#define _mm_mask_getmant_sd(W,U,X,Y,C,D) ((__m128d)__builtin_ia32_getmantsd_mask_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), (__v2df)(__m128d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define TLS1_RFC_RSA_WITH_AES_128_GCM_SHA256 "TLS_RSA_WITH_AES_128_GCM_SHA256"
#define OBJ_id_Gost28147_89_CryptoPro_B_ParamSet OBJ_cryptopro,31L,2L
#define OBJ_crlTypes OBJ_pkcs9,23L
#define _mm_mask_getmant_ss(W,U,X,Y,C,D) ((__m128)__builtin_ia32_getmantss_mask_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), (__v4sf)(__m128)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define _mm512_maskz_roundscale_round_ps(A,B,C,R) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A), R))
#define ERR_LIB_HMAC 48
#define BOOST_GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)
#define TLS1_RFC_DHE_RSA_WITH_AES_128_GCM_SHA256 "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
#define _mm512_mask_cvt_roundph_ps(W,U,A,B) (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)(W), U, B)
#define CONF_R_NO_VALUE 108
#define BOOST_PP_FOR_108_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(109, s) BOOST_PP_IIF(c, BOOST_PP_FOR_109, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(109, s), p, o, m)
#define EVENT__HAVE_SENDFILE 1
#define FSLABEL_MAX 256
#define PRIiFAST16 __PRIPTR_PREFIX "i"
#define SI_QUEUE SI_QUEUE
#define SSL_MAX_PIPELINES 32
#define ASN1_F_UINT64_NEW 141
#define TLS1_RFC_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256"
#define SSL3_RT_INNER_CONTENT_TYPE 0x101
#define BOOST_DELETED_FUNCTION(fun) fun = delete;
#define _GLIBCXX_CWCHAR 1
#define ASN1_F_X509_PKEY_NEW 173
#define SSL_get_shared_curve SSL_get_shared_group
#define _CS_XBS5_ILP32_OFF32_CFLAGS _CS_XBS5_ILP32_OFF32_CFLAGS
#define SSL_CTX_get_max_cert_list(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_MAX_CERT_LIST,0,NULL)
#define NID_pkcs9_challengePassword 54
#define SYSLOG_WARNING(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_WARNING, counter, &google::LogMessage::SendToSyslogAndLog)
#define _mm512_mask_cvt_roundps_epi32(W,U,A,B) ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)(W), U, B))
#define OBJ_pbeWithMD2AndDES_CBC OBJ_pkcs5,1L
#define BOOST_PP_FOR_217_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(218, s) BOOST_PP_IIF(c, BOOST_PP_FOR_218, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(218, s), p, o, m)
#define SN_setct_CertReqTBE "setct-CertReqTBE"
#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 1
#define PRIiFAST32 __PRIPTR_PREFIX "i"
#define SN_setct_CertReqTBS "setct-CertReqTBS"
#define BOOST_VARIANT_AUX_GET_EXPLICIT_TEMPLATE_TYPE(t) 
#define X509V3_R_INVALID_EXTENSION_STRING 105
#define SN_Private "private"
#define SSLeay_add_ssl_algorithms() SSL_library_init()
#define BOOST_TT_DETAIL_YES_NO_TYPE_HPP_INCLUDED 
#define X509_V_FLAG_SUITEB_128_LOS 0x30000
#define ERR_R_OBJ_LIB ERR_LIB_OBJ
#define __glibcxx_requires_partitioned_upper(_First,_Last,_Value) 
#define LN_ecdsa_with_SHA3_224 "ecdsa_with_SHA3-224"
#define LN_aria_128_gcm "aria-128-gcm"
#define LOG_ASSERT(condition) LOG_IF(FATAL, !(condition)) << "Assert failed: " #condition
#define _mm_mask_srli_epi16(W,U,A,B) ((__m128i) __builtin_ia32_psrlwi128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)(__m128i)(W), (__mmask8)(U)))
#define RSA_R_NULL_BEFORE_BLOCK_MISSING 113
#define ENOSYS 38
#define PKCS7_BINARY 0x80
#define BOOST_PP_NODE_207(p) BOOST_PP_IIF(p(207), 207, 208)
#define EPIPE 32
#define SSL_F_TLS_SETUP_HANDSHAKE 508
#define AF_NETLINK PF_NETLINK
#define _GLIBCXX_HAVE_LINUX_FUTEX 1
#define SN_X448 "X448"
#define TLS1_TXT_DHE_RSA_WITH_ARIA_256_GCM_SHA384 "DHE-RSA-ARIA256-GCM-SHA384"
#define RSA_R_KEY_PRIME_NUM_INVALID 165
#define BOOST_PP_WHILE_251(p,o,s) BOOST_PP_WHILE_251_C(BOOST_PP_BOOL(p(252, s)), p, o, s)
#define EVP_PKEY_CTRL_GET1_ID_LEN (EVP_PKEY_ALG_CTRL + 13)
#define unix 1
#define SSL_R_DANE_NOT_ENABLED 175
#define _mm_mask_cmp_epi16_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpw128_mask ((__v8hi)(__m128i)(X), (__v8hi)(__m128i)(Y), (int)(P), (__mmask8)(M)))
#define SSL_F_SET_CLIENT_CIPHERSUITE 540
#define PRIiFAST64 __PRI64_PREFIX "i"
#define ASN1_R_MSTRING_NOT_UNIVERSAL 139
#define __FD_SETSIZE 1024
#define SSL_get_timeout(a) SSL_SESSION_get_timeout(a)
#define OBJ_hmac_sha3_384 OBJ_nist_hashalgs,15L
#define NID_sm3WithRSAEncryption 1144
#define SSL_R_MISSING_SIGNING_CERT 221
#define PKCS7_R_ENCRYPTION_CTRL_FAILURE 149
#define NID_rsassaPss 912
#define X509_R_UNSUPPORTED_ALGORITHM 111
#define TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001011 (1)(0)(0)(0)(1)(0)(1)(1),
#define SN_kx_gost "KxGOST"
#define SSL_want_x509_lookup(s) (SSL_want(s) == SSL_X509_LOOKUP)
#define _POSIX_PRIORITY_SCHEDULING 200809L
#define _MM_CMPINT_NLE 0x6
#define SN_sect193r1 "sect193r1"
#define SN_sect193r2 "sect193r2"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_120 120
#define LN_ecdsa_with_SHA3_256 "ecdsa_with_SHA3-256"
#define X509V3_ADD_SILENT 0x10
#define SI_USER SI_USER
#define BOOST_HAS_RVALUE_REFS 
#define MOUNT_ATTR__ATIME 0x00000070
#define FMT_SUPPRESS_MSC_WARNING(n) 
#define _mm512_mask_slli_epi16(W,U,X,C) ((__m512i)__builtin_ia32_psllwi512_mask ((__v32hi)(__m512i)(X), (int)(C), (__v32hi)(__m512i)(W), (__mmask32)(U)))
#define BOOST_PP_FOR_68_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(69, s) BOOST_PP_IIF(c, BOOST_PP_FOR_69, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(69, s), p, o, m)
#define RAND_R_ADDITIONAL_INPUT_TOO_LONG 102
#define BIO_TYPE_LINEBUFFER (20|BIO_TYPE_FILTER)
#define BOOST_PP_SEQ_FOLD_LEFT_169(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_169(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define FS_IMAGIC_FL 0x00002000
#define _PSTL_PRAGMA_SIMD_REDUCTION(PRM) _PSTL_PRAGMA(omp simd reduction(PRM))
#define BOOST_VARIANT_CLASS_OR_TYPENAME_TO_VARIADIC_typename typename...
#define EVP_cast5_cfb EVP_cast5_cfb64
#define NID_id_smime_aa_ets_sigPolicyId 226
#define __cpp_ref_qualifiers 200710L
#define _mm_mask_srli_epi64(W,U,A,B) ((__m128i) __builtin_ia32_psrlqi128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)(W), (__mmask8)(U)))
#define _mm512_mask_slli_epi32(W,U,X,C) ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define __INT_LEAST32_MAX__ 0x7fffffff
#define RSA_F_INT_RSA_VERIFY 145
#define SS_ONSTACK SS_ONSTACK
#define _mm512_maskz_fixupimm_round_pd(U,X,Y,Z,C,R) ((__m512d)__builtin_ia32_fixupimmpd512_maskz ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (__v8di)(__m512i)(Z), (int)(C), (__mmask8)(U), (R)))
#define APACHE_THRIFT_ACCESSOR_t_sink 
#define _mm512_maskz_fixupimm_round_ps(U,X,Y,Z,C,R) ((__m512)__builtin_ia32_fixupimmps512_maskz ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), (R)))
#define SN_id_tc26_agreement_gost_3410_2012_512 "id-tc26-agreement-gost-3410-2012-512"
#define BOOST_MOVE_ALIGNMENT_OF(T) __alignof__(T)
#define OBJ_setCext_PGWYcapabilities OBJ_set_certExt,7L
#define _IOC_SIZE(nr) (((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)
#define LN_id_hex_multipart_message "id-hex-multipart-message"
#define CERT_PKEY_CA_SIGNATURE 0x20
#define EBFONT 59
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011110 (0)(1)(0)(1)(1)(1)(1)(0),
#define TLS1_CK_ADH_WITH_AES_128_SHA 0x03000034
#define __cleanup_fct_attribute 
#define _mm512_maskz_cvt_roundepi64_ps(U,A,B) ((__m256)__builtin_ia32_cvtqq2ps512_mask ((__v8di)(A), (__v8sf)_mm256_setzero_ps (), (U), (B)))
#define LOCK_READ 64
#define BIO_FP_READ 0x02
#define RSA_F_RSA_ITEM_VERIFY 148
#define OBJ_secp224k1 OBJ_secg_ellipticCurve,32L
#define __DBL_MAX_EXP__ 1024
#define LC_TELEPHONE_MASK (1 << __LC_TELEPHONE)
#define SN_sha384WithRSAEncryption "RSA-SHA384"
#define __WCHAR_WIDTH__ 32
#define __BIT_TYPES_DEFINED__ 1
#define OBJ_setAttr_Cert OBJ_set_attr,0L
#define SEGV_ADIDERR SEGV_ADIDERR
#define TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C076
#define __gthrw2(name,name2,type) static __typeof(type) name __attribute__ ((__weakref__(#name2), __copy__ (type))); __gthrw_pragma(weak type)
#define BOOST_PP_INTERCEPT BOOST_PP_INTERCEPT_
#define BOOST_PP_REPEAT_FROM_TO_4(f,l,m,dt) BOOST_PP_ERROR(0x0003)
#define _mm512_mask_slli_epi64(W,U,X,C) ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define BOOST_PP_REPEAT_2_161(m,d) BOOST_PP_REPEAT_2_160(m, d) m(3, 160, d)
#define TLS1_TXT_DHE_PSK_WITH_NULL_SHA384 "DHE-PSK-NULL-SHA384"
#define EVP_SignInit_ex(a,b,c) EVP_DigestInit_ex(a,b,c)
#define DIRSTRING_TYPE (B_ASN1_PRINTABLESTRING|B_ASN1_T61STRING|B_ASN1_BMPSTRING|B_ASN1_UTF8STRING)
#define SN_aria_128_cfb1 "ARIA-128-CFB1"
#define __gthrw_(name) __gthrw_ ## name
#define __ATOMIC_HLE_RELEASE 131072
#define __SIZEOF_PTHREAD_MUTEXATTR_T 4
#define SSL_F_TLS_CONSTRUCT_STOC_SERVER_NAME 459
#define _ENQCMDINTRIN_H_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_232(op,st,ss,sz) 0
#define SSL_OP_NO_DTLSv1_2 0x08000000U
#define SN_sha3_384 "SHA3-384"
#define __itimerspec_defined 1
#define X509_R_SHOULD_RETRY 106
#define _POSIX_SSIZE_MAX 32767
#define NID_id_smime_aa_ets_commitmentType 227
#define OBJ_id_smime_ct_contentInfo OBJ_id_smime_ct,6L
#define SN_jurisdictionStateOrProvinceName "jurisdictionST"
#define BOOST_PP_FOR_143_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(144, s) BOOST_PP_IIF(c, BOOST_PP_FOR_144, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(144, s), p, o, m)
#define M_PI_4f64 __f64 (0.785398163397448309615660845819875721)
#define LN_netscape_data_type "Netscape Data Type"
#define NID_hmacWithDstu34311 1156
#define NID_ms_code_com 135
#define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_233(op,st,ss,sz) 0
#define MS_PRIVATE (1<<18)
#define LN_dstu28147_ofb "DSTU Gost 28147-2009 OFB mode"
#define SSL_EXT_TLS1_2_AND_BELOW_ONLY 0x0010
#define __cpp_lib_bounded_array_traits 201902L
#define _SC_LEVEL2_CACHE_SIZE _SC_LEVEL2_CACHE_SIZE
#define POLLHUP 0x010
#define OBJ_id_regInfo OBJ_id_pkip,2L
#define evsignal_initialized(ev) event_initialized(ev)
#define TCP_DEFER_ACCEPT 9
#define SSL_F_TLS_CONSTRUCT_SERVER_HELLO 491
#define BOOST_PP_WHILE_77_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_78, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(78, s))
#define MSG_ZEROCOPY MSG_ZEROCOPY
#define DH_F_DH_METH_SET1_NAME 119
#define OBJ_id_qt_cps OBJ_id_qt,1L
#define SSL_F_EARLY_DATA_COUNT_OK 532
#define LIBURING_COMPAT_H 
#define LN_documentVersion "documentVersion"
#define _mm512_mask_fmsubadd_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, -(C), U, R)
#define SSL3_AD_HANDSHAKE_FAILURE 40
#define BOOST_PP_FOR_252_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(253, s) BOOST_PP_IIF(c, BOOST_PP_FOR_253, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(253, s), p, o, m)
#define LH_LOAD_MULT 256
#define SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT 310
#define AF_AX25 PF_AX25
#define SN_sha512_256WithRSAEncryption "RSA-SHA512/256"
#define OBJ_sect131r1 OBJ_secg_ellipticCurve,22L
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define SI_SIGIO SI_SIGIO
#define NID_id_smime_ct_TSTInfo 207
#define DECLARE_DEPRECATED(f) f __attribute__ ((deprecated));
#define NID_any_policy 746
#define BIO_set_mem_buf(b,bm,c) BIO_ctrl(b,BIO_C_SET_BUF_MEM,c,(char *)(bm))
#define _SC_BARRIERS _SC_BARRIERS
#define V_ASN1_ENUMERATED 10
#define EVP_PKEY_RSA2 NID_rsa
#define NID_mime_mhs 504
#define _mm512_maskz_cvt_roundps_pd(U,A,B) (__m512d)__builtin_ia32_cvtps2pd512_mask(A, (__v8df)_mm512_setzero_pd(), U, B)
#define st_atime st_atim.tv_sec
#define HEADER_PEMERR_H 
#define _mm512_maskz_cvt_roundps_ph(W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I), (__v16hi)_mm256_setzero_si256 (), (__mmask16) (W)))
#define RSA_R_OAEP_DECODING_ERROR 121
#define __glibc_has_attribute(attr) __has_attribute (attr)
#define TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA 0x0300C002
#define _POSIX_CPUTIME 0
#define DH_R_INVALID_PUBKEY 102
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_237(op,st,ss,sz) 0
#define __cpp_lib_list_remove_return_type 201806L
#define SSL3_RT_MAX_MD_SIZE 64
#define BOOST_PP_REPEAT_2_62(m,d) BOOST_PP_REPEAT_2_61(m, d) m(3, 61, d)
#define NID_dmdName 892
#define EVP_PKEY_CTX_set0_dh_kdf_ukm(ctx,p,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_UKM, plen, (void *)(p))
#define BOOST_INTRUSIVE_TRIVIAL_VALUE_TRAITS_HPP 
#define EV_MONOT_FALLBACK 2
#define _CS_POSIX_V7_ILP32_OFF32_LIBS _CS_POSIX_V7_ILP32_OFF32_LIBS
#define NID_member 875
#define _____fpos64_t_defined 1
#define BOOST_PP_WHILE_141_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_142, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(142, s))
#define OBJ_id_aca OBJ_id_pkix,10L
#define FS_XFLAG_APPEND 0x00000010
#define __cpp_lib_sample 201603
#define EVP_F_R_32_12_16_INIT_KEY 242
#define _STL_STACK_H 1
#define SYNCHRONIZED(...) FOLLY_PUSH_WARNING FOLLY_GNU_DISABLE_WARNING("-Wshadow") FOLLY_MSVC_DISABLE_WARNING(4189) FOLLY_MSVC_DISABLE_WARNING(4456) FOLLY_MSVC_DISABLE_WARNING(4457) FOLLY_MSVC_DISABLE_WARNING(4458) FOLLY_MSVC_DISABLE_WARNING(4459) FOLLY_GCC_DISABLE_NEW_SHADOW_WARNINGS if (bool SYNCHRONIZED_VAR(state) = false) { (void)::folly::detail::SYNCHRONIZED_macro_is_deprecated{}; } else for (auto SYNCHRONIZED_VAR(lockedPtr) = (FB_VA_GLUE(FB_ARG_2_OR_1, (__VA_ARGS__))).contextualLock(); !SYNCHRONIZED_VAR(state); SYNCHRONIZED_VAR(state) = true) for (auto& FB_VA_GLUE(FB_ARG_1, (__VA_ARGS__)) = *SYNCHRONIZED_VAR(lockedPtr).operator->(); !SYNCHRONIZED_VAR(state); SYNCHRONIZED_VAR(state) = true) FOLLY_POP_WARNING
#define _mm512_maskz_inserti64x2(U,X,Y,C) ((__m512i) __builtin_ia32_inserti64x2_512_mask ((__v8di)(__m512i) (X), (__v2di)(__m128i) (Y), (int) (C), (__v8di)(__m512i) _mm512_setzero_si512 (), (__mmask8) (U)))
#define _mm512_maskz_inserti64x4(U,X,Y,C) ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X), (__v4di)(__m256i) (Y), (int) (C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))
#define BOOST_PP_WHILE_34_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_35, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(35, s))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_191(p,o,s) 0
#define NID_id_it_signKeyPairTypes 299
#define LN_aes_128_ocb "aes-128-ocb"
#define __DECL_SIMD_log 
#define BOOST_PP_WHILE_4(p,o,s) BOOST_PP_WHILE_4_C(BOOST_PP_BOOL(p(5, s)), p, o, s)
#define BOOST_MPL_AUX_CONFIG_PREPROCESSOR_HPP_INCLUDED 
#define TLSEXT_hash_gostr3411 237
#define POSIX_MADV_NORMAL 0
#define BOOST_PP_SEQ_SIZE_175(_) BOOST_PP_SEQ_SIZE_176
#define UINTPTR_MAX (18446744073709551615UL)
#define _GLIBCXX_HAVE_ARPA_INET_H 1
#define EVP_CIPH_FLAG_LENGTH_BITS 0x2000
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111011 (1)(0)(1)(1)(1)(0)(1)(1),
#define NETDB_INTERNAL -1
#define BOOST_PP_INC_122 123
#define ASN1_R_ILLEGAL_BITSTRING_FORMAT 175
#define BOOST_INTRUSIVE_DETAIL_SIMPLE_DISPOSERS_HPP 
#define V_ASN1_IA5STRING 22
#define _mm512_maskz_cvt_roundpd_epi32(U,A,B) ((__m256i)__builtin_ia32_cvtpd2dq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))
#define _mm256_mask_shuffle_epi32(W,U,X,C) ((__m256i) __builtin_ia32_pshufd256_mask ((__v8si)(__m256i)(X), (int)(C), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define issubnormal(x) (fpclassify (x) == FP_SUBNORMAL)
#define __ASM_GENERIC_POSIX_TYPES_H 
#define TLSEXT_TYPE_early_data 42
#define HEADER_DH_H 
#define BOOST_DETAIL_BINARY_LITERAL_PREDICATE(d,state) BOOST_DETAIL_FIXED_COMPL( BOOST_DETAIL_IS_NULLARY_ARGS( state ) )
#define __USE_GNU 1
#define SSL3_TXT_DHE_DSS_DES_192_CBC3_SHA "DHE-DSS-DES-CBC3-SHA"
#define NID_id_pda_gender 351
#define BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED 143
#define NID_id_pkix1_implicit_93 272
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011 (1)(1)(0)(1)(1),
#define APACHE_THRIFT_ACCESSOR_finalResponseType 
#define EVENT_LOG_MSG 1
#define _mm512_mask_blend_epi16(__U,__A,__W) ((__m512i) __builtin_ia32_blendmw_512_mask ((__v32hi) (__A), (__v32hi) (__W), (__mmask32) (__U)))
#define math_errhandling (MATH_ERRNO | MATH_ERREXCEPT)
#define SN_id_hex_multipart_message "id-hex-multipart-message"
#define REG_R10 REG_R10
#define BOOST_PP_SLOT_CC_2_D(a,b) a ## b
#define BOOST_PP_WHILE_104_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_105, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(105, s))
#define ERR_LIB_SM2 53
#define __INTEL_COMPILER_WORKAROUND_GUARD 1
#define OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet OBJ_cryptopro,31L,7L
#define SO_EE_ORIGIN_NONE 0
#define OBJ_id_cmc_decryptedPOP OBJ_id_cmc,10L
#define __cpp_lib_transparent_operators 201510
#define BOOST_PP_SEQ_FOLD_LEFT_93(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_93(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define ASN1_F_I2D_DSA_PUBKEY 161
#define BOOST_PP_LIST_FOLD_RIGHT_202(o,s,l) BOOST_PP_LIST_FOLD_LEFT_202(o, s, BOOST_PP_LIST_REVERSE_D(202, l))
#define BOOST_PP_SEQ_FOLD_LEFT_151(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_151(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _LWPINTRIN_H_INCLUDED 
#define _mm512_maskz_cvt_roundpd_epi64(U,A,B) ((__m512i)__builtin_ia32_cvtpd2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define SO_NO_TRANSPARENT_TLS 200
#define OPENSSL_BUILT_ON 2
#define BOOST_MPL_AUX_LAMBDA_ARITY_PARAM_HPP_INCLUDED 
#define _MM_SET_DENORMALS_ZERO_MODE(mode) _mm_setcsr ((_mm_getcsr () & ~_MM_DENORMALS_ZERO_MASK) | (mode))
#define SSL_TICKET_RETURN_IGNORE_RENEW 2
#define BOOST_PP_DIV_BASE_D(d,x,y) BOOST_PP_WHILE_ ## d(BOOST_PP_DIV_BASE_P, BOOST_PP_DIV_BASE_O, (0, x, y))
#define _TANDEM_SOURCE 1
#define __THROWNL throw ()
#define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {
#define FOLLY_HAVE_IFUNC 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_NIL 1
#define _GLIBCXX_CCTYPE 1
#define _PC_SOCK_MAXBUF _PC_SOCK_MAXBUF
#define PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER 144
#define BOOST_PP_SEQ_FOLD_LEFT_95(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_95(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_blake2b512 "blake2b512"
#define M_LN10f64x __f64x (2.302585092994045684017991454684364208)
#define APACHE_THRIFT_ACCESSOR_t_stream 
#define _MM_FROUND_NEARBYINT (_MM_FROUND_CUR_DIRECTION | _MM_FROUND_NO_EXC)
#define TLS_CT_ECDSA_SIGN 64
#define SSL_CTX_set_tlsext_servername_arg(ctx,arg) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG,0,arg)
#define evbuffer_iovec iovec
#define __cpp_lib_atomic_value_initialization 201911L
#define __INT_FAST64_TYPE__ long int
#define SN_key_usage "keyUsage"
#define _GLIBCXX_HAVE_SQRTF 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_204(op,st,ss,sz) 0
#define _GLIBCXX_HAVE_SQRTL 1
#define BOOST_ALL_NO_LIB 1
#define REG_R15 REG_R15
#define BOOST_PP_SEQ_FOLD_LEFT_155(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_155(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_mime_mhs_headings 505
#define SSL_F_SRP_GENERATE_CLIENT_MASTER_SECRET 595
#define ASN1_F_ASN1_FIND_END 190
#define _mm_reduce_ps(A,B) ((__m128) __builtin_ia32_reduceps128_mask ((__v4sf)(__m128)(A), (int)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1))
#define __struct_FILE_defined 1
#define V_ASN1_NULL 5
#define OBJ_id_smime_aa_msgSigDigest OBJ_id_smime_aa,5L
#define BOOST_PP_SEQ_FOLD_LEFT_98(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_98(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OBJ_id_smime_cd_ldap OBJ_id_smime_cd,1L
#define __glibcxx_requires_sorted_set_pred(_First1,_Last1,_First2,_Pred) 
#define NID_id_it_encKeyPairTypes 300
#define BOOST_PP_SEQ_FOLD_LEFT_157(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_157(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_netscape_cert_type 71
#define SN_id_tc26_wrap_gostr3412_2015_magma_kexp15 "id-tc26-wrap-gostr3412-2015-magma-kexp15"
#define SCNxFAST32 __PRIPTR_PREFIX "x"
#define SN_ecdsa_with_SHA3_384 "id-ecdsa-with-sha3-384"
#define OPENSSL_LINE __LINE__
#define SSL_CTX_set1_groups(ctx,glist,glistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_GROUPS,glistlen,(int *)(glist))
#define NID_kisa 773
#define NID_id_GostR3410_94_aBis 846
#define SSL_TXT_aNULL "aNULL"
#define SSL_R_BAD_SRP_PARAMETERS 371
#define SN_setAttr_IssCap "setAttr-IssCap"
#define ASN1_F_PKCS5_PBE2_SET_SCRYPT 231
#define EVP_F_EVP_PBE_ALG_ADD_TYPE 160
#define _AVX512VLINTRIN_H_INCLUDED 
#define BOOST_PP_WHILE_237_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_238, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(238, s))
#define SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA "EDH-RSA-DES-CBC3-SHA"
#define XN_FLAG_DUMP_UNKNOWN_FIELDS (1 << 24)
#define IPV6_RECVDSTOPTS 58
#define SN_issuerSignTool "issuerSignTool"
#define SN_id_Gost28147_89_CryptoPro_KeyMeshing "id-Gost28147-89-CryptoPro-KeyMeshing"
#define NID_X9_57 184
#define RSA_FLAG_NO_EXP_CONSTTIME RSA_FLAG_NO_CONSTTIME
#define IPPROTO_MTP IPPROTO_MTP
#define SSL_TICKET_RETURN_IGNORE 1
#define OBJ_ansi_X9_62 OBJ_ISO_US,10045L
#define TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA256 "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256"
#define _mm_reduce_sd(A,B,C) ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (), (__mmask8)-1))
#define __DECL_SIMD_sinf 
#define TCP_COOKIE_TRANSACTIONS 15
#define SSL_CTX_set_tmp_ecdh(ctx,ecdh) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TMP_ECDH,0,(char *)(ecdh))
#define _mm_maskz_ror_epi32(U,A,B) ((__m128i)__builtin_ia32_prord128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_133(s,p,o,m) 0
#define _mm_reduce_ss(A,B,C) ((__m128) __builtin_ia32_reducess_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (), (__mmask8)-1))
#define ERR_R_X509_LIB ERR_LIB_X509
#define ASN1_F_ASN1_BIT_STRING_SET_BIT 183
#define SSL_CTX_set0_chain_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CHAIN_CERT_STORE,0,(char *)(st))
#define BOOST_PP_WHILE_32_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_33, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(33, s))
#define _mm256_shuffle_i32x4(X,Y,C) ((__m256i) __builtin_ia32_shuf_i32x4_256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C), (__v8si)(__m256i) _mm256_setzero_si256 (), (__mmask8)-1))
#define BOOST_PP_TUPLE_REM_10(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9
#define BOOST_PP_TUPLE_REM_11(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10
#define BOOST_PP_TUPLE_REM_12(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11
#define BOOST_PP_TUPLE_REM_13(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12
#define __ASM_GENERIC_SOCKET_H 
#define BOOST_PP_TUPLE_REM_15(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14
#define BOOST_PP_TUPLE_REM_16(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15
#define BOOST_PP_TUPLE_REM_17(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16
#define BOOST_PP_TUPLE_REM_18(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17
#define BOOST_PP_TUPLE_REM_19(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18
#define SSL_TXT_kSRP "kSRP"
#define X509_V_FLAG_SUITEB_192_LOS 0x20000
#define LN_cmcCA "CMC Certificate Authority"
#define BOOST_PREPROCESSOR_CONTROL_DEDUCE_D_HPP 
#define BOOST_PP_WHILE_217_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_218, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(218, s))
#define CLD_CONTINUED CLD_CONTINUED
#define BOOST_PP_SEQ_ELEM_34(_) BOOST_PP_SEQ_ELEM_33
#define NID_id_smime_aa_receiptRequest 212
#define FMT_DEPRECATED [[deprecated]]
#define OBJ_id_GostR3410_2012_256 OBJ_id_tc26_sign,1L
#define BOOST_PP_TUPLE_REM_20(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19
#define BOOST_PP_TUPLE_REM_21(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20
#define BOOST_PP_TUPLE_REM_22(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21
#define BOOST_PP_TUPLE_REM_24(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23
#define BOOST_PP_TUPLE_REM_25(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24
#define BOOST_PP_TUPLE_REM_26(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25
#define BOOST_PP_TUPLE_REM_27(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26
#define BOOST_PP_TUPLE_REM_28(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27
#define X509_V_FLAG_POLICY_MASK (X509_V_FLAG_POLICY_CHECK | X509_V_FLAG_EXPLICIT_POLICY | X509_V_FLAG_INHIBIT_ANY | X509_V_FLAG_INHIBIT_MAP)
#define CLOCK_REALTIME_ALARM 8
#define SSL3_MT_KEY_UPDATE 24
#define everrorcb bufferevent_event_cb
#define BOOST_PP_FOR_35_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(36, s) BOOST_PP_IIF(c, BOOST_PP_FOR_36, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(36, s), p, o, m)
#define NID_id_tc26_wrap_gostr3412_2015_magma 1180
#define BOOST_PP_SEQ_ELEM_39(_) BOOST_PP_SEQ_ELEM_38
#define BOOST_PP_WHILE_19_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_20, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(20, s))
#define OBJ_setct_AuthReqTBE OBJ_set_ctype,52L
#define BOOST_PP_TUPLE_REM_31(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30
#define BOOST_PP_TUPLE_REM_33(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32
#define BOOST_PP_TUPLE_REM_34(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33
#define BOOST_PP_TUPLE_REM_36(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35
#define OBJ_setct_AuthReqTBS OBJ_set_ctype,16L
#define BOOST_PP_TUPLE_REM_38(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37
#define TYPEDEF_I2D_OF(type) typedef int i2d_of_ ##type(type *,unsigned char **)
#define RSA_F_RSA_PADDING_ADD_PKCS1_OAEP 121
#define _mm512_mask_cmp_epi8_mask(M,X,Y,P) ((__mmask64) __builtin_ia32_cmpb512_mask ((__v64qi)(__m512i)(X), (__v64qi)(__m512i)(Y), (int)(P), (__mmask64)(M)))
#define TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDHE-ECDSA-CAMELLIA128-SHA256"
#define _mm_maskz_ror_epi64(U,A,B) ((__m128i)__builtin_ia32_prorq128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define EC_F_EC_KEY_CHECK_KEY 177
#define RAND_F_RAND_DRBG_GENERATE 107
#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1
#define CERT_PKEY_EE_PARAM 0x40
#define BOOST_CALL_TRAITS_HPP 
#define BIO_F_BIO_ACCEPT_EX 137
#define BOOST_PP_LIST_FOLD_LEFT_103(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_104, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(104, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_TUPLE_REM_40(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39
#define BOOST_PP_TUPLE_REM_41(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40
#define BOOST_PP_TUPLE_REM_42(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41
#define BOOST_PP_TUPLE_REM_43(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42
#define BOOST_PP_TUPLE_REM_44(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43
#define BOOST_PP_TUPLE_REM_45(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44
#define BOOST_PP_TUPLE_REM_46(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45
#define BOOST_PP_TUPLE_REM_47(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46
#define PKCS7_type_is_encrypted(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_encrypted)
#define BOOST_PP_TUPLE_REM_49(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48
#define OBJ_manager OBJ_pilotAttributeType,10L
#define BOOST_PP_SEQ_CAT(seq) BOOST_PP_IF( BOOST_PP_DEC(BOOST_PP_SEQ_SIZE(seq)), BOOST_PP_SEQ_CAT_I, BOOST_PP_SEQ_HEAD )(seq)
#define BOOST_MPL_AUX_ARITY_HPP_INCLUDED 
#define SSL_R_UNEXPECTED_MESSAGE 244
#define SEEK_DATA 3
#define IP_RECVTOS 13
#define SO_PEERSEC 31
#define _mm_fpclass_ss_mask(X,C) ((__mmask8) __builtin_ia32_fpclassss_mask ((__v4sf) (__m128) (X), (int) (C), (__mmask8) (-1)))
#define BOOST_PP_TUPLE_REM_50(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49
#define BOOST_PP_TUPLE_REM_52(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51
#define BOOST_PP_TUPLE_REM_53(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52
#define BOOST_PP_TUPLE_REM_54(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53
#define BOOST_PP_TUPLE_REM_55(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54
#define BOOST_PP_TUPLE_REM_56(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55
#define BOOST_PP_TUPLE_REM_57(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56
#define BOOST_PP_TUPLE_REM_58(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57
#define BOOST_PP_TUPLE_REM_59(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57, e58
#define PKCS7_R_NO_CONTENT 122
#define NID_set_brand_MasterCard 641
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000110 (1)(0)(0)(0)(1)(1)(0),
#define _POSIX_PRIORITIZED_IO 200809L
#define OBJ_id_pda OBJ_id_pkix,9L
#define IN_CLASSC_HOST (0xffffffff & ~IN_CLASSC_NET)
#define _mm256_maskz_extractf64x2_pd(U,X,C) ((__m128d) __builtin_ia32_extractf64x2_256_mask ((__v4df)(__m256d) (X), (int) (C), (__v2df)(__m128d) _mm_setzero_pd(), (__mmask8) (U)))
#define CRL_REASON_NONE -1
#define BOOST_PP_TUPLE_REM_60(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57, e58, e59
#define BOOST_PP_TUPLE_REM_62(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57, e58, e59, e60, e61
#define BOOST_PP_TUPLE_REM_63(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57, e58, e59, e60, e61, e62
#define BOOST_PP_TUPLE_REM_64(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57, e58, e59, e60, e61, e62, e63
#define SSL_CTX_sess_accept(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_ACCEPT,0,NULL)
#define _IOR(type,nr,size) _IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))
#define SSL_CONF_TYPE_DIR 0x3
#define _IOW(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))
#define EBADR 53
#define SSL_CTX_sess_get_cache_size(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_SESS_CACHE_SIZE,0,NULL)
#define _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC_WORKAROUND_GUARD 1
#define TRAP_HWBKPT TRAP_HWBKPT
#define LN_dvcs "dvcs"
#define ERR_LIB_SYS 2
#define BOOST_PREPROCESSOR_ARRAY_DATA_HPP 
#define _mm_fpclass_sd_mask(X,C) ((__mmask8) __builtin_ia32_fpclasssd_mask ((__v2df) (__m128d) (X), (int) (C), (__mmask8) (-1)))
#define NID_X9_62_prime256v1 415
#define PF_ROSE 11
#define FOLLY_SHARED_MUTEX_MAX_SPIN_DEFAULT 2
#define BOOST_PP_NODE_216(p) BOOST_PP_IIF(p(216), BOOST_PP_NODE_212, BOOST_PP_NODE_220)
#define CHECK(condition) LOG_IF(FATAL, GOOGLE_PREDICT_BRANCH_NOT_TAKEN(!(condition))) << "Check failed: " #condition " "
#define SSL3_CK_DHE_DSS_DES_40_CBC_SHA 0x03000011
#define BOOST_PP_WHILE_15_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_16, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(16, s))
#define EVP_MD_CTX_init(ctx) EVP_MD_CTX_reset((ctx))
#define OBJ_sect239k1 OBJ_secg_ellipticCurve,3L
#define _CS_XBS5_ILP32_OFFBIG_LIBS _CS_XBS5_ILP32_OFFBIG_LIBS
#define _mm_cmp_round_ss_mask(X,Y,P,R) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1, R))
#define BOOST_MPL_AUX_FOLD_IMPL_HPP_INCLUDED 
#define FIPSerr(f,r) ERR_PUT_error(ERR_LIB_FIPS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100000 (0)(1)(1)(0)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100001 (0)(1)(1)(0)(0)(0)(0)(1),
#define SN_setct_BatchAdminReqTBE "setct-BatchAdminReqTBE"
#define BOOST_PP_NODE_218(p) BOOST_PP_IIF(p(218), BOOST_PP_NODE_217, BOOST_PP_NODE_219)
#define OBJ_dstu34311 OBJ_ua_pki,1L,2L,1L
#define SSL_OP_SSLEAY_080_CLIENT_DH_BUG 0x0
#define OBJ_id_pkix_OCSP_valid OBJ_id_pkix_OCSP,9L
#define BOOST_PP_FOR_110_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(111, s) BOOST_PP_IIF(c, BOOST_PP_FOR_111, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(111, s), p, o, m)
#define _mm_mask_getexp_sd(W,U,A,B) (__m128d)__builtin_ia32_getexpsd_mask_round(A, B, W, U, _MM_FROUND_CUR_DIRECTION)
#define MALLOCX_TCACHE_NONE MALLOCX_TCACHE(-1)
#define CRL_REASON_CERTIFICATE_HOLD 6
#define ASYNC_R_INIT_FAILED 105
#define IP_RECVTTL 12
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100011 (0)(1)(1)(0)(0)(0)(1)(1),
#define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
#define THRIFT_PLUGGABLE_FUNC_SET(_ret,_name,...) _ret THRIFT__PLUGGABLE_FUNC_IMPL_ ##_name(__VA_ARGS__); static ::apache::thrift::detail::pluggable_function_setter_type_t< THRIFT__PLUGGABLE_FUNC_TYPE_ ##_name> THRIFT__PLUGGABLE_FUNC_SETTER_ ##_name{ _name, THRIFT__PLUGGABLE_FUNC_IMPL_ ##_name}; _ret THRIFT__PLUGGABLE_FUNC_IMPL_ ##_name(__VA_ARGS__)
#define NID_des_cfb1 656
#define BOOST_PP_INTERCEPT_200 
#define _SC_LEVEL2_CACHE_ASSOC _SC_LEVEL2_CACHE_ASSOC
#define ASN1_F_I2D_RSA_PUBKEY 165
#define SSL_CTRL_GET_MIN_PROTO_VERSION 130
#define OBJ_sbgp_routerIdentifier OBJ_id_pe,9L
#define SSL_TICKET_EMPTY 3
#define EVENT__HAVE_UNISTD_H 1
#define _IOC_READ 2U
#define FOLLY_MALLOC_CHECKED_MALLOC __attribute__((__returns_nonnull__, __malloc__))
#define TLS1_CK_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C062
#define RSA_R_BAD_E_VALUE 101
#define BOOST_MOVABLE_BUT_NOT_COPYABLE(TYPE) BOOST_MOVE_IMPL_NO_COPY_CTOR_OR_ASSIGN(TYPE) public: typedef int boost_move_emulation_t; private:
#define NID_pbeWithSHA1AndDES_CBC 170
#define CONF_R_MODULE_INITIALIZATION_ERROR 109
#define BOOST_PP_DEC_102 101
#define BOOST_PP_WHILE_44_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_45, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(45, s))
#define BOOST_PP_DETAIL_IBP_IS_VARIADIC_R_BOOST_PP_DETAIL_IBP_IS_VARIADIC_C 0,
#define SN_delta_crl "deltaCRL"
#define OBJ_roleOccupant OBJ_X509,33L
#define _SC_LEVEL1_ICACHE_ASSOC _SC_LEVEL1_ICACHE_ASSOC
#define EVP_F_EVP_MD_CTX_COPY_EX 110
#define BOOST_MPL_AUX_VECTOR_ITERATOR_HPP_INCLUDED 
#define _SYS_UIO_H 1
#define FSCRYPT_KEY_DESC_PREFIX_SIZE 8
#define TLS1_RFC_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"
#define BOOST_PP_DEC_105 104
#define T_GLOBAL_DEBUGGING_LEVEL 0
#define BOOST_PP_INTERCEPT_203 
#define FMT_USE_FLOAT 1
#define __VERSION__ "10.2.1 20210110"
#define _mm256_maskz_fixupimm_pd(U,X,Y,Z,C) ((__m256d)__builtin_ia32_fixupimmpd256_maskz ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (__v4di)(__m256i)(Z), (int)(C), (__mmask8)(U)))
#define _mm512_cvt_roundepi64_pd(A,B) ((__m512d)__builtin_ia32_cvtqq2pd512_mask ((__v8di)(A), (__v8df)_mm512_setzero_pd (), -1, (B)))
#define __IOV_MAX 1024
#define _mm256_maskz_fixupimm_ps(U,X,Y,Z,C) ((__m256)__builtin_ia32_fixupimmps256_maskz ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (__v8si)(__m256i)(Z), (int)(C), (__mmask8)(U)))
#define _mm512_cvt_roundepi64_ps(A,B) ((__m256)__builtin_ia32_cvtqq2ps512_mask ((__v8di)(A), (__v8sf)_mm256_setzero_ps (), -1, (B)))
#define SSL_R_LIBRARY_BUG 274
#define SSL_R_BAD_CHANGE_CIPHER_SPEC 103
#define IP_PKTINFO 8
#define SSL_R_PSK_NO_CLIENT_CB 224
#define OBJ_setct_CapRevReqTBE OBJ_set_ctype,65L
#define TLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256 0x030000A2
#define BOOST_VARIANT_VISITOR_PTR_HPP 
#define OBJ_setct_CapRevReqTBS OBJ_set_ctype,29L
#define _MKNOD_VER 0
#define OBJ_postOfficeBox OBJ_X509,18L
#define SSL3_MT_SERVER_KEY_EXCHANGE 12
#define EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP 124
#define NID_deltaRevocationList 891
#define __cpp_lib_make_reverse_iterator 201402
#define OBJ_id_pkinit 1L,3L,6L,1L,5L,2L,3L
#define NID_setct_CertReqTBEX 596
#define NID_postOfficeBox 862
#define SSL_R_BN_LIB 130
#define XN_FLAG_COMPAT 0
#define BOOST_MPL_INSERTER_HPP_INCLUDED 
#define OBJ_setct_CapResTBE OBJ_set_ctype,64L
#define NID_desx_cbc 80
#define _GLIBCXX_HAVE_ENOSPC 1
#define SSL_R_CLIENTHELLO_TLSEXT 226
#define LN_pkcs7_signed "pkcs7-signedData"
#define STATX_ATTR_VERITY 0x00100000
#define BOOST_PP_FOR_110(s,p,o,m) BOOST_PP_FOR_110_C(BOOST_PP_BOOL(p(111, s)), s, p, o, m)
#define _mm256_mask_inserti64x2(W,U,X,Y,C) ((__m256i) __builtin_ia32_inserti64x2_256_mask ((__v4di)(__m256i) (X), (__v2di)(__m128i) (Y), (int) (C), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define SYNC_FILE_RANGE_WAIT_BEFORE 1
#define SN_info "info"
#define _mm256_i64gather_pd(BASE,INDEX,SCALE) (__m256d) __builtin_ia32_gatherdiv4df ((__v4df) _mm256_setzero_pd (), (double const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4df) _mm256_cmp_pd (_mm256_setzero_pd (), _mm256_setzero_pd (), _CMP_EQ_OQ), (int) (SCALE))
#define SYSLOG_FATAL(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_FATAL, counter, &google::LogMessage::SendToSyslogAndLog)
#define CERT_PKEY_ISSUER_NAME 0x200
#define EVENT__HAVE_SYS_EVENTFD_H 1
#define _ALLOCA_H 1
#define SSL3_MT_CHANGE_CIPHER_SPEC 0x0101
#define LN_cmcRA "CMC Registration Authority"
#define BOOST_MOVE_IS_NOTHROW_MOVE_CONSTRUCTIBLE(T) ::boost::move_detail::is_pod<T>::value
#define _____fpos_t_defined 1
#define _PC_REC_INCR_XFER_SIZE _PC_REC_INCR_XFER_SIZE
#define BOOST_PP_FOR_240(s,p,o,m) BOOST_PP_FOR_240_C(BOOST_PP_BOOL(p(241, s)), s, p, o, m)
#define __bitwise __bitwise__
#define _SC_TIMERS _SC_TIMERS
#define EVP_PKEY_CTRL_DSA_PARAMGEN_BITS (EVP_PKEY_ALG_CTRL + 1)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010111 (1)(0)(0)(1)(0)(1)(1)(1),
#define BOOST_PP_FOR_70_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(71, s) BOOST_PP_IIF(c, BOOST_PP_FOR_71, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(71, s), p, o, m)
#define BOOST_INTRUSIVE_INTERNAL_STATIC_BOOL_IS_TRUE(TRAITS_PREFIX,TYPEDEF_TO_FIND) template <class T>struct TRAITS_PREFIX ##_bool{ template<bool Add> struct two_or_three {yes_type _[2 + Add];}; template <class U> static yes_type test(...); template <class U> static two_or_three<U::TYPEDEF_TO_FIND> test (int); static const std::size_t value = sizeof(test<T>(0));};template <class T>struct TRAITS_PREFIX ##_bool_is_true{ static const bool value = TRAITS_PREFIX ##_bool<T>::value > sizeof(yes_type)*2;};
#define O_RDWR 02
#define EVENT__HAVE_STRSEP 1
#define _PTRDIFF_T_ 
#define BOOST_PP_FOR_241(s,p,o,m) BOOST_PP_FOR_241_C(BOOST_PP_BOOL(p(242, s)), s, p, o, m)
#define _T_PTRDIFF_ 
#define SSL_CTX_sess_accept_good(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_ACCEPT_GOOD,0,NULL)
#define SSL_clear_num_renegotiations(ssl) SSL_ctrl((ssl),SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS,0,NULL)
#define DEPRECATEDIN_1_0_0(f) DECLARE_DEPRECATED(f)
#define EC_F_EC_POINT_COPY 114
#define PEM_R_NO_START_LINE 108
#define OBJ_ct_precert_poison 1L,3L,6L,1L,4L,1L,11129L,2L,4L,3L
#define X509V3_F_X509V3_GET_STRING 143
#define BOOST_PP_SEQ_ELEM_40(_) BOOST_PP_SEQ_ELEM_39
#define OPENSSL_malloc_init() while(0) continue
#define EVENT__HAVE_GETTIMEOFDAY 1
#define LN_aes_192_ocb "aes-192-ocb"
#define _GLIBCXX_HAVE_ENOSTR 1
#define TLS1_TXT_RSA_WITH_AES_128_CCM "AES128-CCM"
#define BOOST_PP_SEQ_FOLD_LEFT_149(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_149(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_ELEM_42(_) BOOST_PP_SEQ_ELEM_41
#define _AVX512ERINTRIN_H_INCLUDED 
#define APACHE_THRIFT_ACCESSOR_elemType 
#define LN_crossCertificatePair "crossCertificatePair"
#define SSL_SECOP_OTHER_CIPHER (1 << 16)
#define BOOST_PP_SEQ_ELEM_44(_) BOOST_PP_SEQ_ELEM_43
#define SN_idea_ofb64 "IDEA-OFB"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001100 (0)(0)(0)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001101 (0)(0)(0)(0)(1)(1)(0)(1),
#define BOOST_PP_SEQ_FOLD_LEFT_8(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_8(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_ELEM_45(_) BOOST_PP_SEQ_ELEM_44
#define SSL_R_MISSING_FATAL 256
#define BIO_destroy_bio_pair(b) (int)BIO_ctrl(b,BIO_C_DESTROY_BIO_PAIR,0,NULL)
#define FS_SECRM_FL 0x00000001
#define SN_setext_pinSecure "setext-pinSecure"
#define __FLT32_MANT_DIG__ 24
#define FIZZ_DESTRUCTOR_CASES(X,...) case Type::X ##_E: X ##_.~X(); break;
#define OBJ_inhibit_any_policy OBJ_id_ce,54L
#define OBJ_NAME_TYPE_COMP_METH 0x04
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001111 (0)(0)(0)(0)(1)(1)(1)(1),
#define ERR_LIB_X509V3 34
#define RLIMIT_NPROC __RLIMIT_NPROC
#define SSL_R_MISSING_ECDSA_SIGNING_CERT 381
#define FOLLY_DETAIL_CREATE_FREE_INVOKE_TRAITS_USING(_,funcname,...) BOOST_PP_EXPR_IIF( BOOST_PP_NOT(BOOST_PP_IS_EMPTY(__VA_ARGS__)), BOOST_PP_LIST_FOR_EACH( FOLLY_DETAIL_CREATE_FREE_INVOKE_TRAITS_USING_1, funcname, BOOST_PP_TUPLE_TO_LIST((__VA_ARGS__))))
#define EVENT2_EVENT_COMPAT_H_INCLUDED_ 
#define CPP2_PROTOCOL_COMPACTPROTOCOL_H_ 1
#define TLS_CT_GOST12_512_SIGN 239
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define SSL_F_SSL_LOAD_CLIENT_CA_FILE 185
#define X509_V_FLAG_ALLOW_PROXY_CERTS 0x40
#define EVENT__HAVE_NETINET_TCP_H 1
#define ASYNC_F_ASYNC_CTX_NEW 100
#define TLS_MD_MASTER_SECRET_CONST "master secret"
#define ASN1_ITEM_rptr(ref) (&(ref ##_it))
#define TLS1_TXT_DH_RSA_WITH_AES_256_SHA256 "DH-RSA-AES256-SHA256"
#define _mm512_min_round_pd(A,B,R) (__m512d)__builtin_ia32_minpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, R)
#define OBJ_id_cmc_transactionId OBJ_id_cmc,5L
#define F_DUPFD_CLOEXEC 1030
#define _mm512_min_round_ps(A,B,R) (__m512)__builtin_ia32_minps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, R)
#define OBJ_id_cmc_getCRL OBJ_id_cmc,16L
#define TLS1_TXT_ECDH_RSA_WITH_NULL_SHA "ECDH-RSA-NULL-SHA"
#define BIO_CB_READ 0x02
#define SSL_F_TLS_CONSTRUCT_SERVER_KEY_EXCHANGE 492
#define IP_PASSSEC 18
#define OBJ_distinguishedName OBJ_X509,49L
#define IPPORT_RESERVED 1024
#define OPENSSL_NPN_NO_OVERLAP 2
#define __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
#define SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST 353
#define BOOST_INTRUSIVE_DETAIL_REVERSE_ITERATOR_HPP 
#define __SIGRTMIN 32
#define BOOST_VARIANT_APPLY_VISITOR_HPP 
#define _SC_FILE_LOCKING _SC_FILE_LOCKING
#define SN_id_Gost28147_89_CryptoPro_D_ParamSet "id-Gost28147-89-CryptoPro-D-ParamSet"
#define LN_idea_cbc "idea-cbc"
#define _mm256_insert_epi16(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 3); __Y = _mm_insert_epi16 (__Y, (D), (N) % 8); _mm256_insertf128_si256 ((X), __Y, (N) >> 3); }))
#define SN_id_tc26_wrap "id-tc26-wrap"
#define BOOST_MPL_ASSERT_NOT(pred) BOOST_MPL_AUX_ASSERT_CONSTANT( std::size_t , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( boost::mpl::assertion_failed<false>( boost::mpl::assert_not_arg( (void (*) pred)0, 1 ) ) ) )
#define BOOST_PP_FOR_177_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(178, s) BOOST_PP_IIF(c, BOOST_PP_FOR_178, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(178, s), p, o, m)
#define SSL_CTRL_GET_NUM_RENEGOTIATIONS 10
#define BOOST_MPL_AUX_NTTP_DECL(T,x) T x
#define SN_id_smime_aa_securityLabel "id-smime-aa-securityLabel"
#define EVP_F_EVP_VERIFYFINAL 108
#define BOOST_PP_REPEAT_2_77(m,d) BOOST_PP_REPEAT_2_76(m, d) m(3, 76, d)
#define NL_TEXTMAX INT_MAX
#define ERR_LIB_ECDSA 42
#define SSL_OP_LEGACY_SERVER_CONNECT 0x00000004U
#define OBJ_dnsName OBJ_X509,100L
#define SN_OCSP_sign "OCSPSigning"
#define _mm256_insert_epi32(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 2); __Y = _mm_insert_epi32 (__Y, (D), (N) % 4); _mm256_insertf128_si256 ((X), __Y, (N) >> 2); }))
#define BOOST_TT_HAS_ASCCURATE_IS_FUNCTION 
#define NL_MSGMAX INT_MAX
#define FS_FL_USER_MODIFIABLE 0x000380FF
#define EVP_DigestVerifyUpdate(a,b,c) EVP_DigestUpdate(a,b,c)
#define STACK_OF(type) struct stack_st_ ##type
#define _POSIX_RTSIG_MAX 8
#define SN_Management "mgmt"
#define EVP_R_DIFFERENT_PARAMETERS 153
#define _STL_ALGOBASE_H 1
#define BOOST_INTRUSIVE_DETAIL_SIZE_HOLDER_HPP 
#define RSA_F_RSA_PRIV_DECODE 150
#define __off64_t_defined 
#define SSL_R_FRAGMENTED_CLIENT_HELLO 401
#define OBJ_setct_PIDualSignedTBE OBJ_set_ctype,50L
#define _GLIBCXX_NUM_CATEGORIES 6
#define SIOCGSTAMPNS 0x8907
#define __INT32_C(c) c
#define NID_setct_AuthRevResTBS 543
#define BOOST_SLIST_HEADER <ext/slist>
#define __DEC64_EPSILON__ 1E-15DD
#define __ORDER_PDP_ENDIAN__ 3412
#define RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP 122
#define __glibcxx_requires_sorted_set(_First1,_Last1,_First2) 
#define ASN1_F_B64_WRITE_ASN1 210
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000011 (1)(0)(0)(0)(0)(1)(1),
#define _mm512_maskz_cvtt_roundps_epu32(U,A,B) ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))
#define TLS1_AD_CERTIFICATE_UNOBTAINABLE 111
#define SSL_F_SSL_DANE_DUP 403
#define SSL_F_TLS_CONSTRUCT_CKE_ECDHE 405
#define V_ASN1_OBJECT 6
#define TLS_MD_SERVER_FINISH_CONST_SIZE 15
#define ASN1_STRFLGS_ESC_2253 1
#define ASN1_STRFLGS_ESC_2254 0x400
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_8(o,s,l) 0
#define BIO_CTRL_DGRAM_SET_MTU 42
#define MS_NOATIME 1024
#define BN_R_TOO_MANY_ITERATIONS 113
#define OBJ_id_DHBasedMac OBJ_ISO_US,113533L,7L,66L,30L
#define SSL3_CK_RSA_DES_64_CBC_SHA 0x03000009
#define _mm_mask_permute_pd(W,U,X,C) ((__m128d) __builtin_ia32_vpermilpd_mask ((__v2df)(__m128d)(X), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define _mm256_insert_epi64(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 1); __Y = _mm_insert_epi64 (__Y, (D), (N) % 2); _mm256_insertf128_si256 ((X), __Y, (N) >> 1); }))
#define BIO_C_GET_SOCKS 134
#define BOOST_PP_FOR_206_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(207, s) BOOST_PP_IIF(c, BOOST_PP_FOR_207, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(207, s), p, o, m)
#define BOOST_PP_DEC_113 112
#define X509V3_EXT_DYNAMIC 0x1
#define SSL_F_TLS_PARSE_STOC_ALPN 579
#define _mm_mask_permute_ps(W,U,X,C) ((__m128) __builtin_ia32_vpermilps_mask ((__v4sf)(__m128)(X), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define __have_pthread_attr_t 1
#define EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP 117
#define BOOST_PP_VARIADIC_ELEM_20(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,...) e20
#define PKCS7_PARTIAL 0x4000
#define BOOST_PP_LIST_FOR_EACH_I_O_D(m,d,l,i) (m, d, BOOST_PP_LIST_REST(l), BOOST_PP_INC(i))
#define BOOST_PP_INC_149 150
#define BOOST_PP_SEQ_FOLD_LEFT_I_171(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_172, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(172, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_DEC_115 114
#define NID_id_smime_aa_ets_RevocationRefs 233
#define BOOST_PP_DEC_116 115
#define LN_rc5_cbc "rc5-cbc"
#define BOOST_PP_SEQ_FOLD_LEFT_161(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_161(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_DETAIL_CONTAINER_FWD_HPP 
#define BOOST_PP_SEQ_FOLD_LEFT_I_172(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_173, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(173, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_133 133
#define SSL_get_tlsext_status_type(ssl) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE,0,NULL)
#define SSL_F_SSL_VERIFY_CLIENT_POST_HANDSHAKE 616
#define BIO_CTRL_DGRAM_SET_RECV_TIMEOUT 33
#define _mm512_i64scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8df ((void *) (ADDR), (__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (__v8df)(__m512d) (V1), (int) (SCALE))
#define BOOST_PP_SEQ_FOLD_LEFT_162(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_162(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PRIuFAST8 "u"
#define _mm512_i64scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16sf ((void *) (ADDR), (__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (__v8sf)(__m256) (V1), (int) (SCALE))
#define TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 0x030000C2
#define STDC_HEADERS 1
#define SSL3_MT_CCS 1
#define BOOST_PP_SEQ_FOLD_LEFT_163(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_163(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100100 (1)(1)(1)(0)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100101 (1)(1)(1)(0)(0)(1)(0)(1),
#define _mm512_maskz_cvtt_roundps_epu64(U,A,B) ((__m512i)__builtin_ia32_cvttps2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY 159
#define EXFLAG_CA 0x10
#define __cpp_guaranteed_copy_elision 201606L
#define EC_F_EC_GROUP_GET_ECPARAMETERS 261
#define BOOST_PP_NODE_10(p) BOOST_PP_IIF(p(10), BOOST_PP_NODE_9, BOOST_PP_NODE_11)
#define X509_STORE_CTX_get_chain X509_STORE_CTX_get0_chain
#define RWH_WRITE_LIFE_MEDIUM 3
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100111 (1)(1)(1)(0)(0)(1)(1)(1),
#define OBJ_rsaOAEPEncryptionSET OBJ_rsadsi,1L,1L,6L
#define ASN1_R_INVALID_VALUE 219
#define BOOST_PP_NODE_12(p) BOOST_PP_IIF(p(12), BOOST_PP_NODE_10, BOOST_PP_NODE_14)
#define FOLLY_STRING_H_ 
#define _GLIBCXX_HAVE_STRING_H 1
#define EC_F_EC_GFP_SIMPLE_MAKE_AFFINE 102
#define CT_F_SCT_CTX_VERIFY 128
#define X509_PURPOSE_TIMESTAMP_SIGN 9
#define OBJ_set_attr OBJ_id_set,3L
#define PEM_F_PEM_READ_BIO 109
#define NID_presentationAddress 873
#define SN_id_pkix1_explicit_88 "id-pkix1-explicit-88"
#define BOOST_PP_TUPLE_EAT(size) BOOST_PP_EAT
#define SSL_set0_chain(s,sk) SSL_ctrl(s,SSL_CTRL_CHAIN,0,(char *)(sk))
#define _GLIBCXX_HAVE_LIMIT_AS 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111000 (1)(1)(1)(1)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111001 (1)(1)(1)(1)(1)(0)(0)(1),
#define _SC_UCHAR_MAX _SC_UCHAR_MAX
#define SN_id_GostR3410_94_CryptoPro_A_ParamSet "id-GostR3410-94-CryptoPro-A-ParamSet"
#define SN_id_pkix1_explicit_93 "id-pkix1-explicit-93"
#define M_LOG2Ef32x __f32x (1.442695040888963407359924681001892137)
#define AF_INET PF_INET
#define EC_F_I2D_ECPRIVATEKEY 192
#define BOOST_PP_FRAME_FINISH(i) BOOST_PP_CAT(BOOST_PP_ITERATION_FINISH_, i)
#define LN_organizationalStatus "organizationalStatus"
#define EVENT__HAVE_UINTPTR_T 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111010 (1)(1)(1)(1)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111011 (1)(1)(1)(1)(1)(0)(1)(1),
#define XKU_CODE_SIGN 0x8
#define BOOST_SYMBOL_VISIBLE __attribute__((__visibility__("default")))
#define __glibcxx_digits_b(T,B) (B - __glibcxx_signed_b (T,B))
#define O_SYNC 04010000
#define SSL_MAX_CERT_LIST_DEFAULT 1024*100
#define FP_INT_TONEAREST 4
#define ASN1_F_ASN1_I2D_BIO 116
#define NID_id_pkix_OCSP_basic 365
#define _mm512_rsqrt28_round_pd(A,C) __builtin_ia32_rsqrt28pd_mask(A, (__v8df)_mm512_setzero_pd(), -1, C)
#define BIO_C_GET_CONNECT 123
#define _mm512_rsqrt28_round_ps(A,C) __builtin_ia32_rsqrt28ps_mask(A, (__v16sf)_mm512_setzero_ps(), -1, C)
#define CRYPTO_F_PKEY_SIPHASH_INIT 125
#define EC_R_POINT_AT_INFINITY 106
#define TCPOLEN_TSTAMP_APPA (TCPOLEN_TIMESTAMP+2)
#define SN_sect233r1 "sect233r1"
#define BN_R_BAD_RECIPROCAL 101
#define BOOST_PP_FOR_109_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(110, s) BOOST_PP_IIF(c, BOOST_PP_FOR_110, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(110, s), p, o, m)
#define SN_magma_ecb "magma-ecb"
#define _SC_V6_ILP32_OFFBIG _SC_V6_ILP32_OFFBIG
#define _SC_TRACE_LOG _SC_TRACE_LOG
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM_8 "ECDHE-ECDSA-AES256-CCM8"
#define BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT(z,n,args) template< typename V > static boost::mpl::aux::yes_tag BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME(args)( boost::mpl::aux::type_wrapper< V > const volatile* , BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME(args, n) < V::template BOOST_PP_ARRAY_ELEM(1, args) >* = 0 );
#define BOOST_PP_VARIADIC_HAS_OPT_ELEM2(e0,...) BOOST_PP_VARIADIC_HAS_OPT_ELEM_2(e0,__VA_ARGS__)
#define EVENT__PACKAGE_BUGREPORT ""
#define EVP_CIPH_GCM_MODE 0x6
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_162(op,st,ss,sz) 0
#define SSL_F_TLS12_COPY_SIGALGS 533
#define X509_F_X509_PUBKEY_GET 161
#define TLS1_RFC_PSK_WITH_3DES_EDE_CBC_SHA "TLS_PSK_WITH_3DES_EDE_CBC_SHA"
#define EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT 159
#define OPENSSL_realloc(addr,num) CRYPTO_realloc(addr, num, OPENSSL_FILE, OPENSSL_LINE)
#define O_NOATIME __O_NOATIME
#define BOOST_PP_SEQ_ELEM_55(_) BOOST_PP_SEQ_ELEM_54
#define X509_V_ERR_NO_ISSUER_PUBLIC_KEY 77
#define SSL_set_time(a,b) SSL_SESSION_set_time((a),(b))
#define IOV_MAX __IOV_MAX
#define EVENT__PACKAGE_URL ""
#define BOOST_PP_SEQ_ELEM_56(_) BOOST_PP_SEQ_ELEM_55
#define BOOST_PREPROCESSOR_PUNCTUATION_COMMA_IF_HPP 
#define PRIdLEAST8 "d"
#define BOOST_PP_FOR_218_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(219, s) BOOST_PP_IIF(c, BOOST_PP_FOR_219, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(219, s), p, o, m)
#define BOOST_PP_COMMA_IF(cond) BOOST_PP_IF(cond, BOOST_PP_COMMA, BOOST_PP_EMPTY)()
#define BOOST_PP_WHILE_62(p,o,s) BOOST_PP_WHILE_62_C(BOOST_PP_BOOL(p(63, s)), p, o, s)
#define INTPTR_MAX (9223372036854775807L)
#define _GLIBCXX_USE_LSTAT 1
#define RAND_F_RAND_DRBG_SET_DEFAULTS 121
#define EVP_F_EVP_PKEY_GET0_POLY1305 184
#define SSL_CTRL_SET_TLSEXT_DEBUG_ARG 57
#define LN_title "title"
#define ASN1_STRING_FLAG_EMBED 0x080
#define EC_R_PKPARAMETERS2GROUP_FAILURE 127
#define _GLIBCXX_VERBOSE 1
#define IP_MULTICAST_IF 32
#define SN_setct_CredRevReqTBS "setct-CredRevReqTBS"
#define PF_ALG 38
#define _mm512_mask_prefetch_i32gather_ps(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfdps ((__mmask16) (MASK), (__v16si)(__m512i) (INDEX), (void const *) (ADDR), (int) (SCALE), (int) (HINT))
#define SSL_in_connect_init(a) (SSL_in_init(a) && !SSL_is_server(a))
#define BOOST_PP_WHILE_150_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_151, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(151, s))
#define SSL_TXT_aRSA "aRSA"
#define __cpp_lib_type_trait_variable_templates 201510L
#define BOOST_PP_ERROR_0x0007 BOOST_PP_ERROR(0x0007, BOOST_PP_DIVISION_BY_ZERO)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_169(op,st,ss,sz) 0
#define TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA "TLS_ECDHE_PSK_WITH_NULL_SHA"
#define SSL_F_TLS_CONSTRUCT_CTOS_SESSION_TICKET 476
#define BOOST_TT_HAS_TRIVIAL_CONSTRUCTOR_HPP_INCLUDED 
#define _EXCEPTION_PTR_H 
#define SN_blake2s256 "BLAKE2s256"
#define _SC_THREAD_THREADS_MAX _SC_THREAD_THREADS_MAX
#define ENAVAIL 119
#define ASYNCerr(f,r) ERR_PUT_error(ERR_LIB_ASYNC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define EV_SIGNAL 0x08
#define SSL3_CC_WRITE 0x002
#define X509_F_X509_CRL_DIFF 105
#define _mm512_mask_fpclass_pd_mask(u,X,C) ((__mmask8) __builtin_ia32_fpclasspd512_mask ((__v8df) (__m512d) (X), (int) (C), (__mmask8)(u)))
#define _LOCALE_CONV_H 1
#define _GLIBCXX_CXX_CONFIG_H 1
#define _SC_PRIORITY_SCHEDULING _SC_PRIORITY_SCHEDULING
#define THRIFT_ASYNC_CHANNELCALLBACKS_H_ 1
#define _mm512_mask_extracti64x4_epi64(W,U,X,C) ((__m256i) __builtin_ia32_extracti64x4_mask ((__v8di)(__m512i) (X), (int) (C), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define O_CLOEXEC __O_CLOEXEC
#define PRIu16 "u"
#define SSL_SECOP_VERSION (9 | SSL_SECOP_OTHER_NONE)
#define SSL_CTRL_SET_MAX_CERT_LIST 51
#define randombytes_SEEDBYTES 32U
#define SN_netscape_ssl_server_name "nsSslServerName"
#define NID_set_addPolicy 625
#define SSL_set1_curves_list SSL_set1_groups_list
#define IOC_OUT (_IOC_READ << _IOC_DIRSHIFT)
#define SN_setext_genCrypt "setext-genCrypt"
#define F_SETSIG __F_SETSIG
#define _LOCALE_FACETS_H 1
#define SN_SNMPv2 "snmpv2"
#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M 186
#define _mm_maskz_range_round_sd(U,A,B,C,R) ((__m128d) __builtin_ia32_rangesd128_mask_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (), (__mmask8)(U), (R)))
#define _mm_maskz_range_round_ss(U,A,B,C,R) ((__m128) __builtin_ia32_rangess128_mask_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (), (__mmask8)(U), (R)))
#define FB_CONCATENATE_IMPL(s1,s2) s1 ##s2
#define NID_dNSDomain 451
#define evsignal_del(ev) event_del(ev)
#define BOOST_PP_ITERATION_DEPTH() 0
#define EVP_PKEY_CTX_set_rsa_pss_keygen_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA_PSS, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_MD, 0, (void *)(md))
#define PRIu32 "u"
#define IP_XFRM_POLICY 17
#define OBJ_id_regCtrl_pkiPublicationInfo OBJ_id_regCtrl,3L
#define EVP_CIPH_NO_PADDING 0x100
#define LN_sshServer "SSH Server"
#define BOOST_PP_BOOL_86 1
#define OBJ_dsaWithSHA OBJ_algorithm,13L
#define PKCS7_type_is_data(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_data)
#define IN_CLASSA_MAX 128
#define CT_R_LOG_CONF_MISSING_KEY 112
#define _MM_CMPINT_EQ 0x0
#define _XOPEN_SOURCE_EXTENDED 1
#define OBJ_dsa_with_SHA256 OBJ_dsa_with_sha2,2L
#define SN_des_ede_cbc "DES-EDE-CBC"
#define LN_ecdsa_with_SHA3_384 "ecdsa_with_SHA3-384"
#define EVENT__SIZEOF_LONG_LONG 8
#define OBJ_personalSignature OBJ_pilotAttributeType,53L
#define IPV6_RECVPATHMTU 60
#define BOOST_PP_INC_155 156
#define BOOST_PP_DEC_121 120
#define LN_sha1WithRSAEncryption "sha1WithRSAEncryption"
#define __CFLOAT32X _Complex double
#define SN_setct_PCertReqData "setct-PCertReqData"
#define X509_V_ERR_UNSUPPORTED_NAME_SYNTAX 53
#define PRIu64 __PRI64_PREFIX "u"
#define __attribute_artificial__ __attribute__ ((__artificial__))
#define BOOST_PP_VARIADIC_ELEM_30(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,...) e30
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_212(op,st,ss,sz) 0
#define EXFLAG_SI 0x20
#define _MM_CMPINT_GE 0x5
#define BOOST_PP_INC_159 160
#define _MM_CMPINT_GT 0x6
#define _POSIX_ASYNCHRONOUS_IO 200809L
#define SN_id_ct_asciiTextWithCRLF "id-ct-asciiTextWithCRLF"
#define NID_crl_distribution_points 103
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define SN_photo "photo"
#define OBJ_authority_key_identifier OBJ_id_ce,35L
#define OBJ_ct_precert_scts 1L,3L,6L,1L,4L,1L,11129L,2L,4L,2L
#define TLS1_CK_DHE_DSS_WITH_ARIA_256_GCM_SHA384 0x0300C057
#define strdupa(s) (__extension__ ({ const char *__old = (s); size_t __len = strlen (__old) + 1; char *__new = (char *) __builtin_alloca (__len); (char *) memcpy (__new, __old, __len); }))
#define TLS1_CK_DHE_PSK_WITH_AES_256_CCM_8 0x0300C0AB
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000000 (0)(0)(0)(0)(0)(0)(0),
#define BOOST_MPL_EQUAL_HPP_INCLUDED 
#define EVP_F_ALG_MODULE_INIT 177
#define BOOST_NORETURN __attribute__ ((__noreturn__))
#define BOOST_PP_VARIADIC_ELEM_37(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,...) e37
#define PRIxLEAST16 "x"
#define EC_F_NISTP256_PRE_COMP_NEW 236
#define OBJ_sha3_256 OBJ_nist_hashalgs,8L
#define BOOST_PP_VARIADIC_ELEM_38(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,...) e38
#define NID_setAttr_TokenType 622
#define SSL_F_SSL_UNDEFINED_FUNCTION 197
#define __timer_t_defined 1
#define LN_camellia_192_cfb1 "camellia-192-cfb1"
#define BOOST_PP_NODE_20(p) BOOST_PP_IIF(p(20), BOOST_PP_NODE_18, BOOST_PP_NODE_22)
#define __WCLONE 0x80000000
#define __DECL_SIMD_cosf16 
#define NID_brainpoolP192r1 923
#define EXFLAG_V1 0x40
#define TLS1_TXT_DHE_PSK_WITH_AES_128_CCM_8 "DHE-PSK-AES128-CCM8"
#define ASN1_STRFLGS_IGNORE_TYPE 0x20
#define SN_sect163r1 "sect163r1"
#define BOOST_PP_FOR_144_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(145, s) BOOST_PP_IIF(c, BOOST_PP_FOR_145, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(145, s), p, o, m)
#define _SC_PII_INTERNET _SC_PII_INTERNET
#define AI_ADDRCONFIG 0x0020
#define EMSGSIZE 90
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_216(op,st,ss,sz) 0
#define BOOST_PP_NODE_23(p) BOOST_PP_IIF(p(23), 23, 24)
#define OBJ_dsa_2 OBJ_algorithm,12L
#define RSA_F_RSA_PRINT_FP 116
#define BOOST_PP_NODE_24(p) BOOST_PP_IIF(p(24), BOOST_PP_NODE_20, BOOST_PP_NODE_28)
#define SHA384_DIGEST_LENGTH 48
#define OBJ_id_tc26 OBJ_member_body,643L,7L,1L
#define SNANF32X (__builtin_nansf32x (""))
#define PRIxLEAST32 "x"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_217(op,st,ss,sz) 0
#define BIO_R_UNABLE_TO_CREATE_SOCKET 118
#define NID_ecdsa_with_Recommended 791
#define FSCRYPT_KEY_STATUS_ABSENT 1
#define EVENT_FD(ev) ((int)event_get_fd(ev))
#define _POSIX2_LINE_MAX 2048
#define TLS1_CK_DH_DSS_WITH_ARIA_256_GCM_SHA384 0x0300C059
#define __DECL_SIMD_cosf32 
#define BOOST_PP_NODE_28(p) BOOST_PP_IIF(p(28), BOOST_PP_NODE_26, BOOST_PP_NODE_30)
#define SO_BSDCOMPAT 14
#define EC_R_UNSUPPORTED_FIELD 131
#define st_ctime st_ctim.tv_sec
#define _MM_CMPINT_LE 0x2
#define IMPLEMENT_LHASH_COMP_FN(name,o_type) int name ##_LHASH_COMP(const void *arg1, const void *arg2) { const o_type *a = arg1; const o_type *b = arg2; return name ##_cmp(a,b); }
#define INT32_C(c) c
#define _GLIBCXX_HAVE_FLOORF 1
#define _MM_CMPINT_LT 0x1
#define _GLIBCXX_HAVE_FLOORL 1
#define BOOST_XLCPP_ZOS_WORKAROUND_GUARD 1
#define SSL_CTX_set_max_cert_list(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_MAX_CERT_LIST,m,NULL)
#define MALLOCX_LG_ALIGN(la) ((int)(la))
#define BIO_C_NREAD0 143
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_15(op,st,ss,sz) 0
#define EVP_R_NO_DIGEST_SET 139
#define __LONG_MAX__ 0x7fffffffffffffffL
#define PROT_GROWSUP 0x02000000
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define NID_id_GostR3410_94_CryptoPro_D_ParamSet 835
#define TLS1_TXT_PSK_WITH_NULL_SHA "PSK-NULL-SHA"
#define NID_id_camellia192_wrap 908
#define SN_id_cmc_popLinkWitness "id-cmc-popLinkWitness"
#define _mm_mask_cmp_ss_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), M,_MM_FROUND_CUR_DIRECTION))
#define CRYPTO_F_OPENSSL_SK_DUP 128
#define SSL_F_OSSL_STATEM_CLIENT13_READ_TRANSITION 436
#define _mm512_mask_sqrt_round_pd(W,U,A,C) (__m512d)__builtin_ia32_sqrtpd512_mask(A, W, U, C)
#define _MM_CMPINT_NE 0x4
#define TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C09B
#define SSL_SECOP_PEER_CA_MD (SSL_SECOP_CA_MD | SSL_SECOP_PEER)
#define IPV6_JOIN_ANYCAST 27
#define MCAST_UNBLOCK_SOURCE 44
#define SYS_F_FREAD 11
#define BOOST_PP_SEQ_ELEM_61(_) BOOST_PP_SEQ_ELEM_60
#define NID_id_smime_aa_smimeEncryptCerts 224
#define __DECL_SIMD_cosf64 
#define _BITS_PTHREADTYPES_COMMON_H 1
#define BOOST_INTRUSIVE_LINK_MODE_HPP 
#define FOLLY_PP_DETAIL_NARGS(...) FOLLY_PP_DETAIL_NARGS_1( dummy, ##__VA_ARGS__, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
#define BOOST_PP_SEQ_ELEM_63(_) BOOST_PP_SEQ_ELEM_62
#define TLS1_RFC_DH_anon_WITH_ARIA_256_GCM_SHA384 "TLS_DH_anon_WITH_ARIA_256_GCM_SHA384"
#define _mm_ceil_sd(D,V) _mm_round_sd ((D), (V), _MM_FROUND_CEIL)
#define APACHE_THRIFT_ACCESSOR_is_oneway 
#define _mm_max_round_sd(A,B,C) (__m128d)__builtin_ia32_maxsd_round(A, B, C)
#define _mm_max_round_ss(A,B,C) (__m128)__builtin_ia32_maxss_round(A, B, C)
#define OPENSSL_INIT_NO_ADD_ALL_CIPHERS 0x00000010L
#define BN_F_BN_CTX_START 129
#define _SIDD_UWORD_OPS 0x01
#define SSL_R_X509_LIB 268
#define SSL_MAC_FLAG_WRITE_MAC_STREAM 2
#define SN_id_pda "id-pda"
#define __F_SETOWN 8
#define PRIX32 "X"
#define LN_Experimental "Experimental"
#define BOOST_MPL_SIZE_T_HPP_INCLUDED 
#define __SEG_FS 1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_82(p,o,s) 0
#define OBJ_ms_sgc 1L,3L,6L,1L,4L,1L,311L,10L,3L,3L
#define LN_pkcs9_contentType "contentType"
#define BOOST_TEMPLATED_STREAM_ARGS(E,T) typename E , typename T
#define APACHE_THRIFT_ACCESSOR_setupResponse 
#define BIO_C_SET_FD 104
#define _X509_CHECK_FLAG_DOT_SUBDOMAINS 0x8000
#define EVENT__HAVE_POLL_H 1
#define EVENT__HAVE_UNSETENV 1
#define _GLIBCXX_MANGLE_SIZE_T m
#define __SEG_GS 1
#define SSL_CB_HANDSHAKE_DONE 0x20
#define NID_id_it_implicitConfirm 310
#define SCNuLEAST8 "hhu"
#define TLS1_RFC_PSK_WITH_AES_256_GCM_SHA384 "TLS_PSK_WITH_AES_256_GCM_SHA384"
#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000001 (0)(1)(0)(0)(0)(0)(0)(1),
#define NID_set_brand_IATA_ATA 636
#define BOOST_PP_IS_EMPTY_FUNCTION(...) BOOST_PP_IS_EMPTY_FUNCTION2(__VA_ARGS__)
#define htole16(x) __uint16_identity (x)
#define __INT16_TYPE__ short int
#define OBJ_sha512 OBJ_nist_hashalgs,3L
#define NID_id_tc26_cipher_constants 1001
#define TLS1_RFC_DHE_PSK_WITH_NULL_SHA "TLS_DHE_PSK_WITH_NULL_SHA"
#define BOOST_MPL_FRONT_FWD_HPP_INCLUDED 
#define PRIX64 __PRI64_PREFIX "X"
#define BOOST_PP_SEQ_ELEM_208(_) BOOST_PP_SEQ_ELEM_207
#define SN_camellia_128_cbc "CAMELLIA-128-CBC"
#define TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA 0x0300C035
#define TLSEXT_hash_sha1 2
#define X509V3_F_V2I_ISSUER_ALT 153
#define BOOST_TT_BROKEN_COMPILER_SPEC(x) 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_149(op,st,ss,sz) 0
#define BIO_F_BIO_NEW 108
#define SN_aria_128_cfb8 "ARIA-128-CFB8"
#define EVP_PKEY_CTX_set_ec_paramgen_curve_nid(ctx,nid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_PARAMGEN|EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID, nid, NULL)
#define PEM_F_DO_I2B 146
#define SN_dmdName "dmdName"
#define __F_GETOWN_EX 16
#define SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1 205
#define EVENT__HAVE_GETRANDOM 1
#define htole32(x) __uint32_identity (x)
#define _POSIX_FSYNC 200809L
#define _mm256_mask_i64scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4di ((void *) (ADDR), (__mmask8) (MASK), (__v4di)(__m256i) (INDEX), (__v4di)(__m256i) (V1), (int) (SCALE))
#define ossl_noreturn __attribute__((noreturn))
#define SN_camellia_128_ccm "CAMELLIA-128-CCM"
#define STA_FREQHOLD 0x0080
#define F_WRLCK 1
#define STATX_ATTR_COMPRESSED 0x00000004
#define BOOST_PP_INTERCEPT_102 
#define EAI_MEMORY -10
#define ossl_ssize_t ssize_t
#define OBJ_id_GostR3411_94_with_GostR3410_2001_cc OBJ_cryptocom,1L,3L,4L
#define PEM_STRING_X509_CRL "X509 CRL"
#define _mm256_mask_shufflehi_epi16(W,U,A,B) ((__m256i) __builtin_ia32_pshufhw256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)(__m256i)(W), (__mmask16)(U)))
#define LOG_TO_SINK_BUT_NOT_TO_LOGFILE(sink,severity) google::LogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, static_cast<google::LogSink*>(sink), false).stream()
#define TLS1_AD_NO_APPLICATION_PROTOCOL 120
#define EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN (EVP_PKEY_ALG_CTRL + 1)
#define FS_EA_INODE_FL 0x00200000
#define RSA_R_MODULUS_TOO_LARGE 105
#define BOOST_PP_INTERCEPT_106 
#define _mm512_fmadd_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, C, -1, R)
#define X509_V_ERR_CRL_SIGNATURE_FAILURE 8
#define BOOST_PP_INTERCEPT_108 
#define _mm512_fmadd_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(A, B, C, -1, R)
#define EVP_F_EVP_PKEY_ENCRYPT 105
#define EC_F_EC_POINT_INVERT 210
#define CONF_R_SSL_SECTION_NOT_FOUND 120
#define FOLLY_HAS_STRING_VIEW 1
#define SSL_F_CT_STRICT 349
#define ____FILE_defined 1
#define BOOST_PP_LIST_FOLD_RIGHT_221(o,s,l) BOOST_PP_LIST_FOLD_LEFT_221(o, s, BOOST_PP_LIST_REVERSE_D(221, l))
#define BOOST_PP_INC_165 166
#define EVENT__HAVE_TIMERFD_CREATE 1
#define htole64(x) __uint64_identity (x)
#define BOOST_PP_ITERATION_FLAGS() (BOOST_PP_CAT(BOOST_PP_ITERATION_FLAGS_, BOOST_PP_ITERATION_DEPTH())())
#define BOOST_PP_SEQ_FOLD_LEFT_171(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_171(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_I_182(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_183, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(183, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SA_INTERRUPT 0x20000000
#define BIO_C_SET_MD 111
#define BOOST_PP_DETAIL_IS_EMPTY_PRIMITIVE_CAT(a,b) a ## b
#define BOOST_HAS_TRIVIAL_ASSIGN(T) ((__has_trivial_assign(T) BOOST_INTEL_TT_OPTS) && ! ::boost::is_volatile<T>::value && ! ::boost::is_const<T>::value && is_assignable<T&, const T&>::value)
#define SSL_TICKET_RETURN_ABORT 0
#define BOOST_PP_INC_169 170
#define NID_ripemd160 117
#define BOOST_TT_ALIGNED_STORAGE_HPP 
#define SSL_get_min_proto_version(s) SSL_ctrl(s, SSL_CTRL_GET_MIN_PROTO_VERSION, 0, NULL)
#define BOOST_PP_SLOT_TEMP_2 1
#define BOOST_PP_SLOT_TEMP_3 0
#define BOOST_PP_SLOT_TEMP_4 0
#define BOOST_PP_SLOT_TEMP_5 0
#define SSL_F_TLS_PARSE_CTOS_RENEGOTIATE 464
#define BOOST_PP_SLOT_TEMP_8 0
#define OPENSSL_NO_WEAK_SSL_CIPHERS 
#define SSL_R_TLSV1_UNSUPPORTED_EXTENSION 1110
#define BOOST_PP_WHILE_149_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_150, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(150, s))
#define EVP_CIPH_CUSTOM_IV_LENGTH 0x800
#define BOOST_PP_LIST_FOLD_RIGHT_225(o,s,l) BOOST_PP_LIST_FOLD_LEFT_225(o, s, BOOST_PP_LIST_REVERSE_D(225, l))
#define BOOST_PP_SEQ_SIZE_228(_) BOOST_PP_SEQ_SIZE_229
#define SN_aes_256_ecb "AES-256-ECB"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000010 (0)(0)(0)(0)(0)(1)(0),
#define BOOST_PP_SEQ_FOLD_LEFT_175(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_175(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm_ceil_ss(D,V) _mm_round_ss ((D), (V), _MM_FROUND_CEIL)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000011 (0)(0)(0)(0)(0)(1)(1),
#define BOOST_MAY_ALIAS __attribute__((__may_alias__))
#define BOOST_PP_SEQ_FOLD_LEFT_I_187(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_188, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(188, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_sha512_224 "sha512-224"
#define SSLeay OpenSSL_version_num
#define PEM_R_NOT_DEK_INFO 105
#define _mm_maskz_shuffle_pd(U,A,B,C) ((__m128d)__builtin_ia32_shufpd128_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)_mm_setzero_pd (), (__mmask8)(U)))
#define _mm_maskz_shuffle_ps(U,A,B,C) ((__m128) __builtin_ia32_shufps128_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)(U)))
#define SSL_TLSEXT_ERR_ALERT_FATAL 2
#define PKCS7_NOINTERN 0x10
#define NID_id_tc26_signwithdigest_gost3410_2012_256 985
#define _GLIBCXX_DARWIN_USE_64_BIT_INODE 1
#define PEM_F_DO_PVK_HEADER 136
#define BOOST_PP_LIST_FOLD_RIGHT_229(o,s,l) BOOST_PP_LIST_FOLD_LEFT_229(o, s, BOOST_PP_LIST_REVERSE_D(229, l))
#define _RANDOM_TCC 1
#define OBJ_aria_192_cfb128 OBJ_aria,8L
#define IOCSIZE_SHIFT (_IOC_SIZESHIFT)
#define __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
#define LOG_STRING(severity,outvec) LOG_TO_STRING_ ##severity(static_cast<std::vector<std::string>*>(outvec)).stream()
#define FS_XFLAG_RTINHERIT 0x00000100
#define NID_aria_128_cfb128 1067
#define SN_id_ppl "id-ppl"
#define _mm_mmask_i64gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128d) __builtin_ia32_gather3div2df ((__v2df)(__m128d) (V1OLD), (void const *) (ADDR), (__v2di)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define NID_associatedDomain 484
#define IPPROTO_MPLS IPPROTO_MPLS
#define BOOST_PP_FOR_201(s,p,o,m) BOOST_PP_FOR_201_C(BOOST_PP_BOOL(p(202, s)), s, p, o, m)
#define BOOST_PP_TUPLE_EAT_38(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37) 
#define NID_pkcs7_encrypted 26
#define _mm_mmask_i64gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128) __builtin_ia32_gather3div4sf ((__v4sf)(__m128) (V1OLD), (void const *) (ADDR), (__v2di)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SSL_CONF_TYPE_UNKNOWN 0x0
#define TLS1_CK_RSA_WITH_AES_256_GCM_SHA384 0x0300009D
#define OBJ_rsadsi OBJ_ISO_US,113549L
#define CHECK_INDEX(I,A) CHECK(I < (sizeof(A)/sizeof(A[0])))
#define BOOST_PP_FOR_202(s,p,o,m) BOOST_PP_FOR_202_C(BOOST_PP_BOOL(p(203, s)), s, p, o, m)
#define EVENT__HAVE_STRUCT_ADDRINFO 1
#define BOOST_PP_FOR_203(s,p,o,m) BOOST_PP_FOR_203_C(BOOST_PP_BOOL(p(204, s)), s, p, o, m)
#define _SC_AIO_LISTIO_MAX _SC_AIO_LISTIO_MAX
#define SN_set_certExt "set-certExt"
#define _SC_BC_BASE_MAX _SC_BC_BASE_MAX
#define _PCONFIGINTRIN_H_INCLUDED 
#define SSL_F_TLS_CONSTRUCT_STOC_MAXFRAGMENTLEN 548
#define le64toh(x) __uint64_identity (x)
#define BOOST_PP_ENUM_PARAMS_Z(z,count,param) BOOST_PP_REPEAT_ ## z(count, BOOST_PP_ENUM_PARAMS_M, param)
#define LN_sha512_256 "sha512-256"
#define UDP_ENCAP_ESPINUDP_NON_IKE 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110000 (1)(0)(1)(1)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110001 (1)(0)(1)(1)(0)(0)(0)(1),
#define FS_RESERVED_FL 0x80000000
#define BOOST_MPL_PP_DEF_PARAMS_TAIL(i,param,value) BOOST_MPL_PP_DEF_PARAMS_TAIL_IMPL(i, param, BOOST_PP_IDENTITY(=value))
#define FIZZ_OPENSSL_HAS_ED25519 (OPENSSL_VERSION_NUMBER >= 0x10101000L)
#define SSL_CTX_set_max_pipelines(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_MAX_PIPELINES,m,NULL)
#define BOOST_PP_FOR_147_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(148, s) BOOST_PP_IIF(c, BOOST_PP_FOR_148, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(148, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_172(op,st,ss,sz) 0
#define ESOCKTNOSUPPORT 94
#define NID_ieee_siswg 1171
#define _POSIX_TIMER_MAX 32
#define FOLLY_RANDOM_H_ 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110010 (1)(0)(1)(1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110011 (1)(0)(1)(1)(0)(0)(1)(1),
#define OBJ_id_qcs OBJ_id_pkix,11L
#define SN_rfc822Mailbox "mail"
#define PEM_F_PEM_X509_INFO_WRITE_BIO 117
#define OBJ_set_brand_JCB OBJ_set_brand,35L
#define CT_F_SCT_NEW 100
#define BOOST_PP_SEQ_ELEM_70(_) BOOST_PP_SEQ_ELEM_69
#define SHA_LBLOCK 16
#define EVP_MD_nid(e) EVP_MD_type(e)
#define OBJ_setAttr_GenCryptgrm OBJ_setAttr_IssCap_CVM,1L
#define BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED 
#define NID_pilotGroups 441
#define BOOST_PP_SEQ_ELEM_73(_) BOOST_PP_SEQ_ELEM_72
#define CT_R_LOG_KEY_INVALID 113
#define XN_FLAG_DN_REV (1 << 20)
#define PEM_F_DO_BLOB_HEADER 134
#define FITRIM _IOWR('X', 121, struct fstrim_range)
#define UINT64_2PART_C(a,b) (((static_cast<uint64_t>(a) << 32) + 0x ##b ##u))
#define BOOST_PP_WHILE_250_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_251, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(251, s))
#define __S_IFLNK 0120000
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_177(op,st,ss,sz) 0
#define _GLIBCXX_HAVE_SOCKATMARK 1
#define NID_netscape_cert_sequence 79
#define BN_R_P_IS_NOT_PRIME 112
#define SSL_EXT_SSL3_ALLOWED 0x0008
#define _GLIBCXX_CSTDARG 1
#define __cpp_nontype_template_parameter_class 201806L
#define BOOST_PP_SEQ_ELEM_78(_) BOOST_PP_SEQ_ELEM_77
#define __SI_PAD_SIZE ((__SI_MAX_SIZE / sizeof (int)) - 4)
#define EVP_CIPH_FLAG_NON_FIPS_ALLOW 0x8000
#define SHA512_DIGEST_LENGTH 64
#define BOOST_PP_SEQ_SIZE_10(_) BOOST_PP_SEQ_SIZE_11
#define JEMALLOC_VERSION_MINOR 2
#define LN_mdc2 "mdc2"
#define __O_TMPFILE (020000000 | __O_DIRECTORY)
#define SSL_R_UNSOLICITED_EXTENSION 217
#define _mm256_cmp_epu64_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(P), (__mmask8)-1))
#define BOOST_MPL_BOOL_FWD_HPP_INCLUDED 
#define INT_LEAST16_WIDTH 16
#define EVP_cleanup() while(0) continue
#define OBJ_pilotAttributeType OBJ_pilot,1L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100101 (0)(1)(1)(0)(0)(1)(0)(1),
#define LN_ms_efs "Microsoft Encrypted File System"
#define TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA256 "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256"
#define OBJ_sect283r1 OBJ_secg_ellipticCurve,17L
#define FOLLY_HAVE_VLA 1
#define SO_PEEK_OFF 42
#define BOOST_PP_SEQ_ELEM_232(_) BOOST_PP_SEQ_ELEM_231
#define APACHE_THRIFT_ACCESSOR_interactionTerminate 
#define OBJ_secretary OBJ_pilotAttributeType,21L
#define TLS1_RFC_ADH_WITH_SEED_SHA "TLS_DH_anon_WITH_SEED_CBC_SHA"
#define TLS1_TXT_DHE_PSK_WITH_AES_256_GCM_SHA384 "DHE-PSK-AES256-GCM-SHA384"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100110 (0)(1)(1)(0)(0)(1)(1)(0),
#define ERR_R_MALLOC_FAILURE (1|ERR_R_FATAL)
#define SN_name "name"
#define MAP_SHARED 0x01
#define SN_zlib_compression "ZLIB"
#define __CODEGEARC___WORKAROUND_GUARD 1
#define WNOWAIT 0x01000000
#define _mm512_maskz_shuffle_epi32(U,X,C) ((__m512i) __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))
#define BOOST_MPL_AUX_NESTED_TYPE_WKND_HPP_INCLUDED 
#define _mm_mul_round_sd(A,B,C) (__m128d)__builtin_ia32_mulsd_round(A, B, C)
#define _PSTL_UDS_PRESENT 1
#define SN_id_smime_alg_CMS3DESwrap "id-smime-alg-CMS3DESwrap"
#define _mm_mul_round_ss(A,B,C) (__m128)__builtin_ia32_mulss_round(A, B, C)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010111 (0)(0)(1)(0)(1)(1)(1),
#define SSL_F_TLS_CONSTRUCT_STOC_ETM 455
#define BOOST_PP_WHILE_45_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_46, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(46, s))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111000 (0)(1)(1)(1)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111001 (0)(1)(1)(1)(1)(0)(0)(1),
#define B_ASN1_NUMERICSTRING 0x0001
#define OBJ_setct_CapResData OBJ_set_ctype,28L
#define __amd64__ 1
#define OPENSSL_ENGINES_DIR 5
#define _mm512_gf2p8affine_epi64_epi8(A,B,C) ((__m512i) __builtin_ia32_vgf2p8affineqb_v64qi ((__v64qi)(__m512i)(A), (__v64qi)(__m512i)(B), (int)(C)))
#define EVP_PKEY_CTRL_DH_NID (EVP_PKEY_ALG_CTRL + 15)
#define FOLLY_DISABLE_MEMORY_SANITIZER 
#define SCNoFAST16 __PRIPTR_PREFIX "o"
#define BOOST_PP_FOR_220_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(221, s) BOOST_PP_IIF(c, BOOST_PP_FOR_221, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(221, s), p, o, m)
#define _mm512_cmp_epi16_mask(X,Y,P) ((__mmask32) __builtin_ia32_cmpw512_mask ((__v32hi)(__m512i)(X), (__v32hi)(__m512i)(Y), (int)(P), (__mmask32)(-1)))
#define LN_id_Gost28147_89_MAC "GOST 28147-89 MAC"
#define T_DEBUG_L(level,format_string,...) do { if (T_GLOBAL_DEBUGGING_LEVEL > (level)) { COMPUTE_TIME fprintf( stderr, "[%s,%d] [%s, %d ms] " format_string " \n", __FILE__, __LINE__, dbgtime, ms, ##__VA_ARGS__); } } while (0)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100100 (1)(0)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111010 (0)(1)(1)(1)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111011 (0)(1)(1)(1)(1)(0)(1)(1),
#define IPPROTO_FRAGMENT IPPROTO_FRAGMENT
#define _mm512_maskz_getexp_round_pd(U,A,R) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), R))
#define LN_des_ede3_ofb64 "des-ede3-ofb"
#define _mm512_maskz_getexp_round_ps(U,A,R) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), R))
#define ASN1_PKEY_ALIAS 0x1
#define PRIXMAX __PRI64_PREFIX "X"
#define SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA_INFO 525
#define X509_F_NETSCAPE_SPKI_B64_DECODE 129
#define SSL_CTX_get_tlsext_status_arg(ssl,arg) SSL_CTX_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB_ARG,0,arg)
#define CRYPTO_F_FIPS_MODE_SET 109
#define OBJ_id_pkix_OCSP_CrlID OBJ_id_pkix_OCSP,3L
#define SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE 490
#define BOOST_PP_INTERCEPT_113 
#define M_PIf128 __f128 (3.141592653589793238462643383279502884)
#define SCNoFAST32 __PRIPTR_PREFIX "o"
#define LN_setext_genCrypt "generic cryptogram"
#define NID_dstu28147_cfb 1154
#define SSL_F_SSL_CHECK_SRP_EXT_CLIENTHELLO 606
#define BOOST_PP_INTERCEPT_115 
#define SN_id_GostR3410_94_CryptoPro_XchB_ParamSet "id-GostR3410-94-CryptoPro-XchB-ParamSet"
#define SYNC_FILE_RANGE_WRITE 2
#define SYNCHRONIZED_CONST(...) SYNCHRONIZED( FB_VA_GLUE(FB_ARG_1, (__VA_ARGS__)), as_const(FB_VA_GLUE(FB_ARG_2_OR_1, (__VA_ARGS__))))
#define _mm512_maskz_shufflehi_epi16(U,A,B) ((__m512i) __builtin_ia32_pshufhw512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i) _mm512_setzero_si512 (), (__mmask32)(U)))
#define OBJ_pkcs9_countersignature OBJ_pkcs9,6L
#define BOOST_PP_INTERCEPT_119 
#define SSL_R_UNEXPECTED_RECORD 245
#define __gthrw(name) __gthrw2(__gthrw_ ## name,name,name)
#define SSL_TICKET_RETURN_USE_RENEW 4
#define _mm512_maskz_inserti32x4(A,X,Y,C) ((__m512i) __builtin_ia32_inserti32x4_mask ((__v16si)(__m512i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v16si)_mm512_setzero_si512 (), (__mmask16)(A)))
#define _mm512_maskz_inserti32x8(U,X,Y,C) ((__m512i) __builtin_ia32_inserti32x8_mask ((__v16si)(__m512i) (X), (__v8si)(__m256i) (Y), (int) (C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))
#define __ptr_t void *
#define _GLIBCXX17_INLINE inline
#define __TIMER_T_TYPE void *
#define TLS1_RFC_ECDHE_PSK_WITH_RC4_128_SHA "TLS_ECDHE_PSK_WITH_RC4_128_SHA"
#define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_CXX11
#define _POSIX_REALTIME_SIGNALS 200809L
#define __enclu_generic(leaf,b,c,d,retval) __asm__ __volatile__("enclu\n\t" : "=a" (retval), "=b" (b), "=c" (c), "=d" (d) : "a" (leaf), "b" (b), "c" (c), "d" (d) : "cc")
#define _POSIX_V6_LP64_OFF64 1
#define BOOST_PP_VARIADIC_ELEM_50(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,...) e50
#define ASN1_F_PKCS5_PBE2_SET_IV 167
#define BOOST_PP_VARIADIC_ELEM_51(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,...) e51
#define SCNoFAST64 __PRI64_PREFIX "o"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_85(op,st,ss,sz) 0
#define __SIZEOF_FLOAT128__ 16
#define _GLIBCXX_TR1_HYPERGEOMETRIC_TCC 1
#define _GLIBCXX_DEBUG_PEDASSERT(_Condition) 
#define BOOST_PP_FOR_71_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(72, s) BOOST_PP_IIF(c, BOOST_PP_FOR_72, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(72, s), p, o, m)
#define UINT_FAST64_MAX (__UINT64_C(18446744073709551615))
#define AF_ATMPVC PF_ATMPVC
#define LC_CTYPE __LC_CTYPE
#define BOOST_PP_ENUM_M_3_IM(z,n,im) BOOST_PP_ENUM_M_3_I(z, n, im)
#define BOOST_PP_DEC_148 147
#define ADJ_OFFSET_SS_READ 0xa001
#define X509_PURPOSE_NS_SSL_SERVER 3
#define BOOST_PP_VARIADIC_ELEM_55(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,...) e55
#define OBJ_pkcs7_signed OBJ_pkcs7,2L
#define BOOST_PP_DEC_149 148
#define SSLerr(f,r) ERR_PUT_error(ERR_LIB_SSL,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define _mm512_mask_cvtps_ph(U,W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I), (__v16hi)(__m256i)(U), (__mmask16) (W)))
#define ILL_PRVOPC ILL_PRVOPC
#define PEM_F_GET_HEADER_AND_DATA 143
#define IPV6_ORIGDSTADDR 74
#define LN_id_GostR3410_2001DH "GOST R 34.10-2001 DH"
#define RSA_F_RSA_NULL 124
#define BOOST_FUNCTIONAL_HASH_EXTENSIONS_HPP 
#define EC_F_ECP_NISTZ256_POINTS_MUL 241
#define BOOST_PP_LIST_NIL BOOST_PP_NIL
#define BOOST_PP_VARIADIC_ELEM_58(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,...) e58
#define SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT 277
#define IORING_SETUP_SQPOLL (1U << 1)
#define ub_organization_unit_name 64
#define BOOST_PP_NODE_40(p) BOOST_PP_IIF(p(40), BOOST_PP_NODE_36, BOOST_PP_NODE_44)
#define _mm512_maskz_cvt_roundepi64_pd(U,A,B) ((__m512d)__builtin_ia32_cvtqq2pd512_mask ((__v8di)(A), (__v8df)_mm512_setzero_pd (), (U), (B)))
#define X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD 16
#define _MM_CMPINT_NLT 0x5
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_148 148
#define SN_id_regCtrl "id-regCtrl"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_21(op,st,ss,sz) 0
#define NID_sha224WithRSAEncryption 671
#define TLS1_CK_ADH_WITH_AES_256_SHA 0x0300003A
#define BOOST_PP_NODE_43(p) BOOST_PP_IIF(p(43), 43, 44)
#define BOOST_PP_NODE_44(p) BOOST_PP_IIF(p(44), BOOST_PP_NODE_42, BOOST_PP_NODE_46)
#define EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES 226
#define __WINT_WIDTH__ 32
#define NID_md4WithRSAEncryption 396
#define SIGPIPE 13
#define NID_userPassword 879
#define SN_dstu4145be "dstu4145be"
#define RSA_R_P_NOT_PRIME 128
#define BOOST_MPL_LIST_LIST0_HPP_INCLUDED 
#define BOOST_PP_NODE_48(p) BOOST_PP_IIF(p(48), BOOST_PP_NODE_40, BOOST_PP_NODE_56)
#define X509_V_ERR_PATH_LENGTH_EXCEEDED 25
#define SSL_EXT_TLS1_3_ENCRYPTED_EXTENSIONS 0x0400
#define STATX__RESERVED 0x80000000U
#define CPU_SET_S(cpu,setsize,cpusetp) __CPU_SET_S (cpu, setsize, cpusetp)
#define _mm_div_round_sd(A,B,C) (__m128d)__builtin_ia32_divsd_round(A, B, C)
#define _mm_div_round_ss(A,B,C) (__m128)__builtin_ia32_divss_round(A, B, C)
#define FMT_USE_NOEXCEPT 0
#define __cpp_lib_launder 201606
#define NID_x509ExtAdmission 1093
#define FOLLY_USE_JEMALLOC 1
#define TCP_FASTOPEN 23
#define SN_dsa_with_SHA512 "id-dsa-with-sha512"
#define BOOST_PP_REPEAT_2_186(m,d) BOOST_PP_REPEAT_2_185(m, d) m(3, 185, d)
#define OBJ_id_pkix1_implicit_88 OBJ_id_pkix_mod,2L
#define CPU_ISSET_S(cpu,setsize,cpusetp) __CPU_ISSET_S (cpu, setsize, cpusetp)
#define TLS1_3_CK_AES_128_CCM_8_SHA256 0x03001305
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_27(op,st,ss,sz) 0
#define SN_camellia_192_cbc "CAMELLIA-192-CBC"
#define BOOST_PP_FOR_218(s,p,o,m) BOOST_PP_FOR_218_C(BOOST_PP_BOOL(p(219, s)), s, p, o, m)
#define IP_PMTUDISC 10
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_28(op,st,ss,sz) 0
#define SSL_CTX_get_read_ahead(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_READ_AHEAD,0,NULL)
#define BOOST_PP_FOR_104_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(105, s) BOOST_PP_IIF(c, BOOST_PP_FOR_105, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(105, s), p, o, m)
#define CT_R_UNRECOGNIZED_SIGNATURE_NID 101
#define OBJ_id_pkix1_implicit_93 OBJ_id_pkix_mod,4L
#define RWH_WRITE_LIFE_NONE 1
#define SN_hold_instruction_reject "holdInstructionReject"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_29(op,st,ss,sz) 0
#define NID_domainRelatedObject 452
#define BOOST_PP_SEQ_ELEM_80(_) BOOST_PP_SEQ_ELEM_79
#define LN_pkcs "RSA Data Security, Inc. PKCS"
#define SN_camellia_192_ccm "CAMELLIA-192-CCM"
#define BIO_F_BIO_CONNECT 138
#define TH_FIN 0x01
#define _SC_USER_GROUPS _SC_USER_GROUPS
#define HEADER_OBJERR_H 
#define SSL_F_TLS_CONSTRUCT_STOC_COOKIE 613
#define MCAST_INCLUDE 1
#define IPV6_DROP_MEMBERSHIP IPV6_LEAVE_GROUP
#define IORING_SETUP_IOPOLL (1U << 0)
#define BOOST_PP_FOR_178_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(179, s) BOOST_PP_IIF(c, BOOST_PP_FOR_179, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(179, s), p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101100 (0)(0)(1)(0)(1)(1)(0)(0),
#define NID_id_camellia128_wrap 907
#define NID_dstu34311 1157
#define _MM_DENORMALS_ZERO_ON 0x0040
#define __cookie_io_functions_t_defined 1
#define BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME(args,n) BOOST_PP_CAT(BOOST_PP_CAT(BOOST_PP_ARRAY_ELEM(0, args) , _substitute), n)
#define _GLIBCXX_HAVE_SYS_STAT_H 1
#define EC_F_OSSL_ECDSA_SIGN_SIG 249
#define _mm512_inserti32x8(X,Y,C) ((__m512i) __builtin_ia32_inserti32x8_mask ((__v16si)(__m512i) (X), (__v8si)(__m256i) (Y), (int) (C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)-1))
#define BOOST_PP_WHILE_80_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_81, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(81, s))
#define BOOST_DETAIL_IS_NULLARY_ARGS_R_1 1, BOOST_PP_NIL
#define SSL_F_TLS_PROCESS_ENCRYPTED_EXTENSIONS 444
#define BOOST_PP_WHILE_116_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_117, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(117, s))
#define DH_R_PEER_KEY_ERROR 111
#define LN_SNMPv2 "SNMPv2"
#define OBJ_hmacWithMD5 OBJ_rsadsi,2L,6L
#define GEN_DNS 2
#define BOOST_PP_WHILE_75(p,o,s) BOOST_PP_WHILE_75_C(BOOST_PP_BOOL(p(76, s)), p, o, s)
#define X509V3_R_EXTENSION_NOT_FOUND 102
#define SN_setct_CertResData "setct-CertResData"
#define __UINT64_TYPE__ long unsigned int
#define NID_SMIMECapabilities 167
#define SSL_F_TLS13_HKDF_EXPAND 561
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_200 200
#define SN_secp112r1 "secp112r1"
#define NO_DATA 4
#define TLS1_TXT_SRP_SHA_DSS_WITH_AES_128_CBC_SHA "SRP-DSS-AES-128-CBC-SHA"
#define SSL_F_SSL_KEY_UPDATE 515
#define EVP_PKEY_CTX_set_rsa_oaep_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_RSA_OAEP_MD, 0, (void *)(md))
#define EC_F_EC_KEY_PRINT 180
#define _mm256_ror_epi32(A,B) ((__m256i)__builtin_ia32_prord256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define BOOST_PP_REPEAT_2_95(m,d) BOOST_PP_REPEAT_2_94(m, d) m(3, 94, d)
#define _mm_maskz_roundscale_ps(U,A,B) ((__m128) __builtin_ia32_rndscaleps_128_mask ((__v4sf)(__m128)(A), (int)(B), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)(U)))
#define BOOST_MPL_ARG_FWD_HPP_INCLUDED 
#define OBJ_organizationalUnitName OBJ_X509,11L
#define SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1 172
#define SN_id_smime_aa_ets_archiveTimeStamp "id-smime-aa-ets-archiveTimeStamp"
#define _GLIBCXX_READ_MEM_BARRIER __atomic_thread_fence (__ATOMIC_ACQUIRE)
#define __PRI64_PREFIX "l"
#define _mm512_mask_srai_epi32(W,U,X,C) ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define _SC_LONG_BIT _SC_LONG_BIT
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000 (0)(0)(0),
#define SN_ad_ca_issuers "caIssuers"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_207 207
#define NID_ripemd160WithRSA 119
#define BOOST_PP_WHILE_96_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_97, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(97, s))
#define SSL_CTRL_SET_CLIENT_SIGALGS_LIST 102
#define _POSIX_MAPPED_FILES 200809L
#define SSL_OP_ENABLE_MIDDLEBOX_COMPAT 0x00100000U
#define IPV6_RXHOPOPTS IPV6_HOPOPTS
#define OBJ_mime_mhs OBJ_Mail,1L
#define _mm512_fmaddsub_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, C, -1, R)
#define _mm512_fmaddsub_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, C, -1, R)
#define BOOST_FWD_REF(TYPE) TYPE &&
#define MSG_MORE MSG_MORE
#define ASN1_F_I2D_PRIVATEKEY 163
#define SSL_CTRL_SET_MSG_CALLBACK_ARG 16
#define BOOST_PP_LIST_FOR_EACH_I_P_D(m,d,l,i) BOOST_PP_LIST_IS_CONS(l)
#define SSL_F_TLS_CONSTRUCT_CKE_PSK_PREAMBLE 407
#define OPENSSL_RSA_MAX_MODULUS_BITS 16384
#define _SC_MAPPED_FILES _SC_MAPPED_FILES
#define _mm_maskz_getmant_pd(U,X,B,C) ((__m128d) __builtin_ia32_getmantpd128_mask ((__v2df)(__m128d) (X), (int)(((C)<<2) | (B)), (__v2df)(__m128d)_mm_setzero_pd (), (__mmask8)(U)))
#define BOOST_PLATFORM_CONFIG "boost/config/platform/linux.hpp"
#define TLS1_RFC_ECDHE_PSK_WITH_CHACHA20_POLY1305 "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256"
#define BOOST_PP_REPEAT_3_19(m,d) BOOST_PP_REPEAT_3_18(m, d) m(4, 18, d)
#define PRIiMAX __PRI64_PREFIX "i"
#define BOOST_PP_INTERCEPT_0 
#define BOOST_PP_INTERCEPT_1 
#define BOOST_PP_INTERCEPT_2 
#define BOOST_PP_INTERCEPT_3 
#define BOOST_PP_INTERCEPT_4 
#define _mm256_ror_epi64(A,B) ((__m256i)__builtin_ia32_prorq256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define BOOST_PP_INTERCEPT_9 
#define FIZZ_PARAM(F,...) F(ClientHello, __VA_ARGS__) F(ServerHello, __VA_ARGS__) F(EndOfEarlyData, __VA_ARGS__) F(HelloRetryRequest, __VA_ARGS__) F(EncryptedExtensions, __VA_ARGS__) F(CertificateRequest, __VA_ARGS__) F(CompressedCertificate, __VA_ARGS__) F(CertificateMsg, __VA_ARGS__) F(CertificateVerify, __VA_ARGS__) F(Finished, __VA_ARGS__) F(NewSessionTicket, __VA_ARGS__) F(KeyUpdate, __VA_ARGS__) F(Alert, __VA_ARGS__) F(CloseNotify, __VA_ARGS__) F(Accept, __VA_ARGS__) F(Connect, __VA_ARGS__) F(AppData, __VA_ARGS__) F(AppWrite, __VA_ARGS__) F(EarlyAppWrite, __VA_ARGS__) F(WriteNewSessionTicket, __VA_ARGS__)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_201 201
#define BOOST_PP_FOR_CHECK_BOOST_PP_NIL 1
#define BOOST_TYPE_INDEX_HPP 
#define SN_dstu4145le "dstu4145le"
#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
#define __DECL_SIMD_cosf64x 
#define M_Ef32 __f32 (2.718281828459045235360287471352662498)
#define _mm512_mask_srai_epi64(W,U,X,C) ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define LN_pbe_WithSHA1And40BitRC2_CBC "pbeWithSHA1And40BitRC2-CBC"
#define SO_EE_ORIGIN_TIMESTAMPING SO_EE_ORIGIN_TXSTATUS
#define X509V3_F_COPY_ISSUER 123
#define BOOST_INTRUSIVE_LIST_NODE_HPP 
#define CLD_TRAPPED CLD_TRAPPED
#define BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN namespace mpl_ {
#define _POSIX_THREAD_ROBUST_PRIO_PROTECT -1
#define SN_camellia_128_ofb128 "CAMELLIA-128-OFB"
#define NID_userCertificate 880
#define SSL_SESS_CACHE_NO_INTERNAL_LOOKUP 0x0100
#define PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_JOINABLE
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_212(p,o,s) 0
#define _IOC_DIR(nr) (((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)
#define BOOST_PP_INTERCEPT_125 
#define S_IFLNK __S_IFLNK
#define SOL_IRDA 266
#define ASN1_F_ASN1_ITEM_VERIFY 197
#define _mm256_mask_i32gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m256) __builtin_ia32_gathersiv8sf ((__v8sf)(__m256) (SRC), (float const *) (BASE), (__v8si)(__m256i) (INDEX), (__v8sf)(__m256) (MASK), (int) (SCALE))
#define BOOST_PP_INTERCEPT_126 
#define __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))
#define _MM_FLUSH_ZERO_ON 0x8000
#define _mm512_cmp_epu8_mask(X,Y,P) ((__mmask64) __builtin_ia32_ucmpb512_mask ((__v64qi)(__m512i)(X), (__v64qi)(__m512i)(Y), (int)(P), (__mmask64)(-1)))
#define OPENSSL_NO_SSL2 
#define BOOST_PP_LIST_FOLD_RIGHT_232(o,s,l) BOOST_PP_LIST_FOLD_LEFT_232(o, s, BOOST_PP_LIST_REVERSE_D(232, l))
#define NID_secp224k1 712
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_223(op,st,ss,sz) 0
#define SSL_F_SSL3_READ_N 149
#define INADDR_LOOPBACK ((in_addr_t) 0x7f000001)
#define __kernel_old_dev_t __kernel_old_dev_t
#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111101 (1)(1)(1)(1)(1)(1)(0)(1),
#define X509_F_X509_NAME_ENTRY_CREATE_BY_TXT 131
#define ILL_PRVREG ILL_PRVREG
#define NID_id_GostR3410_2012_256 979
#define BOOST_MPL_LIST_LIST20_HPP_INCLUDED 
#define _mm_maskz_getmant_ps(U,X,B,C) ((__m128) __builtin_ia32_getmantps128_mask ((__v4sf)(__m128) (X), (int)(((C)<<2) | (B)), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)(U)))
#define EV_INT16_MIN INT16_MIN
#define M_Ef64 __f64 (2.718281828459045235360287471352662498)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_224(op,st,ss,sz) 0
#define BOOST_PP_DEC_152 151
#define EVENT__HAVE_PIPE2 1
#define CONF_modules_free() while(0) continue
#define APACHE_THRIFT_ACCESSOR_clientMetadata 
#define BOOST_PP_INC_188 189
#define CERT_PKEY_SUITEB 0x800
#define __DEC_EVAL_METHOD__ 2
#define ECONNABORTED 103
#define BOOST_NOEXCEPT_OR_NOTHROW noexcept
#define ENOANO 55
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111111 (1)(1)(1)(1)(1)(1)(1)(1),
#define BOOST_PP_VARIADIC_ELEM_61(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,...) e61
#define LN_ipsec4 "ipsec4"
#define RSA_F_RSA_NEW_METHOD 106
#define OBJ_hmac_sha3_512 OBJ_nist_hashalgs,16L
#define ERR_R_SYS_LIB ERR_LIB_SYS
#define BOOST_PP_DEC_156 155
#define __swahb32(x) (__builtin_constant_p((__u32)(x)) ? ___constant_swahb32(x) : __fswahb32(x))
#define TLS1_AD_INAPPROPRIATE_FALLBACK 86
#define OBJ_nist_hashalgs OBJ_nistAlgorithms,2L
#define OBJ_seed_ecb OBJ_kisa,1L,3L
#define SN_X9_62_c2tnb239v3 "c2tnb239v3"
#define BOOST_PP_DEC_159 158
#define BOOST_PP_LIST_FIRST(list) BOOST_PP_LIST_FIRST_D(list)
#define TLS1_TXT_DHE_PSK_WITH_AES_256_CCM_8 "DHE-PSK-AES256-CCM8"
#define BIO_set_conn_mode(b,n) BIO_ctrl(b,BIO_C_SET_CONNECT_MODE,(n),NULL)
#define NID_id_GostR3410_94_cc 850
#define PKCS7_S_BODY 1
#define BOOST_TT_IS_ASSIGNABLE_HPP_INCLUDED 
#define EVP_CIPH_CBC_MODE 0x2
#define OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet OBJ_cryptopro,35L,3L
#define CRYPTO_UNLOCK 2
#define ERR_LIB_CONF 14
#define B_ASN1_TIME B_ASN1_UTCTIME | B_ASN1_GENERALIZEDTIME
#define _STATBUF_ST_BLKSIZE 
#define __glibcxx_requires_string(_String) 
#define BOOST_PP_WHILE_12_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_13, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(13, s))
#define BOOST_PP_NODE_51(p) BOOST_PP_IIF(p(51), 51, 52)
#define SSL_F_SSL_CLEAR 164
#define OBJ_setct_OIData OBJ_set_ctype,3L
#define NID_server_auth 129
#define EVENT__HAVE_USLEEP 1
#define BOOST_OPTIONAL_DETAIL_OPTIONAL_SWAP_AJK_28JAN2015_HPP 
#define _STL_MULTISET_H 1
#define SN_ffdhe8192 "ffdhe8192"
#define BOOST_PP_NODE_53(p) BOOST_PP_IIF(p(53), 53, 54)
#define NID_id_smime_mod_ets_eSignature_88 200
#define _mm512_mask_extractf32x4_ps(W,U,X,C) ((__m128) __builtin_ia32_extractf32x4_mask ((__v16sf)(__m512) (X), (int) (C), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define EV_INT16_MAX INT16_MAX
#define __DECL_SIMD_sincosf128x 
#define SSL_AD_BAD_CERTIFICATE SSL3_AD_BAD_CERTIFICATE
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_229(op,st,ss,sz) 0
#define _mm_mask_gf2p8affine_epi64_epi8(A,B,C,D,E) ((__m128i) __builtin_ia32_vgf2p8affineqb_v16qi_mask((__v16qi)(__m128i)(C), (__v16qi)(__m128i)(D), (int)(E), (__v16qi)(__m128i)(A), (__mmask16)(B)))
#define BIO_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_BIO, l, p, newf, dupf, freef)
#define EC_F_ECDSA_SIGN_SETUP 248
#define BOOST_PP_RELATIVE_1(m) BOOST_PP_CAT(m, BOOST_PP_DEC(BOOST_PP_ITERATION_DEPTH()))
#define BOOST_PP_RELATIVE_2(m) BOOST_PP_CAT(m, BOOST_PP_DEC(BOOST_PP_DEC(BOOST_PP_ITERATION_DEPTH())))
#define BOOST_PP_RELATIVE_4(m) BOOST_PP_CAT(m, BOOST_PP_DEC(BOOST_PP_DEC(BOOST_PP_DEC(BOOST_PP_DEC(BOOST_PP_ITERATION_DEPTH())))))
#define SSL_load_error_strings() OPENSSL_init_ssl(OPENSSL_INIT_LOAD_SSL_STRINGS | OPENSSL_INIT_LOAD_CRYPTO_STRINGS, NULL)
#define BOOST_PP_TUPLE_EAT_49(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48) 
#define SSL_F_TLS_HANDLE_ALPN 562
#define BOOST_PP_FOR_220(s,p,o,m) BOOST_PP_FOR_220_C(BOOST_PP_BOOL(p(221, s)), s, p, o, m)
#define BOOST_PP_FOR_219_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(220, s) BOOST_PP_IIF(c, BOOST_PP_FOR_220, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(220, s), p, o, m)
#define TLS1_CK_RSA_PSK_WITH_AES_128_GCM_SHA256 0x030000AC
#define BOOST_PP_FOR_221(s,p,o,m) BOOST_PP_FOR_221_C(BOOST_PP_BOOL(p(222, s)), s, p, o, m)
#define NID_id_smime_mod_ets_eSignature_97 201
#define OBJ_rsaSignature OBJ_algorithm,11L
#define BOOST_PP_FOR_222(s,p,o,m) BOOST_PP_FOR_222_C(BOOST_PP_BOOL(p(223, s)), s, p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_181(op,st,ss,sz) 0
#define BOOST_PP_WHILE_235(p,o,s) BOOST_PP_WHILE_235_C(BOOST_PP_BOOL(p(236, s)), p, o, s)
#define BOOST_TT_IS_POINTER_HPP_INCLUDED 
#define EVP_F_EVP_PKEY_CTX_CTRL_STR 150
#define SSL_TXT_aSRP "aSRP"
#define IP_RECVFRAGSIZE 25
#define _mm512_mask_srai_epi16(W,U,A,B) ((__m512i) __builtin_ia32_psrawi512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i)(W), (__mmask32)(U)))
#define __IBMCPP___WORKAROUND_GUARD 1
#define BOOST_PP_FOR_223(s,p,o,m) BOOST_PP_FOR_223_C(BOOST_PP_BOOL(p(224, s)), s, p, o, m)
#define _GLIBCXX_USE_SCHED_YIELD 1
#define _mm_rsqrt28_round_ss(A,B,R) __builtin_ia32_rsqrt28ss_round(A, B, R)
#define BOOST_PP_FOR_224(s,p,o,m) BOOST_PP_FOR_224_C(BOOST_PP_BOOL(p(225, s)), s, p, o, m)
#define EISCONN 106
#define EVP_PKEY_CTRL_EC_PARAM_ENC (EVP_PKEY_ALG_CTRL + 2)
#define OBJ_pbes2 OBJ_pkcs5,13L
#define BOOST_PP_REPEAT_1_103(m,d) BOOST_PP_REPEAT_1_102(m, d) m(2, 102, d)
#define BOOST_PP_WHILE_151_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_152, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(152, s))
#define X509v3_KU_NON_REPUDIATION 0x0040
#define OBJ_X9_62_c2tnb359v1 OBJ_X9_62_c_TwoCurve,18L
#define PEMerr(f,r) ERR_PUT_error(ERR_LIB_PEM,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define _mm512_insertf64x2(X,Y,C) ((__m512d) __builtin_ia32_insertf64x2_512_mask ((__v8df)(__m512d) (X), (__v2df)(__m128d) (Y), (int) (C), (__v8df)(__m512d) (X), (__mmask8)-1))
#define PKCS7_get_attributes(si) ((si)->unauth_attr)
#define BOOST_PP_FOR_227(s,p,o,m) BOOST_PP_FOR_227_C(BOOST_PP_BOOL(p(228, s)), s, p, o, m)
#define BOOST_PP_LIST_FOLD_RIGHT_10(o,s,l) BOOST_PP_LIST_FOLD_LEFT_10(o, s, BOOST_PP_LIST_REVERSE_D(10, l))
#define BOOST_PP_LIST_FOLD_RIGHT_11(o,s,l) BOOST_PP_LIST_FOLD_LEFT_11(o, s, BOOST_PP_LIST_REVERSE_D(11, l))
#define BOOST_PP_LIST_FOLD_RIGHT_12(o,s,l) BOOST_PP_LIST_FOLD_LEFT_12(o, s, BOOST_PP_LIST_REVERSE_D(12, l))
#define BOOST_PP_LIST_FOLD_RIGHT_14(o,s,l) BOOST_PP_LIST_FOLD_LEFT_14(o, s, BOOST_PP_LIST_REVERSE_D(14, l))
#define BOOST_PP_LIST_FOLD_RIGHT_15(o,s,l) BOOST_PP_LIST_FOLD_LEFT_15(o, s, BOOST_PP_LIST_REVERSE_D(15, l))
#define BOOST_PP_LIST_FOLD_RIGHT_16(o,s,l) BOOST_PP_LIST_FOLD_LEFT_16(o, s, BOOST_PP_LIST_REVERSE_D(16, l))
#define BOOST_PP_LIST_FOLD_RIGHT_17(o,s,l) BOOST_PP_LIST_FOLD_LEFT_17(o, s, BOOST_PP_LIST_REVERSE_D(17, l))
#define BOOST_MPL_LIMITS_ARITY_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_RIGHT_19(o,s,l) BOOST_PP_LIST_FOLD_LEFT_19(o, s, BOOST_PP_LIST_REVERSE_D(19, l))
#define _ENDIAN_H 1
#define SSL_CTRL_GET_TOTAL_RENEGOTIATIONS 12
#define PEM_F_PEM_WRITE_BIO 114
#define SN_camellia_192_ctr "CAMELLIA-192-CTR"
#define _AVX512DQINTRIN_H_INCLUDED 
#define MADV_HUGEPAGE 14
#define UDP_ENCAP_GTP1U 5
#define CPU_OR(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, |)
#define BOOST_PP_LIST_FOLD_RIGHT_20(o,s,l) BOOST_PP_LIST_FOLD_LEFT_20(o, s, BOOST_PP_LIST_REVERSE_D(20, l))
#define BOOST_PP_LIST_FOLD_RIGHT_22(o,s,l) BOOST_PP_LIST_FOLD_LEFT_22(o, s, BOOST_PP_LIST_REVERSE_D(22, l))
#define BOOST_PP_LIST_FOLD_RIGHT_23(o,s,l) BOOST_PP_LIST_FOLD_LEFT_23(o, s, BOOST_PP_LIST_REVERSE_D(23, l))
#define BOOST_PP_LIST_FOLD_RIGHT_24(o,s,l) BOOST_PP_LIST_FOLD_LEFT_24(o, s, BOOST_PP_LIST_REVERSE_D(24, l))
#define BOOST_PP_LIST_FOLD_RIGHT_25(o,s,l) BOOST_PP_LIST_FOLD_LEFT_25(o, s, BOOST_PP_LIST_REVERSE_D(25, l))
#define BOOST_PP_LIST_FOLD_RIGHT_27(o,s,l) BOOST_PP_LIST_FOLD_LEFT_27(o, s, BOOST_PP_LIST_REVERSE_D(27, l))
#define BOOST_PP_LIST_FOLD_RIGHT_29(o,s,l) BOOST_PP_LIST_FOLD_LEFT_29(o, s, BOOST_PP_LIST_REVERSE_D(29, l))
#define IPPROTO_COMP IPPROTO_COMP
#define FOLLY_GNU_DISABLE_WARNING(warningName) _Pragma( FOLLY_GNU_DISABLE_WARNING_INTERNAL2(GCC diagnostic ignored warningName))
#define _mm_cmp_epu16_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpw128_mask ((__v8hi)(__m128i)(X), (__v8hi)(__m128i)(Y), (int)(P), (__mmask8)(-1)))
#define TLS1_TXT_DH_RSA_WITH_ARIA_128_GCM_SHA256 "DH-RSA-ARIA128-GCM-SHA256"
#define TCP_FASTOPEN_KEY 33
#define BOOST_PP_SEQ_ELEM_91(_) BOOST_PP_SEQ_ELEM_90
#define OBJ_id_smime_spq_ets_sqt_uri OBJ_id_smime_spq,1L
#define __INT8_MAX__ 0x7f
#define NID_sbgp_routerIdentifier 292
#define CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) __CPU_EQUAL_S (setsize, cpusetp1, cpusetp2)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_187(op,st,ss,sz) 0
#define EVP_PADDING_ISO7816_4 2
#define PEM_R_UNSUPPORTED_ENCRYPTION 114
#define LN_givenName "givenName"
#define BOOST_PP_LIST_FOLD_RIGHT_32(o,s,l) BOOST_PP_LIST_FOLD_LEFT_32(o, s, BOOST_PP_LIST_REVERSE_D(32, l))
#define BOOST_PP_LIST_FOLD_RIGHT_33(o,s,l) BOOST_PP_LIST_FOLD_LEFT_33(o, s, BOOST_PP_LIST_REVERSE_D(33, l))
#define BOOST_PP_LIST_FOLD_RIGHT_34(o,s,l) BOOST_PP_LIST_FOLD_LEFT_34(o, s, BOOST_PP_LIST_REVERSE_D(34, l))
#define BOOST_PP_LIST_FOLD_RIGHT_35(o,s,l) BOOST_PP_LIST_FOLD_LEFT_35(o, s, BOOST_PP_LIST_REVERSE_D(35, l))
#define BOOST_PP_LIST_FOLD_RIGHT_36(o,s,l) BOOST_PP_LIST_FOLD_LEFT_36(o, s, BOOST_PP_LIST_REVERSE_D(36, l))
#define BOOST_PP_LIST_FOLD_RIGHT_37(o,s,l) BOOST_PP_LIST_FOLD_LEFT_37(o, s, BOOST_PP_LIST_REVERSE_D(37, l))
#define BOOST_PP_LIST_FOLD_RIGHT_38(o,s,l) BOOST_PP_LIST_FOLD_LEFT_38(o, s, BOOST_PP_LIST_REVERSE_D(38, l))
#define BOOST_MPL_PP_NESTED_DEF_PARAMS_TAIL(i,param,value) BOOST_MPL_PP_DEF_PARAMS_TAIL_IMPL(i, param, BOOST_PP_IDENTITY(=value))
#define V_ASN1_SET 17
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_188(op,st,ss,sz) 0
#define LN_pkcs9_emailAddress "emailAddress"
#define EVENT2_BUFFEREVENT_H_INCLUDED_ 
#define CRYPTO_set_add_lock_callback(func) 
#define SN_sha3_512 "SHA3-512"
#define SSL_AD_CERTIFICATE_EXPIRED SSL3_AD_CERTIFICATE_EXPIRED
#define SSL_F_TLS_CHOOSE_SIGALG 513
#define BOOST_PP_SEQ_ELEM_96(_) BOOST_PP_SEQ_ELEM_95
#define _GLIBCXX_HAVE_ATANL 1
#define NID_id_smime_alg_ESDHwithRC2 242
#define BOOST_PP_LIST_FOLD_RIGHT_40(o,s,l) BOOST_PP_LIST_FOLD_LEFT_40(o, s, BOOST_PP_LIST_REVERSE_D(40, l))
#define BOOST_PP_LIST_FOLD_RIGHT_41(o,s,l) BOOST_PP_LIST_FOLD_LEFT_41(o, s, BOOST_PP_LIST_REVERSE_D(41, l))
#define X509_R_UNKNOWN_KEY_TYPE 117
#define BOOST_PP_LIST_FOLD_RIGHT_43(o,s,l) BOOST_PP_LIST_FOLD_LEFT_43(o, s, BOOST_PP_LIST_REVERSE_D(43, l))
#define BOOST_PP_LIST_FOLD_RIGHT_45(o,s,l) BOOST_PP_LIST_FOLD_LEFT_45(o, s, BOOST_PP_LIST_REVERSE_D(45, l))
#define BOOST_PP_LIST_FOLD_RIGHT_46(o,s,l) BOOST_PP_LIST_FOLD_LEFT_46(o, s, BOOST_PP_LIST_REVERSE_D(46, l))
#define BOOST_PP_LIST_FOLD_RIGHT_47(o,s,l) BOOST_PP_LIST_FOLD_LEFT_47(o, s, BOOST_PP_LIST_REVERSE_D(47, l))
#define SN_sendProxiedOwner "sendProxiedOwner"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000010 (1)(0)(0)(0)(0)(0)(1)(0),
#define BOOST_TEMPLATED_STREAM_COMMA ,
#define EVLIST_ACTIVE_LATER 0x20
#define _GLIBCXX_HAVE_NETINET_IN_H 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000011 (1)(0)(0)(0)(0)(0)(1)(1),
#define BOOST_MPL_HAS_MEMBER_TEST(args) sizeof(BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME(args)< U >(0)) == sizeof(boost::mpl::aux::yes_tag)
#define BOOST_PP_LIST_FOLD_RIGHT_50(o,s,l) BOOST_PP_LIST_FOLD_LEFT_50(o, s, BOOST_PP_LIST_REVERSE_D(50, l))
#define PEM_R_BAD_VERSION_NUMBER 117
#define BOOST_PP_LIST_FOLD_RIGHT_52(o,s,l) BOOST_PP_LIST_FOLD_LEFT_52(o, s, BOOST_PP_LIST_REVERSE_D(52, l))
#define BOOST_PP_LIST_FOLD_RIGHT_53(o,s,l) BOOST_PP_LIST_FOLD_LEFT_53(o, s, BOOST_PP_LIST_REVERSE_D(53, l))
#define BOOST_PP_LIST_FOLD_RIGHT_54(o,s,l) BOOST_PP_LIST_FOLD_LEFT_54(o, s, BOOST_PP_LIST_REVERSE_D(54, l))
#define BOOST_PP_LIST_FOLD_RIGHT_55(o,s,l) BOOST_PP_LIST_FOLD_LEFT_55(o, s, BOOST_PP_LIST_REVERSE_D(55, l))
#define BOOST_PP_LIST_FOLD_RIGHT_56(o,s,l) BOOST_PP_LIST_FOLD_LEFT_56(o, s, BOOST_PP_LIST_REVERSE_D(56, l))
#define BOOST_PP_LIST_FOLD_RIGHT_57(o,s,l) BOOST_PP_LIST_FOLD_LEFT_57(o, s, BOOST_PP_LIST_REVERSE_D(57, l))
#define BOOST_PP_LIST_FOLD_RIGHT_58(o,s,l) BOOST_PP_LIST_FOLD_LEFT_58(o, s, BOOST_PP_LIST_REVERSE_D(58, l))
#define BOOST_PP_LIST_FOLD_RIGHT_59(o,s,l) BOOST_PP_LIST_FOLD_LEFT_59(o, s, BOOST_PP_LIST_REVERSE_D(59, l))
#define _IO(type,nr) _IOC(_IOC_NONE,(type),(nr),0)
#define BN_F_BN_BLINDING_CREATE_PARAM 128
#define TLSEXT_TYPE_truncated_hmac 4
#define SN_id_smime_aa_ets_contentTimestamp "id-smime-aa-ets-contentTimestamp"
#define _GLIBCXX98_USE_C99_STDIO 1
#define BOOST_PREPROCESSOR_PUNCTUATION_COMMA_HPP 
#define INR_OPEN_CUR 1024
#define _mm256_insert_epi8(X,D,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 4); __Y = _mm_insert_epi8 (__Y, (D), (N) % 16); _mm256_insertf128_si256 ((X), __Y, (N) >> 4); }))
#define BOOST_PP_LIST_FOLD_RIGHT_62(o,s,l) BOOST_PP_LIST_FOLD_LEFT_62(o, s, BOOST_PP_LIST_REVERSE_D(62, l))
#define BOOST_PP_LIST_FOLD_RIGHT_63(o,s,l) BOOST_PP_LIST_FOLD_LEFT_63(o, s, BOOST_PP_LIST_REVERSE_D(63, l))
#define BOOST_PP_LIST_FOLD_RIGHT_64(o,s,l) BOOST_PP_LIST_FOLD_LEFT_64(o, s, BOOST_PP_LIST_REVERSE_D(64, l))
#define BOOST_PP_LIST_FOLD_RIGHT_65(o,s,l) BOOST_PP_LIST_FOLD_LEFT_65(o, s, BOOST_PP_LIST_REVERSE_D(65, l))
#define BOOST_PP_LIST_FOLD_RIGHT_66(o,s,l) BOOST_PP_LIST_FOLD_LEFT_66(o, s, BOOST_PP_LIST_REVERSE_D(66, l))
#define BOOST_PP_LIST_FOLD_RIGHT_67(o,s,l) BOOST_PP_LIST_FOLD_LEFT_67(o, s, BOOST_PP_LIST_REVERSE_D(67, l))
#define BOOST_PP_LIST_FOLD_RIGHT_69(o,s,l) BOOST_PP_LIST_FOLD_LEFT_69(o, s, BOOST_PP_LIST_REVERSE_D(69, l))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_214 214
#define EVUTIL_AI_ALL AI_ALL
#define BOOST_MPL_AUX_MSVC_TYPE_HPP_INCLUDED 
#define SN_id_cmc_revokeRequest "id-cmc-revokeRequest"
#define BIO_SOCK_NONBLOCK 0x08
#define BOOST_PP_REPEAT_3_21(m,d) BOOST_PP_REPEAT_3_20(m, d) m(4, 20, d)
#define DH_F_DH_PKEY_PUBLIC_CHECK 124
#define EV_MONOT_PRECISE 1
#define SN_id_it_subscriptionRequest "id-it-subscriptionRequest"
#define BOOST_PP_LIST_FOLD_RIGHT_71(o,s,l) BOOST_PP_LIST_FOLD_LEFT_71(o, s, BOOST_PP_LIST_REVERSE_D(71, l))
#define BOOST_PP_LIST_FOLD_RIGHT_73(o,s,l) BOOST_PP_LIST_FOLD_LEFT_73(o, s, BOOST_PP_LIST_REVERSE_D(73, l))
#define BOOST_PP_LIST_FOLD_RIGHT_74(o,s,l) BOOST_PP_LIST_FOLD_LEFT_74(o, s, BOOST_PP_LIST_REVERSE_D(74, l))
#define BOOST_PP_LIST_FOLD_RIGHT_76(o,s,l) BOOST_PP_LIST_FOLD_LEFT_76(o, s, BOOST_PP_LIST_REVERSE_D(76, l))
#define BOOST_PP_LIST_FOLD_RIGHT_77(o,s,l) BOOST_PP_LIST_FOLD_LEFT_77(o, s, BOOST_PP_LIST_REVERSE_D(77, l))
#define BOOST_PP_LIST_FOLD_RIGHT_79(o,s,l) BOOST_PP_LIST_FOLD_LEFT_79(o, s, BOOST_PP_LIST_REVERSE_D(79, l))
#define X509_F_X509_LOAD_CERT_FILE 111
#define OBJ_pkcs9_messageDigest OBJ_pkcs9,4L
#define BOOST_TYPE_TRAITS_IS_FLOATING_HPP_INCLUDED 
#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA "DH-DSS-CAMELLIA256-SHA"
#define _mm_getexp_sd(A,B) ((__m128d)__builtin_ia32_getexpsd128_round((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), _MM_FROUND_CUR_DIRECTION))
#define BOOST_CONFIG_CMATH 
#define __INT32_TYPE__ int
#define ASN1_F_ASN1_VERIFY 137
#define SSL_R_DATA_BETWEEN_CCS_AND_FINISHED 145
#define _GLIBCXX_USE_LFS 1
#define TLS1_TXT_ECDH_ECDSA_WITH_NULL_SHA "ECDH-ECDSA-NULL-SHA"
#define BOOST_PP_LIST_FOLD_RIGHT_81(o,s,l) BOOST_PP_LIST_FOLD_LEFT_81(o, s, BOOST_PP_LIST_REVERSE_D(81, l))
#define BOOST_PP_LIST_FOLD_RIGHT_82(o,s,l) BOOST_PP_LIST_FOLD_LEFT_82(o, s, BOOST_PP_LIST_REVERSE_D(82, l))
#define BOOST_PP_LIST_FOLD_RIGHT_83(o,s,l) BOOST_PP_LIST_FOLD_LEFT_83(o, s, BOOST_PP_LIST_REVERSE_D(83, l))
#define BOOST_PP_LIST_FOLD_RIGHT_84(o,s,l) BOOST_PP_LIST_FOLD_LEFT_84(o, s, BOOST_PP_LIST_REVERSE_D(84, l))
#define BOOST_PP_LIST_FOLD_RIGHT_86(o,s,l) BOOST_PP_LIST_FOLD_LEFT_86(o, s, BOOST_PP_LIST_REVERSE_D(86, l))
#define FOLLY_STATIC_CTOR_PRIORITY_MAX __attribute__((__init_priority__(102)))
#define BOOST_PP_LIST_FOLD_RIGHT_88(o,s,l) BOOST_PP_LIST_FOLD_LEFT_88(o, s, BOOST_PP_LIST_REVERSE_D(88, l))
#define BOOST_PP_LIST_FOLD_RIGHT_89(o,s,l) BOOST_PP_LIST_FOLD_LEFT_89(o, s, BOOST_PP_LIST_REVERSE_D(89, l))
#define X509V3_R_ILLEGAL_EMPTY_EXTENSION 151
#define BOOST_PP_REPEAT_3_27(m,d) BOOST_PP_REPEAT_3_26(m, d) m(4, 26, d)
#define PEM_R_PVK_DATA_TOO_SHORT 124
#define ASN1_F_SMIME_READ_ASN1 212
#define NID_id_pda 265
#define SN_netscape_comment "nsComment"
#define BIO_R_UNABLE_TO_BIND_SOCKET 117
#define NID_aes_256_cbc_hmac_sha256 950
#define __INT_LEAST32_WIDTH__ 32
#define PF_APPLETALK 5
#define BOOST_PP_LIST_FOLD_RIGHT_90(o,s,l) BOOST_PP_LIST_FOLD_LEFT_90(o, s, BOOST_PP_LIST_REVERSE_D(90, l))
#define BOOST_PP_LIST_FOLD_RIGHT_93(o,s,l) BOOST_PP_LIST_FOLD_LEFT_93(o, s, BOOST_PP_LIST_REVERSE_D(93, l))
#define BOOST_PP_LIST_FOLD_RIGHT_94(o,s,l) BOOST_PP_LIST_FOLD_LEFT_94(o, s, BOOST_PP_LIST_REVERSE_D(94, l))
#define be16toh(x) __bswap_16 (x)
#define BOOST_PP_LIST_FOLD_RIGHT_98(o,s,l) BOOST_PP_LIST_FOLD_LEFT_98(o, s, BOOST_PP_LIST_REVERSE_D(98, l))
#define BOOST_PP_LIST_FOLD_RIGHT_99(o,s,l) BOOST_PP_LIST_FOLD_LEFT_99(o, s, BOOST_PP_LIST_REVERSE_D(99, l))
#define SSL_R_NO_SUITABLE_KEY_SHARE 101
#define REG_R11 REG_R11
#define OBJ_id_GostR3411_94_with_GostR3410_2001 OBJ_cryptopro,3L
#define BLKBSZGET _IOR(0x12,112,size_t)
#define BOOST_PP_SEQ_SIZE_234(_) BOOST_PP_SEQ_SIZE_235
#define BOOST_MPL_VOID_FWD_HPP_INCLUDED 
#define SSL3_CK_FALLBACK_SCSV 0x03005600
#define MCAST_BLOCK_SOURCE 43
#define EC_R_GROUP2PKPARAMETERS_FAILURE 120
#define SSL_TXT_GOST12 "GOST12"
#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio_of_const(DH,i2d_DHparams,bp,x)
#define BOOST_PP_INTERCEPT_132 
#define BOOST_PP_LIST_FOLD_RIGHT_203(o,s,l) BOOST_PP_LIST_FOLD_LEFT_203(o, s, BOOST_PP_LIST_REVERSE_D(203, l))
#define TLS1_CK_DHE_PSK_WITH_AES_128_GCM_SHA256 0x030000AA
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110011 (0)(0)(1)(1)(0)(0)(1)(1),
#define BOOST_PP_INTERCEPT_134 
#define OBJ_rsaesOaep OBJ_pkcs1,7L
#define BOOST_MPL_TRANSFORM_HPP_INCLUDED 
#define SSL_TXT_TLSV1_1 "TLSv1.1"
#define SSL_R_NO_COMPRESSION_SPECIFIED 187
#define OBJ_cACertificate OBJ_X509,37L
#define BOOST_TYPE_INDEX_TYPE_INDEX_FACADE_HPP 
#define _POSIX2_C_BIND __POSIX2_THIS_VERSION
#define SSL3_CC_READ 0x001
#define _PSTL_ALGORITHM_FORWARD_DECLARED 1
#define BOOST_PP_INC_192 193
#define REG_R14 REG_R14
#define BOOST_PP_ASSIGN_SLOT(i) BOOST_PP_CAT(BOOST_PP_ASSIGN_SLOT_, i)
#define X509_F_X509_REQ_PRINT_EX 121
#define _mm256_mask_blend_ps(__U,__A,__W) ((__m256) __builtin_ia32_blendmps_256_mask ((__v8sf) (__A), (__v8sf) (__W), (__mmask8) (__U)))
#define FMT_SHARED 1
#define SSL_F_PQUEUE_NEW 625
#define EVP_PKEY_CTRL_DSA_PARAMGEN_MD (EVP_PKEY_ALG_CTRL + 3)
#define _mm256_maskz_shldi_epi16(A,B,C,D) ((__m256i) __builtin_ia32_vpshld_v16hi_mask ((__v16hi)(__m256i)(B), (__v16hi)(__m256i)(C),(int)(D), (__v16hi)(__m256i)_mm256_setzero_si256 (), (__mmask16)(A)))
#define OBJ_sxnet 1L,3L,101L,1L,4L,1L
#define BOOST_PP_WHILE_79_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_80, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(80, s))
#define TLS1_CK_DHE_PSK_WITH_NULL_SHA 0x0300002D
#define _CS_V7_ENV _CS_V7_ENV
#define SN_id_alg_dh_pop "id-alg-dh-pop"
#define _mm512_shldi_epi64(A,B,C) ((__m512i) __builtin_ia32_vpshld_v8di ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (int)(C)))
#define TLS1_CK_RSA_PSK_WITH_NULL_SHA 0x0300002E
#define ESPIPE 29
#define _XOPEN_LIM_H 1
#define BOOST_PP_DEC_164 163
#define _ASM_GENERIC_ERRNO_H 
#define EAGAIN 11
#define DECLARE_ASN1_ALLOC_FUNCTIONS_name(type,name) type *name ##_new(void); void name ##_free(type *a);
#define BOOST_PP_FOR_254_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(255, s) BOOST_PP_IIF(c, BOOST_PP_FOR_255, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(255, s), p, o, m)
#define ASN1_F_C2I_UINT64_INT 101
#define SRTP_AES128_F8_SHA1_32 0x0004
#define _FORWARD_LIST_H 1
#define SN_secp128r2 "secp128r2"
#define __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
#define SODIUM_EXPORT __attribute__ ((visibility ("default")))
#define _CS_LFS64_LINTFLAGS _CS_LFS64_LINTFLAGS
#define SN_X9_62_prime_field "prime-field"
#define SSL_EXT_TLS_IMPLEMENTATION_ONLY 0x0004
#define CHECK_OP_LOG(name,op,val1,val2,log) while (google::_Check_string* _result = google::Check ##name ##Impl( google::GetReferenceableValue(val1), google::GetReferenceableValue(val2), #val1 " " #op " " #val2)) log(__FILE__, __LINE__, google::CheckOpString(_result)).stream()
#define _mm256_maskz_shldi_epi32(A,B,C,D) ((__m256i) __builtin_ia32_vpshld_v8si_mask ((__v8si)(__m256i)(B), (__v8si)(__m256i)(C),(int)(D), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)(A)))
#define NID_time_stamp 133
#define BOOST_PP_DEC_168 167
#define __F_SETSIG 10
#define MS_SUBMOUNT (1<<26)
#define TLS1_TXT_PSK_WITH_AES_128_CBC_SHA256 "PSK-AES128-CBC-SHA256"
#define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
#define PF_RXRPC 33
#define CT_F_CT_BASE64_DECODE 124
#define IN6_IS_ADDR_MC_SITELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x5))
#define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
#define FIDEDUPERANGE _IOWR(0x94, 54, struct file_dedupe_range)
#define BOOST_MPL_INT_HPP_INCLUDED 
#define MS_INVALIDATE 2
#define SOL_AAL 265
#define SN_rsadsi "rsadsi"
#define _mm512_mask_i32gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv16si ((__v16si)(__m512i) (V1OLD), (void const *) (ADDR), (__v16si)(__m512i) (INDEX), (__mmask16) (MASK), (int) (SCALE))
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)
#define SSL_R_SHUTDOWN_WHILE_IN_INIT 407
#define BOOST_PP_NODE_60(p) BOOST_PP_IIF(p(60), BOOST_PP_NODE_58, BOOST_PP_NODE_62)
#define SSL_R_INVALID_CONFIGURATION_NAME 113
#define FOLLY_PACK_PUSH 
#define APACHE_THRIFT_ACCESSOR_cv_list 
#define SSL_get_cipher_version(s) SSL_CIPHER_get_version(SSL_get_current_cipher(s))
#define timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)
#define OBJ_name_constraints OBJ_id_ce,30L
#define TLS1_RT_CRYPTO_IV (TLS1_RT_CRYPTO | 0x7)
#define NID_cryptocom 806
#define _NETINET_IN_H 1
#define ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER 108
#define LN_tls1_prf "tls1-prf"
#define SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION 0x00040000U
#define EVP_PKEY_ECDH_KDF_NONE 1
#define BIO_F_BIO_MAKE_PAIR 121
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_34(op,st,ss,sz) 0
#define KU_KEY_CERT_SIGN 0x0004
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_35(op,st,ss,sz) 0
#define FS_IOC_FSGETXATTR _IOR('X', 31, struct fsxattr)
#define BOOST_PP_FOR_230(s,p,o,m) BOOST_PP_FOR_230_C(BOOST_PP_BOOL(p(231, s)), s, p, o, m)
#define _mm256_maskz_shldi_epi64(A,B,C,D) ((__m256i) __builtin_ia32_vpshld_v4di_mask ((__v4di)(__m256i)(B), (__v4di)(__m256i)(C),(int)(D), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(A)))
#define BIO_CTRL_GET_CALLBACK 15
#define DSA_FLAG_CACHE_MONT_P 0x01
#define X509_R_UNKNOWN_PURPOSE_ID 121
#define BOOST_PP_BOOL_193 1
#define NID_set_brand_AmericanExpress 638
#define PF_ATMPVC 8
#define SSL_R_RECORD_TOO_SMALL 298
#define _BITS_STAT_H 1
#define SSL_TXT_GOST94 "GOST94"
#define BOOST_PP_FOR_233(s,p,o,m) BOOST_PP_FOR_233_C(BOOST_PP_BOOL(p(234, s)), s, p, o, m)
#define SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE 220
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_37(op,st,ss,sz) 0
#define BOOST_MPL_COUNT_HPP_INCLUDED 
#define BOOST_PP_FOR_234(s,p,o,m) BOOST_PP_FOR_234_C(BOOST_PP_BOOL(p(235, s)), s, p, o, m)
#define BIO_R_LISTEN_V6_ONLY 136
#define _mm512_mask_i32gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv8di ((__v8di)(__m512i) (V1OLD), (void const *) (ADDR), (__v8si)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define BOOST_MPL_IDENTITY_HPP_INCLUDED 
#define SN_id_regInfo_certReq "id-regInfo-certReq"
#define _mm512_mask_rol_epi64(W,U,A,B) ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define THRIFT_TRANSPORT_TBUFFERTRANSPORTS_H_ 1
#define SSL_get_server_tmp_key(s,pk) SSL_get_peer_tmp_key(s, pk)
#define EVP_CIPH_MODE 0xF0007
#define OBJ_id_HMACGostR3411_94 OBJ_cryptopro,10L
#define SSL_SESS_CACHE_NO_INTERNAL_STORE 0x0200
#define ASN1_F_I2D_EC_PUBKEY 181
#define BOOST_PP_LIST_CONS(head,tail) (head, tail)
#define EVP_CIPH_CUSTOM_IV 0x10
#define AF_X25 PF_X25
#define SSL_ST_READ_DONE 0xF2
#define BC_STRING_MAX _POSIX2_BC_STRING_MAX
#define NID_id_Gost28147_89 813
#define SN_ecdsa_with_SHA3_512 "id-ecdsa-with-sha3-512"
#define NID_setct_PIDualSignedTBE 568
#define LN_pkcs9_unstructuredAddress "unstructuredAddress"
#define _mm512_mask_exp2a23_ps(W,U,A) _mm512_mask_exp2a23_round_ps(W, U, A, _MM_FROUND_CUR_DIRECTION)
#define TLS1_CK_PSK_WITH_AES_256_CBC_SHA384 0x030000AF
#define OBJ_id_smime_aa_ets_archiveTimeStamp OBJ_id_smime_aa,27L
#define NID_id_ppl 662
#define TLS1_RFC_DHE_DSS_WITH_ARIA_256_GCM_SHA384 "TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384"
#define LN_ipsecTunnel "IPSec Tunnel"
#define SHUT_RD SHUT_RD
#define OBJ_Experimental OBJ_internet,3L
#define _mm512_maskz_min_round_ps(U,A,B,R) (__m512)__builtin_ia32_minps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, R)
#define BOOST_PP_DETAIL_IS_EMPTY_NON_FUNCTION_C(...) ()
#define FSCRYPT_MODE_AES_256_XTS 1
#define LN_kx_ecdhe "kx-ecdhe"
#define _MM_EXCEPT_INEXACT 0x0020
#define _SC_V7_LPBIG_OFFBIG _SC_V7_LPBIG_OFFBIG
#define X509_FLAG_NO_VERSION (1L << 1)
#define X509V3_R_NO_CONFIG_DATABASE 136
#define NID_set_brand 518
#define BOOST_PP_SLOT_CC_4_D(a,b,c,d) a ## b ## c ## d
#define OBJ_set_brand_AmericanExpress OBJ_set_brand,34L
#define BOOST_PP_REPEAT_2_18(m,d) BOOST_PP_REPEAT_2_17(m, d) m(3, 17, d)
#define KDFerr(f,r) ERR_PUT_error(ERR_LIB_KDF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define DOUBLE_CONVERSION_NO_RETURN __attribute__((noreturn))
#define BOOST_PP_MOD_D(d,x,y) BOOST_PP_TUPLE_ELEM(3, 1, BOOST_PP_DIV_BASE_D(d, x, y))
#define _kxor_mask16 _mm512_kxor
#define _mm256_mask_fpclass_ps_mask(u,X,C) ((__mmask8) __builtin_ia32_fpclassps256_mask ((__v8sf) (__m256) (X), (int) (C),(__mmask8)(u)))
#define __cpp_user_defined_literals 200809L
#define CLONE_IO 0x80000000
#define _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK 1
#define FILE_DEDUPE_RANGE_SAME 0
#define TLSEXT_NAMETYPE_host_name 0
#define DH_R_INVALID_PARAMETER_NAME 110
#define APACHE_THRIFT_ACCESSOR_drainCompletePush 
#define NID_teletexTerminalIdentifier 866
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_221 221
#define NID_ms_smartcard_login 648
#define EVP_PKS_EC 0x0400
#define SO_ATTACH_FILTER 26
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011101 (0)(1)(0)(1)(1)(1)(0)(1),
#define SO_PASSCRED 16
#define NID_setAttr_Cert 620
#define BOOST_PREPROCESSOR_COMPARISON_LESS_EQUAL_HPP 
#define ENOTUNIQ 76
#define _STL_MAP_H 1
#define SSL_set_ecdh_auto(dummy,onoff) ((onoff) != 0)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_226 226
#define SN_ecdsa_with_SHA3_224 "id-ecdsa-with-sha3-224"
#define SSL_R_BAD_WRITE_RETRY 127
#define SN_id_tc26_signwithdigest_gost3410_2012_256 "id-tc26-signwithdigest-gost3410-2012-256"
#define __glibcxx_requires_nonempty() 
#define BOOST_PP_FOR_180_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(181, s) BOOST_PP_IIF(c, BOOST_PP_FOR_181, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(181, s), p, o, m)
#define __cpp_lib_constexpr_char_traits 201811L
#define SN_setct_AuthResTBE "setct-AuthResTBE"
#define lh_insert OPENSSL_LH_insert
#define SSL_CB_WRITE_ALERT (SSL_CB_ALERT|SSL_CB_WRITE)
#define SN_setct_AuthResTBS "setct-AuthResTBS"
#define BOOST_PP_NODE_ENTRY_2(p) BOOST_PP_NODE_1(p)
#define CHARTYPE_FIRST_ESC_2253 0x20
#define BOOST_PP_NODE_ENTRY_4(p) BOOST_PP_NODE_2(p)(p)
#define BOOST_PP_NODE_ENTRY_8(p) BOOST_PP_NODE_4(p)(p)(p)
#define SSL_set_tlsext_status_exts(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS,0,arg)
#define _RANGES_ALGO_H 1
#define EVENT__HAVE_TIMERADD 1
#define BOOST_MPL_INSERT_IMPL_HPP_INCLUDED 
#define SOL_ALG 279
#define O_LARGEFILE __O_LARGEFILE
#define SHUT_WR SHUT_WR
#define _mm512_maskz_shufflelo_epi16(U,A,B) ((__m512i) __builtin_ia32_pshuflw512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i) _mm512_setzero_si512 (), (__mmask32)(U)))
#define SN_id_it_encKeyPairTypes "id-it-encKeyPairTypes"
#define BOOST_PP_DEC_10 9
#define LN_x500UniqueIdentifier "x500UniqueIdentifier"
#define BOOST_PP_DEC_13 12
#define BOOST_PP_DEC_14 13
#define BOOST_PP_DEC_15 14
#define PRIX16 "X"
#define BOOST_PP_DEC_17 16
#define BOOST_PP_DEC_18 17
#define BOOST_PP_DEC_19 18
#define BUF_F_BUF_MEM_NEW 101
#define __INT_LEAST64_WIDTH__ 64
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_220(p,o,s) 0
#define INT_LEAST16_MAX (32767)
#define BOOST_PP_REPEAT_3_39(m,d) BOOST_PP_REPEAT_3_38(m, d) m(4, 38, d)
#define OBJ_ecdsa_with_SHA3_224 OBJ_sigAlgs,9L
#define FOLLY_CREATE_MEMBER_INVOKER(classname,membername) struct classname { template <typename O, typename... Args> FOLLY_MAYBE_UNUSED FOLLY_ERASE_HACK_GCC constexpr auto operator()( O&& o, Args&&... args) const noexcept(noexcept( static_cast<O&&>(o).membername(static_cast<Args&&>(args)...))) -> decltype(static_cast<O&&>(o).membername( static_cast<Args&&>(args)...)) { return static_cast<O&&>(o).membername(static_cast<Args&&>(args)...); } }
#define TLS1_RFC_ECDHE_ECDSA_WITH_RC4_128_SHA "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA"
#define SN_setCext_TokenType "setCext-TokenType"
#define _POSIX_SAVED_IDS 1
#define OBJ_setct_BCIDistributionTBS OBJ_set_ctype,82L
#define __N(msgid) (msgid)
#define __P(args) args
#define EC_F_EC_GF2M_SIMPLE_FIELD_INV 296
#define SN_X9_62_c2onb191v4 "c2onb191v4"
#define SN_X9_62_c2onb191v5 "c2onb191v5"
#define SN_X9_62_prime192v1 "prime192v1"
#define __cpp_init_captures 201803L
#define HMAC_MAX_MD_CBLOCK 128
#define SSL3_CK_EDH_DSS_DES_192_CBC3_SHA SSL3_CK_DHE_DSS_DES_192_CBC3_SHA
#define OBJ_teletexTerminalIdentifier OBJ_X509,22L
#define BOOST_PP_DEC_30 29
#define BOOST_PP_DEC_31 30
#define BOOST_PP_DEC_34 33
#define BOOST_PP_DEC_35 34
#define BOOST_PP_DEC_36 35
#define BOOST_PP_DEC_37 36
#define __U32_TYPE unsigned int
#define BOOST_PP_DEC_39 38
#define NID_id_it_caProtEncCert 298
#define OBJ_dhSinglePass_stdDH_sha512kdf_scheme OBJ_secg_scheme,11L,3L
#define SSL_R_INVALID_SEQUENCE_NUMBER 402
#define BOOST_PP_INTERCEPT_147 
#define BOOST_PP_DEC_41 40
#define BOOST_PP_DEC_42 41
#define BOOST_PP_DEC_44 43
#define BOOST_PP_DEC_45 44
#define BOOST_PP_DEC_46 45
#define BOOST_PP_DEC_47 46
#define BOOST_PP_DEC_49 48
#define _mm512_maskz_add_round_pd(U,A,B,C) (__m512d)__builtin_ia32_addpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)
#define IP_UNBLOCK_SOURCE 37
#define BOOST_HAS_TRIVIAL_CONSTRUCTOR(T) ((__has_trivial_constructor(T) BOOST_INTEL_TT_OPTS) && ! ::boost::is_volatile<T>::value)
#define BOOST_PP_TUPLE_EAT_51(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50) 
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_226(p,o,s) 0
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 0x0300C00A
#define EVP_CTRL_AEAD_SET_IVLEN 0x9
#define OBJ_ecdsa_with_SHA3_256 OBJ_sigAlgs,10L
#define SN_ct_precert_scts "ct_precert_scts"
#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 0x0300C02D
#define OBJ_documentAuthor OBJ_pilotAttributeType,14L
#define _STL_PAIR_H 1
#define BOOST_PP_DEC_50 49
#define BOOST_PP_DEC_51 50
#define BOOST_PP_DEC_52 51
#define BOOST_PP_DEC_53 52
#define BOOST_PP_FOR_37_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(38, s) BOOST_PP_IIF(c, BOOST_PP_FOR_38, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(38, s), p, o, m)
#define SSL_F_TLS1_EXPORT_KEYING_MATERIAL 314
#define BOOST_PP_DEC_59 58
#define BOOST_MPL_AUX_LARGEST_INT_HPP_INCLUDED 
#define ASN1_R_INTEGER_TOO_LARGE_FOR_LONG 128
#define __cpp_nontype_template_parameter_auto 201606L
#define RAND_cleanup() while(0) continue
#define EVLOOP_NONBLOCK 0x02
#define SN_secp112r2 "secp112r2"
#define O_NOCTTY 0400
#define BIO_F_BIO_ACCEPT 101
#define BOOST_PP_DEC_62 61
#define NID_id_ct_xml 1060
#define BOOST_PP_DEC_64 63
#define BOOST_PP_DEC_65 64
#define BOOST_PP_DEC_66 65
#define BOOST_PP_DEC_67 66
#define BOOST_PP_DEC_68 67
#define BOOST_PP_DEC_69 68
#define BOOST_PP_DEC_175 174
#define IDP_REASONS 0x40
#define ASN1_F_OID_MODULE_INIT 174
#define FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY 0x00000001
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110100 (1)(0)(1)(1)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110101 (1)(0)(1)(1)(0)(1)(0)(1),
#define BOOST_PP_DEC_176 175
#define TLS1_RFC_ADH_WITH_AES_256_SHA "TLS_DH_anon_WITH_AES_256_CBC_SHA"
#define NO_ADDRESS NO_DATA
#define BOOST_PP_SEQ_FOLD_LEFT_197(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_197(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _POSIX2_BC_SCALE_MAX 99
#define SSL_want_write(s) (SSL_want(s) == SSL_WRITING)
#define BOOST_PP_DEC_178 177
#define NID_magma_cbc 1190
#define BOOST_PP_DEC_70 69
#define BOOST_PP_DEC_72 71
#define BOOST_PP_DEC_74 73
#define BOOST_PP_DEC_75 74
#define BOOST_PP_DEC_76 75
#define BOOST_PP_DEC_77 76
#define BOOST_PP_DEC_78 77
#define BOOST_PP_DEC_179 178
#define IP_DEFAULT_MULTICAST_TTL 1
#define RSA_R_DMP1_NOT_CONGRUENT_TO_D 124
#define EVP_CTRL_BLOCK_PADDING_MODE 0x21
#define BOOST_PP_WHILE_101_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_102, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(102, s))
#define BOOST_PP_TUPLE_EAT_57(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56) 
#define BOOST_PP_SEQ_FOLD_LEFT_199(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_199(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_netscape_ca_policy_url "Netscape CA Policy Url"
#define LN_friendlyCountryName "friendlyCountryName"
#define BOOST_PP_ENUM_SHIFTED_PARAMS(count,param) BOOST_PP_REPEAT(BOOST_PP_DEC(count), BOOST_PP_ENUM_SHIFTED_PARAMS_M, param)
#define _mm_mask_roundscale_pd(W,U,A,B) ((__m128d) __builtin_ia32_rndscalepd_128_mask ((__v2df)(__m128d)(A), (int)(B), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define BOOST_PP_DEC_80 79
#define BOOST_PP_DEC_81 80
#define BOOST_PP_DEC_82 81
#define BOOST_PP_DEC_83 82
#define BOOST_PP_DEC_84 83
#define BOOST_PP_DEC_85 84
#define BOOST_PP_DEC_86 85
#define BOOST_PP_DEC_87 86
#define BOOST_PP_DEC_88 87
#define SSL_F_TLS_PROCESS_CKE_GOST 413
#define BOOST_PP_NODE_70(p) BOOST_PP_IIF(p(70), BOOST_PP_NODE_69, BOOST_PP_NODE_71)
#define NID_id_cmc_addExtensions 334
#define V_ASN1_BIT_STRING 3
#define TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA 0x0300C00E
#define SO_EE_OFFENDER(ee) ((struct sockaddr*)((ee)+1))
#define OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme OBJ_secg_scheme,14L,0L
#define SN_owner "owner"
#define BOOST_PP_NODE_72(p) BOOST_PP_IIF(p(72), BOOST_PP_NODE_68, BOOST_PP_NODE_76)
#define __SIZEOF_FLOAT80__ 16
#define SSL_F_FINAL_KEY_SHARE 503
#define SN_des_ede3_ecb "DES-EDE3"
#define __S_ISTYPE(mode,mask) (((mode) & __S_IFMT) == (mask))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_190(op,st,ss,sz) 0
#define SOL_ATM 264
#define BOOST_PP_DEC_91 90
#define BOOST_PP_DEC_93 92
#define BOOST_PP_DEC_94 93
#define BOOST_PP_DEC_95 94
#define BOOST_PP_DEC_96 95
#define BOOST_PP_DEC_97 96
#define BOOST_PP_DEC_99 98
#define INT_LEAST16_MIN (-32767-1)
#define _GLIBCXX_TR1_EXP_INTEGRAL_TCC 1
#define BOOST_PP_LIST_FOLD_LEFT_122(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_123, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(123, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_CTOR_TYPENAME typename
#define EVP_PKEY_CTRL_GET_MD 13
#define SEGV_PKUERR SEGV_PKUERR
#define RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE 110
#define BOOST_PP_VARIADIC_HAS_OPT() BOOST_PP_VARIADIC_HAS_OPT_ELEM2(BOOST_PP_VARIADIC_HAS_OPT_FUNCTION(?),)
#define EVUTIL_AI_PASSIVE AI_PASSIVE
#define LN_hold_instruction_reject "Hold Instruction Reject"
#define _SIDD_MASKED_POSITIVE_POLARITY 0x20
#define SHA512_CBLOCK (SHA_LBLOCK*8)
#define BOOST_PP_FOR_242(s,p,o,m) BOOST_PP_FOR_242_C(BOOST_PP_BOOL(p(243, s)), s, p, o, m)
#define SSL_R_NO_METHOD_SPECIFIED 188
#define EVP_CIPHER_CTX_init(c) EVP_CIPHER_CTX_reset(c)
#define EVP_R_EXPECTING_AN_HMAC_KEY 174
#define _mm256_mask_shufflelo_epi16(W,U,A,B) ((__m256i) __builtin_ia32_pshuflw256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)(__m256i)(W), (__mmask16)(U)))
#define BOOST_PP_FOR_243(s,p,o,m) BOOST_PP_FOR_243_C(BOOST_PP_BOOL(p(244, s)), s, p, o, m)
#define EVP_PKEY_CTRL_GET1_ID (EVP_PKEY_ALG_CTRL + 12)
#define SSL_F_SSL_CTX_SET_TLSEXT_MAX_FRAGMENT_LENGTH 551
#define NID_magma_cfb 1191
#define SSL_VERIFY_POST_HANDSHAKE 0x08
#define VLOG_IF_EVERY_N(verboselevel,condition,n) LOG_IF_EVERY_N(INFO, (condition) && VLOG_IS_ON(verboselevel), n)
#define SSL_set_app_data(s,arg) (SSL_set_ex_data(s,0,(char *)(arg)))
#define ASN1_R_ILLEGAL_NULL 125
#define BOOST_CONTEXT_DETAIL_CONFIG_H 
#define NID_brainpoolP160r1 921
#define BOOST_MPL_ASSERT(pred) BOOST_MPL_AUX_ASSERT_CONSTANT( std::size_t , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( boost::mpl::assertion_failed<false>( boost::mpl::assert_arg( (void (*) pred)0, 1 ) ) ) )
#define O_ACCMODE 0003
#define BOOST_MPL_AUX_TRAITS_LAMBDA_SPEC_HPP_INCLUDED 
#define _PSTL_PRAGMA_DECLARE_SIMD _PSTL_PRAGMA(omp declare simd)
#define SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED 277
#define EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS 135
#define SN_aes_192_cfb1 "AES-192-CFB1"
#define SN_sha224WithRSAEncryption "RSA-SHA224"
#define BOOST_STATIC_CONSTANT(type,assignment) static const type assignment
#define _mm512_setr4_ps(e0,e1,e2,e3) _mm512_set4_ps(e3,e2,e1,e0)
#define SN_aes_192_cfb8 "AES-192-CFB8"
#define OBJ_setct_CredRevResTBE OBJ_set_ctype,73L
#define FIOGETOWN 0x8903
#define BOOST_MPL_PUSH_BACK_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_197(op,st,ss,sz) 0
#define OBJ_id_pda_countryOfCitizenship OBJ_id_pda,4L
#define SN_setct_RegFormResTBS "setct-RegFormResTBS"
#define EVP_PKEY_assign_EC_KEY(pkey,eckey) EVP_PKEY_assign((pkey),EVP_PKEY_EC, (char *)(eckey))
#define TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA "TLS_RSA_PSK_WITH_AES_128_CBC_SHA"
#define OPENSSL_secure_zalloc(num) CRYPTO_secure_zalloc(num, OPENSSL_FILE, OPENSSL_LINE)
#define BOOST_MPL_ITER_APPLY_HPP_INCLUDED 
#define EVP_F_EVP_DIGESTINIT_EX 128
#define evsignal_assign(ev,b,x,cb,arg) event_assign((ev), (b), (x), EV_SIGNAL|EV_PERSIST, cb, (arg))
#define OBJ_id_cmc_regInfo OBJ_id_cmc,18L
#define EL3RST 47
#define BIO_CTRL_DGRAM_GET_RECV_TIMEOUT 34
#define NID_brainpoolP160t1 922
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110 (0)(0)(1)(1)(0),
#define TLSEXT_signature_gostr34102012_512 239
#define _mm_maskz_gf2p8affine_epi64_epi8(A,B,C,D) ((__m128i) __builtin_ia32_vgf2p8affineqb_v16qi_mask((__v16qi)(__m128i)(B), (__v16qi)(__m128i)(C), (int)(D), (__v16qi)(__m128i) _mm_setzero_si128 (), (__mmask16)(A)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111100 (0)(1)(1)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111101 (0)(1)(1)(1)(1)(1)(0)(1),
#define RAND_F_RAND_DRBG_SET 104
#define FIZZ_UNION_MOVE_CASES(X,other) case Type::X ##_E: new (&X ##_) X(std::move(other.X ##_)); break;
#define SSL_R_WRONG_SIGNATURE_LENGTH 264
#define X509_V_ERR_AKID_SKID_MISMATCH 30
#define BOOST_PP_WHILE_86(p,o,s) BOOST_PP_WHILE_86_C(BOOST_PP_BOOL(p(87, s)), p, o, s)
#define LN_camellia_128_ofb128 "camellia-128-ofb"
#define SSL_in_accept_init(a) (SSL_in_init(a) && SSL_is_server(a))
#define EVP_PKS_RSA 0x0100
#define OBJ_aria_256_ofb128 OBJ_aria,14L
#define TLS1_CK_RSA_WITH_AES_256_SHA 0x03000035
#define __WINT_MAX__ 0xffffffffU
#define SSL_CTX_get_extra_chain_certs_only(ctx,px509) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_EXTRA_CHAIN_CERTS,1,px509)
#define TLS1_TXT_ECDHE_ECDSA_WITH_NULL_SHA "ECDHE-ECDSA-NULL-SHA"
#define SN_iso "ISO"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111110 (0)(1)(1)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01111111 (0)(1)(1)(1)(1)(1)(1)(1),
#define IOSQE_ASYNC (1U << IOSQE_ASYNC_BIT)
#define _LHASH OPENSSL_LHASH
#define _mm512_maskz_slli_epi16(U,X,C) ((__m512i)__builtin_ia32_psllwi512_mask ((__v32hi)(__m512i)(X), (int)(C), (__v32hi)(__m512i)_mm512_setzero_si512 (), (__mmask32)(U)))
#define SN_id_qcs_pkixQCSyntax_v1 "id-qcs-pkixQCSyntax-v1"
#define _mm512_roundscale_ps(A,B) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_undefined_ps(), (__mmask16)(-1), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_230 230
#define BN_FLG_SECURE 0x08
#define _GETOPT_POSIX_H 1
#define SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1 175
#define LC_ALL __LC_ALL
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_231 231
#define BOOST_PP_WHILE_185_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_186, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(186, s))
#define __stack_t_defined 1
#define _XOPEN_SOURCE 700
#define _mm512_mask_cvt_roundps_epi64(W,U,A,B) ((__m512i)__builtin_ia32_cvtps2qq512_mask ((A), (__v8di)(W), (U), (B)))
#define _POSIX2_BC_DIM_MAX 2048
#define S_TYPEISSEM(buf) __S_TYPEISSEM(buf)
#define EILSEQ 84
#define OBJ_id_tc26_gost_3410_2012_512_constants OBJ_id_tc26_sign_constants,2L
#define _SC_PII_SOCKET _SC_PII_SOCKET
#define NID_id_smime_aa_signingCertificate 223
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001 (0)(0)(1),
#define SSL_F_TLS_CONSTRUCT_CTOS_EARLY_DATA 530
#define BOOST_TYPE_TRAITS_COPY_CV_HPP_INCLUDED 
#define TLS_MD_SERVER_WRITE_KEY_CONST "server write key"
#define __OFF_T_MATCHES_OFF64_T 1
#define BOOST_MPL_AUX_CONFIG_USE_PREPROCESSED_HPP_INCLUDED 
#define __SIZE_MAX__ 0xffffffffffffffffUL
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_236 236
#define M_2_SQRTPIf128 __f128 (1.128379167095512573896158903121545172)
#define OPENSSL_free(addr) CRYPTO_free(addr, OPENSSL_FILE, OPENSSL_LINE)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_237 237
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010 (0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011 (0)(1)(1),
#define AF_APPLETALK PF_APPLETALK
#define OBJ_domainRelatedObject OBJ_pilotObjectClass,17L
#define PEM_STRING_DSA_PUBLIC "DSA PUBLIC KEY"
#define SOL_PPPOL2TP 273
#define _mm_maskz_slli_epi16(U,X,C) ((__m128i)__builtin_ia32_psllwi128_mask ((__v8hi)(__m128i)(X), (int)(C), (__v8hi)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define _SC_LEVEL3_CACHE_LINESIZE _SC_LEVEL3_CACHE_LINESIZE
#define OBJ_pkcs7_signedAndEnveloped OBJ_pkcs7,4L
#define _mm512_mask_getmant_round_pd(W,U,X,B,C,R) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)(W), (__mmask8)(U), (R)))
#define _mm256_mask_cmp_epi32_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(P), (__mmask8)(M)))
#define SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac "id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm-omac"
#define OBJ_sm4_ctr OBJ_sm_scheme,104L,7L
#define MADV_MERGEABLE 12
#define _AVX512VP2INTERSECTVLINTRIN_H_INCLUDED 
#define BOOST_PP_REPEAT_3_47(m,d) BOOST_PP_REPEAT_3_46(m, d) m(4, 46, d)
#define ADJ_ESTERROR 0x0008
#define EHOSTUNREACH 113
#define BOOST_MOVE_HAS_FEATURE(x) 0
#define BOOST_PP_FOR_72_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(73, s) BOOST_PP_IIF(c, BOOST_PP_FOR_73, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(73, s), p, o, m)
#define _mm_comi_round_sd(A,B,C,D) __builtin_ia32_vcomisd(A, B, C, D)
#define __GCC_IEC_559 2
#define SO_PEERCRED 17
#define BOOST_PP_ENUM_TRAILING_PARAMS_Z(z,count,param) BOOST_PP_REPEAT_ ## z(count, BOOST_PP_ENUM_TRAILING_PARAMS_M, param)
#define _mm_comi_round_ss(A,B,C,D) __builtin_ia32_vcomiss(A, B, C, D)
#define __USE_ISOC11 1
#define EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED 179
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_122(o,s,l) 0
#define RLIMIT_STACK RLIMIT_STACK
#define _IOFBF 0
#define BOOST_PP_SEQ_FOLD_LEFT_61(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_61(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _POSIX2_BC_STRING_MAX 1000
#define FOLLY_TYPE_INFO_OF(...) (&typeid(__VA_ARGS__))
#define _mm_maskz_slli_epi32(U,X,C) ((__m128i)__builtin_ia32_pslldi128_mask ((__v4si)(__m128i)(X), (int)(C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define DEPRECATEDIN_1_2_0(f) f;
#define OBJ_md2 OBJ_rsadsi,2L,2L
#define OBJ_md4 OBJ_rsadsi,2L,4L
#define _SC_NPROCESSORS_CONF _SC_NPROCESSORS_CONF
#define LOG_TO_STRING(severity,message) LOG_TO_STRING_ ##severity(static_cast<string*>(message)).stream()
#define lh_num_items OPENSSL_LH_num_items
#define _mm512_maskz_extractf32x8_ps(U,X,C) ((__m256) __builtin_ia32_extractf32x8_mask ((__v16sf)(__m512) (X), (int) (C), (__v8sf)(__m256) _mm256_setzero_ps (), (__mmask8) (U)))
#define _GLIBCXX_HAVE_FMODL 1
#define TLS1_CK_PSK_WITH_AES_256_CBC_SHA 0x0300008D
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname
#define APACHE_THRIFT_ACCESSOR_parent 
#define _SC_SYSTEM_DATABASE _SC_SYSTEM_DATABASE
#define OPENSSL_clear_free(addr,num) CRYPTO_clear_free(addr, num, OPENSSL_FILE, OPENSSL_LINE)
#define _GLIBCXX_HAVE_INTTYPES_H 1
#define BOOST_PP_INTERCEPT_154 
#define SSL3_AD_UNEXPECTED_MESSAGE 10
#define _GLIBCXX_HAVE_ENOTSUP 1
#define BOOST_PP_SEQ_FOLD_LEFT_62(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_62(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SO_SELECT_ERR_QUEUE 45
#define OBJ_documentTitle OBJ_pilotAttributeType,12L
#define SSIZE_MAX LONG_MAX
#define MAP_FILE 0
#define SSL_R_NULL_SSL_METHOD_PASSED 196
#define RSA_R_DIGEST_NOT_ALLOWED 145
#define NID_ipsecUser 296
#define PEM_R_ERROR_CONVERTING_PRIVATE_KEY 115
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_235(op,st,ss,sz) 0
#define BOOST_PP_INTERCEPT_158 
#define _mm_maskz_fnmadd_round_sd(U,A,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_maskz (A, -(B), C, U, R)
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB_ARG 129
#define BOOST_PP_SLOT_OFFSET_9(x) BOOST_PP_SLOT_OFFSET_10(x) % 100000000UL
#define SSL_F_CONSTRUCT_STATEFUL_TICKET 636
#define THRIFT_HAVE_LIBSNAPPY 1
#define __cpp_lib_constexpr_string_view 201811L
#define _mm_slli_si128(A,N) ((__m128i)__builtin_ia32_pslldqi128 ((__m128i)(A), (int)(N) * 8))
#define BOOST_INTRUSIVE_HAS_MEMBER_FUNC_CALLED(TRAITS_NAME,FUNC_NAME) template <typename Type> struct TRAITS_NAME { struct BaseMixin { void FUNC_NAME(); }; struct Base : public Type, public BaseMixin { Base(); }; template <typename T, T t> class Helper{}; template <typename U> static ::boost::intrusive::detail::no_type test(U*, Helper<void (BaseMixin::*)(), &U::FUNC_NAME>* = 0); static ::boost::intrusive::detail::yes_type test(...); static const bool value = sizeof(::boost::intrusive::detail::yes_type) == sizeof(test((Base*)(0))); };
#define NID_hmac_sha3_224 1102
#define AI_NUMERICSERV 0x0400
#define X509_PCY_TREE_INVALID -1
#define OBJ_id_smime_alg_ESDHwithRC2 OBJ_id_smime_alg,2L
#define signal_add(ev,tv) event_add((ev), (tv))
#define SSL_CTX_add1_chain_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN_CERT,1,(char *)(x509))
#define NID_aes_192_ofb128 424
#define BOOST_PP_INC_107 108
#define BOOST_PP_DEC_185 184
#define ASN1_F_ASN1_CB 177
#define BIO_reset(b) (int)BIO_ctrl(b,BIO_CTRL_RESET,0,NULL)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_238(op,st,ss,sz) 0
#define _IOC_TYPE(nr) (((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)
#define _GLIBCXX_HAVE_CDTOR_CALLABI 0
#define BOOST_PP_DEC_188 187
#define _CXXABI_INIT_EXCEPTION_H 1
#define EVP_R_BAD_KEY_LENGTH 195
#define SN_wap_wsg "wap-wsg"
#define BOOST_MPL_AUX_CONFIG_BIND_HPP_INCLUDED 
#define RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES 172
#define NID_magma_ctr 1188
#define BOOST_PP_SEQ_FOLD_LEFT_65(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_65(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PKCS7_F_PKCS7_DECRYPT_RINFO 133
#define NID_personalTitle 487
#define SN_aes_256_cfb128 "AES-256-CFB"
#define SN_id_smime_aa_ets_sigPolicyId "id-smime-aa-ets-sigPolicyId"
#define ___constant_swahb32(x) ((__u32)( (((__u32)(x) & (__u32)0x00ff00ffUL) << 8) | (((__u32)(x) & (__u32)0xff00ff00UL) >> 8)))
#define __GID_T_TYPE __U32_TYPE
#define PKCS7_R_CONTENT_AND_DATA_PRESENT 118
#define NID_hmac_sha3_256 1103
#define EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN (EVP_PKEY_ALG_CTRL + 4)
#define SSL_R_NO_CERTIFICATE_SET 179
#define EVP_CIPH_FLAG_FIPS 0x4000
#define NID_camellia_128_cfb128 757
#define BOOST_PP_NODE_81(p) BOOST_PP_IIF(p(81), 81, 82)
#define LN_ad_timeStamping "AD Time Stamping"
#define __FINITE_MATH_ONLY__ 0
#define BOOST_PP_FOR_179_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(180, s) BOOST_PP_IIF(c, BOOST_PP_FOR_180, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(180, s), p, o, m)
#define _GLIBCXX_QUEUE 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_45(op,st,ss,sz) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_108(s,p,o,m) 0
#define __cpp_variable_templates 201304L
#define X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD 15
#define X509V3_R_INVALID_SAFI 164
#define _SC_SCHAR_MAX _SC_SCHAR_MAX
#define ASN1_R_SECOND_NUMBER_TOO_LARGE 147
#define EVENT__HAVE_SYS_TIMERFD_H 1
#define LN_idea_ecb "idea-ecb"
#define _GLIBCXX_FORWARD_LIST 1
#define BOOST_PP_WHILE_81_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_82, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(82, s))
#define SIGALRM 14
#define TLS1_CK_ECDH_anon_WITH_RC4_128_SHA 0x0300C016
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_47(op,st,ss,sz) 0
#define BOOST_PP_FOR_250(s,p,o,m) BOOST_PP_FOR_250_C(BOOST_PP_BOOL(p(251, s)), s, p, o, m)
#define TLS1_CK_DHE_PSK_WITH_ARIA_256_GCM_SHA384 0x0300C06D
#define RUSAGE_CHILDREN RUSAGE_CHILDREN
#define BOOST_PP_NODE_87(p) BOOST_PP_IIF(p(87), 87, 88)
#define TLSEXT_signature_gostr34102012_256 238
#define SSL_F_SSL_CTX_SET_CIPHER_LIST 269
#define APACHE_THRIFT_ACCESSOR_context 
#define _GLIBCXX_OPTIONAL 1
#define BOOST_MOVE_IS_TRIVIALLY_COPY_CONSTRUCTIBLE(T) ::boost::move_detail::is_pod<T>::value || (::boost::move_detail::is_copy_constructible<T>::value && BOOST_MOVE_HAS_TRIVIAL_COPY(T))
#define NID_sect233r1 727
#define BOOST_PP_SEQ_FOLD_LEFT_68(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_68(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_TRANSFORM(op,data,seq) BOOST_PP_SEQ_TAIL(BOOST_PP_TUPLE_ELEM(3, 2, BOOST_PP_SEQ_FOLD_LEFT(BOOST_PP_SEQ_TRANSFORM_O, (op, data, (nil)), seq)))
#define NID_roleOccupant 877
#define SIGFPE 8
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_39(o,s,l) 0
#define _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
#define BOOST_PP_FOR_257(s,p,o,m) BOOST_PP_IIF ( BOOST_PP_FOR_257_PR(s,p), BOOST_PP_FOR_257_ERROR, BOOST_PP_EMPTY ) ()
#define SN_dh_std_kdf "dh-std-kdf"
#define X509_get_notBefore X509_getm_notBefore
#define _CMP_GE_OQ 0x1d
#define __cpp_lib_erase_if 202002L
#define BOOST_PP_EXPR_IIF_1(expr) expr
#define BOOST_PP_WHILE_226_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_227, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(227, s))
#define PEM_R_UNSUPPORTED_PUBLIC_KEY_TYPE 110
#define BOOST_PP_EXPR_IIF_I(bit,expr) BOOST_PP_EXPR_IIF_ ## bit(expr)
#define BOOST_PP_CHECK_1(chk) BOOST_PP_CHECK_2(chk)
#define BOOST_PP_CHECK_2(res,_) res
#define OBJ_md5WithRSAEncryption OBJ_pkcs1,4L
#define BOOST_MPL_AUX_ITER_FOLD_IMPL_HPP_INCLUDED 
#define BOOST_PP_STRINGIZE_I(...) #__VA_ARGS__
#define BOOST_PP_CHECK_D(x,type) BOOST_PP_CHECK_1(BOOST_PP_CAT(BOOST_PP_CHECK_RESULT_, type x))
#define __DEC64_MAX_EXP__ 385
#define TLSEXT_TYPE_padding 21
#define BOOST_PP_ENUM_1(c,m,d) BOOST_PP_REPEAT_1(c, BOOST_PP_ENUM_M_1, (m, d))
#define BOOST_PP_ENUM_2(c,m,d) BOOST_PP_REPEAT_2(c, BOOST_PP_ENUM_M_2, (m, d))
#define BOOST_PP_ENUM_4(c,m,d) BOOST_PP_ERROR(0x0003)
#define TLS1_TXT_ECDH_RSA_WITH_AES_128_SHA256 "ECDH-RSA-AES128-SHA256"
#define BUS_MCEERR_AR BUS_MCEERR_AR
#define __SIZEOF_PTHREAD_CONDATTR_T 4
#define __DECL_SIMD_expf16 
#define evtimer_del(ev) event_del(ev)
#define BIO_R_UNABLE_TO_NODELAY 138
#define SSL_F_PARSE_CA_NAMES 541
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101011 (1)(1)(1)(0)(1)(0)(1)(1),
#define OPENSSL_NO_IDEA 
#define EAI_INPROGRESS -100
#define __FLT64_MANT_DIG__ 53
#define BIO_set_close(b,c) (int)BIO_ctrl(b,BIO_CTRL_SET_CLOSE,(c),NULL)
#define TLSEXT_TYPE_user_mapping 6
#define htobe16(x) __bswap_16 (x)
#define PEM_STRING_RSA_PUBLIC "RSA PUBLIC KEY"
#define _SC_BC_SCALE_MAX _SC_BC_SCALE_MAX
#define LN_id_pbkdf2 "PBKDF2"
#define LN_rc5_ecb "rc5-ecb"
#define X509_V_ERR_DIFFERENT_CRL_SCOPE 44
#define OBJ_X9_62_id_publicKeyType OBJ_ansi_X9_62,2L
#define __SHRT_MAX__ 0x7fff
#define BIO_set_conn_address(b,addr) BIO_ctrl(b,BIO_C_SET_CONNECT,2, (char *)(addr))
#define M_El 2.718281828459045235360287471352662498L
#define NID_id_cmc_recipientNonce 333
#define RLIMIT_NLIMITS __RLIMIT_NLIMITS
#define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX11_USE_C99_COMPLEX
#define X509_F_X509_GET_PUBKEY_PARAMETERS 110
#define EVP_PKEY_CTX_set_rsa_mgf1_md(ctx,md) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_RSA_MGF1_MD, 0, (void *)(md))
#define BIO_F_BIO_WRITE_EX 119
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_241 241
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000111 (0)(0)(0)(0)(0)(1)(1)(1),
#define __cpp_if_constexpr 201606L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_243 243
#define BOOST_MPL_VECTOR_AUX_SIZE_HPP_INCLUDED 
#define _GLIBCXX_CPU_DEFINES 1
#define SSL_num_renegotiations(ssl) SSL_ctrl((ssl),SSL_CTRL_GET_NUM_RENEGOTIATIONS,0,NULL)
#define _SC_SCHAR_MIN _SC_SCHAR_MIN
#define BOOST_MOVE_DETAIL_ITERATOR_TRAITS_HPP 
#define SN_des_ede3_ofb64 "DES-EDE3-OFB"
#define BOOST_PP_REPEAT_3_51(m,d) BOOST_PP_REPEAT_3_50(m, d) m(4, 50, d)
#define OBJ_organizationName OBJ_X509,10L
#define FOLLY_HAVE_CLOCK_GETTIME 1
#define X509_LOOKUP_add_dir(x,name,type) X509_LOOKUP_ctrl((x),X509_L_ADD_DIR,(name),(long)(type),NULL)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010001 (1)(1)(0)(1)(0)(0)(0)(1),
#define BOOST_HAS_NANOSLEEP 
#define _mm512_ternarylogic_epi64(A,B,C,I) ((__m512i) __builtin_ia32_pternlogq512_mask ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(I), (__mmask8)-1))
#define ASN1_PKEY_CTRL_GET1_TLS_ENCPT 0xa
#define EVP_CIPHER_mode(e) (EVP_CIPHER_flags(e) & EVP_CIPH_MODE)
#define BOOST_IF_CONSTEXPR if constexpr
#define _mm256_ceil_pd(V) _mm256_round_pd ((V), _MM_FROUND_CEIL)
#define EVENT__HAVE_CLOCK_GETTIME 1
#define SIGSTKSZ 8192
#define GLOG_MSVC_POP_WARNING() 
#define EVBUFFER_EOF BEV_EVENT_EOF
#define FPE_FLTSUB FPE_FLTSUB
#define EVP_MD_CTX_destroy(ctx) EVP_MD_CTX_free((ctx))
#define _mm512_mask_insertf64x2(W,U,X,Y,C) ((__m512d) __builtin_ia32_insertf64x2_512_mask ((__v8df)(__m512d) (X), (__v2df)(__m128d) (Y), (int) (C), (__v8df)(__m512d) (W), (__mmask8) (U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010010 (1)(1)(0)(1)(0)(0)(1)(0),
#define SO_MEMINFO 55
#define __DECL_SIMD_expf64 
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_231(p,o,s) 0
#define X509V3_R_USER_TOO_LONG 132
#define BOOST_PP_REPEAT_3_57(m,d) BOOST_PP_REPEAT_3_56(m, d) m(4, 56, d)
#define _CS_GNU_LIBPTHREAD_VERSION _CS_GNU_LIBPTHREAD_VERSION
#define EVP_MD_CTX_FLAG_NON_FIPS_ALLOW 0x0008
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define BOOST_PP_LIST_FOLD_RIGHT_250(o,s,l) BOOST_PP_LIST_FOLD_LEFT_250(o, s, BOOST_PP_LIST_REVERSE_D(250, l))
#define _mm512_maskz_fmaddsub_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_maskz(A, B, C, U, R)
#define __cpp_lib_concepts 202002L
#define __cpp_lib_lcm 201606
#define _SC_V6_LP64_OFF64 _SC_V6_LP64_OFF64
#define _mm_mmask_i32gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128i) __builtin_ia32_gather3siv4si ((__v4si)(__m128i) (V1OLD), (void const *) (ADDR), (__v4si)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define BOOST_PP_SEQ_FOLD_LEFT_180(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_180(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define htobe64(x) __bswap_64 (x)
#define DECLARE_ASN1_ENCODE_FUNCTIONS(type,itname,name) type *d2i_ ##name(type **a, const unsigned char **in, long len); int i2d_ ##name(type *a, unsigned char **out); DECLARE_ASN1_ITEM(itname)
#define X509V3_F_V2I_POLICY_MAPPINGS 145
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CBC_SHA "ECDHE-ECDSA-AES128-SHA"
#define _PC_ASYNC_IO _PC_ASYNC_IO
#define BOOST_PP_FOR_3_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(4, s) BOOST_PP_IIF(c, BOOST_PP_FOR_4, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(4, s), p, o, m)
#define BOOST_PP_INTERCEPT_162 
#define _UNISTD_H 1
#define SSL_get_app_data(s) (SSL_get_ex_data(s,0))
#define _mm512_mask_fnmadd_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfnmaddpd512_mask(A, B, C, U, R)
#define BOOST_PP_REPEAT_1_200(m,d) BOOST_PP_REPEAT_1_199(m, d) m(2, 199, d)
#define BOOST_PP_LIST_FOLD_RIGHT_253(o,s,l) BOOST_PP_LIST_FOLD_LEFT_253(o, s, BOOST_PP_LIST_REVERSE_D(253, l))
#define BOOST_MPL_AUX_CONFIG_STATIC_CONSTANT_HPP_INCLUDED 
#define __SOCKADDR_COMMON(sa_prefix) sa_family_t sa_prefix ##family
#define _mm512_mask_fnmadd_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfnmaddps512_mask(A, B, C, U, R)
#define RAND_R_IN_ERROR_STATE 114
#define __DEC32_EPSILON__ 1E-6DF
#define BOOST_PP_FRAME_FLAGS(i) (BOOST_PP_CAT(BOOST_PP_ITERATION_FLAGS_, i)())
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_236(p,o,s) 0
#define V_ASN1_TELETEXSTRING 20
#define OBJ_setct_AuthRevResBaggage OBJ_set_ctype,10L
#define OBJ_homePostalAddress OBJ_pilotAttributeType,39L
#define SSL_F_SSL3_GENERATE_MASTER_SECRET 388
#define SN_crl_distribution_points "crlDistributionPoints"
#define BOOST_TT_CONDITIONAL_HPP_INCLUDED 
#define _mm_extract_epi16(A,N) ((int) (unsigned short) __builtin_ia32_vec_ext_v8hi ((__v8hi)(__m128i)(A), (int)(N)))
#define SSL_OP_NO_ENCRYPT_THEN_MAC 0x00080000U
#define NID_hold_instruction_call_issuer 432
#define __blksize_t_defined 
#define IMPLEMENT_PEM_write_cb_fp(name,type,str,asn1) int PEM_write_ ##name(FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write((i2d_of_void *)i2d_ ##asn1,str,fp,x,enc,kstr,klen,cb,u); }
#define SCNo16 "ho"
#define _GLIBCXX_BEGIN_NAMESPACE_LDBL 
#define BOOST_PP_INTERCEPT_238 
#define _GLIBCXX_USE_C99_CTYPE_TR1 1
#define _mm256_mask_shuffle_pd(W,U,A,B,C) ((__m256d)__builtin_ia32_shufpd256_mask ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define _mm_mmask_i32gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128i) __builtin_ia32_gather3siv2di ((__v2di)(__m128i) (V1OLD), (void const *) (ADDR), (__v4si)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define BOOST_PP_SEQ_ELEM_111(_) BOOST_PP_SEQ_ELEM_110
#define _mm256_mask_shuffle_ps(W,U,A,B,C) ((__m256) __builtin_ia32_shufps256_mask ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define SSL_TXT_SHA "SHA"
#define BOOST_PP_DEC_191 190
#define LN_ecdsa_with_SHA3_512 "ecdsa_with_SHA3-512"
#define _GLIBCXX_SYMVER 1
#define ev_int16_t int16_t
#define OPENSSL_NO_CRYPTO_MDEBUG 
#define SSL_CTRL_GET_SESS_CACHE_SIZE 43
#define SSL_TXT_SHA384 "SHA384"
#define _mm_extract_epi32(X,N) ((int) __builtin_ia32_vec_ext_v4si ((__v4si)(__m128i)(X), (int)(N)))
#define SSL_R_TOO_MANY_WARN_ALERTS 409
#define ASN1_R_UNKNOWN_TAG 194
#define FSCRYPT_POLICY_FLAGS_PAD_16 0x02
#define TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA256 "ADH-CAMELLIA128-SHA256"
#define SCNo32 "o"
#define _mm512_mask_min_round_pd(W,U,A,B,R) (__m512d)__builtin_ia32_minpd512_mask(A, B, W, U, R)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101001 (0)(1)(0)(1)(0)(0)(1),
#define BOOST_PP_WHILE_152_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_153, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(153, s))
#define BOOST_PP_SEQ_FOLD_LEFT_I_202(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_203, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(203, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_RV_REF_END_IF_CXX11 BOOST_RV_REF_END
#define BOOST_MPL_AUX_NESTED_TYPE_WKND(T) ::boost::mpl::aux::nested_type_wknd<T>
#define _mm512_i32scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv16sf ((void *) (ADDR), (__mmask16)0xFFFF, (__v16si)(__m512i) (INDEX), (__v16sf)(__m512) (V1), (int) (SCALE))
#define BOOST_PP_DEC_196 195
#define _THRIFT_CONCURRENCY_UTIL_H_ 1
#define NID_setct_CapRevResData 549
#define BOOST_PP_SEQ_ELEM_114(_) BOOST_PP_SEQ_ELEM_113
#define LN_ct_precert_scts "CT Precertificate SCTs"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_110(s,p,o,m) 0
#define SSL_R_MISSING_RSA_SIGNING_CERT 170
#define RSA_R_BAD_PAD_BYTE_COUNT 103
#define SSL_ERROR_WANT_X509_LOOKUP 4
#define __GNUC_VA_LIST 
#define DSA_F_DSA_SIGN 106
#define __WINT_MIN__ 0U
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101010 (0)(1)(0)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101011 (0)(1)(0)(1)(0)(1)(1),
#define BOOST_PP_DEC_199 198
#define BIO_CTRL_SET_CALLBACK 14
#define PEM_STRING_RSA "RSA PRIVATE KEY"
#define _SC_SHELL _SC_SHELL
#define FS_NOATIME_FL 0x00000080
#define SSL_F_TLS_CONSTRUCT_STOC_PSK 504
#define TCP_REPAIR_QUEUE 20
#define BOOST_PP_SEQ_FOLD_LEFT_I_205(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_206, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(206, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define FSCRYPT_POLICY_FLAGS_PAD_32 0x03
#define BOOST_PP_SEQ_ELEM_117(_) BOOST_PP_SEQ_ELEM_116
#define _STREAMBUF_ITERATOR_H 1
#define __DECL_SIMD_logf128x 
#define _GLIBCXX_STACK 1
#define ASN1_F_BITSTR_CB 180
#define EVP_F_EVP_PKEY_DECRYPT_INIT 138
#define SO_BPF_EXTENSIONS 48
#define BIO_RR_CONNECT 0x02
#define _mm_extract_epi64(X,N) ((long long) __builtin_ia32_vec_ext_v2di ((__v2di)(__m128i)(X), (int)(N)))
#define RSA_F_RSA_NULL_PUBLIC_DECRYPT 134
#define EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES 162
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_119(s,p,o,m) 0
#define X509_TRUST_TRUSTED 1
#define SCNo64 __PRI64_PREFIX "o"
#define SN_id_GostR3410_94_CryptoPro_D_ParamSet "id-GostR3410-94-CryptoPro-D-ParamSet"
#define ASN1_F_ASN1_STRING_TABLE_ADD 129
#define BOOST_PP_NODE_94(p) BOOST_PP_IIF(p(94), BOOST_PP_NODE_93, BOOST_PP_NODE_95)
#define SSL_F_TLS_PARSE_CERTIFICATE_AUTHORITIES 566
#define ADJ_MAXERROR 0x0004
#define SSL_F_WPACKET_INTERN_INIT_LEN 633
#define SCNxFAST8 "hhx"
#define _POSIX_AIO_LISTIO_MAX 2
#define BOOST_PP_VARIADICS 1
#define BN_F_BN_MOD_EXP_RECP 125
#define X509_FLAG_NO_ISSUER (1L << 4)
#define BOOST_PP_VARIADIC_ELEM_5(e0,e1,e2,e3,e4,e5,...) e5
#define IMPLEMENT_PEM_write_const(name,type,str,asn1) IMPLEMENT_PEM_write_bio_const(name, type, str, asn1) IMPLEMENT_PEM_write_fp_const(name, type, str, asn1)
#define SSL_R_CANNOT_CHANGE_CIPHER 109
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define ASN1_F_ASN1_TEMPLATE_NOEXP_D2I 131
#define FOLLY_HAVE_MSG_ERRQUEUE 1
#define OBJ_RSA_SHA3_512 OBJ_sigAlgs,16L
#define M_PI_2f128 __f128 (1.570796326794896619231321691639751442)
#define NID_rsadsi 1
#define _mm512_bslli_epi128(A,N) ((__m512i)__builtin_ia32_pslldq512 ((__m512i)(A), (int)(N) * 8))
#define NID_documentSeries 449
#define BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_TRIPLE_SEQUENCE(bit_sequence) BOOST_PP_CAT ( BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_1 bit_sequence , END_BIT )
#define SSL_F_TLS_CONSTRUCT_CLIENT_HELLO 487
#define ASN1_F_ASN1_ITEM_UNPACK 199
#define __EDG_VERSION___WORKAROUND_GUARD 1
#define GFLAGS_NS_GFLAGS_H_ 
#define __cpp_impl_destroying_delete 201806L
#define _GLIBCXX_HAVE_LINK 1
#define APACHE_THRIFT_ACCESSOR_elements 
#define B_ASN1_UNKNOWN 0x1000
#define BOOST_PP_REPEAT_2_27(m,d) BOOST_PP_REPEAT_2_26(m, d) m(3, 26, d)
#define __osockaddr_defined 1
#define OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet OBJ_cryptopro,31L,5L
#define DCHECK_LE(val1,val2) CHECK_LE(val1, val2)
#define BOOST_PP_INTERCEPT_5 
#define NID_set_rootKeyThumb 624
#define OBJ_id_qcs_pkixQCSyntax_v1 OBJ_id_qcs,1L
#define TLS1_TXT_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA "ECDHE-ECDSA-DES-CBC3-SHA"
#define BOOST_PP_INTERCEPT_6 
#define TLS1_RFC_RSA_WITH_SEED_SHA "TLS_RSA_WITH_SEED_CBC_SHA"
#define SN_des_ede_ecb "DES-EDE"
#define NID_id_qcs 267
#define ASN1_R_ERROR_SETTING_CIPHER_PARAMS 114
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
#define LN_desx_cbc "desx-cbc"
#define BOOST_PP_INTERCEPT_7 
#define SN_aes_128_cfb1 "AES-128-CFB1"
#define EVP_CTRL_GCM_GET_TAG EVP_CTRL_AEAD_GET_TAG
#define _SC_2_C_BIND _SC_2_C_BIND
#define __GLIBC_USE_IEC_60559_TYPES_EXT 1
#define _POSIX_LINK_MAX 8
#define TLS1_TXT_ADH_WITH_AES_128_SHA "ADH-AES128-SHA"
#define _GLIBCXX_HAVE_LIMIT_FSIZE 1
#define BOOST_PP_INTERCEPT_8 
#define AF_TIPC PF_TIPC
#define _SIDD_SWORD_OPS 0x03
#define _mm512_maskz_rsqrt28_ps(U,A) _mm512_maskz_rsqrt28_round_ps(U, A, _MM_FROUND_CUR_DIRECTION)
#define SSL_R_WRONG_CURVE 378
#define __encls_edbgrd(leaf,b,c,retval) __asm__ __volatile__("encls\n\t" : "=a" (retval), "=b" (b) : "a" (leaf), "c" (c))
#define _mm_mask_shldi_epi32(A,B,C,D,E) ((__m128i) __builtin_ia32_vpshld_v4si_mask ((__v4si)(__m128i)(C), (__v4si)(__m128i)(D), (int)(E), (__v4si)(__m128i)(A), (__mmask8)(B)))
#define RSA_R_D_E_NOT_CONGRUENT_TO_1 123
#define _SC_PII_OSI_CLTS _SC_PII_OSI_CLTS
#define BOOST_INTRUSIVE_UNORDERED_SET_HPP 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110100 (0)(0)(1)(1)(0)(1)(0)(0),
#define BIO_C_SET_BUF_MEM 114
#define SSL_CTRL_SET_MTU 17
#define SSL_CTX_set_current_cert(ctx,op) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CURRENT_CERT, op, NULL)
#define BOOST_MPL_BOOL_HPP_INCLUDED 
#define BOOST_PP_COMPL_I(x) BOOST_PP_COMPL_ ## x
#define PRIuLEAST16 "u"
#define EVP_CTRL_CCM_SET_IV_FIXED EVP_CTRL_AEAD_SET_IV_FIXED
#define NID_aes_256_cbc_hmac_sha1 918
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110111 (0)(0)(1)(1)(0)(1)(1)(1),
#define _BMIINTRIN_H_INCLUDED 
#define __FLT32X_MANT_DIG__ 53
#define SSL_CERT_SET_NEXT 2
#define _POSIX_CHILD_MAX 25
#define NID_aria_192_ofb128 1073
#define BOOST_PP_WHILE_121(p,o,s) BOOST_PP_WHILE_121_C(BOOST_PP_BOOL(p(122, s)), p, o, s)
#define NID_rc2_cfb64 39
#define THRIFT_SERVER_H_ 1
#define BOOST_PP_FOR_146_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(147, s) BOOST_PP_IIF(c, BOOST_PP_FOR_147, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(147, s), p, o, m)
#define DH_FLAG_CACHE_MONT_P 0x01
#define OBJ_aes_256_cfb128 OBJ_aes,44L
#define LN_netscape_renewal_url "Netscape Renewal Url"
#define _mm256_getmant_pd(X,B,C) ((__m256d) __builtin_ia32_getmantpd256_mask ((__v4df)(__m256d) (X), (int)(((C)<<2) | (B)), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)-1))
#define MS_MGC_MSK 0xffff0000
#define _mm256_getmant_ps(X,B,C) ((__m256) __builtin_ia32_getmantps256_mask ((__v8sf)(__m256) (X), (int)(((C)<<2) | (B)), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)-1))
#define _GLIBCXX_INVOKE_H 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_257 257
#define ENODATA 61
#define PRIuLEAST32 "u"
#define _GLIBCXX_USE_C99_FENV_TR1 1
#define _MSC_FULL_VER_WORKAROUND_GUARD 1
#define BOOST_PP_SLOT_CC_6_D(a,b,c,d,e,f) a ## b ## c ## d ## e ## f
#define SN_aes_256_xts "AES-256-XTS"
#define BOOST_PP_SEQ_FOLD_LEFT_I_150(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_151, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(151, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define ADJ_OFFSET_SINGLESHOT 0x8001
#define SSL_R_BAD_DECOMPRESSION 107
#define _STATBUF_ST_NSEC 
#define PKCS7_REUSE_DIGEST 0x8000
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_163 163
#define __SOCKADDR_COMMON_SIZE (sizeof (unsigned short int))
#define BOOST_PP_REPEAT_3_67(m,d) BOOST_PP_REPEAT_3_66(m, d) m(4, 66, d)
#define BOOST_MPL_AUX_STATIC_CAST(T,expr) static_cast<T>(expr)
#define _SC_GETPW_R_SIZE_MAX _SC_GETPW_R_SIZE_MAX
#define BOOST_PP_REPEAT_3_69(m,d) BOOST_PP_REPEAT_3_68(m, d) m(4, 68, d)
#define EVP_PKEY_CTRL_RSA_OAEP_LABEL (EVP_PKEY_ALG_CTRL + 10)
#define TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA 0x0300C011
#define TCP_WINDOW_CLAMP 10
#define TLS1_RT_CRYPTO_FIXED_IV (TLS1_RT_CRYPTO | 0x8)
#define TLS1_CK_DHE_PSK_WITH_AES_128_CCM 0x0300C0A6
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101000 (1)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101001 (1)(0)(1)(0)(0)(1),
#define BOOST_PP_SLOT_CC_10_D(a,b,c,d,e,f,g,h,i,j) a ## b ## c ## d ## e ## f ## g ## h ## i ## j
#define DSA_R_INVALID_PARAMETERS 112
#define SOCK_SEQPACKET SOCK_SEQPACKET
#define BOOST_PP_INTERCEPT_171 
#define OBJ_id_smime_ct_compressedData OBJ_id_smime_ct,9L
#define BOOST_MPL_AUX_HAS_SIZE_HPP_INCLUDED 
#define NID_id_pe 175
#define POSIX_MADV_WILLNEED 3
#define RSA_F_RSA_ALGOR_TO_MD 156
#define SSL_MAX_MASTER_KEY_LENGTH 48
#define PRIuLEAST64 __PRI64_PREFIX "u"
#define BOOST_PP_INTERCEPT_173 
#define X509_F_X509_ATTRIBUTE_SET1_DATA 138
#define _VPCLMULQDQINTRIN_H_INCLUDED 
#define SN_data "data"
#define PEM_F_PEM_READ_PRIVATEKEY 124
#define X509_PURPOSE_SMIME_SIGN 4
#define SCOPE_DELIMITER '%'
#define SSL_AD_NO_APPLICATION_PROTOCOL TLS1_AD_NO_APPLICATION_PROTOCOL
#define BOOST_PP_INC_115 116
#define __LC_TELEPHONE 10
#define BOOST_PP_INTERCEPT_177 
#define EVENT__PACKAGE_NAME "libevent"
#define NID_id_smime_aa_equivalentLabels 220
#define BIO_set_retry_read(b) BIO_set_flags(b, (BIO_FLAGS_READ|BIO_FLAGS_SHOULD_RETRY))
#define EC_F_VALIDATE_ECX_DERIVE 278
#define IPPROTO_PIM IPPROTO_PIM
#define BOOST_PP_SEQ_FOLD_LEFT_100(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_100(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_id_qt_unotice "Policy Qualifier User Notice"
#define ASN1_R_ILLEGAL_IMPLICIT_TAG 179
#define SN_set_ctype "set-ctype"
#define TIME_UTC 1
#define EINTR 4
#define __f32x(x) x
#define BOOST_PP_SEQ_FOLD_LEFT_101(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_101(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define IP_ADD_SOURCE_MEMBERSHIP 39
#define OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15 OBJ_id_tc26_wrap_gostr3412_2015_magma,1L
#define NID_uniqueIdentifier 102
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_40(o,s,l) 0
#define SYS_F_BIND 6
#define LN_auth_gost01 "auth-gost01"
#define BOOST_PP_DETAIL_IBP_PRIMITIVE_CAT(a,...) a ## __VA_ARGS__
#define BOOST_PP_WHILE_128(p,o,s) BOOST_PP_WHILE_128_C(BOOST_PP_BOOL(p(129, s)), p, o, s)
#define ASN1_PCTX_FLAGS_NO_ANY_TYPE 0x010
#define NID_camellia_128_cmac 964
#define NID_id_regCtrl_authenticator 316
#define _rotr(a,b) __rord((a), (b))
#define OPENSSL_secure_malloc(num) CRYPTO_secure_malloc(num, OPENSSL_FILE, OPENSSL_LINE)
#define OBJ_setct_CertResTBE OBJ_set_ctype,79L
#define NID_pkcs9_emailAddress 48
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_53(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_3(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_3(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SO_LINGER 13
#define LN_auth_gost12 "auth-gost12"
#define HMACerr(f,r) ERR_PUT_error(ERR_LIB_HMAC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_PP_SEQ_FOLD_LEFT_4(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_4(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVLOOP_ONCE 0x01
#define SSL_R_INVALID_CT_VALIDATION_TYPE 212
#define EVP_F_EVP_PKEY_PARAM_CHECK 189
#define BOOST_TT_REMOVE_EXTENT_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_54(op,st,ss,sz) 0
#define ETIME 62
#define CRYPTO_F_PKEY_HMAC_INIT 123
#define PTHREAD_CANCEL_ASYNCHRONOUS PTHREAD_CANCEL_ASYNCHRONOUS
#define SN_id_it_implicitConfirm "id-it-implicitConfirm"
#define BOOST_MPL_AUX_CONFIG_TTP_HPP_INCLUDED 
#define _CS_POSIX_V7_ILP32_OFFBIG_LIBS _CS_POSIX_V7_ILP32_OFFBIG_LIBS
#define CONF_F_NCONF_LOAD 113
#define ERR_R_UI_LIB ERR_LIB_UI
#define BOOST_PP_SEQ_SIZE_100(_) BOOST_PP_SEQ_SIZE_101
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_56(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_122(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_123, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(123, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define AF_UNSPEC PF_UNSPEC
#define BOOST_PP_ITERATION_FINISH_1_DIGIT_2 1
#define SSL3_RFC_RSA_RC4_128_SHA "TLS_RSA_WITH_RC4_128_SHA"
#define LN_dNSDomain "dNSDomain"
#define BIO_TYPE_FILE ( 2|BIO_TYPE_SOURCE_SINK)
#define BOOST_PP_SEQ_FOLD_LEFT_I_124(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_125, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(125, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_103(_) BOOST_PP_SEQ_SIZE_104
#define BOOST_MPL_AUX_CONFIG_MSVC_TYPENAME_HPP_INCLUDED 
#define BOOST_PREPROCESSOR_REPEAT_HPP 
#define LN_bf_ofb64 "bf-ofb"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_129(s,p,o,m) 0
#define TLS1_TXT_DHE_RSA_WITH_AES_128_CCM_8 "DHE-RSA-AES128-CCM8"
#define SN_id_regCtrl_regToken "id-regCtrl-regToken"
#define DH_F_PKEY_DH_KEYGEN 113
#define XN_FLAG_SEP_SPLUS_SPC (3 << 16)
#define PEM_R_UNSUPPORTED_CIPHER 113
#define PF_CAIF 37
#define BOOST_PP_SEQ_FOLD_LEFT_I_127(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_128, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(128, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_VARIANT_DETAIL_MOVE_HPP 
#define BOOST_PP_SEQ_SIZE_106(_) BOOST_PP_SEQ_SIZE_107
#define FMT_REDUCE_INT_INSTANTIATIONS 0
#define ASN1_F_ASN1_SIGN 128
#define JEMALLOC_HAVE_ATTR_FORMAT_PRINTF 
#define LN_sm4_ofb128 "sm4-ofb"
#define HEADER_DTLS1_H 
#define BOOST_PP_SLOT_CC_5_D(a,b,c,d,e) a ## b ## c ## d ## e
#define OPENSSL_DH_FIPS_MIN_MODULUS_BITS 1024
#define SN_camellia_128_ecb "CAMELLIA-128-ECB"
#define JEMALLOC_FORMAT_PRINTF(s,i) JEMALLOC_ATTR(format(gnu_printf, s, i))
#define SN_sect163k1 "sect163k1"
#define SN_id_smime_aa_ets_escTimeStamp "id-smime-aa-ets-escTimeStamp"
#define __enclv_bc(leaf,b,c,retval) __asm__ __volatile__("enclv\n\t" : "=a" (retval) : "a" (leaf), "b" (b), "c" (c) : "cc")
#define BOOST_FORCEINLINE inline __attribute__ ((__always_inline__))
#define EAI_IDN_ENCODE -105
#define EVUTIL_CLOSESOCKET(s) evutil_closesocket(s)
#define _ASSERT_H_DECLS 
#define SN_freshest_crl "freshestCRL"
#define OBJ_setAttr_IssCap OBJ_set_attr,3L
#define NID_organizationIdentifier 1089
#define VLOG_IS_ON(verboselevel) __extension__ ({ static google::int32* vlocal__ = &google::kLogSiteUninitialized; google::int32 verbose_level__ = (verboselevel); (*vlocal__ >= verbose_level__) && ((vlocal__ != &google::kLogSiteUninitialized) || (google::InitVLOG3__(&vlocal__, &FLAGS_v, __FILE__, verbose_level__))); })
#define _rdpmc(a) __rdpmc(a)
#define RTSIG_MAX 32
#define BOOST_PP_WHILE_162_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_163, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(163, s))
#define SN_secp256k1 "secp256k1"
#define FP_INT_UPWARD 0
#define EAI_FAMILY -6
#define TYPEDEF_D2I2D_OF(type) TYPEDEF_D2I_OF(type); TYPEDEF_I2D_OF(type)
#define INADDR_ALLRTRS_GROUP ((in_addr_t) 0xe0000002)
#define IPV6_RECVORIGDSTADDR IPV6_ORIGDSTADDR
#define SSL_R_BAD_HANDSHAKE_STATE 236
#define OSSL_BAD_ASYNC_FD -1
#define ASN1_R_STREAMING_NOT_SUPPORTED 202
#define NID_setct_BatchAdminReqTBE 592
#define EVENT__HAVE_SYS_QUEUE_H 1
#define EVENT__HAVE_SYS_SELECT_H 1
#define _mm512_i64scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16si ((void *) (ADDR), (__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (__v8si)(__m256i) (V1), (int) (SCALE))
#define SN_id_pkix_OCSP_path "path"
#define _mm512_cvtt_roundps_epi32(A,B) ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))
#define BOOST_PREPROCESSOR_VARIADIC_ELEM_HPP 
#define EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES 167
#define BOOST_PP_SLOT(i) BOOST_PP_CAT(BOOST_PP_SLOT_, i)()
#define BOOST_PP_DEC_166 165
#define BOOST_MPL_AUX_ADVANCE_FORWARD_HPP_INCLUDED 
#define _EMMINTRIN_H_INCLUDED 
#define FMT_DEPRECATED_ALIAS FMT_DEPRECATED
#define BOOST_PP_FOR_181_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(182, s) BOOST_PP_IIF(c, BOOST_PP_FOR_182, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(182, s), p, o, m)
#define NID_dsa 116
#define SSL_CTRL_SET_GROUPS_LIST 92
#define OBJ_holdInstruction OBJ_X9_57,2L
#define OBJ_id_GostR3410_2012_512 OBJ_id_tc26_sign,2L
#define PEM_R_READ_KEY 111
#define OBJ_keyBag OBJ_pkcs12_BagIds,1L
#define CHECK_NEAR(val1,val2,margin) do { CHECK_LE((val1), (val2)+(margin)); CHECK_GE((val1), (val2)-(margin)); } while (0)
#define __glibcxx_requires_can_decrement_range(_First1,_Last1,_First2) 
#define RSA_R_UNKNOWN_MASK_DIGEST 151
#define PRIoFAST16 __PRIPTR_PREFIX "o"
#define BOOST_PP_DETAIL_IS_EMPTY_IIF_0(t,...) __VA_ARGS__
#define BOOST_PP_DETAIL_IS_EMPTY_IIF_1(t,...) t
#define BOOST_PP_SEQ_FOLD_LEFT_142(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_142(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_SYMBOL_EXPORT __attribute__((__visibility__("default")))
#define _mm512_mask_permutex_epi64(W,M,X,I) ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), (int)(I), (__v8di)(__m512i)(W), (__mmask8)(M)))
#define BOOST_PP_SEQ_FOLD_LEFT_O(s,st,_) st
#define M_LOG2Ef32 __f32 (1.442695040888963407359924681001892137)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100 (0)(1)(0)(0),
#define BOOST_HAS_PARTIAL_STD_ALLOCATOR 
#define SCNoLEAST32 "o"
#define IP_MULTICAST_LOOP 34
#define _mm512_insertf32x4(X,Y,C) ((__m512) __builtin_ia32_insertf32x4_mask ((__v16sf)(__m512) (X), (__v4sf)(__m128) (Y), (int) (C), (__v16sf)(__m512) (X), (__mmask16)(-1)))
#define _mm512_insertf32x8(X,Y,C) ((__m512) __builtin_ia32_insertf32x8_mask ((__v16sf)(__m512) (X), (__v8sf)(__m256) (Y), (int) (C), (__v16sf)(__m512)_mm512_setzero_ps (), (__mmask16)-1))
#define T_DEBUG_T(format_string,...) do { if (T_GLOBAL_DEBUGGING_LEVEL > 0) { COMPUTE_TIME fprintf( stderr, "[%s,%d] [%s, %d ms] " format_string " \n", __FILE__, __LINE__, dbgtime, ms, ##__VA_ARGS__); } } while (0)
#define FS_IOC_GETFSLABEL _IOR(0x94, 49, char[FSLABEL_MAX])
#define FS_VERITY_FL 0x00100000
#define BOOST_MPL_VECTOR_AUX_AT_HPP_INCLUDED 
#define NID_dsa_with_SHA3_256 1109
#define _mm256_cmp_epu32_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(P), (__mmask8)-1))
#define _mm512_i64scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8di ((void *) (ADDR), (__mmask8)0xFF, (__v8di)(__m512i) (INDEX), (__v8di)(__m512i) (V1), (int) (SCALE))
#define SN_setct_AcqCardCodeMsgTBE "setct-AcqCardCodeMsgTBE"
#define _mm512_cvtt_roundps_epi64(A,B) ((__m512i)__builtin_ia32_cvttps2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define FSCRYPT_POLICY_FLAGS_PAD_MASK 0x03
#define SOCK_PACKET SOCK_PACKET
#define PRIoFAST32 __PRIPTR_PREFIX "o"
#define BOOST_CONSTEXPR_OR_CONST constexpr
#define _GLIBCXX_HAVE_SYS_UIO_H 1
#define SN_id_Gost28147_89_CryptoPro_A_ParamSet "id-Gost28147-89-CryptoPro-A-ParamSet"
#define _mm_mask_fixupimm_ps(X,U,Y,Z,C) ((__m128)__builtin_ia32_fixupimmps128_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U)))
#define INT_FAST16_MAX (9223372036854775807L)
#define RSA_F_RSA_SIGN 117
#define IPPROTO_PUP IPPROTO_PUP
#define FOLLY_OPENSSL_CALCULATE_VERSION(major,minor,fix) (((major << 28) | ((minor << 20) | (fix << 12))))
#define DCHECK_LT(val1,val2) CHECK_LT(val1, val2)
#define CONF_R_NO_CONF 105
#define X509_V_ERR_CRL_PATH_VALIDATION_ERROR 54
#define PKCS7_F_PKCS7_SIGNER_INFO_SET 129
#define NID_aes_192_cfb8 654
#define NID_setct_AuthRevResTBEB 579
#define IMPLEMENT_PEM_write_cb_const(name,type,str,asn1) IMPLEMENT_PEM_write_cb_bio_const(name, type, str, asn1) IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1)
#define PEM_F_GET_NAME 144
#define SSL_F_TLS_CONSTRUCT_CTOS_POST_HANDSHAKE_AUTH 619
#define STATX_SIZE 0x00000200U
#define M_LOG2Ef64 __f64 (1.442695040888963407359924681001892137)
#define SN_des_ede_ofb64 "DES-EDE-OFB"
#define SN_sect163r2 "sect163r2"
#define SCNoLEAST64 __PRI64_PREFIX "o"
#define LN_preferredDeliveryMethod "preferredDeliveryMethod"
#define GOOGLE_PLOG(severity,counter) google::ErrnoLogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, counter, &google::LogMessage::SendToLog)
#define NID_dod 380
#define IANA_AFI_IPV6 2
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_241(p,o,s) 0
#define BOOST_PP_FOR_38_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(39, s) BOOST_PP_IIF(c, BOOST_PP_FOR_39, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(39, s), p, o, m)
#define BOOST_PP_REPEAT_3_74(m,d) BOOST_PP_REPEAT_3_73(m, d) m(4, 73, d)
#define BOOST_HAS_STATIC_ASSERT 
#define EVP_R_XTS_DUPLICATED_KEYS 183
#define BOOST_PP_REPEAT_3_75(m,d) BOOST_PP_REPEAT_3_74(m, d) m(4, 74, d)
#define TLS1_CK_DH_DSS_WITH_AES_128_SHA256 0x0300003E
#define X509_LU_RETRY -1
#define PRIoFAST64 __PRI64_PREFIX "o"
#define LN_camellia_256_cfb1 "camellia-256-cfb1"
#define MADV_NORMAL 0
#define LN_camellia_256_cfb8 "camellia-256-cfb8"
#define FMT_HAS_CXX11_NOEXCEPT 1
#define SSL_F_SSL_GET_SIGN_PKEY 183
#define _mm256_cmp_epi8_mask(X,Y,P) ((__mmask32) __builtin_ia32_cmpb256_mask ((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(P), (__mmask32)(-1)))
#define _GLIBCXX_HAVE_FABSF 1
#define _mm_maskz_fnmadd_round_ss(U,A,B,C,R) (__m128) __builtin_ia32_vfmaddss3_maskz (A, -(B), C, U, R)
#define EVP_PKEY_CTRL_DH_PAD (EVP_PKEY_ALG_CTRL + 16)
#define NID_crl_number 88
#define _GLIBCXX_HAVE_FABSL 1
#define EVENT__SIZEOF_LONG 8
#define SN_id_smime_ct_compressedData "id-smime-ct-compressedData"
#define _SC_PII_XTI _SC_PII_XTI
#define TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA "CAMELLIA128-SHA"
#define BIO_F_BIO_WRITE 113
#define BN_zero(a) (BN_set_word((a),0))
#define SSL_CTRL_MODE 33
#define SN_id_smime_mod_cms "id-smime-mod-cms"
#define SSL3_TXT_EDH_DSS_DES_64_CBC_SHA "EDH-DSS-DES-CBC-SHA"
#define ev_ssize_t ssize_t
#define BOOST_MOVE_BASE(BASE_TYPE,ARG) ::boost::move((BASE_TYPE&)(ARG))
#define ASN1_R_TYPE_NOT_CONSTRUCTED 156
#define BOOST_PP_INTERCEPT_181 
#define BOOST_PP_ITERATION() BOOST_PP_CAT(BOOST_PP_ITERATION_, BOOST_PP_ITERATION_DEPTH())
#define OBJ_ecdsa_with_SHA3_384 OBJ_sigAlgs,11L
#define ARRAY_SIZE(a) ((sizeof(a) / sizeof(*(a))) / static_cast<size_t>(!(sizeof(a) % sizeof(*(a)))))
#define EVENT__HAVE_INET_PTON 1
#define OBJ_uacurve5 OBJ_dstu4145le,2L,5L
#define OBJ_dsaWithSHA1 OBJ_X9cm,3L
#define SSL3_AD_DECOMPRESSION_FAILURE 30
#define X509_PURPOSE_CRL_SIGN 6
#define BOOST_PP_INTERCEPT_185 
#define LN_simpleSecurityObject "simpleSecurityObject"
#define BOOST_PP_INTERCEPT_186 
#define IN6_IS_ADDR_LINKLOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfe800000); }))
#define NID_sect131r2 720
#define SSL_set_tlsext_status_ocsp_resp(ssl,arg,arglen) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP,arglen,arg)
#define OBJ_id_set OBJ_international_organizations,42L
#define SSL_F_SSL_DUP_CA_LIST 408
#define BOOST_PP_INTERCEPT_189 
#define _IOC_TYPEMASK ((1 << _IOC_TYPEBITS)-1)
#define SSL3_RT_HEADER 0x100
#define _GLIBCXX98_USE_C99_STDLIB 1
#define __encls_generic(leaf,b,c,d,retval) __asm__ __volatile__("encls\n\t" : "=a" (retval), "=b" (b), "=c" (c), "=d" (d) : "a" (leaf), "b" (b), "c" (c), "d" (d) : "cc")
#define NID_id_GostR3410_94_a 845
#define EVENT__PACKAGE_STRING "libevent 2.1.12-stable"
#define OBJ_sdsiCertificate OBJ_certTypes,2L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_249(op,st,ss,sz) 0
#define BOOST_PP_WHILE_8_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_9, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(9, s))
#define BOOST_PP_WHILE_9(p,o,s) BOOST_PP_WHILE_9_C(BOOST_PP_BOOL(p(10, s)), p, o, s)
#define BIO_BIND_REUSEADDR_IF_UNUSED BIO_SOCK_REUSEADDR
#define assert_perror(errnum) (!(errnum) ? __ASSERT_VOID_CAST (0) : __assert_perror_fail ((errnum), __FILE__, __LINE__, __ASSERT_FUNCTION))
#define BOOST_PP_SEQ_FOLD_LEFT_202(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_202(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_F_SSL_CIPHER_STRENGTH_SORT 231
#define _mm_maskz_reduce_ss(U,A,B,C) ((__m128) __builtin_ia32_reducess_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (), (__mmask8)(U)))
#define BOOST_PP_SEQ_FOLD_LEFT_I_213(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_214, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(214, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define X509_TRUST_SSL_SERVER 3
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011010 (0)(0)(0)(1)(1)(0)(1)(0),
#define _SC_ARG_MAX _SC_ARG_MAX
#define SN_kx_ecdhe_psk "KxECDHE-PSK"
#define BOOST_PP_WHILE_13(p,o,s) BOOST_PP_WHILE_13_C(BOOST_PP_BOOL(p(14, s)), p, o, s)
#define INT_FAST16_MIN (-9223372036854775807L-1)
#define _GLIBCXX_HAVE_SYS_SYSINFO_H 1
#define IPV6_2292PKTOPTIONS 6
#define _mm_mask_shufflehi_epi16(W,U,A,B) ((__m128i) __builtin_ia32_pshufhw128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)(__m128i)(W), (__mmask8)(U)))
#define OBJ_secg_ellipticCurve OBJ_certicom_arc,0L
#define ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM 161
#define _GLIBCXX_USE_CONSTEXPR constexpr
#define _GLIBCXX_HAVE_POSIX_MEMALIGN 1
#define BOOST_PP_WHILE_15(p,o,s) BOOST_PP_WHILE_15_C(BOOST_PP_BOOL(p(16, s)), p, o, s)
#define OBJ_NAME_ALIAS 0x8000
#define BOOST_PP_FOR_113_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(114, s) BOOST_PP_IIF(c, BOOST_PP_FOR_114, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(114, s), p, o, m)
#define _CS_LFS_LINTFLAGS _CS_LFS_LINTFLAGS
#define OBJ_sm4_ofb128 OBJ_sm_scheme,104L,3L
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_132(s,p,o,m) 0
#define BOOST_PP_SEQ_SIZE_151(_) BOOST_PP_SEQ_SIZE_152
#define FOLLY_HAVE_LIBGFLAGS 1
#define SN_aes_256_cbc_hmac_sha256 "AES-256-CBC-HMAC-SHA256"
#define BOOST_PP_SEQ_FOLD_LEFT_206(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_206(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm256_mask_i32gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m256d) __builtin_ia32_gathersiv4df ((__v4df)(__m256d) (SRC), (double const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4df)(__m256d) (MASK), (int) (SCALE))
#define ERR_LIB_BN 3
#define NID_aes_128_ccm 896
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_SHA256 "ECDH-ECDSA-AES128-SHA256"
#define TLS1_CK_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C099
#define BOOST_PP_REPEAT_FROM_TO_D_1(d,f,l,m,dt) BOOST_PP_REPEAT_1(BOOST_PP_SUB_D(d, l, f), BOOST_PP_REPEAT_FROM_TO_M_1, (d, f, m, dt))
#define __GLIBC_USE_DEPRECATED_SCANF 0
#define SSL3_CC_SERVER 0x020
#define ERR_PUT_error(a,b,c,d,e) ERR_put_error(a,b,c,d,e)
#define BOOST_PP_WHILE_21(p,o,s) BOOST_PP_WHILE_21_C(BOOST_PP_BOOL(p(22, s)), p, o, s)
#define BOOST_MPL_AUX_NA_SPEC(i,name) BOOST_MPL_AUX_NA_SPEC_NO_ETI(i, name) BOOST_MPL_AUX_NA_SPEC_ETI(i, name)
#define BOOST_PP_LIST_FOLD_LEFT_134(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_135, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(135, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_137(s,p,o,m) 0
#define CONF_F_NCONF_DUMP_FP 106
#define X509_R_WRONG_TYPE 122
#define SN_netscape_renewal_url "nsRenewalUrl"
#define PEM_F_D2I_PKCS8PRIVATEKEY_FP 121
#define BOOST_PP_REPEAT_FROM_TO_D_3(d,f,l,m,dt) BOOST_PP_REPEAT_3(BOOST_PP_SUB_D(d, l, f), BOOST_PP_REPEAT_FROM_TO_M_3, (d, f, m, dt))
#define _TIME_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_208(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_208(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_SIZE_113(_) BOOST_PP_SEQ_SIZE_114
#define ERR_LIB_CT 50
#define __UINT16_TYPE__ short unsigned int
#define OBJ_aes_128_ccm OBJ_aes,7L
#define BOOST_PP_SEQ_SIZE_114(_) BOOST_PP_SEQ_SIZE_115
#define ASN1_F_ASN1_MBSTRING_NCOPY 122
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010010 (0)(1)(0)(1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010011 (0)(1)(0)(1)(0)(0)(1)(1),
#define BOOST_PP_FOR_222_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(223, s) BOOST_PP_IIF(c, BOOST_PP_FOR_223, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(223, s), p, o, m)
#define __GNUC_STDC_INLINE__ 1
#define NID_sect193r1 724
#define EC_R_BUFFER_TOO_SMALL 100
#define ERR_LIB_DH 5
#define EVP_PKEY_CTRL_PKCS7_DECRYPT 4
#define MOD_FREQUENCY ADJ_FREQUENCY
#define SN_secp160k1 "secp160k1"
#define BOOST_TYPE_DWA20010120_HPP 
#define ossl_inline inline
#define MOVE_MOUNT_T_EMPTY_PATH 0x00000040
#define ERR_LIB_EC 16
#define FMT_USE_LONG_DOUBLE 1
#define __enclv_cd(leaf,c,d,retval) __asm__ __volatile__("enclv\n\t" : "=a" (retval) : "a" (leaf), "c" (c), "d" (d) : "cc")
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111110 (1)(1)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000100 (1)(0)(0)(0)(1)(0)(0),
#define _mm_maskz_shrdi_epi32(A,B,C,D) ((__m128i) __builtin_ia32_vpshrd_v4si_mask ((__v4si)(__m128i)(B), (__v4si)(__m128i)(C),(int)(D), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(A)))
#define INT32_WIDTH 32
#define __glibcxx_requires_irreflexive2(_First,_Last) 
#define SSL_CTX_set1_verify_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_VERIFY_CERT_STORE,1,(char *)(st))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111111 (1)(1)(1)(1)(1)(1)(1),
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_201(op,st,ss,sz) 0
#define BOOST_PP_WHILE_186_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_187, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(187, s))
#define SSL3_RT_MAX_TLS13_ENCRYPTED_LENGTH (SSL3_RT_MAX_PLAIN_LENGTH + SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD)
#define TLS1_TXT_RSA_PSK_WITH_NULL_SHA "RSA-PSK-NULL-SHA"
#define X509_V_ERR_INVALID_EXTENSION 41
#define OBJ_crl_distribution_points OBJ_id_ce,31L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000101 (1)(0)(0)(0)(1)(0)(1),
#define __SI_CLOCK_T __clock_t
#define DSA_R_NO_PARAMETERS_SET 107
#define FS_XFLAG_EXTSZINHERIT 0x00001000
#define SSL_R_PACKET_LENGTH_TOO_LONG 198
#define LN_protocolInformation "protocolInformation"
#define EVP_CIPH_CCM_MODE 0x7
#define M_PIf32x __f32x (3.141592653589793238462643383279502884)
#define SSL_CB_ACCEPT_LOOP (SSL_ST_ACCEPT|SSL_CB_LOOP)
#define sk_value OPENSSL_sk_value
#define EVP_PKEY_CTRL_MD 1
#define __USE_LARGEFILE 1
#define EVP_F_EVP_PKEY2PKCS8 113
#define BOOST_VARIANT_DETAIL_SUBSTITUTE_FWD_HPP 
#define BOOST_INTRUSIVE_DETAIL_MINIMAL_PAIR_HEADER_HPP 
#define __USE_XOPEN 1
#define _mm256_mask_extracti32x4_epi32(W,U,X,C) ((__m128i) __builtin_ia32_extracti32x4_256_mask ((__v8si)(__m256i) (X), (int) (C), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define BOOST_PP_BOOL_0 0
#define BOOST_PP_BOOL_2 1
#define BOOST_PP_BOOL_3 1
#define OBJ_crl_reason OBJ_id_ce,21L
#define BOOST_PP_BOOL_5 1
#define BOOST_PP_BOOL_6 1
#define BOOST_PP_BOOL_7 1
#define BOOST_PP_BOOL_9 1
#define NID_ccitt 404
#define SSL_F_TLS_PROCESS_KEY_UPDATE 518
#define RAND_F_RAND_POOL_ADD 103
#define LN_aes_256_ocb "aes-256-ocb"
#define OBJ_id_pkix_OCSP_extendedStatus OBJ_id_pkix_OCSP,8L
#define TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"
#define sk_new OPENSSL_sk_new
#define __DEC32_MIN_EXP__ (-94)
#define APACHE_THRIFT_ACCESSOR_type 
#define evbuffercb bufferevent_data_cb
#define EVP_MD_CTX_size(e) EVP_MD_size(EVP_MD_CTX_md(e))
#define _SC_EQUIV_CLASS_MAX _SC_EQUIV_CLASS_MAX
#define BOOST_PREPROCESSOR_REPETITION_ENUM_SHIFTED_PARAMS_HPP 
#define BOOST_PP_FOR_73_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(74, s) BOOST_PP_IIF(c, BOOST_PP_FOR_74, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(74, s), p, o, m)
#define ERR_GET_LIB(l) (int)(((l) >> 24L) & 0x0FFL)
#define _POSIX_PATH_MAX 256
#define SSL3_CT_DSS_EPHEMERAL_DH 6
#define timeout_initialized(ev) event_initialized(ev)
#define BOOST_MPL_AUX_INSERTER_ALGORITHM_DEF(arity,name) BOOST_MPL_AUX_COMMON_NAME_WKND(name) template< BOOST_MPL_PP_DEFAULT_PARAMS(arity, typename P, na) > struct name : aux::name ##_impl<BOOST_MPL_PP_PARAMS(arity, P)> { }; template< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), typename P) > struct name< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), P),na > : if_< has_push_back< typename clear<P1>::type> , aux::name ##_impl< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), P) , back_inserter< typename clear<P1>::type > > , aux::reverse_ ##name ##_impl< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), P) , front_inserter< typename clear<P1>::type > > >::type { }; template< BOOST_MPL_PP_DEFAULT_PARAMS(arity, typename P, na) > struct reverse_ ##name : aux::reverse_ ##name ##_impl<BOOST_MPL_PP_PARAMS(arity, P)> { }; template< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), typename P) > struct reverse_ ##name< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), P),na > : if_< has_push_back<P1> , aux::reverse_ ##name ##_impl< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), P) , back_inserter< typename clear<P1>::type > > , aux::name ##_impl< BOOST_MPL_PP_PARAMS(BOOST_PP_DEC(arity), P) , front_inserter< typename clear<P1>::type > > >::type { }; BOOST_MPL_AUX_NA_SPEC(arity, name) BOOST_MPL_AUX_NA_SPEC(arity, reverse_ ##name)
#define BOOST_PP_INTERCEPT_241 
#define BOOST_VARIANT_ENUM_SHIFTED_PARAMS(x) BOOST_VARIANT_MAKE_VARIADIC( (BOOST_VARIANT_CLASS_OR_TYPENAME_TO_SEQ_ ## x), x)
#define FSPICK_CLOEXEC 0x00000001
#define _mm_bsrli_si128(A,N) ((__m128i)__builtin_ia32_psrldqi128 ((__m128i)(A), (int)(N) * 8))
#define EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY 203
#define NID_setAttr_T2cleartxt 633
#define _mm_mask_ternarylogic_epi32(A,U,B,C,I) ((__m128i) __builtin_ia32_pternlogd128_mask ((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (__v4si)(__m128i)(C), (int)(I), (__mmask8)(U)))
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
#define SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST 157
#define RLIM_INFINITY ((__rlim_t) -1)
#define BOOST_PP_WHILE_159_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_160, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(160, s))
#define SSL_F_TLS_PREPARE_CLIENT_CERTIFICATE 360
#define SN_blake2b512 "BLAKE2b512"
#define OBJ_id_smime_aa_ets_contentTimestamp OBJ_id_smime_aa,20L
#define EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES 169
#define _SIZE_T_DEFINED 
#define OBJ_id_ppl_anyLanguage OBJ_id_ppl,0L
#define SO_EE_ORIGIN_ICMP 2
#define TLS1_CK_DHE_DSS_WITH_AES_128_SHA256 0x03000040
#define _WCHAR_T_DEFINED_ 
#define IORING_FEAT_SINGLE_MMAP (1U << 0)
#define _POSIX_NO_TRUNC 1
#define ECHILD 10
#define FOLLY_ATTR_WEAK __attribute__((__weak__))
#define BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED 
#define NID_pseudonym 510
#define FS_EOFBLOCKS_FL 0x00400000
#define ub_name 32768
#define SN_id_it_revPassphrase "id-it-revPassphrase"
#define BOOST_MOVE_I ,
#define OBJ_secp521r1 OBJ_secg_ellipticCurve,35L
#define __statx_timestamp_defined 1
#define _CRAYC_WORKAROUND_GUARD 1
#define EVENT__HAVE_UINT64_T 1
#define SSL_CTX_set_session_cache_mode(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SESS_CACHE_MODE,m,NULL)
#define EVP_F_EVP_PKEY_METH_NEW 195
#define BOOST_PP_NODE_105(p) BOOST_PP_IIF(p(105), 105, 106)
#define EC_F_EC_GFP_MONT_FIELD_DECODE 133
#define COMPerr(f,r) ERR_PUT_error(ERR_LIB_COMP,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define __cpp_lib_addressof_constexpr 201603
#define _mm_mask_ternarylogic_epi64(A,U,B,C,I) ((__m128i) __builtin_ia32_pternlogq128_mask ((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (__v2di)(__m128i)(C), (int)(I), (__mmask8)(U)))
#define SSL_R_SSL_SECTION_NOT_FOUND 136
#define _XSAVEINTRIN_H_INCLUDED 
#define __cpp_lib_variant 201606L
#define OPENSSL_INIT_ENGINE_ALL_BUILTIN (OPENSSL_INIT_ENGINE_RDRAND | OPENSSL_INIT_ENGINE_DYNAMIC | OPENSSL_INIT_ENGINE_CRYPTODEV | OPENSSL_INIT_ENGINE_CAPI | OPENSSL_INIT_ENGINE_PADLOCK)
#define __FLT128_HAS_INFINITY__ 1
#define BOOST_PP_REPEAT_3_88(m,d) BOOST_PP_REPEAT_3_87(m, d) m(4, 87, d)
#define SSL_R_INVALID_NULL_CMD_NAME 385
#define __cpp_lib_logical_traits 201510
#define CONF_R_SSL_COMMAND_SECTION_EMPTY 117
#define REG_RDI REG_RDI
#define ERR_R_MISSING_ASN1_EOS 63
#define OPENSSL_NO_CAPIENG 
#define SSL_F_DANE_MTYPE_SET 393
#define _GLIBCXX_NUM_UNICODE_FACETS 4
#define BOOST_PP_INTERCEPT_190 
#define SN_brainpoolP384t1 "brainpoolP384t1"
#define TCPOPT_EOL 0
#define SIGTERM 15
#define RLIMIT_OFILE __RLIMIT_OFILE
#define __S32_TYPE int
#define BIO_CB_CTRL 0x06
#define IP_PKTOPTIONS 9
#define SN_camellia_192_ecb "CAMELLIA-192-ECB"
#define _GLIBCXX_DEQUE 1
#define B_ASN1_TELETEXSTRING 0x0004
#define BOOST_TT_IS_BASE_OF_HPP_INCLUDED 
#define OBJ_md5 OBJ_rsadsi,2L,5L
#define MAP_LOCKED 0x02000
#define BOOST_PP_INTERCEPT_196 
#define SSL_F_DTLS_WAIT_FOR_DRY 592
#define SN_id_mod_kea_profile_93 "id-mod-kea-profile-93"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_60(op,st,ss,sz) 0
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_OPERATION(s,dummy_param,tuple) BOOST_DETAIL_TERNARY_TRIPLE_TO_OCTAL tuple
#define BIO_cb_pre(a) (!((a)&BIO_CB_RETURN))
#define BIO_C_SET_EX_ARG 153
#define OPENSSL_NO_SSL_TRACE 
#define SN_client_auth "clientAuth"
#define OPENSSL_CFLAGS 1
#define BOOST_MPL_APPLY_WRAP_HPP_INCLUDED 
#define SSL_CTX_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_SSL_CTX, l, p, newf, dupf, freef)
#define FS_ENCRYPTION_MODE_SPECK128_256_XTS 7
#define LN_localityName "localityName"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_51(o,s,l) 0
#define _CMP_NLE_US 0x06
#define ASN1_F_ASN1_ITEM_EX_I2D 144
#define BOOST_PP_WHILE_20(p,o,s) BOOST_PP_WHILE_20_C(BOOST_PP_BOOL(p(21, s)), p, o, s)
#define EVENT_DEFINED_TQHEAD_ 
#define FOLLY_ATTR_MAY_ALIAS [[gnu::may_alias]]
#define BOOST_MPL_LIST_AUX_NODE_HPP_INCLUDED 
#define CRYPTO_EX_INDEX_X509 3
#define UINT_LEAST16_WIDTH 16
#define DSA_F_DSA_PRIV_ENCODE 116
#define EVENT2_EVENT_H_INCLUDED_ 
#define EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA_PSS, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_PSS_SALTLEN, len, NULL)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_64(op,st,ss,sz) 0
#define OBJ_id_smime_ct_authData OBJ_id_smime_ct,2L
#define SSL_MAC_FLAG_READ_MAC_STREAM 1
#define SYSLOG_EVERY_N(severity,n) SOME_KIND_OF_LOG_EVERY_N(severity, (n), google::LogMessage::SendToSyslogAndLog)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_65(op,st,ss,sz) 0
#define BOOST_PP_WHILE_225_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_226, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(226, s))
#define X509_F_X509_LOOKUP_METH_NEW 160
#define BOOST_PP_SEQ_TRANSFORM_O_IM(s,im,elem) BOOST_PP_SEQ_TRANSFORM_O_I(s, im, elem)
#define OBJ_id_pkix_OCSP_trustRoot OBJ_id_pkix_OCSP,11L
#define OBJ_id_GostR3411_94_with_GostR3410_94_cc OBJ_cryptocom,1L,3L,3L
#define NID_aes_128_ctr 904
#define BOOST_PP_WHILE_27(p,o,s) BOOST_PP_WHILE_27_C(BOOST_PP_BOOL(p(28, s)), p, o, s)
#define LN_bf_cbc "bf-cbc"
#define BOOST_PP_WHILE_227_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_228, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(228, s))
#define F_ADD_SEALS 1033
#define BOOST_PP_WHILE_28(p,o,s) BOOST_PP_WHILE_28_C(BOOST_PP_BOOL(p(29, s)), p, o, s)
#define _mm256_mask_cmp_epu16_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_ucmpw256_mask ((__v16hi)(__m256i)(X), (__v16hi)(__m256i)(Y), (int)(P), (__mmask16)(M)))
#define FOLLY_EXCEPTION_WRAPPER_H_INCLUDED 
#define _mm_maskz_rol_epi64(U,A,B) ((__m128i)__builtin_ia32_prolq128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define UDP_ENCAP_ESPINUDP 2
#define _SC_2_PBS_LOCATE _SC_2_PBS_LOCATE
#define BOOST_PP_SEQ_FOLD_LEFT_I_140(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_141, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(141, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EC_F_EC_POINT_MAKE_AFFINE 120
#define _mm_maskz_max_round_sd(U,A,B,C) (__m128d)__builtin_ia32_maxsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define ERR_LIB_TS 47
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_145(s,p,o,m) 0
#define _mm_maskz_max_round_ss(U,A,B,C) (__m128)__builtin_ia32_maxss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_57(o,s,l) 0
#define SSL_ERROR_WANT_CONNECT 7
#define ESRMNT 69
#define SN_Directory "directory"
#define _kshiftli_mask16(X,Y) ((__mmask16) __builtin_ia32_kshiftlihi ((__mmask16)(X), (__mmask8)(Y)))
#define BOOST_MOVE_IS_TRIVIALLY_COPY_ASSIGNABLE(T) ::boost::move_detail::is_pod<T>::value || ( ::boost::move_detail::is_copy_assignable<T>::value && BOOST_MOVE_HAS_TRIVIAL_ASSIGN(T))
#define BOOST_PP_SEQ_SIZE_122(_) BOOST_PP_SEQ_SIZE_123
#define PKCS7_F_PKCS7_COPY_EXISTING_DIGEST 138
#define __FLT32_HAS_QUIET_NAN__ 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_69(op,st,ss,sz) 0
#define SSL_F_SSL_SET_WFD 196
#define SN_rc2_64_cbc "RC2-64-CBC"
#define PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE 115
#define BIO_R_INVALID_SOCKET 135
#define BOOST_MPL_LIST_AUX_ITERATOR_HPP_INCLUDED 
#define _mm256_fixupimm_ps(X,Y,Z,C) ((__m256)__builtin_ia32_fixupimmps256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (__v8si)(__m256i)(Z), (int)(C), (__mmask8)(-1)))
#define BIO_set_nbio(b,n) BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL)
#define SEEK_MAX SEEK_HOLE
#define BOOST_PP_SEQ_SIZE_125(_) BOOST_PP_SEQ_SIZE_126
#define LN_camellia_128_cbc "camellia-128-cbc"
#define _AVX2INTRIN_H_INCLUDED 
#define EVP_F_EVP_DIGESTFINALXOF 174
#define EVP_CIPH_XTS_MODE 0x10001
#define BOOST_PP_SEQ_SIZE_41(_) BOOST_PP_SEQ_SIZE_42
#define NID_id_smime_aa_contentHint 215
#define EC_F_EC_WNAF_MUL 187
#define SSL_CTRL_SESS_MISSES 29
#define BOOST_MOVE_HAS_NOTHROW_COPY(T) ((__has_nothrow_copy(T) BOOST_MOVE_INTEL_TT_OPTS))
#define _GLIBCXX_TR1_BESSEL_FUNCTION_TCC 1
#define X509V3_ADD_DEFAULT 0L
#define __cpp_nsdmi 200809L
#define CHECKED_D2I_OF(type,d2i) ((d2i_of_void*) (1 ? d2i : ((D2I_OF(type))0)))
#define _mm512_mask_fmsub_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmsubpd512_mask(A, B, C, U, R)
#define EVP_F_EVP_PKEY_ENCRYPT_OLD 152
#define SN_des_cbc "DES-CBC"
#define SIZE_MAX (18446744073709551615UL)
#define NID_id_smime_aa_securityLabel 213
#define sk_num OPENSSL_sk_num
#define RSA_R_SSLV3_ROLLBACK_ATTACK 115
#define SN_id_GostR3411_2012_256 "md_gost12_256"
#define BOOST_PP_DEC_16 15
#define OBJ_kisa OBJ_member_body,410L,200004L
#define IPV6_ROUTER_ALERT 22
#define _mm512_mask3_fnmadd_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfnmaddpd512_mask3(A, B, C, U, R)
#define BOOST_PP_FOR_1(s,p,o,m) BOOST_PP_FOR_1_C(BOOST_PP_BOOL(p(2, s)), s, p, o, m)
#define BOOST_PP_FOR_2(s,p,o,m) BOOST_PP_FOR_2_C(BOOST_PP_BOOL(p(3, s)), s, p, o, m)
#define BOOST_PP_FOR_4(s,p,o,m) BOOST_PP_FOR_4_C(BOOST_PP_BOOL(p(5, s)), s, p, o, m)
#define OBJ_ieee_siswg OBJ_ieee,2L,1619L
#define BOOST_PP_FOR_6(s,p,o,m) BOOST_PP_FOR_6_C(BOOST_PP_BOOL(p(7, s)), s, p, o, m)
#define BOOST_PP_FOR_7(s,p,o,m) BOOST_PP_FOR_7_C(BOOST_PP_BOOL(p(8, s)), s, p, o, m)
#define BOOST_PP_FOR_8(s,p,o,m) BOOST_PP_FOR_8_C(BOOST_PP_BOOL(p(9, s)), s, p, o, m)
#define BOOST_PP_FOR_9(s,p,o,m) BOOST_PP_FOR_9_C(BOOST_PP_BOOL(p(10, s)), s, p, o, m)
#define _mm512_mask3_fnmadd_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfnmaddps512_mask3(A, B, C, U, R)
#define PKCS7_R_CIPHER_NOT_INITIALIZED 116
#define PF_UNSPEC 0
#define OBJ_id_pkix1_explicit_88 OBJ_id_pkix_mod,1L
#define BOOST_PP_FOR_P(n) BOOST_PP_CAT(BOOST_PP_FOR_CHECK_, BOOST_PP_FOR_ ## n(1, BOOST_PP_FOR_SR_P, BOOST_PP_FOR_SR_O, BOOST_PP_FOR_SR_M))
#define HEADER_EC_H 
#define NID_X9_62_c2pnb368w1 702
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010101 (1)(1)(0)(1)(0)(1)(0)(1),
#define EC_F_EC_SCALAR_MUL_LADDER 284
#define __cpp_lib_assume_aligned 201811L
#define SSL_F_PITEM_NEW 624
#define NID_key_usage 83
#define SN_idea_cfb64 "IDEA-CFB"
#define DTLS1_TMO_READ_COUNT 2
#define NID_friendlyCountry 453
#define NID_pkcs7_signed 22
#define _POSIX2_C_VERSION __POSIX2_THIS_VERSION
#define TLS1_RFC_ECDH_anon_WITH_NULL_SHA "TLS_ECDH_anon_WITH_NULL_SHA"
#define SSL_CTX_set_tlsext_status_type(ssl,type) SSL_CTX_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE,type,NULL)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010 (0)(0)(0)(1)(0),
#define BIO_CTRL_RESET 1
#define BOOST_PP_SEQ_SIZE_45(_) BOOST_PP_SEQ_SIZE_46
#define OBJ_id_pkix1_explicit_93 OBJ_id_pkix_mod,3L
#define TLS1_TXT_RSA_WITH_AES_256_CCM "AES256-CCM"
#define SN_id_GostR3410_2012_256 "gost2012_256"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010110 (1)(1)(0)(1)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010111 (1)(1)(0)(1)(0)(1)(1)(1),
#define _STL_NUMERIC_H 1
#define SSL_add0_chain_cert(s,x509) SSL_ctrl(s,SSL_CTRL_CHAIN_CERT,0,(char *)(x509))
#define OBJ_setct_CertResData OBJ_set_ctype,47L
#define TLS1_CK_DH_DSS_WITH_SEED_SHA 0x03000097
#define __cpp_lib_bitops 201907L
#define SN_id_GostR3410_2001_CryptoPro_A_ParamSet "id-GostR3410-2001-CryptoPro-A-ParamSet"
#define SO_PASSSEC 34
#define SIOCATMARK 0x8905
#define __HAVE_FLOATN_NOT_TYPEDEF 0
#define BOOST_PP_REPEAT_FROM_TO_M_1(z,n,dfmd) BOOST_PP_REPEAT_FROM_TO_M_1_IM(z, n, BOOST_PP_TUPLE_REM_4 dfmd)
#define BOOST_DETAIL_CREATE_BINARY_LITERAL_BIT_SEQUENCE(d,bit_groupings) BOOST_PP_EMPTY BOOST_PP_CAT( BOOST_PP_WHILE_, d ) ( BOOST_DETAIL_BINARY_LITERAL_PREDICATE , BOOST_DETAIL_BINARY_LITERAL_OPERATION , bit_groupings () )
#define BOOST_PP_REPEAT_FROM_TO_M_2(z,n,dfmd) BOOST_PP_REPEAT_FROM_TO_M_2_IM(z, n, BOOST_PP_TUPLE_REM_4 dfmd)
#define EXFLAG_INVALID_POLICY 0x800
#define M_LOG2Ef64x __f64x (1.442695040888963407359924681001892137)
#define OBJ_netscape_ca_revocation_url OBJ_netscape_cert_extension,4L
#define EVP_R_NO_CIPHER_SET 131
#define __MATH_DECLARE_LDOUBLE 1
#define IP_PMTUDISC_DONT 0
#define NI_IDN_ALLOW_UNASSIGNED __glibc_macro_warning ("NI_IDN_ALLOW_UNASSIGNED is deprecated") 64
#define REG_R13 REG_R13
#define OBJ_id_smime_aa_securityLabel OBJ_id_smime_aa,2L
#define __FD_CLR(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))
#define BOOST_MPL_SAME_AS_HPP_INCLUDED 
#define OBJ_sha512WithRSAEncryption OBJ_pkcs1,13L
#define F_SHLCK 8
#define PKCS7_R_PKCS7_DATASIGN 145
#define BOOST_PP_WHILE_100(p,o,s) BOOST_PP_WHILE_100_C(BOOST_PP_BOOL(p(101, s)), p, o, s)
#define BN_F_BN_NEW 113
#define BOOST_PP_SEQ_SIZE_17(_) BOOST_PP_SEQ_SIZE_18
#define BOOST_PP_NODE_110(p) BOOST_PP_IIF(p(110), BOOST_PP_NODE_109, BOOST_PP_NODE_111)
#define BOOST_PP_REPEAT_3_91(m,d) BOOST_PP_REPEAT_3_90(m, d) m(4, 90, d)
#define BOOST_PP_SEQ_SIZE_18(_) BOOST_PP_SEQ_SIZE_19
#define NID_aes_192_cbc 423
#define UINT32_MAX (4294967295U)
#define OBJ_id_Gost28147_89_MAC OBJ_cryptopro,22L
#define BOOST_PP_SEQ_SIZE_19(_) BOOST_PP_SEQ_SIZE_20
#define __uid_t_defined 
#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 "DH-DSS-CAMELLIA256-SHA256"
#define _POSIX_SHELL 1
#define _GLIBCXX_MOVE(__val) std::move(__val)
#define _POSIX2_BC_BASE_MAX 99
#define EVUTIL_EAI_NONAME EAI_NONAME
#define SN_id_pkix_OCSP_valid "valid"
#define BOOST_PP_NODE_114(p) BOOST_PP_IIF(p(114), BOOST_PP_NODE_113, BOOST_PP_NODE_115)
#define PF_IPX 4
#define TLS1_TXT_RSA_PSK_WITH_AES_128_GCM_SHA256 "RSA-PSK-AES128-GCM-SHA256"
#define SSL_ERROR_WANT_READ 2
#define SSL3_VERSION_MINOR 0x00
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111100 (1)(1)(1)(1)(1)(1)(0)(0),
#define NID_aes_192_ccm 899
#define ENOCSI 50
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_255(p,o,s) 0
#define _SC_WORD_BIT _SC_WORD_BIT
#define BOOST_PP_NODE_117(p) BOOST_PP_IIF(p(117), 117, 118)
#define SN_pbeWithMD5AndRC2_CBC "PBE-MD5-RC2-64"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101100 (0)(1)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101101 (0)(1)(0)(1)(1)(0)(1),
#define BOOST_PP_WHILE_153_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_154, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(154, s))
#define MCL_FUTURE 2
#define EVLIST_INSERTED 0x02
#define evutil_addrinfo addrinfo
#define BOOST_PP_REPEAT_3_99(m,d) BOOST_PP_REPEAT_3_98(m, d) m(4, 98, d)
#define ASN1_F_STBL_MODULE_INIT 223
#define BOOST_PP_INTERCEPT_34 
#define EVP_PKEY_OP_VERIFY (1<<4)
#define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }
#define BOOST_PP_WHILE_106(p,o,s) BOOST_PP_WHILE_106_C(BOOST_PP_BOOL(p(107, s)), p, o, s)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101110 (0)(1)(0)(1)(1)(1)(0),
#define PKCS12err(f,r) ERR_PUT_error(ERR_LIB_PKCS12,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define TLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384 0x030000A3
#define TLS1_RFC_PSK_WITH_NULL_SHA "TLS_PSK_WITH_NULL_SHA"
#define BOOST_PP_WHILE_107(p,o,s) BOOST_PP_WHILE_107_C(BOOST_PP_BOOL(p(108, s)), p, o, s)
#define SN_aes_256_cbc_hmac_sha1 "AES-256-CBC-HMAC-SHA1"
#define OBJ_documentSeries OBJ_pilotObjectClass,9L
#define SSL_F_DTLS_CONSTRUCT_HELLO_VERIFY_REQUEST 385
#define ITIMER_PROF ITIMER_PROF
#define OBJ_id_smime_mod_oid OBJ_id_smime_mod,3L
#define BOOST_PP_SLOT_CC_2(a,b) BOOST_PP_SLOT_CC_2_D(a, b)
#define BOOST_PP_SLOT_CC_3(a,b,c) BOOST_PP_SLOT_CC_3_D(a, b, c)
#define BOOST_PP_SLOT_CC_6(a,b,c,d,e,f) BOOST_PP_SLOT_CC_6_D(a, b, c, d, e, f)
#define BOOST_PP_SLOT_CC_7(a,b,c,d,e,f,g) BOOST_PP_SLOT_CC_7_D(a, b, c, d, e, f, g)
#define BOOST_PP_SLOT_CC_8(a,b,c,d,e,f,g,h) BOOST_PP_SLOT_CC_8_D(a, b, c, d, e, f, g, h)
#define PRIx16 "x"
#define SN_sbgp_routerIdentifier "sbgp-routerIdentifier"
#define __PIE__ 2
#define EVP_PKEY_DHX NID_dhpublicnumber
#define BOOST_PP_SEQ_FOLD_LEFT_I_221(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_222, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(222, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_R_UNSUPPORTED_SSL_VERSION 259
#define CRYPTO_EX_INDEX_X509_STORE_CTX 5
#define BOOST_PP_SEQ_ELEM_133(_) BOOST_PP_SEQ_ELEM_132
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110001 (1)(1)(1)(1)(0)(0)(0)(1),
#define X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER 33
#define SN_setct_CapRevReqTBE "setct-CapRevReqTBE"
#define TLS1_TXT_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 "ECDHE-ARIA128-GCM-SHA256"
#define OBJ_documentPublisher OBJ_pilotAttributeType,56L
#define SSL_CTX_set1_client_sigalgs(ctx,slist,slistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CLIENT_SIGALGS,slistlen,(int *)(slist))
#define SN_setct_CapRevReqTBS "setct-CapRevReqTBS"
#define NID_id_GostR3411_94_prf 816
#define LOG_TO_STRING_INFO(message) google::LogMessage( __FILE__, __LINE__, google::GLOG_INFO, message)
#define GFLAGS_NAMESPACE google
#define TLS1_CK_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 0x0300C05C
#define SSL_F_TLS1_PRF 284
#define SSL3_CK_RSA_RC4_128_SHA 0x03000005
#define __cpp_lib_raw_memory_algorithms 201606L
#define __WCOREFLAG 0x80
#define PRIx32 "x"
#define EVP_aria_256_cfb EVP_aria_256_cfb128
#define BOOST_STD_EXTENSION_NAMESPACE __gnu_cxx
#define SN_x509ExtAdmission "x509ExtAdmission"
#define RAND_F_GET_ENTROPY 106
#define SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE
#define BOOST_PP_SEQ_FOLD_LEFT_I_225(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_226, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(226, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_HAS_PRAGMA_ONCE 
#define ASN1_R_NO_MATCHING_CHOICE_TYPE 143
#define OBJ_brainpoolP512r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,13L
#define BOOST_PP_SEQ_FOLD_LEFT_I_226(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_227, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(227, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define RSA_F_RSA_NULL_PRIVATE_DECRYPT 132
#define SN_setct_CredReqTBEX "setct-CredReqTBEX"
#define ASN1_R_INVALID_MODIFIER 186
#define BOOST_PP_SEQ_ELEM_138(_) BOOST_PP_SEQ_ELEM_137
#define BOOST_PP_WHILE_35(p,o,s) BOOST_PP_WHILE_35_C(BOOST_PP_BOOL(p(36, s)), p, o, s)
#define OBJ_setCext_Track2Data OBJ_set_certExt,9L
#define BOOST_PP_SEQ_FOLD_LEFT_I_227(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_228, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(228, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_auth_rsa "auth-rsa"
#define BOOST_PP_REPEAT_1_1(m,d) m(2, 0, d)
#define OBJ_setct_CredRevReqTBE OBJ_set_ctype,71L
#define LOCK_MAND 32
#define EVP_CCM_TLS_IV_LEN 12
#define _mm_fnmsub_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, -(B), -(C), R)
#define BOOST_PP_SEQ_ELEM_139(_) BOOST_PP_SEQ_ELEM_138
#define OBJ_setct_CredRevReqTBS OBJ_set_ctype,35L
#define TLS1_TXT_RSA_WITH_ARIA_128_GCM_SHA256 "ARIA128-GCM-SHA256"
#define EC_PKEY_NO_PUBKEY 0x002
#define __DECL_SIMD_sincosf16 
#define PEM_F_CHECK_BITLEN_RSA 131
#define BOOST_PP_WHILE_39(p,o,s) BOOST_PP_WHILE_39_C(BOOST_PP_BOOL(p(40, s)), p, o, s)
#define TLS1_TXT_DHE_RSA_WITH_AES_256_CCM_8 "DHE-RSA-AES256-CCM8"
#define X509V3_F_V2I_AUTHORITY_KEYID 119
#define BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF(trait,name,default_) template< typename T, typename fallback_ = boost::mpl::bool_<default_> > struct trait { struct gcc_3_2_wknd { template< typename U > static boost::mpl::aux::yes_tag test( boost::mpl::aux::type_wrapper<U> const volatile* , boost::mpl::aux::type_wrapper<BOOST_MSVC_TYPENAME U::name>* = 0 ); static boost::mpl::aux::no_tag test(...); }; typedef boost::mpl::aux::type_wrapper<T> t_; BOOST_STATIC_CONSTANT(bool, value = sizeof(gcc_3_2_wknd::test(static_cast<t_*>(0))) == sizeof(boost::mpl::aux::yes_tag) ); typedef boost::mpl::bool_<value> type; };
#define BOOST_PP_SEQ_SIZE_131(_) BOOST_PP_SEQ_SIZE_132
#define __SI_BAND_TYPE long int
#define PRIx64 __PRI64_PREFIX "x"
#define NID_X9_62_id_characteristic_two_basis 680
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000001 (0)(0)(0)(0)(0)(0)(0)(1),
#define __PMT(args) args
#define BOOST_PP_SEQ_SIZE_133(_) BOOST_PP_SEQ_SIZE_134
#define _mm256_permute_ps(X,C) ((__m256) __builtin_ia32_vpermilps256 ((__v8sf)(__m256)(X), (int)(C)))
#define FOLLY_NONNULL 
#define X509V3_F_X509V3_EXT_NCONF 152
#define __DECL_SIMD_sincosf32 
#define BOOST_PP_SEQ_FOLD_LEFT_I_156(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_157, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(157, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define d2i_DHxparams_bio(bp,x) ASN1_d2i_bio_of(DH, DH_new, d2i_DHxparams, bp, x)
#define BOOST_PP_SEQ_SIZE_135(_) BOOST_PP_SEQ_SIZE_136
#define __cpp_conditional_explicit 201806L
#define X509V3_F_POLICY_CACHE_NEW 170
#define LN_SNILS "SNILS"
#define LN_jurisdictionStateOrProvinceName "jurisdictionStateOrProvinceName"
#define _BASIC_STRING_TCC 1
#define SSL_F_SSL_ADD_SERVERHELLO_TLSEXT 278
#define RSA_F_RSA_CMS_VERIFY 158
#define BN_R_NOT_A_SQUARE 111
#define RSA_F_RSA_VERIFY 119
#define __CFLOAT64X _Complex long double
#define __FLT64_MIN_10_EXP__ (-307)
#define RSA_ASN1_VERSION_DEFAULT 0
#define _mm256_mask_alignr_epi8(W,U,X,Y,N) ((__m256i) __builtin_ia32_palignr256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)((N) * 8), (__v4di)(__m256i)(X), (__mmask32)(U)))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_102(o,s,l) 0
#define OBJ_rfc822Mailbox OBJ_pilotAttributeType,3L
#define EC_F_EC_KEY_NEW 182
#define SHLIB_VERSION_HISTORY ""
#define MADV_HWPOISON 100
#define NID_setct_AcqCardCodeMsg 540
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_2 2
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_3 3
#define OBJ_client_auth OBJ_id_kp,2L
#define _mm_maskz_mul_round_ss(U,A,B,C) (__m128)__builtin_ia32_mulss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define _mm256_extract_epi8(X,N) (__extension__ ({ __m128i __Y = _mm256_extractf128_si256 ((X), (N) >> 4); _mm_extract_epi8 (__Y, (N) % 16); }))
#define SN_kx_psk "KxPSK"
#define _mm256_mask_cmp_epi8_mask(M,X,Y,P) ((__mmask32) __builtin_ia32_cmpb256_mask ((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(P), (__mmask32)(M)))
#define si_pkey _sifields._sigfault._bounds._pkey
#define _mm512_mask_rcp28_round_pd(W,U,A,C) __builtin_ia32_rcp28pd_mask(A, W, U, C)
#define SN_inhibit_any_policy "inhibitAnyPolicy"
#define EVP_CTRL_TLS1_1_MULTIBLOCK_AAD 0x19
#define BOOST_PP_DEC_204 203
#define RSA_F_PKEY_PSS_INIT 165
#define _mm512_mask_rcp28_round_ps(W,U,A,C) __builtin_ia32_rcp28ps_mask(A, W, U, C)
#define EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY 192
#define SO_EE_ORIGIN_LOCAL 1
#define ASN1_R_CONTEXT_NOT_INITIALISED 217
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_105(o,s,l) 0
#define SN_setct_BatchAdminResData "setct-BatchAdminResData"
#define __DECL_SIMD_sincosf64 
#define TLS1_TXT_PSK_WITH_NULL_SHA384 "PSK-NULL-SHA384"
#define BOOST_TT_IS_SCALAR_HPP_INCLUDED 
#define NID_ext_req 172
#define BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE(args,substitute_macro,member_macro) BOOST_MPL_HAS_MEMBER_IMPLEMENTATION( args , BOOST_MPL_HAS_MEMBER_INTROSPECT , substitute_macro , member_macro )
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_107(o,s,l) 0
#define OBJ_id_GostR3410_94_bBis OBJ_id_GostR3410_94,4L
#define REG_R9 REG_R9
#define __enclu_eexit(leaf,b,c,retval) __asm__ __volatile__("enclu\n\t" : "=a" (retval), "=c" (c) : "a" (leaf), "b" (b) : "cc")
#define DECLARE_PEM_rw_cb(name,type) DECLARE_PEM_read(name, type) DECLARE_PEM_write_cb(name, type)
#define CHAR_BIT __CHAR_BIT__
#define __attribute_pure__ __attribute__ ((__pure__))
#define EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES 232
#define NID_selected_attribute_types 394
#define THRIFT_FLAG_DECLARE_int64(_name) THRIFT_FLAG_DECLARE(_name, int64_t)
#define NID_id_tc26 974
#define BOOST_PP_FOR_256_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(257, s) BOOST_PP_IIF(c, BOOST_PP_FOR_257, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(257, s), p, o, m)
#define COMPACT_GOOGLE_LOG_INFO google::LogMessage( __FILE__, __LINE__)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_219(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_250(op,st,ss,sz) 0
#define EVP_PKEY_DSA NID_dsa
#define OBJ_iana OBJ_dod,1L
#define SNANF64X (__builtin_nansf64x (""))
#define SSL_F_OSSL_STATEM_SERVER_READ_TRANSITION 418
#define BIO_sock_cleanup() while(0) continue
#define LN_dITRedirect "dITRedirect"
#define IMPLEMENT_PEM_write_bio_const(name,type,str,asn1) int PEM_write_bio_ ##name(BIO *bp, const type *x) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ##asn1,str,bp,(void *)x,NULL,NULL,0,NULL,NULL); }
#define EVP_F_EVP_CIPHER_CTX_COPY 163
#define BIO_should_read(a) BIO_test_flags(a, BIO_FLAGS_READ)
#define BOOST_PP_FOR_25_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(26, s) BOOST_PP_IIF(c, BOOST_PP_FOR_26, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(26, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_251(op,st,ss,sz) 0
#define TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA384 "ECDHE-PSK-AES256-CBC-SHA384"
#define __ILP32_OFF32_LDFLAGS "-m32"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101100 (1)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101101 (1)(0)(1)(1)(0)(1),
#define SSL_OP_CISCO_ANYCONNECT 0x00008000U
#define NID_id_smime_cti_ets_proofOfApproval 255
#define SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER 0x0
#define EVBUF_FS_DISABLE_LOCKING 0x08
#define LN_documentIdentifier "documentIdentifier"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_252(op,st,ss,sz) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101110 (1)(0)(1)(1)(1)(0),
#define _mm_maskz_range_pd(U,A,B,C) ((__m128d) __builtin_ia32_rangepd128_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)_mm_setzero_pd(), (__mmask8)(U)))
#define TLS1_CK_DHE_PSK_WITH_3DES_EDE_CBC_SHA 0x0300008F
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM "ECDHE-ECDSA-AES128-CCM"
#define RSA_R_WRONG_SIGNATURE_LENGTH 119
#define OBJ_id_pkix_OCSP_archiveCutoff OBJ_id_pkix_OCSP,6L
#define _mm256_mask_slli_epi32(W,U,X,C) ((__m256i)__builtin_ia32_pslldi256_mask ((__v8si)(__m256i)(X), (int)(C), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010100 (1)(0)(0)(1)(0)(1)(0)(0),
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_253(op,st,ss,sz) 0
#define SN_setct_CRLNotificationTBS "setct-CRLNotificationTBS"
#define BOOST_PP_TUPLE_TO_LIST_19(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, BOOST_PP_NIL)))))))))))))))))))
#define OBJ_uniqueIdentifier OBJ_pilotAttributeType,44L
#define BOOST_PP_SEQ_SIZE_26(_) BOOST_PP_SEQ_SIZE_27
#define SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS 314
#define BOOST_PP_SEQ_SIZE_27(_) BOOST_PP_SEQ_SIZE_28
#define BOOST_PP_INC_130 131
#define SSL_R_INVALID_CONTEXT 282
#define SSL3_RT_HANDSHAKE 22
#define BOOST_PP_SEQ_SIZE_28(_) BOOST_PP_SEQ_SIZE_29
#define _GLIBCXX_TR1_MODIFIED_BESSEL_FUNC_TCC 1
#define OBJ_sect571k1 OBJ_secg_ellipticCurve,38L
#define __DECL_SIMD_logf128 
#define NID_aes_192_ctr 905
#define NID_businessCategory 860
#define CONF_F_DEF_LOAD 120
#define OBJ_camellia_256_ofb128 OBJ_camellia,43L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111001 (0)(1)(1)(1)(0)(0)(1),
#define BOOST_PP_NODE_100(p) BOOST_PP_IIF(p(100), BOOST_PP_NODE_98, BOOST_PP_NODE_102)
#define TLS1_TXT_PSK_WITH_RC4_128_SHA "PSK-RC4-SHA"
#define NID_x500UniqueIdentifier 503
#define X509_V_ERR_OCSP_VERIFY_NEEDED 73
#define KU_DECIPHER_ONLY 0x8000
#define _mm_maskz_range_sd(U,A,B,C) ((__m128d) __builtin_ia32_rangesd128_mask_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define _mm512_cmp_round_pd_mask(X,Y,P,R) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)-1, R))
#define _mm256_mask_slli_epi64(W,U,X,C) ((__m256i)__builtin_ia32_psllqi256_mask ((__v4di)(__m256i)(X), (int)(C), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"
#define OPENSSL_NO_MSAN 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010010 (1)(0)(1)(0)(0)(1)(0),
#define SN_id_camellia256_wrap "id-camellia256-wrap"
#define BIO_F_BUFFER_CTRL 114
#define SN_id_set "id-set"
#define CRYPTO_set_dynlock_create_callback(dyn_create_function) 
#define ECerr(f,r) ERR_PUT_error(ERR_LIB_EC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define SN_setct_CredReqTBSX "setct-CredReqTBSX"
#define SSL_R_INCONSISTENT_COMPRESSION 340
#define SSL_TXT_ARIA_GCM "ARIAGCM"
#define UIO_MAXIOV __IOV_MAX
#define BOOST_PP_SEQ_ELEM_231(_) BOOST_PP_SEQ_ELEM_230
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_70(op,st,ss,sz) 0
#define TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA 0x0300C036
#define BN_FLG_FREE 0x8000
#define SN_id_tc26_gost_3410_2012_512_paramSetTest "id-tc26-gost-3410-2012-512-paramSetTest"
#define BOOST_TT_IS_NOTHROW_MOVE_ASSIGNABLE_HPP_INCLUDED 
#define BOOST_PP_VARIADIC_ELEM_10(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,...) e10
#define _mm512_mask_insertf32x4(A,B,X,Y,C) ((__m512) __builtin_ia32_insertf32x4_mask ((__v16sf)(__m512) (X), (__v4sf)(__m128) (Y), (int) (C), (__v16sf)(__m512) (A), (__mmask16)(B)))
#define _mm512_mask_insertf32x8(W,U,X,Y,C) ((__m512) __builtin_ia32_insertf32x8_mask ((__v16sf)(__m512) (X), (__v8sf)(__m256) (Y), (int) (C), (__v16sf)(__m512)(W), (__mmask16)(U)))
#define X509_R_ISSUER_MISMATCH 129
#define _SC_CLOCK_SELECTION _SC_CLOCK_SELECTION
#define ASN1_R_BAD_OBJECT_HEADER 102
#define IORING_FEAT_RW_CUR_POS (1U << 3)
#define TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA "TLS_DHE_PSK_WITH_AES_256_CBC_SHA"
#define RAND_F_RAND_POOL_ADD_BEGIN 113
#define BIO_F_FILE_READ 130
#define BOOST_PP_IIF_0(t,f) f
#define CT_R_SCT_UNSUPPORTED_VERSION 115
#define _mm_maskz_div_round_sd(U,A,B,C) (__m128d)__builtin_ia32_divsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE 39
#define _mm_maskz_div_round_ss(U,A,B,C) (__m128)__builtin_ia32_divss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define FP_INFINITE 1
#define NGROUPS_MAX 65536
#define NI_NUMERICHOST 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_73(op,st,ss,sz) 0
#define ILL_BADIADDR ILL_BADIADDR
#define BLKROSET _IO(0x12,93)
#define _GLIBCXX_CSTDDEF 1
#define CT_F_O2I_SCT_SIGNATURE 112
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_74(op,st,ss,sz) 0
#define SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION 1060
#define HEADER_HMAC_H 
#define LN_netscape_revocation_url "Netscape Revocation Url"
#define X509_F_X509_EXTENSION_CREATE_BY_NID 108
#define RSA_R_INVALID_X931_DIGEST 142
#define RSA_F_RSA_PADDING_ADD_NONE 107
#define BOOST_PP_WHILE_41(p,o,s) BOOST_PP_WHILE_41_C(BOOST_PP_BOOL(p(42, s)), p, o, s)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_75(op,st,ss,sz) 0
#define SSL_F_TLS_CONSTRUCT_CKE_SRP 410
#define SSL_F_TLS_PROCESS_HELLO_RETRY_REQUEST 511
#define APACHE_THRIFT_ACCESSOR_cv_integer 
#define SN_id_regCtrl_authenticator "id-regCtrl-authenticator"
#define XN_FLAG_FN_NONE (3 << 21)
#define _mm512_maskz_srli_epi16(U,A,B) ((__m512i) __builtin_ia32_psrlwi512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)_mm512_setzero_si512 (), (__mmask32)(U)))
#define EVP_F_EVP_PKEY_GET0_DSA 120
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_65(o,s,l) 0
#define OBJ_sect571r1 OBJ_secg_ellipticCurve,39L
#define LN_subtreeMaximumQuality "subtreeMaximumQuality"
#define __LC_ALL 6
#define TLSEXT_TYPE_status_request 5
#define _mm512_maskz_permute_pd(U,X,C) ((__m512d) __builtin_ia32_vpermilpd512_mask ((__v8df)(__m512d)(X), (int)(C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_161(s,p,o,m) 0
#define _GLIBCXX_HAVE_HYPOT 1
#define RSA_R_INVALID_LABEL 160
#define SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE 1043
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011000 (0)(0)(1)(1)(0)(0)(0),
#define _mm256_mask_i32gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m256i) __builtin_ia32_gathersiv4di ((__v4di)(__m256i) (SRC), (long long const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4di)(__m256i) (MASK), (int) (SCALE))
#define EBADFD 77
#define BOOST_PP_WHILE_47(p,o,s) BOOST_PP_WHILE_47_C(BOOST_PP_BOOL(p(48, s)), p, o, s)
#define BOOST_PP_INTERCEPT_12 
#define _PSTL_VERSION_MINOR ((_PSTL_VERSION % 1000) / 10)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_163(s,p,o,m) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011001 (0)(0)(1)(1)(0)(0)(1),
#define NID_documentLocation 472
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB 128
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_68(o,s,l) 0
#define NID_id_tc26_signwithdigest_gost3410_2012_512 986
#define THRIFT_TRANSPORT_THEADER_H_ 1
#define BOOST_PP_FOR_182_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(183, s) BOOST_PP_IIF(c, BOOST_PP_FOR_183, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(183, s), p, o, m)
#define X509_set_notBefore X509_set1_notBefore
#define BOOST_PP_INTERCEPT_16 
#define BOOST_PP_SEQ_SIZE_141(_) BOOST_PP_SEQ_SIZE_142
#define EVP_R_BUFFER_TOO_SMALL 155
#define __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
#define FS_ENCRYPTION_MODE_INVALID 0
#define SCNoPTR __PRIPTR_PREFIX "o"
#define BOOST_PP_SEQ_FOLD_LEFT_I_164(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_165, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(165, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_sha256WithRSAEncryption "sha256WithRSAEncryption"
#define SSL_TXT_CMPDEF "COMPLEMENTOFDEFAULT"
#define _mm_maskz_srai_epi16(U,A,B) ((__m128i) __builtin_ia32_psrawi128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)_mm_setzero_si128(), (__mmask8)(U)))
#define _MM_MASK_OVERFLOW 0x0400
#define BIO_C_SET_NBIO 102
#define _mm512_maskz_gf2p8affineinv_epi64_epi8(A,B,C,D) ((__m512i) __builtin_ia32_vgf2p8affineinvqb_v64qi_mask( (__v64qi)(__m512i)(B), (__v64qi)(__m512i)(C), (int)(D), (__v64qi)(__m512i) _mm512_setzero_si512 (), (__mmask64)(A)))
#define TLSEXT_curve_P_256 23
#define OBJ_set_brand_Diners OBJ_set_brand,30L
#define SSL_CTX_set_msg_callback_arg(ctx,arg) SSL_CTX_ctrl((ctx), SSL_CTRL_SET_MSG_CALLBACK_ARG, 0, (arg))
#define FMT_NORETURN [[noreturn]]
#define LN_hmacWithMD5 "hmacWithMD5"
#define TLS1_RFC_PSK_WITH_AES_128_CCM "TLS_PSK_WITH_AES_128_CCM"
#define OBJ_sm4_ecb OBJ_sm_scheme,104L,1L
#define SEEK_CUR 1
#define X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT 2
#define BOOST_PP_SEQ_FOLD_LEFT_I_167(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_168, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(168, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_LocalKeySet 1L,3L,6L,1L,4L,1L,311L,17L,2L
#define BOOST_PP_SEQ_SIZE_146(_) BOOST_PP_SEQ_SIZE_147
#define BOOST_HAS_THREADS 
#define _BITS_UIO_EXT_H 1
#define _mm256_mask_reduce_pd(W,U,A,B) ((__m256d) __builtin_ia32_reducepd256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define __GXX_ABI_VERSION 1014
#define BOOST_PP_SEQ_SIZE_148(_) BOOST_PP_SEQ_SIZE_149
#define FB_LOG_ONCE(severity) for (auto __folly_detail_glog_once = true; __folly_detail_glog_once;) for (static ::std::atomic_bool __folly_detail_glog_logged{false}; __folly_detail_glog_once; __folly_detail_glog_once = false) if (FOLLY_LIKELY( __folly_detail_glog_logged.load(::std::memory_order_relaxed)) || __folly_detail_glog_logged.exchange( true, ::std::memory_order_relaxed)) { } else LOG(severity)
#define _mm512_maskz_permute_ps(U,X,C) ((__m512) __builtin_ia32_vpermilps512_mask ((__v16sf)(__m512)(X), (int)(C), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U)))
#define _mm512_maskz_srli_epi64(U,X,C) ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))
#define AT_FDCWD -100
#define FS_IOC_FIEMAP _IOWR('f', 11, struct fiemap)
#define FB_ARG_2_OR_1(...) FB_ARG_2_OR_1_IMPL(__VA_ARGS__, __VA_ARGS__)
#define _STL_ITERATOR_BASE_FUNCS_H 1
#define ERR_LIB_KDF 52
#define INT32_MAX (2147483647)
#define OBJ_id_tc26_gost_3410_2012_512_paramSetB OBJ_id_tc26_gost_3410_2012_512_constants,2L
#define OBJ_id_tc26_gost_3410_2012_512_paramSetC OBJ_id_tc26_gost_3410_2012_512_constants,3L
#define TLS1_TXT_DHE_RSA_WITH_ARIA_128_GCM_SHA256 "DHE-RSA-ARIA128-GCM-SHA256"
#define __cpp_aggregate_bases 201603L
#define BIO_get_accept_ip_family(b) BIO_ctrl(b,BIO_C_GET_ACCEPT,4,NULL)
#define SSL3_TXT_DHE_DSS_DES_40_CBC_SHA "EXP-DHE-DSS-DES-CBC-SHA"
#define OBJ_dstu28147 OBJ_ua_pki,1L,1L,1L
#define PKCS7_type_is_signedAndEnveloped(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_signedAndEnveloped)
#define TLS1_AD_UNSUPPORTED_EXTENSION 110
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001000 (1)(0)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001001 (1)(0)(0)(1)(0)(0)(1),
#define SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT 280
#define NID_searchGuide 859
#define EVP_CIPHER_CTX_flags(c) EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(c))
#define X509V3_R_NEED_ORGANIZATION_AND_NUMBERS 142
#define PEM_F_PEM_READ_BIO_PARAMETERS 140
#define _mm512_setr_epi32(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) _mm512_set_epi32(e15,e14,e13,e12,e11,e10,e9,e8,e7,e6,e5,e4,e3,e2,e1,e0)
#define TCP_USER_TIMEOUT 18
#define EVP_PKEY_CTX_set_dhx_rfc5114(ctx,gen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_RFC5114, gen, NULL)
#define TLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA 0x0300C01A
#define __DECL_SIMD_expf32x 
#define SSL_CTX_set_app_data(ctx,arg) (SSL_CTX_set_ex_data(ctx,0, (char *)(arg)))
#define ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE 170
#define _mm256_mask_roundscale_pd(W,U,A,B) ((__m256d) __builtin_ia32_rndscalepd_256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001010 (1)(0)(0)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001011 (1)(0)(0)(1)(0)(1)(1),
#define _GLIBCXX_NOEXCEPT noexcept
#define HUGE_VAL_F128 (__builtin_huge_valf128 ())
#define IORING_ENTER_GETEVENTS (1U << 0)
#define BOOST_PP_INTERCEPT_252 
#define FPE_INTOVF FPE_INTOVF
#define _EVENT_LOG_MSG EVENT_LOG_MSG
#define __error_t_defined 1
#define LN_id_pkix_OCSP_CrlID "OCSP CRL ID"
#define _GLIBCXX_WRITE_MEM_BARRIER __atomic_thread_fence (__ATOMIC_RELEASE)
#define TLS1_RT_CRYPTO_MASTER (TLS1_RT_CRYPTO | 0x4)
#define TLS1_RFC_RSA_PSK_WITH_RC4_128_SHA "TLS_RSA_PSK_WITH_RC4_128_SHA"
#define BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_2(bit) bit, BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_3
#define NID_id_it_preferredSymmAlg 301
#define __cpp_lib_to_address 201711L
#define SSL3_RT_ALERT 21
#define _GLIBCXX_CONSTEXPR constexpr
#define BOOST_MPL_AUX_NUMERIC_CAST_HPP_INCLUDED 
#define RAND_F_RAND_POOL_ATTACH 124
#define IORING_REGISTER_FILES_UPDATE 6
#define LN_itu_t "itu-t"
#define BOOST_PP_SEQ_SIZE_30(_) BOOST_PP_SEQ_SIZE_31
#define SSL_F_SSL_DO_HANDSHAKE 180
#define __cpp_lib_int_pow2 202002L
#define TCPOPT_TIMESTAMP 8
#define BOOST_PP_SEQ_SIZE_31(_) BOOST_PP_SEQ_SIZE_32
#define __DECL_SIMD_logf 
#define __DECL_SIMD_logl 
#define _mm512_setr_epi64(e0,e1,e2,e3,e4,e5,e6,e7) _mm512_set_epi64(e7,e6,e5,e4,e3,e2,e1,e0)
#define NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm 1174
#define NID_magma_ecb 1187
#define _IOC_TYPEBITS 8
#define BOOST_PREPROCESSOR_REPETITION_ENUM_HPP 
#define SSL_R_ILLEGAL_SUITEB_DIGEST 380
#define ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME 0x080
#define _mm512_mask_cmp_ps_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)(M),_MM_FROUND_CUR_DIRECTION))
#define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_CXX11
#define SSL_F_TLS_CONSTRUCT_CTOS_SERVER_NAME 475
#define SSL_SESSION_set_app_data(s,a) (SSL_SESSION_set_ex_data(s,0, (char *)(a)))
#define X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS 122
#define SSL_R_INAPPROPRIATE_FALLBACK 373
#define MADV_DONTFORK 10
#define XN_FLAG_FN_ALIGN (1 << 25)
#define BOOST_PP_SEQ_SIZE_38(_) BOOST_PP_SEQ_SIZE_39
#define BIO_do_accept(b) BIO_do_handshake(b)
#define NID_id_cmc_getCRL 339
#define BOOST_MPL_SIZE_HPP_INCLUDED 
#define EVP_PKEY_HKDF NID_hkdf
#define SN_dhSinglePass_cofactorDH_sha512kdf_scheme "dhSinglePass-cofactorDH-sha512kdf-scheme"
#define EVENT__HAVE_TIMERCMP 1
#define DH_R_INVALID_PARAMETER_NID 114
#define TTY_NAME_MAX 32
#define SSL_R_UNKNOWN_DIGEST 368
#define TLS1_CK_DHE_RSA_WITH_AES_256_CCM 0x0300C09F
#define ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING 134
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111010 (0)(1)(1)(1)(0)(1)(0),
#define EV_UINT8_MAX UINT8_MAX
#define _POSIX_MAX_INPUT 255
#define BOOST_MPL_AUX_NA_SPEC_LAMBDA(i,name) template< typename Tag > struct lambda< name< BOOST_MPL_AUX_NA_PARAMS(i) > , Tag BOOST_MPL_AUX_LAMBDA_ARITY_PARAM(int_<-1>) > { typedef false_ is_le; typedef name< BOOST_MPL_AUX_NA_PARAMS(i) > result_; typedef name< BOOST_MPL_AUX_NA_PARAMS(i) > type; };
#define SN_setct_PANOnly "setct-PANOnly"
#define BOOST_PP_NODE_137(p) BOOST_PP_IIF(p(137), 137, 138)
#define BLKSECTSET _IO(0x12,102)
#define OBJ_jurisdictionStateOrProvinceName 1L,3L,6L,1L,4L,1L,311L,60L,2L,1L,2L
#define INT32_MIN (-2147483647-1)
#define BOOST_PP_NODE_138(p) BOOST_PP_IIF(p(138), BOOST_PP_NODE_137, BOOST_PP_NODE_139)
#define BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED 
#define NID_Experimental 384
#define BOOST_PP_LIST_FOLD_LEFT_41(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_42, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(42, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000001 (0)(0)(0)(0)(0)(1),
#define _Bool bool
#define TLSEXT_TYPE_heartbeat 15
#define JEMALLOC_CXX_THROW throw()
#define BOOST_PP_FOR_114_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(115, s) BOOST_PP_IIF(c, BOOST_PP_FOR_115, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(115, s), p, o, m)
#define CRYPTO_ALIGN(x) __attribute__ ((aligned(x)))
#define EC_R_INVALID_ENCODING 102
#define LN_organizationalUnitName "organizationalUnitName"
#define SSL3_CHANGE_CIPHER_CLIENT_READ (SSL3_CC_CLIENT|SSL3_CC_READ)
#define SN_setct_AuthResBaggage "setct-AuthResBaggage"
#define BOOST_PP_WHILE_103_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_104, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(104, s))
#define SSL_F_SSL_BAD_METHOD 160
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011 (0)(1)(0)(1)(1),
#define SN_chacha20 "ChaCha20"
#define _CMP_GT_OQ 0x1e
#define _CMP_GT_OS 0x0e
#define PTHREAD_RWLOCK_INITIALIZER { { __PTHREAD_RWLOCK_INITIALIZER (PTHREAD_RWLOCK_DEFAULT_NP) } }
#define LN_mime_mhs_headings "mime-mhs-headings"
#define LN_mXRecord "mXRecord"
#define OBJ_id_GostR3410_2001_TestParamSet OBJ_cryptopro,35L,0L
#define NID_seed_ecb 776
#define __FLT64X_DIG__ 18
#define _RANDOM_H 1
#define _mm512_mask_fmsubadd_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, -(C), U, R)
#define BOOST_PP_WHILE_48_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_49, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(49, s))
#define LN_setAttr_T2Enc "encrypted track 2"
#define BOOST_PP_REPEAT_1_148(m,d) BOOST_PP_REPEAT_1_147(m, d) m(2, 147, d)
#define LN_enhancedSearchGuide "enhancedSearchGuide"
#define LN_mgf1 "mgf1"
#define BOOST_PP_SEQ_FOLD_LEFT_222(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_222(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_kx_dhe_psk "kx-dhe-psk"
#define HEADER_E_OS2_H 
#define BOOST_PP_SEQ_FOLD_LEFT_52(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_52(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm256_mask_permutex_pd(W,U,A,B) ((__m256d) __builtin_ia32_permdf256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define BIO_get_conn_address(b) ((const BIO_ADDR *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,2))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010110 (0)(1)(0)(1)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010111 (0)(1)(0)(1)(0)(1)(1)(1),
#define BOOST_PP_FOR_223_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(224, s) BOOST_PP_IIF(c, BOOST_PP_FOR_224, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(224, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_I_234(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_235, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(235, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define KU_NON_REPUDIATION 0x0040
#define BOOST_PREPROCESSOR_ARITHMETIC_SUB_HPP 
#define X509_FLAG_NO_AUX (1L << 10)
#define OBJ_netscape_ca_policy_url OBJ_netscape_cert_extension,8L
#define BOOST_PP_SEQ_FOLD_LEFT_224(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_224(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVP_des_ede_cfb EVP_des_ede_cfb64
#define _LINUX_FSCRYPT_H 
#define NID_aRecord 478
#define BOOST_PP_SEQ_FOLD_LEFT_225(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_225(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BIO_C_GET_WRITE_GUARANTEE 140
#define PLOG_IF(severity,condition) static_cast<void>(0), !(condition) ? (void) 0 : google::LogMessageVoidify() & PLOG(severity)
#define BOOST_PP_LIST_REST(list) BOOST_PP_LIST_REST_D(list)
#define NID_id_DHBasedMac 783
#define _mm_mask_cmp_epi64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(P), (__mmask8)(M)))
#define BOOST_PP_WHILE_52(p,o,s) BOOST_PP_WHILE_52_C(BOOST_PP_BOOL(p(53, s)), p, o, s)
#define EVP_PKEY_DH_KDF_X9_42 2
#define LN_pkcs7_data "pkcs7-data"
#define _STL_FUNCTION_H 1
#define BOOST_PP_WHILE_187_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_188, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(188, s))
#define F_TLOCK 2
#define X509V3_F_SXNET_GET_ID_ULONG 129
#define TCP_MD5SIG_FLAG_PREFIX 1
#define TLS1_RFC_ECDHE_RSA_WITH_DES_192_CBC3_SHA "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"
#define BOOST_MPL_VECTOR_AUX_PUSH_FRONT_HPP_INCLUDED 
#define F_GETLEASE 1025
#define SN_id_GostR3411_94_with_GostR3410_2001_cc "id-GostR3411-94-with-GostR3410-2001-cc"
#define _mm_cvt_roundsd_i32(A,B) ((int)__builtin_ia32_vcvtsd2si32(A, B))
#define SSL_CERT_FLAG_SUITEB_128_LOS 0x30000
#define BOOST_PP_SEQ_FOLD_LEFT_228(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_228(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_netscape_cert_extension "nsCertExt"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_172(s,p,o,m) 0
#define SO_REUSEPORT 15
#define BOOST_PP_SEQ_FOLD_LEFT_229(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_229(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _MWAITXINTRIN_H_INCLUDED 
#define BOOST_PP_WHILE_58(p,o,s) BOOST_PP_WHILE_58_C(BOOST_PP_BOOL(p(59, s)), p, o, s)
#define ASYNC_NO_JOBS 1
#define MS_REC 16384
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_174(s,p,o,m) 0
#define IOC_IN (_IOC_WRITE << _IOC_DIRSHIFT)
#define BLOCK_SIZE_BITS 10
#define RAND_F_RAND_DRBG_UNINSTANTIATE 118
#define SSL_F_SSL_CTX_SET_CT_VALIDATION_CALLBACK 396
#define NID_sm_scheme 1142
#define PKCS7_R_INVALID_SIGNED_DATA_TYPE 155
#define BOOST_NONE_17SEP2003_HPP 
#define V_ASN1_NEG_INTEGER (2 | V_ASN1_NEG)
#define _GLIBCXX_HAVE_SYS_STATVFS_H 1
#define BOOST_PP_INTERCEPT_26 
#define NID_id_GostR3411_94_TestParamSet 821
#define M_2_SQRTPIf32x __f32x (1.128379167095512573896158903121545172)
#define SSL_R_INCONSISTENT_EXTMS 104
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_110(o,s,l) 0
#define d2i_SSL_SESSION_bio(bp,s_id) ASN1_d2i_bio_of(SSL_SESSION,SSL_SESSION_new,d2i_SSL_SESSION,bp,s_id)
#define SSL_R_VERSION_TOO_LOW 396
#define RAND_R_RANDOM_POOL_UNDERFLOW 134
#define SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac "id-tc26-cipher-gostr3412-2015-magma-ctracpkm-omac"
#define MADV_DOFORK 11
#define TLS1_RFC_DHE_PSK_WITH_AES_128_CCM_8 "TLS_PSK_DHE_WITH_AES_128_CCM_8"
#define THRIFT2_PROTOCOL_COMPACTPROTOCOL_TCC_ 1
#define BOOST_PP_FOR_74_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(75, s) BOOST_PP_IIF(c, BOOST_PP_FOR_75, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(75, s), p, o, m)
#define EVENT__HAVE_NANOSLEEP 1
#define AF_ATMSVC PF_ATMSVC
#define _mm_cvt_roundsd_i64(A,B) ((long long)__builtin_ia32_vcvtsd2si64(A, B))
#define OPENSSL_strndup(str,n) CRYPTO_strndup(str, n, OPENSSL_FILE, OPENSSL_LINE)
#define BOOST_TT_IS_VOID_HPP_INCLUDED 
#define EC_F_ECKEY_PARAM2TYPE 223
#define sk_insert OPENSSL_sk_insert
#define BOOST_PP_SEQ_SIZE_158(_) BOOST_PP_SEQ_SIZE_159
#define CT_F_CT_V1_LOG_ID_FROM_PKEY 125
#define DECLARE_ASN1_ITEM(name) OPENSSL_EXTERN const ASN1_ITEM name ##_it;
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_114(o,s,l) 0
#define DSA_F_DSA_PARAM_DECODE 119
#define HEADER_DSA_H 
#define _AVX5124VNNIWINTRIN_H_INCLUDED 
#define XKU_ANYEKU 0x100
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010000 (0)(1)(0)(1)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010001 (0)(1)(0)(1)(0)(0)(0)(1),
#define T_LOG_OPER(format_string,...) { if (T_GLOBAL_LOGGING_LEVEL > 0) { COMPUTE_TIME fprintf( stderr, "[%s, %d ms] " format_string " \n", dbgtime, ms, ##__VA_ARGS__); } }
#define APACHE_THRIFT_ACCESSOR_clientId 
#define SSL_CTRL_SET_CURVES_LIST SSL_CTRL_SET_GROUPS_LIST
#define BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME(args) BOOST_PP_CAT(BOOST_PP_ARRAY_ELEM(0, args) , _test)
#define SN_camellia_256_cbc "CAMELLIA-256-CBC"
#define EVBUFFER_DATA(x) evbuffer_pullup((x), -1)
#define _mm_mask_reduce_sd(W,U,A,B,C) ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define SSL_CTX_set_default_read_ahead(ctx,m) SSL_CTX_set_read_ahead(ctx,m)
#define BOOST_OVERRIDE override
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_117(o,s,l) 0
#define AF_PPPOX PF_PPPOX
#define __cpp_lib_gcd_lcm 201606
#define BOOST_PP_ENUM_BINARY_PARAMS_M_II(z,n,p1,p2) BOOST_PP_COMMA_IF(n) p1 ## n p2 ## n
#define SN_camellia_256_ccm "CAMELLIA-256-CCM"
#define BOOST_MPL_HAS_XXX_TEMPLATE_DEF(name) BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF( BOOST_PP_CAT(has_, name), name, false )
#define NID_setct_PIDataUnsigned 525
#define BOOST_PP_WHILE_47_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_48, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(48, s))
#define BOOST_VARIANT_VISITATION_UNROLLING_LIMIT BOOST_MPL_LIMIT_LIST_SIZE
#define EVP_PKT_EXCH 0x0040
#define AF_IEEE802154 PF_IEEE802154
#define SN_camellia_256_cfb1 "CAMELLIA-256-CFB1"
#define SN_camellia_256_cfb8 "CAMELLIA-256-CFB8"
#define X509V3_EXT_ERROR_UNKNOWN (1L << 16)
#define SSL_TXT_SHA256 "SHA256"
#define GEN_OTHERNAME 0
#define BOOST_PP_IS_EMPTY_ZERO(...) 0
#define DECLARE_uint32(name) DECLARE_VARIABLE(::GFLAGS_NAMESPACE::uint32, U, name)
#define SN_secp224k1 "secp224k1"
#define SO_TXTIME 61
#define SSL_F_SSL_SET_CERT 191
#define TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA"
#define __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
#define OBJ_pkcs7_data OBJ_pkcs7,1L
#define MADV_DONTNEED 4
#define EVP_CTRL_AEAD_TLS1_AAD 0x16
#define ASN1_R_STRING_TOO_LONG 151
#define CT_R_SCT_NOT_SET 106
#define BIO_CTRL_DGRAM_GET_FALLBACK_MTU 47
#define EUCLEAN 117
#define ASN1_PCTX_FLAGS_SHOW_SEQUENCE 0x002
#define BOOST_PP_FOR_11_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(12, s) BOOST_PP_IIF(c, BOOST_PP_FOR_12, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(12, s), p, o, m)
#define BOOST_VARIANT_DETAIL_CAST_STORAGE_HPP 
#define EVP_R_UNKNOWN_DIGEST 161
#define SSL3_RT_MAX_COMPRESSED_LENGTH (SSL3_RT_MAX_PLAIN_LENGTH+SSL3_RT_MAX_COMPRESSED_OVERHEAD)
#define FS_XFLAG_SYNC 0x00000020
#define _MM_FROUND_NO_EXC 0x08
#define SSL_F_TLS_PROCESS_INITIAL_SERVER_FLIGHT 442
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_SHA384 "ECDH-ECDSA-AES256-SHA384"
#define BOOST_INLINE_CONSTEXPR BOOST_INLINE_VARIABLE BOOST_CONSTEXPR_OR_CONST
#define EVP_PADDING_ANSI923 3
#define _MM_MASK_DENORM 0x0100
#define DSA_F_DSAPARAMS_PRINT 100
#define BOOST_OPTIONAL_OPTIONAL_DETAIL_OPTIONAL_ALIGNED_STORAGE_AJK_12FEB2016_HPP 
#define BOOST_TT_COPY_REFERENCE_HPP_INCLUDED 
#define __S_IEXEC 0100
#define SSL3_CK_DHE_RSA_DES_40_CBC_SHA 0x03000014
#define NID_id_GostR3410_2001_ParamSet_cc 854
#define __GNU_LIBRARY__ 6
#define SSL_TXT_TLSV1 "TLSv1"
#define PROT_READ 0x1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000 (1)(1)(0)(0)(0),
#define __x86_64__ 1
#define i2d_DHparams_fp(fp,x) ASN1_i2d_fp(i2d_DHparams,(fp), (unsigned char *)(x))
#define DECLARE_uint64(name) DECLARE_VARIABLE(::GFLAGS_NAMESPACE::uint64, U64, name)
#define RLIMIT_RSS __RLIMIT_RSS
#define BOOST_PP_SEQ_SIZE_48(_) BOOST_PP_SEQ_SIZE_49
#define BOOST_PP_NODE_141(p) BOOST_PP_IIF(p(141), 141, 142)
#define BOOST_PP_SEQ_ELEM_205(_) BOOST_PP_SEQ_ELEM_204
#define SSL_R_UNKNOWN_SSL_VERSION 254
#define X509_STORE_get1_crl X509_STORE_CTX_get1_crls
#define O_CREAT 0100
#define _WCHAR_T_H 
#define BOOST_PP_WHILE_119_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_120, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(120, s))
#define sk_zero OPENSSL_sk_zero
#define LN_pkcs7_digest "pkcs7-digestData"
#define ENODEV 19
#define TLS1_TXT_SRP_SHA_DSS_WITH_AES_256_CBC_SHA "SRP-DSS-AES-256-CBC-SHA"
#define OBJ_id_smime_aa OBJ_SMIME,2L
#define M_1_PIf64x __f64x (0.318309886183790671537767526745028724)
#define SN_setAttr_T2Enc "setAttr-T2Enc"
#define SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT 302
#define __stub_revoke 
#define _POSIX_CHOWN_RESTRICTED 0
#define BOOST_PP_NODE_146(p) BOOST_PP_IIF(p(146), BOOST_PP_NODE_145, BOOST_PP_NODE_147)
#define NID_des_ecb 29
#define LN_des_ede3_cfb64 "des-ede3-cfb"
#define _AVX512VNNIVLINTRIN_H_INCLUDED 
#define EVP_R_GET_RAW_KEY_FAILED 182
#define DLOG(severity) LOG(severity)
#define X509_V_FLAG_CB_ISSUER_CHECK 0x0
#define SN_sha512_256 "SHA512-256"
#define OBJ_setct_CapTokenData OBJ_set_ctype,20L
#define FOLLY_HAVE_WCHAR_SUPPORT 1
#define SN_id_qt_cps "id-qt-cps"
#define RWF_SYNC ((__kernel_rwf_t)0x00000004)
#define OBJ_X9_62_c2pnb176v1 OBJ_X9_62_c_TwoCurve,4L
#define EKEYEXPIRED 127
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM_8 0x0300C0AF
#define BOOST_MPL_AUX_CONFIG_WORKAROUND_HPP_INCLUDED 
#define SSL_CTRL_GET_EXTRA_CHAIN_CERTS 82
#define SSL_R_MISSING_SIGALGS_EXTENSION 112
#define DSA_R_BAD_Q_VALUE 102
#define O_DIRECT __O_DIRECT
#define BOOST_PREPROCESSOR_DEBUG_ERROR_HPP 
#define BOOST_PP_INC_148 149
#define _SC_XBS5_LP64_OFF64 _SC_XBS5_LP64_OFF64
#define SN_sect131r2 "sect131r2"
#define OBJ_id_smime_ct OBJ_SMIME,1L
#define SSL3_RT_MAX_PACKET_SIZE (SSL3_RT_MAX_ENCRYPTED_LENGTH+SSL3_RT_HEADER_LENGTH)
#define __UINT_LEAST64_TYPE__ long unsigned int
#define OBJ_localityName OBJ_X509,7L
#define NID_id_pkix_OCSP_Nonce 366
#define SN_id_regCtrl_pkiArchiveOptions "id-regCtrl-pkiArchiveOptions"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_71(o,s,l) 0
#define EVLIST_ALL 0xff
#define OBJ_textEncodedORAddress OBJ_pilotAttributeType,2L
#define _AVX512CDINTRIN_H_INCLUDED 
#define __FLT_HAS_QUIET_NAN__ 1
#define SSL_R_BAD_EXTENSION 110
#define FMT_FALLTHROUGH [[fallthrough]]
#define SN_secp224r1 "secp224r1"
#define _SC_THREAD_ATTR_STACKADDR _SC_THREAD_ATTR_STACKADDR
#define SSL_TXT_GOST89MAC12 "GOST89MAC12"
#define BOOST_PP_SEQ_TRANSFORM_O_I(s,op,data,res,elem) (op, data, res (op(s, data, elem)))
#define FOLLY_HAZPTR_THR_LOCAL true
#define OBJ_aria_128_cbc OBJ_aria,2L
#define SSL_F_OSSL_STATEM_SERVER_PROCESS_MESSAGE 603
#define NID_id_GostR3410_2012_512 980
#define WUNTRACED 2
#define BOOST_PP_WHILE_194_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_195, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(195, s))
#define SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE 1010
#define BOOST_PP_TUPLE_TO_LIST_2(e0,e1) (e0, (e1, BOOST_PP_NIL))
#define BOOST_PP_TUPLE_TO_LIST_4(e0,e1,e2,e3) (e0, (e1, (e2, (e3, BOOST_PP_NIL))))
#define BOOST_PP_TUPLE_TO_LIST_6(e0,e1,e2,e3,e4,e5) (e0, (e1, (e2, (e3, (e4, (e5, BOOST_PP_NIL))))))
#define BOOST_PP_TUPLE_TO_LIST_7(e0,e1,e2,e3,e4,e5,e6) (e0, (e1, (e2, (e3, (e4, (e5, (e6, BOOST_PP_NIL)))))))
#define BOOST_MOVE_DOCIGN(T1) T1
#define SSL_F_TLS_CONSTRUCT_ENCRYPTED_EXTENSIONS 443
#define SN_setCext_setExt "setCext-setExt"
#define SSL_CTX_get_app_data(ctx) (SSL_CTX_get_ex_data(ctx,0))
#define SSL3_CK_RSA_IDEA_128_SHA 0x03000007
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_74(o,s,l) 0
#define lh_delete OPENSSL_LH_delete
#define BIO_BIND_REUSEADDR BIO_SOCK_REUSEADDR
#define CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE 106
#define __FLT_HAS_INFINITY__ 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000000 (0)(0)(0)(0)(0)(0),
#define BOOST_MPL_PRIOR_HPP_INCLUDED 
#define NID_id_regCtrl_regToken 315
#define NID_blake2s256 1057
#define BOOST_PP_WHILE_61(p,o,s) BOOST_PP_WHILE_61_C(BOOST_PP_BOOL(p(62, s)), p, o, s)
#define NID_otherMailbox 475
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_87(op,st,ss,sz) 0
#define TLS1_CK_DHE_DSS_WITH_AES_128_SHA 0x03000032
#define OBJ_friendlyCountryName OBJ_pilotAttributeType,43L
#define _BSD_PTRDIFF_T_ 
#define _mm256_cmp_epi16_mask(X,Y,P) ((__mmask16) __builtin_ia32_cmpw256_mask ((__v16hi)(__m256i)(X), (__v16hi)(__m256i)(Y), (int)(P), (__mmask16)(-1)))
#define TLS1_TXT_DH_RSA_WITH_AES_256_SHA "DH-RSA-AES256-SHA"
#define PRIXPTR __PRIPTR_PREFIX "X"
#define MS_LAZYTIME (1<<25)
#define BOOST_PP_WHILE_63(p,o,s) BOOST_PP_WHILE_63_C(BOOST_PP_BOOL(p(64, s)), p, o, s)
#define BIO_SOCK_V6_ONLY 0x02
#define SSL_CTX_disable_ct(ctx) ((void) SSL_CTX_set_validation_callback((ctx), NULL, NULL))
#define BOOST_PP_WHILE_64(p,o,s) BOOST_PP_WHILE_64_C(BOOST_PP_BOOL(p(65, s)), p, o, s)
#define SIGHUP 1
#define __DBL_HAS_DENORM__ 1
#define EVP_F_EVP_PKEY_ENCRYPT_INIT 139
#define BOOST_PP_WHILE_65(p,o,s) BOOST_PP_WHILE_65_C(BOOST_PP_BOOL(p(66, s)), p, o, s)
#define BOOST_PP_INTERCEPT_30 
#define NID_id_tc26_cipher_gostr3412_2015_kuznyechik 1176
#define _IOWR(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))
#define BOOST_PP_INTERCEPT_31 
#define SSL_F_TLS_CONSTRUCT_CTOS_STATUS_REQUEST 479
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_182(s,p,o,m) 0
#define OBJ_org OBJ_iso,3L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_79(o,s,l) 0
#define AF_IRDA PF_IRDA
#define __CHAR16_TYPE__ short unsigned int
#define LT_OBJDIR ".libs/"
#define _mm_cmp_epi32_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(P), (__mmask8)-1))
#define X509_R_BASE64_DECODE_ERROR 118
#define X509_R_INVALID_DIRECTORY 113
#define AT_SYMLINK_NOFOLLOW 0x100
#define BOOST_PP_WHILE_69(p,o,s) BOOST_PP_WHILE_69_C(BOOST_PP_BOOL(p(70, s)), p, o, s)
#define BIG_ENDIAN __BIG_ENDIAN
#define _GLIBCXX_HAVE_SINF 1
#define NID_id_pkix_OCSP_trustRoot 375
#define _GLIBCXX_HAVE_SINL 1
#define _mm_mask_i32scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv2di ((void *) (ADDR), (__mmask8) (MASK), (__v4si)(__m128i) (INDEX), (__v2di)(__m128i) (V1), (int) (SCALE))
#define PF_PPPOX 24
#define SSL_SESSION_get_app_data(s) (SSL_SESSION_get_ex_data(s,0))
#define NID_id_aes192_wrap 789
#define NID_aes_256_cfb1 652
#define EVP_F_EVP_PKEY_CTX_DUP 156
#define BOOST_PP_SEQ_FOLD_LEFT_I_183(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_184, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(184, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_188(s,p,o,m) 0
#define SN_id_smime_spq_ets_sqt_uri "id-smime-spq-ets-sqt-uri"
#define DECLARE_ASN1_FUNCTIONS(type) DECLARE_ASN1_FUNCTIONS_name(type, type)
#define NI_IDN_USE_STD3_ASCII_RULES __glibc_macro_warning ("NI_IDN_USE_STD3_ASCII_RULES is deprecated") 128
#define BOOST_PP_SEQ_FOLD_LEFT_I_184(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_185, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(185, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SYS_F_OPENDIR 10
#define BOOST_PP_INTERCEPT_39 
#define IPV6_XFRM_POLICY 35
#define BOOST_PP_SEQ_FOLD_LEFT_I_186(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_187, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(187, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define HEADER_CTERR_H 
#define THRIFT_FLAG(_name) THRIFT_FLAG_WRAPPER__ ##_name().get()
#define TLSEXT_TYPE_cookie 44
#define _mm_maskz_dbsad_epu8(U,X,Y,C) ((__m128i) __builtin_ia32_dbpsadbw128_mask ((__v16qi)(__m128i) (X), (__v16qi)(__m128i) (Y), (int) (C), (__v8hi)(__m128i)_mm_setzero_si128(), (__mmask8)(U)))
#define LN_mobileTelephoneNumber "mobileTelephoneNumber"
#define ASN1_R_TOO_LONG 155
#define NID_id_aca_chargingIdentity 356
#define SI_TKILL SI_TKILL
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010 (1)(1)(0)(1)(0),
#define LN_ripemd160 "ripemd160"
#define X509_TRUST_OCSP_SIGN 6
#define PKCS7_R_SIGNATURE_FAILURE 105
#define LN_ns_sgc "Netscape Server Gated Crypto"
#define BIO_C_GET_BUFF_NUM_LINES 116
#define OBJ_dod OBJ_org,6L
#define TLSEXT_TYPE_signature_algorithms 13
#define __cpp_structured_bindings 201606L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_232 232
#define BOOST_PP_TUPLE_ELEM_1_0(a) a
#define TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C072
#define SN_camellia_256_ctr "CAMELLIA-256-CTR"
#define EVUTIL_EAI_BADFLAGS EAI_BADFLAGS
#define TLS1_TXT_DH_DSS_WITH_AES_256_GCM_SHA384 "DH-DSS-AES256-GCM-SHA384"
#define __DEC32_MAX_EXP__ 97
#define EVP_R_NO_DEFAULT_DIGEST 158
#define BOOST_MPL_VECTOR_AUX_POP_FRONT_HPP_INCLUDED 
#define _mm256_i32gather_pd(BASE,INDEX,SCALE) (__m256d) __builtin_ia32_gathersiv4df ((__v4df) _mm256_setzero_pd (), (double const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4df) _mm256_cmp_pd (_mm256_setzero_pd (), _mm256_setzero_pd (), _CMP_EQ_OQ), (int) (SCALE))
#define OBJ_camellia_128_ofb128 OBJ_camellia,3L
#define EVP_PKEY_OP_TYPE_GEN (EVP_PKEY_OP_PARAMGEN | EVP_PKEY_OP_KEYGEN)
#define _mm256_i32gather_ps(BASE,INDEX,SCALE) (__m256) __builtin_ia32_gathersiv8sf ((__v8sf) _mm256_setzero_ps (), (float const *) (BASE), (__v8si)(__m256i) (INDEX), (__v8sf) _mm256_cmp_ps (_mm256_setzero_ps (), _mm256_setzero_ps (), _CMP_EQ_OQ), (int) (SCALE))
#define NID_md5_sha1 114
#define __EXCEPTION_H 1
#define _GLIBCXX_TYPEINDEX 1
#define SSL_F_SSL_CTX_USE_PRIVATEKEY 174
#define NID_aes_128_cbc_hmac_sha1 916
#define AT_NO_AUTOMOUNT 0x800
#define IPV6_2292RTHDR 5
#define BIO_set_ssl_renegotiate_timeout(b,seconds) BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT,seconds,NULL)
#define X509V3_R_UNKNOWN_EXTENSION 129
#define BOOST_VARIANT_MAKE_VARIADIC_II(argscount,orig) ARGS_VARIADER_ ## argscount(orig)
#define X509_F_CHECK_POLICY 145
#define BIO_FAMILY_IPV4 4
#define BIO_FAMILY_IPV6 6
#define TLS1_TXT_DH_DSS_WITH_ARIA_256_GCM_SHA384 "DH-DSS-ARIA256-GCM-SHA384"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000001 (0)(0)(0)(0)(0)(0)(1),
#define PRIuFAST64 __PRI64_PREFIX "u"
#define EC_R_SHARED_INFO_ERROR 150
#define _LINUX_LIMITS_H 
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB 63
#define BIO_CB_return(a) ((a)|BIO_CB_RETURN)
#define FB_ARG_2_OR_1_IMPL(a,b,...) b
#define NID_tls1_prf 1021
#define EVP_F_AES_XTS_INIT_KEY 209
#define SSL3_TXT_ADH_RC4_128_MD5 "ADH-RC4-MD5"
#define LN_qualityLabelledData "qualityLabelledData"
#define SSL_F_TLS_CONSTRUCT_STOC_CERTIFICATE 374
#define SCNuFAST16 __PRIPTR_PREFIX "u"
#define CLOCK_MONOTONIC 1
#define NID_kx_psk 1043
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110011 (1)(1)(1)(0)(0)(1)(1),
#define MAP_DENYWRITE 0x00800
#define SSL_set_mode(ssl,op) SSL_ctrl((ssl),SSL_CTRL_MODE,(op),NULL)
#define TCP_COOKIE_IN_ALWAYS (1 << 0)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001010 (0)(0)(0)(0)(1)(0)(1)(0),
#define TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA 0x03000046
#define EVP_aria_128_cfb EVP_aria_128_cfb128
#define OPENSSL_UNISTD_IO OPENSSL_UNISTD
#define BOOST_PP_SEQ_SIZE_51(_) BOOST_PP_SEQ_SIZE_52
#define SSL_F_TLS_PARSE_STOC_EARLY_DATA 538
#define X509_V_OK 0
#define AT_STATX_FORCE_SYNC 0x2000
#define OBJ_subject_alt_name OBJ_id_ce,17L
#define SN_biometricInfo "biometricInfo"
#define BOOST_PP_DIV_BASE_P(d,rxy) BOOST_PP_DIV_BASE_P_IM(d, BOOST_PP_TUPLE_REM_3 rxy)
#define RSA_F_RSA_METH_NEW 162
#define LN_ipsec3 "ipsec3"
#define SSL_R_NO_SHARED_SIGNATURE_ALGORITHMS 376
#define SCNuFAST32 __PRIPTR_PREFIX "u"
#define APACHE_THRIFT_ACCESSOR_crc32c 
#define MCAST_JOIN_GROUP 42
#define INET6_ADDRSTRLEN 46
#define RSA_R_IQMP_NOT_INVERSE_OF_Q 126
#define __try try
#define BOOST_MPL_AUX_CONFIG_INTEL_HPP_INCLUDED 
#define SN_X9_62_prime192v3 "prime192v3"
#define __KEY_T_TYPE __S32_TYPE
#define SSL_CERT_FLAG_SUITEB_192_LOS 0x20000
#define BOOST_PP_FOR_41_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(42, s) BOOST_PP_IIF(c, BOOST_PP_FOR_42, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(42, s), p, o, m)
#define APACHE_THRIFT_ACCESSOR_useStopTLS 
#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA "DH-DSS-CAMELLIA128-SHA"
#define BOOST_PP_SEQ_SIZE_59(_) BOOST_PP_SEQ_SIZE_60
#define BOOST_PP_NODE_152(p) BOOST_PP_IIF(p(152), BOOST_PP_NODE_148, BOOST_PP_NODE_156)
#define BOOST_TT_COPY_CV_REF_HPP_INCLUDED 
#define LN_pbeWithSHA1AndRC2_CBC "pbeWithSHA1AndRC2-CBC"
#define EC_F_D2I_ECPKPARAMETERS 145
#define X509_R_NO_CRL_FOUND 137
#define PEM_STRING_PKCS7_SIGNED "PKCS #7 SIGNED DATA"
#define _mm512_mask_ternarylogic_epi32(A,U,B,C,I) ((__m512i) __builtin_ia32_pternlogd512_mask ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(I), (__mmask16)(U)))
#define FS_IOC_GETVERSION _IOR('v', 1, long)
#define ASN1_R_EXPLICIT_LENGTH_MISMATCH 119
#define LN_uniqueIdentifier "uniqueIdentifier"
#define _mm512_mask_exp2a23_round_pd(W,U,A,C) __builtin_ia32_exp2pd_mask(A, W, U, C)
#define X509v3_KU_DECIPHER_ONLY 0x8000
#define __cpp_lib_shift 201806L
#define _mm512_mask_exp2a23_round_ps(W,U,A,C) __builtin_ia32_exp2ps_mask(A, W, U, C)
#define BIO_F_BIO_GET_PORT 107
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110110 (0)(1)(1)(1)(0)(1)(1)(0),
#define LN_auth_srp "auth-srp"
#define EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED 133
#define SN_id_pda_countryOfResidence "id-pda-countryOfResidence"
#define BOOST_TT_HAS_TRIVIAL_MOVE_ASSIGN_HPP_INCLUDED 
#define BOOST_PP_WHILE_7_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_8, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(8, s))
#define __DECL_SIMD_expf128x 
#define NID_setct_RegFormReqTBE 594
#define _mm512_mask_getmant_round_ps(W,U,X,B,C,R) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)(W), (__mmask16)(U), (R)))
#define BN_F_BN_BLINDING_NEW 102
#define SCNuFAST64 __PRI64_PREFIX "u"
#define FMT_CLASS_API 
#define APACHE_THRIFT_ACCESSOR_cv_double 
#define SSL_R_BIO_NOT_SET 128
#define M_PI_2f32x __f32x (1.570796326794896619231321691639751442)
#define OBJ_id_cmc_revokeRequest OBJ_id_cmc,17L
#define RAND_R_PRNG_NOT_SEEDED 100
#define UINT_FAST32_WIDTH __WORDSIZE
#define EVP_CIPH_CFB_MODE 0x3
#define _GCC_MAX_ALIGN_T 
#define __SI_ASYNCIO_AFTER_SIGIO 1
#define _mm_ceil_pd(V) _mm_round_pd ((V), _MM_FROUND_CEIL)
#define SN_aes_128_ofb128 "AES-128-OFB"
#define WSTOPPED 2
#define BOOST_PP_SEQ_ELEM_155(_) BOOST_PP_SEQ_ELEM_154
#define EVENT__HAVE_STDARG_H 1
#define BOOST_CONTEXT_DETAIL_FCONTEXT_H 
#define PKCS7_F_PKCS7_SIGNER_INFO_SIGN 139
#define _mm512_mask_ternarylogic_epi64(A,U,B,C,I) ((__m512i) __builtin_ia32_pternlogq512_mask ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(I), (__mmask8)(U)))
#define EVENT__HAVE_UINT32_T 1
#define SSL_TXT_aECDH "aECDH"
#define assert(expr) (static_cast <bool> (expr) ? void (0) : __assert_fail (#expr, __FILE__, __LINE__, __ASSERT_FUNCTION))
#define FOLLY_HAS_COROUTINES 0
#define FOLLY_HAVE_LIBBZ2 1
#define BIO_F_CONN_STATE 115
#define _CLFLUSHOPTINTRIN_H_INCLUDED 
#define ASN1_LONG_UNDEF 0x7fffffffL
#define SSL_get0_npn_negotiated SSL_get0_next_proto_negotiated
#define SOL_RXRPC 272
#define SSL_F_SSL_USE_RSAPRIVATEKEY_FILE 206
#define CLONE_FS 0x00000200
#define BIO_should_io_special(a) BIO_test_flags(a, BIO_FLAGS_IO_SPECIAL)
#define FIZZ_ENUM_TYPES(X,...) X ##_E,
#define NID_set_brand_Visa 640
#define EC_R_INVALID_FORM 104
#define IPPROTO_RAW IPPROTO_RAW
#define OBJ_id_alg_des40 OBJ_id_alg,1L
#define BOOST_PP_SEQ_ELEM_158(_) BOOST_PP_SEQ_ELEM_157
#define _SC_XOPEN_REALTIME_THREADS _SC_XOPEN_REALTIME_THREADS
#define __k8__ 1
#define NID_id_smime_aa_encapContentType 217
#define _SHARED_PTR_ATOMIC_H 1
#define __CLOCKID_T_TYPE __S32_TYPE
#define BOOST_PP_FOR_257_PR(s,p) BOOST_PP_BOOL(p(257, s))
#define SSL_OP_COOKIE_EXCHANGE 0x00002000U
#define BIO_CTRL_PUSH 6
#define NID_id_set 512
#define BOOST_BROKEN_COMPILER_TYPE_TRAITS_SPECIALIZATION(x) 
#define ASN1_R_UNSUPPORTED_TYPE 196
#define PRIiPTR __PRIPTR_PREFIX "i"
#define CONF_R_NO_SECTION 107
#define NID_INN 1004
#define FB_SINGLE_ARG(...) __VA_ARGS__
#define EVP_R_INVALID_FIPS_MODE 168
#define _PSTL_GLUE_MEMORY_DEFS_H 
#define S_IEXEC S_IXUSR
#define X509_V_ERR_UNSUPPORTED_SIGNATURE_ALGORITHM 78
#define EC_F_EC_GF2M_SIMPLE_POINTS_MUL 289
#define ELIBEXEC 83
#define FSCRYPT_POLICY_FLAGS_PAD_4 0x00
#define OBJ_pkcs9_contentType OBJ_pkcs9,3L
#define EVENT_LOG_ERR 3
#define SN_sect239k1 "sect239k1"
#define OBJ_x121Address OBJ_X509,24L
#define MOUNT_ATTR_NODEV 0x00000004
#define SSL_F_TLS_PARSE_CTOS_ALPN 567
#define BOOST_PP_INTERCEPT_40 
#define BOOST_PP_FOR_148_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(149, s) BOOST_PP_IIF(c, BOOST_PP_FOR_149, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(149, s), p, o, m)
#define GOOGLE_LOG_ERROR(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_ERROR, counter, &google::LogMessage::SendToLog)
#define BOOST_PP_SEQ_SIZE_164(_) BOOST_PP_SEQ_SIZE_165
#define BOOST_PP_INTERCEPT_41 
#define _GLIBCXX_ITERATOR 1
#define _POSIX_REENTRANT_FUNCTIONS 1
#define OBJ_lastModifiedTime OBJ_pilotAttributeType,23L
#define LN_otherMailbox "otherMailbox"
#define EVP_R_UNKNOWN_CIPHER 160
#define LN_netscape "Netscape Communications Corp."
#define BOOST_PP_WHILE_78(p,o,s) BOOST_PP_WHILE_78_C(BOOST_PP_BOOL(p(79, s)), p, o, s)
#define BOOST_PP_IIF_1(t,f) t
#define LN_aes_256_cfb1 "aes-256-cfb1"
#define LN_aes_256_cfb8 "aes-256-cfb8"
#define BOOST_MOVE_IS_ENUM(T) __is_enum(T)
#define ASYNC_R_INVALID_POOL_SIZE 103
#define BOOST_PP_BOOL_202 1
#define BOOST_PP_WHILE_50_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_51, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(51, s))
#define BOOST_PP_INTERCEPT_44 
#define SYS_F_OPEN 19
#define NID_pbe_WithSHA1And40BitRC2_CBC 149
#define BOOST_PP_IIF_I(bit,t,f) BOOST_PP_IIF_ ## bit(t, f)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_195(s,p,o,m) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_121(o,s,l) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_191(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_192, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(192, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define TLS_MD_CLIENT_WRITE_KEY_CONST "client write key"
#define CPU_COUNT(cpusetp) __CPU_COUNT_S (sizeof (cpu_set_t), cpusetp)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111010 (1)(0)(1)(1)(1)(0)(1)(0),
#define ASN1_R_NO_MULTIPART_BODY_FAILURE 210
#define BOOST_PP_BOOL_204 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_192(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_193, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(193, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define X509_V_ERR_CERT_UNTRUSTED 27
#define EC_F_EC_GFP_MONT_FIELD_MUL 131
#define BIO_TYPE_SOCKET ( 5|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
#define SCM_TIMESTAMPING SO_TIMESTAMPING
#define BOOST_PP_SEQ_FOLD_LEFT_I_193(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_194, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(194, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EVENT_DEFINED_LISTHEAD_ 
#define TLS1_TXT_DH_anon_WITH_ARIA_256_GCM_SHA384 "ADH-ARIA256-GCM-SHA384"
#define BIO_R_UNKNOWN_INFO_TYPE 140
#define SN_id_smime_alg_ESDH "id-smime-alg-ESDH"
#define BIO_dgram_get_peer(b,peer) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_PEER, 0, (char *)(peer))
#define _SYS_EVENTFD_H 1
#define EVP_PK_RSA 0x0001
#define SSL_R_ENCRYPTED_LENGTH_TOO_LONG 150
#define EC_F_EC_ASN1_GROUP2CURVE 153
#define NID_id_it_subscriptionRequest 305
#define __cpp_lib_type_identity 201806L
#define BOOST_PP_SEQ_FOLD_LEFT_I_197(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_198, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(198, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_176(_) BOOST_PP_SEQ_SIZE_177
#define SIGINT 2
#define TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C074
#define _SC_SS_REPL_MAX _SC_SS_REPL_MAX
#define BOOST_PP_SEQ_SIZE_177(_) BOOST_PP_SEQ_SIZE_178
#define SN_id_smime_alg_ESDHwith3DES "id-smime-alg-ESDHwith3DES"
#define PKCS7_F_PKCS7_SIGN 116
#define _GLIBCXX_HAVE_SINHF 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000010 (0)(0)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000011 (0)(0)(0)(0)(1)(1),
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_236(op,st,ss,sz) 0
#define SN_Experimental "experimental"
#define FOLLY_F14_PERTURB_INSERTION_ORDER folly::kIsDebug
#define SYS_F_GETNAMEINFO 13
#define TLS1_AD_UNKNOWN_PSK_IDENTITY 115
#define SIGTRAP 5
#define LHASH_HASH_FN(name) name ##_LHASH_HASH
#define BOOST_MPL_AUX_INSERT_RANGE_IMPL_HPP_INCLUDED 
#define OBJ_aria_256_ecb OBJ_aria,11L
#define SSL3_CHANGE_CIPHER_SERVER_WRITE (SSL3_CC_SERVER|SSL3_CC_WRITE)
#define __FLT_MAX_EXP__ 128
#define X509_F_X509_EXTENSION_CREATE_BY_OBJ 109
#define SSL_MODE_RELEASE_BUFFERS 0x00000010U
#define RSAerr(f,r) ERR_PUT_error(ERR_LIB_RSA,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define SN_setct_CredRevResTBE "setct-CredRevResTBE"
#define TLS1_FLAGS_RECEIVED_EXTMS 0x0200
#define EC_F_EC_PKEY_CHECK 273
#define BOOST_PP_FOR_203_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(204, s) BOOST_PP_IIF(c, BOOST_PP_FOR_204, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(204, s), p, o, m)
#define TCP_COOKIE_MAX 16
#define SN_id_pkinit "id-pkinit"
#define FPE_FLTDIV FPE_FLTDIV
#define CRYPTO_get_dynlock_destroy_callback() (NULL)
#define OBJ_photo OBJ_pilotAttributeType,7L
#define LN_cast5_cbc "cast5-cbc"
#define ASIdOrRange_id 0
#define BOOST_PREPROCESSOR_DETAIL_CHECK_HPP 
#define ENOTRECOVERABLE 131
#define NID_set_brand_JCB 639
#define PF_ATMSVC 20
#define _PSTL_VERSION 9000
#define BOOST_PP_ITERATION_START_1_DIGIT_3 0
#define EVP_PKEY_CTX_set_dh_paramgen_generator(ctx,gen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR, gen, NULL)
#define BOOST_PP_NODE_ENTRY_128(p) BOOST_PP_NODE_64(p)(p)(p)(p)(p)(p)(p)
#define BOOST_PP_WHILE_38(p,o,s) BOOST_PP_WHILE_38_C(BOOST_PP_BOOL(p(39, s)), p, o, s)
#define ASN1_R_INVALID_MIME_TYPE 205
#define BOOST_PP_LIST_FOLD_RIGHT_245(o,s,l) BOOST_PP_LIST_FOLD_LEFT_245(o, s, BOOST_PP_LIST_REVERSE_D(245, l))
#define EIO 5
#define OBJ_id_it_subscriptionRequest OBJ_id_it,8L
#define CLOCK_PROCESS_CPUTIME_ID 2
#define LN_id_tc26_gost_3410_2012_256_paramSetA "GOST R 34.10-2012 (256 bit) ParamSet A"
#define LN_id_tc26_gost_3410_2012_256_paramSetC "GOST R 34.10-2012 (256 bit) ParamSet C"
#define LN_id_tc26_gost_3410_2012_256_paramSetD "GOST R 34.10-2012 (256 bit) ParamSet D"
#define BN_BLINDING_NO_RECREATE 0x00000002
#define EXDEV 18
#define OBJ_id_cct_crs OBJ_id_cct,1L
#define FOLLY_PP_DETAIL_APPEND_VA_ARG(...) , ##__VA_ARGS__
#define OBJ_sm4_cfb1 OBJ_sm_scheme,104L,5L
#define EVP_F_EVP_PKEY_GET0_HMAC 183
#define __glibcxx_requires_can_increment_range(_First1,_Last1,_First2) 
#define ASN1_R_MISSING_EOC 137
#define EVP_PKEY_CTX_set_dh_paramgen_subprime_len(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN, len, NULL)
#define EVP_CTRL_AEAD_SET_TAG 0x11
#define SSL_R_CERTIFICATE_VERIFY_FAILED 134
#define CRYPTO_READ 4
#define SN_surname "SN"
#define ASN1_R_INVALID_DIGIT 130
#define APACHE_THRIFT_ACCESSOR_is_optional 
#define NCONF_get_number(c,g,n,r) NCONF_get_number_e(c,g,n,r)
#define IMPLEMENT_PEM_rw_const(name,type,str,asn1) IMPLEMENT_PEM_read(name, type, str, asn1) IMPLEMENT_PEM_write_const(name, type, str, asn1)
#define TLS1_TXT_ECDH_RSA_WITH_AES_128_CBC_SHA "ECDH-RSA-AES128-SHA"
#define OBJ_id_ct_asciiTextWithCRLF OBJ_id_smime_ct,27L
#define __WINT_TYPE__ unsigned int
#define OBJ_secp224r1 OBJ_secg_ellipticCurve,33L
#define SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet "id-Gost28147-89-CryptoPro-RIC-1-ParamSet"
#define CONF_R_NUMBER_TOO_LARGE 121
#define SSL_R_INVALID_CONFIG 283
#define FOLLY_HAVE_PTHREAD 1
#define BOOST_PP_SEQ_SIZE_69(_) BOOST_PP_SEQ_SIZE_70
#define DTLS1_2_VERSION 0xFEFD
#define OBJ_ext_key_usage OBJ_id_ce,37L
#define ASYNC_R_FAILED_TO_SWAP_CONTEXT 102
#define BOOST_PP_REPEAT_3_100(m,d) BOOST_PP_REPEAT_3_99(m, d) m(4, 99, d)
#define BOOST_PP_REPEAT_3_107(m,d) BOOST_PP_REPEAT_3_106(m, d) m(4, 106, d)
#define PEM_FLAG_EAY_COMPATIBLE 0x2
#define BOOST_PP_REPEAT_3_109(m,d) BOOST_PP_REPEAT_3_108(m, d) m(4, 108, d)
#define SN_camellia_128_gcm "CAMELLIA-128-GCM"
#define NID_ms_ctl_sign 136
#define _mm_fpclass_pd_mask(X,C) ((__mmask8) __builtin_ia32_fpclasspd128_mask ((__v2df) (__m128d) (X), (int) (C),(__mmask8)-1))
#define ASN1_F_ASN1_BIO_INIT 113
#define EC_R_MISSING_OID 167
#define V_ASN1_UTCTIME 23
#define BOOST_PP_NODE_166(p) BOOST_PP_IIF(p(166), BOOST_PP_NODE_165, BOOST_PP_NODE_167)
#define BOOST_PP_REPEAT_1_235(m,d) BOOST_PP_REPEAT_1_234(m, d) m(2, 234, d)
#define LN_pkcs7_encrypted "pkcs7-encryptedData"
#define BOOST_PP_NODE_167(p) BOOST_PP_IIF(p(167), 167, 168)
#define BOOST_PP_REPEAT_3_110(m,d) BOOST_PP_REPEAT_3_109(m, d) m(4, 109, d)
#define BOOST_PP_REPEAT_3_111(m,d) BOOST_PP_REPEAT_3_110(m, d) m(4, 110, d)
#define BC_DIM_MAX _POSIX2_BC_DIM_MAX
#define BOOST_PP_REPEAT_3_113(m,d) BOOST_PP_REPEAT_3_112(m, d) m(4, 112, d)
#define BOOST_PP_REPEAT_3_114(m,d) BOOST_PP_REPEAT_3_113(m, d) m(4, 113, d)
#define BOOST_PP_REPEAT_3_115(m,d) BOOST_PP_REPEAT_3_114(m, d) m(4, 114, d)
#define BOOST_PP_REPEAT_3_117(m,d) BOOST_PP_REPEAT_3_116(m, d) m(4, 116, d)
#define BOOST_PP_REPEAT_3_118(m,d) BOOST_PP_REPEAT_3_117(m, d) m(4, 117, d)
#define EVP_PKEY_CTRL_RSA_PADDING (EVP_PKEY_ALG_CTRL + 1)
#define SSL_TXT_aGOST "aGOST"
#define SSL_F_TLS_CONSTRUCT_NEXT_PROTO 426
#define __bitwise__ 
#define SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION 228
#define EC_F_I2D_ECPARAMETERS 190
#define NID_secp112r1 704
#define NID_secp112r2 705
#define NID_id_aca_group 357
#define X509_F_X509AT_ADD1_ATTR 135
#define FMT_DETECTED_NOEXCEPT noexcept
#define _NEW 
#define ENOEXEC 8
#define signal_initialized(ev) event_initialized(ev)
#define BOOST_PP_EXPAND_I(x) x
#define BOOST_PP_REPEAT_3_121(m,d) BOOST_PP_REPEAT_3_120(m, d) m(4, 120, d)
#define BOOST_PP_REPEAT_3_122(m,d) BOOST_PP_REPEAT_3_121(m, d) m(4, 121, d)
#define __REDIRECT_NTHNL(name,proto,alias) name proto __THROWNL __asm__ (__ASMNAME (#alias))
#define BOOST_PP_REPEAT_3_124(m,d) BOOST_PP_REPEAT_3_123(m, d) m(4, 123, d)
#define BOOST_PP_REPEAT_3_125(m,d) BOOST_PP_REPEAT_3_124(m, d) m(4, 124, d)
#define BOOST_PP_REPEAT_3_126(m,d) BOOST_PP_REPEAT_3_125(m, d) m(4, 125, d)
#define BOOST_PP_REPEAT_3_128(m,d) BOOST_PP_REPEAT_3_127(m, d) m(4, 127, d)
#define BOOST_PP_REPEAT_3_129(m,d) BOOST_PP_REPEAT_3_128(m, d) m(4, 128, d)
#define OBJ_id_smime_aa_receiptRequest OBJ_id_smime_aa,1L
#define EOF (-1)
#define BOOST_HAS_SIGACTION 
#define OBJ_netscape_data_type OBJ_netscape,2L
#define _mm256_insertf128_si256(X,Y,O) ((__m256i) __builtin_ia32_vinsertf128_si256 ((__v8si)(__m256i)(X), (__v4si)(__m128i)(Y), (int)(O)))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_93(op,st,ss,sz) 0
#define OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme OBJ_secg_scheme,14L,1L
#define BOOST_PP_FOR_183_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(184, s) BOOST_PP_IIF(c, BOOST_PP_FOR_184, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(184, s), p, o, m)
#define BOOST_PP_REPEAT_3_132(m,d) BOOST_PP_REPEAT_3_131(m, d) m(4, 131, d)
#define BOOST_PP_REPEAT_3_133(m,d) BOOST_PP_REPEAT_3_132(m, d) m(4, 132, d)
#define EVENT_BASE_COUNT_ADDED 4U
#define BOOST_PP_REPEAT_3_135(m,d) BOOST_PP_REPEAT_3_134(m, d) m(4, 134, d)
#define BOOST_PP_FOR_11(s,p,o,m) BOOST_PP_FOR_11_C(BOOST_PP_BOOL(p(12, s)), s, p, o, m)
#define X509_TRUST_TSA 8
#define BOOST_PP_FOR_13(s,p,o,m) BOOST_PP_FOR_13_C(BOOST_PP_BOOL(p(14, s)), s, p, o, m)
#define BOOST_PP_FOR_16(s,p,o,m) BOOST_PP_FOR_16_C(BOOST_PP_BOOL(p(17, s)), s, p, o, m)
#define BOOST_PP_FOR_18(s,p,o,m) BOOST_PP_FOR_18_C(BOOST_PP_BOOL(p(19, s)), s, p, o, m)
#define OBJ_ecdsa_with_SHA3_512 OBJ_sigAlgs,12L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_95(op,st,ss,sz) 0
#define STATX_MNT_ID 0x00001000U
#define _PSTL_PAR_BACKEND_SERIAL 
#define SSL_F_TLS_PROCESS_END_OF_EARLY_DATA 537
#define BOOST_PP_REPEAT_3_140(m,d) BOOST_PP_REPEAT_3_139(m, d) m(4, 139, d)
#define HEADER_CRYPTOERR_H 
#define BOOST_PP_REPEAT_3_142(m,d) BOOST_PP_REPEAT_3_141(m, d) m(4, 141, d)
#define BOOST_PP_REPEAT_3_143(m,d) BOOST_PP_REPEAT_3_142(m, d) m(4, 142, d)
#define BOOST_PP_REPEAT_3_147(m,d) BOOST_PP_REPEAT_3_146(m, d) m(4, 146, d)
#define _mm512_fmsubadd_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask(A, B, -(C), -1, R)
#define BOOST_PP_FOR_20(s,p,o,m) BOOST_PP_FOR_20_C(BOOST_PP_BOOL(p(21, s)), s, p, o, m)
#define BOOST_PP_FOR_21(s,p,o,m) BOOST_PP_FOR_21_C(BOOST_PP_BOOL(p(22, s)), s, p, o, m)
#define BOOST_PP_FOR_22(s,p,o,m) BOOST_PP_FOR_22_C(BOOST_PP_BOOL(p(23, s)), s, p, o, m)
#define BOOST_PP_FOR_23(s,p,o,m) BOOST_PP_FOR_23_C(BOOST_PP_BOOL(p(24, s)), s, p, o, m)
#define SSL_F_SSL_ADD_CERT_TO_BUF 319
#define BOOST_PP_FOR_25(s,p,o,m) BOOST_PP_FOR_25_C(BOOST_PP_BOOL(p(26, s)), s, p, o, m)
#define BOOST_PP_FOR_26(s,p,o,m) BOOST_PP_FOR_26_C(BOOST_PP_BOOL(p(27, s)), s, p, o, m)
#define BOOST_PP_FOR_27(s,p,o,m) BOOST_PP_FOR_27_C(BOOST_PP_BOOL(p(28, s)), s, p, o, m)
#define B_ASN1_ISO64STRING 0x0040
#define SSL_OP_NO_DTLS_MASK (SSL_OP_NO_DTLSv1|SSL_OP_NO_DTLSv1_2)
#define BOOST_PP_WHILE_121_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_122, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(122, s))
#define _mm512_fmsubadd_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_mask(A, B, -(C), -1, R)
#define _mm_cmpistrc(X,Y,M) ((int) __builtin_ia32_pcmpistric128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define SSL_R_CERT_LENGTH_MISMATCH 135
#define OBJ_certificate_issuer OBJ_id_ce,29L
#define SN_auth_null "AuthNULL"
#define BOOST_PP_SEQ_FOLD_LEFT_I_223(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_224, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(224, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_86(o,s,l) 0
#define BOOST_PP_LIST_FOLD_RIGHT BOOST_PP_CAT(BOOST_PP_LIST_FOLD_RIGHT_, BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256))
#define BOOST_PP_LIST_FOLD_LEFT_58(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_59, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(59, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm256_permute2f128_si256(X,Y,C) ((__m256i) __builtin_ia32_vperm2f128_si256 ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C)))
#define EVP_PKEY_CTX_get_rsa_pss_saltlen(ctx,plen) RSA_pkey_ctx_ctrl(ctx, (EVP_PKEY_OP_SIGN|EVP_PKEY_OP_VERIFY), EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN, 0, plen)
#define TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA384 0x030000B7
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011010 (1)(0)(1)(1)(0)(1)(0),
#define EVP_MD_CTX_FLAG_CLEANED 0x0002
#define BOOST_PP_REPEAT_3_151(m,d) BOOST_PP_REPEAT_3_150(m, d) m(4, 150, d)
#define BOOST_PP_REPEAT_3_152(m,d) BOOST_PP_REPEAT_3_151(m, d) m(4, 151, d)
#define BOOST_PP_REPEAT_3_153(m,d) BOOST_PP_REPEAT_3_152(m, d) m(4, 152, d)
#define BOOST_PP_REPEAT_3_154(m,d) BOOST_PP_REPEAT_3_153(m, d) m(4, 153, d)
#define BOOST_PP_REPEAT_3_155(m,d) BOOST_PP_REPEAT_3_154(m, d) m(4, 154, d)
#define BOOST_PP_REPEAT_3_158(m,d) BOOST_PP_REPEAT_3_157(m, d) m(4, 157, d)
#define BOOST_PP_FOR_30(s,p,o,m) BOOST_PP_FOR_30_C(BOOST_PP_BOOL(p(31, s)), s, p, o, m)
#define BOOST_PP_FOR_31(s,p,o,m) BOOST_PP_FOR_31_C(BOOST_PP_BOOL(p(32, s)), s, p, o, m)
#define BOOST_PP_FOR_32(s,p,o,m) BOOST_PP_FOR_32_C(BOOST_PP_BOOL(p(33, s)), s, p, o, m)
#define BOOST_PP_FOR_33(s,p,o,m) BOOST_PP_FOR_33_C(BOOST_PP_BOOL(p(34, s)), s, p, o, m)
#define BOOST_PP_FOR_34(s,p,o,m) BOOST_PP_FOR_34_C(BOOST_PP_BOOL(p(35, s)), s, p, o, m)
#define BOOST_PP_FOR_35(s,p,o,m) BOOST_PP_FOR_35_C(BOOST_PP_BOOL(p(36, s)), s, p, o, m)
#define BOOST_PP_FOR_36(s,p,o,m) BOOST_PP_FOR_36_C(BOOST_PP_BOOL(p(37, s)), s, p, o, m)
#define BOOST_PP_FOR_38(s,p,o,m) BOOST_PP_FOR_38_C(BOOST_PP_BOOL(p(39, s)), s, p, o, m)
#define SN_capwapAC "capwapAC"
#define BOOST_PP_DEC_33 32
#define EDOM 33
#define RSA_R_LAST_OCTET_INVALID 134
#define BOOST_PP_WHILE_81(p,o,s) BOOST_PP_WHILE_81_C(BOOST_PP_BOOL(p(82, s)), p, o, s)
#define SCNuLEAST32 "u"
#define BOOST_PP_WHILE_101(p,o,s) BOOST_PP_WHILE_101_C(BOOST_PP_BOOL(p(102, s)), p, o, s)
#define ASN1_R_UNSUPPORTED_CIPHER 228
#define __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
#define BOOST_PP_REPEAT_3_160(m,d) BOOST_PP_REPEAT_3_159(m, d) m(4, 159, d)
#define BOOST_PP_REPEAT_3_161(m,d) BOOST_PP_REPEAT_3_160(m, d) m(4, 160, d)
#define BOOST_PP_REPEAT_3_162(m,d) BOOST_PP_REPEAT_3_161(m, d) m(4, 161, d)
#define BOOST_PP_REPEAT_3_163(m,d) BOOST_PP_REPEAT_3_162(m, d) m(4, 162, d)
#define BOOST_PP_REPEAT_3_164(m,d) BOOST_PP_REPEAT_3_163(m, d) m(4, 163, d)
#define BOOST_PP_REPEAT_3_166(m,d) BOOST_PP_REPEAT_3_165(m, d) m(4, 165, d)
#define BOOST_PP_REPEAT_3_167(m,d) BOOST_PP_REPEAT_3_166(m, d) m(4, 166, d)
#define BOOST_PP_FOR_40(s,p,o,m) BOOST_PP_FOR_40_C(BOOST_PP_BOOL(p(41, s)), s, p, o, m)
#define NID_setct_PInitResData 531
#define BOOST_PP_FOR_43(s,p,o,m) BOOST_PP_FOR_43_C(BOOST_PP_BOOL(p(44, s)), s, p, o, m)
#define ev_uintptr_t uintptr_t
#define BOOST_PP_FOR_45(s,p,o,m) BOOST_PP_FOR_45_C(BOOST_PP_BOOL(p(46, s)), s, p, o, m)
#define BOOST_PP_FOR_46(s,p,o,m) BOOST_PP_FOR_46_C(BOOST_PP_BOOL(p(47, s)), s, p, o, m)
#define BOOST_PP_FOR_47(s,p,o,m) BOOST_PP_FOR_47_C(BOOST_PP_BOOL(p(48, s)), s, p, o, m)
#define BOOST_PP_FOR_48(s,p,o,m) BOOST_PP_FOR_48_C(BOOST_PP_BOOL(p(49, s)), s, p, o, m)
#define BOOST_PP_FOR_49(s,p,o,m) BOOST_PP_FOR_49_C(BOOST_PP_BOOL(p(50, s)), s, p, o, m)
#define CMSG_SPACE(len) (CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))
#define CLONE_PTRACE 0x00002000
#define BOOST_PP_WHILE_85(p,o,s) BOOST_PP_WHILE_85_C(BOOST_PP_BOOL(p(86, s)), p, o, s)
#define BOOST_PP_INTERCEPT_50 
#define BOOST_PP_WHILE_230_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_231, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(231, s))
#define EVENT2_EXPORT_SYMBOL 
#define _mm256_shldi_epi16(A,B,C) ((__m256i) __builtin_ia32_vpshld_v16hi ((__v16hi)(__m256i)(A), (__v16hi)(__m256i)(B),(int)(C)))
#define BOOST_PP_SEQ_SIZE_62(_) BOOST_PP_SEQ_SIZE_63
#define d2i_ECPKParameters_fp(fp,x) (EC_GROUP *)ASN1_d2i_fp(NULL, (char *(*)())d2i_ECPKParameters,(fp),(unsigned char **)(x))
#define ESRCH 3
#define BOOST_PP_REPEAT_3_171(m,d) BOOST_PP_REPEAT_3_170(m, d) m(4, 170, d)
#define BOOST_PP_REPEAT_3_172(m,d) BOOST_PP_REPEAT_3_171(m, d) m(4, 171, d)
#define BOOST_PP_REPEAT_3_173(m,d) BOOST_PP_REPEAT_3_172(m, d) m(4, 172, d)
#define BOOST_PP_REPEAT_3_175(m,d) BOOST_PP_REPEAT_3_174(m, d) m(4, 174, d)
#define __GTHREADS 1
#define BOOST_PP_FOR_50(s,p,o,m) BOOST_PP_FOR_50_C(BOOST_PP_BOOL(p(51, s)), s, p, o, m)
#define BOOST_PP_FOR_51(s,p,o,m) BOOST_PP_FOR_51_C(BOOST_PP_BOOL(p(52, s)), s, p, o, m)
#define BOOST_PP_FOR_52(s,p,o,m) BOOST_PP_FOR_52_C(BOOST_PP_BOOL(p(53, s)), s, p, o, m)
#define BOOST_PP_FOR_54(s,p,o,m) BOOST_PP_FOR_54_C(BOOST_PP_BOOL(p(55, s)), s, p, o, m)
#define BOOST_PP_FOR_55(s,p,o,m) BOOST_PP_FOR_55_C(BOOST_PP_BOOL(p(56, s)), s, p, o, m)
#define BOOST_PP_FOR_56(s,p,o,m) BOOST_PP_FOR_56_C(BOOST_PP_BOOL(p(57, s)), s, p, o, m)
#define BOOST_PP_FOR_57(s,p,o,m) BOOST_PP_FOR_57_C(BOOST_PP_BOOL(p(58, s)), s, p, o, m)
#define BOOST_PP_FOR_58(s,p,o,m) BOOST_PP_FOR_58_C(BOOST_PP_BOOL(p(59, s)), s, p, o, m)
#define BOOST_PP_FOR_59(s,p,o,m) BOOST_PP_FOR_59_C(BOOST_PP_BOOL(p(60, s)), s, p, o, m)
#define CPU_FREE(cpuset) __CPU_FREE (cpuset)
#define __GLIBCPP___WORKAROUND_GUARD 1
#define BOOST_PP_INTERCEPT_53 
#define STA_CLK 0x8000
#define SN_id_regCtrl_pkiPublicationInfo "id-regCtrl-pkiPublicationInfo"
#define BOOST_MPL_CLEAR_HPP_INCLUDED 
#define SEEK_END 2
#define EVP_aria_192_cfb EVP_aria_192_cfb128
#define BOOST_PP_REPEAT_3_180(m,d) BOOST_PP_REPEAT_3_179(m, d) m(4, 179, d)
#define BOOST_PP_REPEAT_3_181(m,d) BOOST_PP_REPEAT_3_180(m, d) m(4, 180, d)
#define BOOST_PP_REPEAT_3_184(m,d) BOOST_PP_REPEAT_3_183(m, d) m(4, 183, d)
#define BOOST_PP_REPEAT_3_186(m,d) BOOST_PP_REPEAT_3_185(m, d) m(4, 185, d)
#define BOOST_PP_REPEAT_3_187(m,d) BOOST_PP_REPEAT_3_186(m, d) m(4, 186, d)
#define BOOST_PP_FOR_60(s,p,o,m) BOOST_PP_FOR_60_C(BOOST_PP_BOOL(p(61, s)), s, p, o, m)
#define BOOST_PP_FOR_62(s,p,o,m) BOOST_PP_FOR_62_C(BOOST_PP_BOOL(p(63, s)), s, p, o, m)
#define BOOST_PP_FOR_63(s,p,o,m) BOOST_PP_FOR_63_C(BOOST_PP_BOOL(p(64, s)), s, p, o, m)
#define TLS1_AD_DECODE_ERROR 50
#define BOOST_PP_FOR_65(s,p,o,m) BOOST_PP_FOR_65_C(BOOST_PP_BOOL(p(66, s)), s, p, o, m)
#define BOOST_PP_FOR_66(s,p,o,m) BOOST_PP_FOR_66_C(BOOST_PP_BOOL(p(67, s)), s, p, o, m)
#define BOOST_PP_FOR_68(s,p,o,m) BOOST_PP_FOR_68_C(BOOST_PP_BOOL(p(69, s)), s, p, o, m)
#define BOOST_PP_FOR_69(s,p,o,m) BOOST_PP_FOR_69_C(BOOST_PP_BOOL(p(70, s)), s, p, o, m)
#define DECLARE_int32(name) DECLARE_VARIABLE(::GFLAGS_NAMESPACE::int32, I, name)
#define S_IWOTH (S_IWGRP >> 3)
#define BIO_C_GET_MD_CTX 120
#define _ISOC99_SOURCE 1
#define SSL_RECEIVED_SHUTDOWN 2
#define _GLIBCXX_VECTOR 1
#define _mm256_shldi_epi32(A,B,C) ((__m256i) __builtin_ia32_vpshld_v8si ((__v8si)(__m256i)(A), (__v8si)(__m256i)(B),(int)(C)))
#define TLS1_TXT_DH_DSS_WITH_ARIA_128_GCM_SHA256 "DH-DSS-ARIA128-GCM-SHA256"
#define _mm_min_round_sd(A,B,C) (__m128d)__builtin_ia32_minsd_round(A, B, C)
#define _mm512_rol_epi64(A,B) ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_undefined_epi32 (), (__mmask8)(-1)))
#define BOOST_PP_REPEAT_3_192(m,d) BOOST_PP_REPEAT_3_191(m, d) m(4, 191, d)
#define BOOST_PP_REPEAT_3_193(m,d) BOOST_PP_REPEAT_3_192(m, d) m(4, 192, d)
#define BIO_C_SET_FILENAME 108
#define BOOST_PP_REPEAT_3_195(m,d) BOOST_PP_REPEAT_3_194(m, d) m(4, 194, d)
#define BOOST_PP_REPEAT_3_196(m,d) BOOST_PP_REPEAT_3_195(m, d) m(4, 195, d)
#define _mm_min_round_ss(A,B,C) (__m128)__builtin_ia32_minss_round(A, B, C)
#define BOOST_PP_REPEAT_3_198(m,d) BOOST_PP_REPEAT_3_197(m, d) m(4, 197, d)
#define _PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED 
#define BOOST_PP_FOR_71(s,p,o,m) BOOST_PP_FOR_71_C(BOOST_PP_BOOL(p(72, s)), s, p, o, m)
#define BOOST_PP_FOR_72(s,p,o,m) BOOST_PP_FOR_72_C(BOOST_PP_BOOL(p(73, s)), s, p, o, m)
#define BOOST_PP_FOR_73(s,p,o,m) BOOST_PP_FOR_73_C(BOOST_PP_BOOL(p(74, s)), s, p, o, m)
#define BOOST_PP_FOR_75(s,p,o,m) BOOST_PP_FOR_75_C(BOOST_PP_BOOL(p(76, s)), s, p, o, m)
#define BOOST_PP_FOR_76(s,p,o,m) BOOST_PP_FOR_76_C(BOOST_PP_BOOL(p(77, s)), s, p, o, m)
#define BOOST_PP_FOR_77(s,p,o,m) BOOST_PP_FOR_77_C(BOOST_PP_BOOL(p(78, s)), s, p, o, m)
#define BOOST_PP_FOR_78(s,p,o,m) BOOST_PP_FOR_78_C(BOOST_PP_BOOL(p(79, s)), s, p, o, m)
#define NID_id_aes128_wrap 788
#define RSA_PSS_SALTLEN_MAX -3
#define OBJ_pkcs12_Version1 OBJ_pkcs12,10L
#define BOOST_PP_SEQ_SIZE_66(_) BOOST_PP_SEQ_SIZE_67
#define _GLIBCXX_USE_C99_STDINT_TR1 1
#define __CPU_ZERO_S(setsize,cpusetp) do __builtin_memset (cpusetp, '\0', setsize); while (0)
#define BOOST_PP_FOR_81(s,p,o,m) BOOST_PP_FOR_81_C(BOOST_PP_BOOL(p(82, s)), s, p, o, m)
#define BOOST_PP_FOR_82(s,p,o,m) BOOST_PP_FOR_82_C(BOOST_PP_BOOL(p(83, s)), s, p, o, m)
#define BOOST_PP_FOR_83(s,p,o,m) BOOST_PP_FOR_83_C(BOOST_PP_BOOL(p(84, s)), s, p, o, m)
#define BOOST_PP_FOR_84(s,p,o,m) BOOST_PP_FOR_84_C(BOOST_PP_BOOL(p(85, s)), s, p, o, m)
#define BOOST_PP_FOR_85(s,p,o,m) BOOST_PP_FOR_85_C(BOOST_PP_BOOL(p(86, s)), s, p, o, m)
#define BOOST_PP_FOR_86(s,p,o,m) BOOST_PP_FOR_86_C(BOOST_PP_BOOL(p(87, s)), s, p, o, m)
#define BOOST_PP_FOR_87(s,p,o,m) BOOST_PP_FOR_87_C(BOOST_PP_BOOL(p(88, s)), s, p, o, m)
#define EC_F_ECPARAMETERS_PRINT_FP 148
#define SN_poly1305 "Poly1305"
#define OBJ_setext_pinAny OBJ_set_msgExt,5L
#define TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA 0x0300C00F
#define DSA_F_PKEY_DSA_CTRL 120
#define SN_id_cmc_confirmCertAcceptance "id-cmc-confirmCertAcceptance"
#define V_ASN1_UNIVERSAL 0x00
#define be64toh(x) __bswap_64 (x)
#define X509_R_CANT_CHECK_DH_KEY 114
#define si_band _sifields._sigpoll.si_band
#define SSL_CB_LOOP 0x01
#define NID_setCext_merchData 610
#define OBJ_id_pkix_OCSP_path OBJ_id_pkix_OCSP,10L
#define SYS_F_GETSERVBYNAME 3
#define _mm256_extractf128_ps(X,N) ((__m128) __builtin_ia32_vextractf128_ps256 ((__v8sf)(__m256)(X), (int)(N)))
#define BOOST_PP_FOR_90(s,p,o,m) BOOST_PP_FOR_90_C(BOOST_PP_BOOL(p(91, s)), s, p, o, m)
#define BOOST_PP_FOR_91(s,p,o,m) BOOST_PP_FOR_91_C(BOOST_PP_BOOL(p(92, s)), s, p, o, m)
#define BOOST_PP_FOR_92(s,p,o,m) BOOST_PP_FOR_92_C(BOOST_PP_BOOL(p(93, s)), s, p, o, m)
#define BOOST_PP_FOR_93(s,p,o,m) BOOST_PP_FOR_93_C(BOOST_PP_BOOL(p(94, s)), s, p, o, m)
#define BOOST_PP_FOR_94(s,p,o,m) BOOST_PP_FOR_94_C(BOOST_PP_BOOL(p(95, s)), s, p, o, m)
#define BOOST_PP_FOR_98(s,p,o,m) BOOST_PP_FOR_98_C(BOOST_PP_BOOL(p(99, s)), s, p, o, m)
#define DECLARE_int64(name) DECLARE_VARIABLE(::GFLAGS_NAMESPACE::int64, I64, name)
#define BOOST_PP_FOR_69_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(70, s) BOOST_PP_IIF(c, BOOST_PP_FOR_70, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(70, s), p, o, m)
#define BOOST_PP_FOR_120(s,p,o,m) BOOST_PP_FOR_120_C(BOOST_PP_BOOL(p(121, s)), s, p, o, m)
#define SSL_CTX_set1_sigalgs_list(ctx,s) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SIGALGS_LIST,0,(char *)(s))
#define OPENSSL_NO_FUZZ_LIBFUZZER 
#define BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE }
#define _mm256_shldi_epi64(A,B,C) ((__m256i) __builtin_ia32_vpshld_v4di ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B),(int)(C)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_192 192
#define BOOST_PP_REPEAT_FROM_TO_M_3_II(z,n,m,dt) m(z, n, dt)
#define OBJ_setct_PI_TBS OBJ_set_ctype,13L
#define FPE_FLTUND FPE_FLTUND
#define _GLIBCXX_HAVE_TANF 1
#define OBJ_hmac_sha1 OBJ_identified_organization,6L,1L,5L,5L,8L,1L,2L
#define _GLIBCXX_HAVE_TANL 1
#define EVENT__HAVE_OPENSSL_SSL_H 1
#define TLS1_TXT_PSK_WITH_AES_256_CBC_SHA384 "PSK-AES256-CBC-SHA384"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_193 193
#define TLS1_TXT_PSK_WITH_AES_256_CBC_SHA "PSK-AES256-CBC-SHA"
#define va_arg(v,l) __builtin_va_arg(v,l)
#define SN_shake128 "SHAKE128"
#define RSA_PKCS1_PSS_PADDING 6
#define _SC_SEMAPHORES _SC_SEMAPHORES
#define _THREAD_SHARED_TYPES_H 1
#define __GLIBC_USE_ISOC2X 1
#define BOOST_MPL_FRONT_INSERTER_HPP_INCLUDED 
#define _SS_PADSIZE (_SS_SIZE - __SOCKADDR_COMMON_SIZE - sizeof (__ss_aligntype))
#define SN_dhSinglePass_stdDH_sha384kdf_scheme "dhSinglePass-stdDH-sha384kdf-scheme"
#define _CMP_FALSE_OQ 0x0b
#define _CMP_FALSE_OS 0x1b
#define OPEN_TREE_CLONE 1
#define SSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE 374
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101010 (0)(1)(1)(0)(1)(0)(1)(0),
#define SSL_F_SSL_VALIDATE_CT 400
#define PKCS7_F_PKCS7_GET0_SIGNERS 124
#define BOOST_PP_FOR_115_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(116, s) BOOST_PP_IIF(c, BOOST_PP_FOR_116, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(116, s), p, o, m)
#define OBJ_sm3WithRSAEncryption OBJ_sm_scheme,504L
#define CONF_MFLAGS_IGNORE_ERRORS 0x1
#define NID_id_regCtrl 313
#define SSL_R_OVERFLOW_ERROR 237
#define SN_id_smime_aa_ets_certValues "id-smime-aa-ets-certValues"
#define LN_des_ede3_cfb8 "des-ede3-cfb8"
#define NID_id_cmc_transactionId 331
#define NID_hkdf 1036
#define BOOST_PP_SEQ_SIZE_72(_) BOOST_PP_SEQ_SIZE_73
#define NID_aes_128_ecb 418
#define __INT_FAST8_WIDTH__ 8
#define BOOST_PP_WHILE_134(p,o,s) BOOST_PP_WHILE_134_C(BOOST_PP_BOOL(p(135, s)), p, o, s)
#define _mm512_mask_cvtt_roundps_epi32(W,U,A,B) ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)(W), U, B))
#define _mm256_mask_cmp_pd_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmppd256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(P), (__mmask8)(M)))
#define CLOCKS_PER_SEC ((__clock_t) 1000000)
#define BOOST_PP_WHILE_49_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_50, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(50, s))
#define BOOST_PP_REPEAT_1_203(m,d) BOOST_PP_REPEAT_1_202(m, d) m(2, 202, d)
#define NID_dstu4145be 1159
#define __WIFSTOPPED(status) (((status) & 0xff) == 0x7f)
#define NID_id_hex_multipart_message 508
#define SSL_get_tlsext_status_ids(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS,0,arg)
#define BOOST_PP_REPEAT_1_245(m,d) BOOST_PP_REPEAT_1_244(m, d) m(2, 244, d)
#define _BITS_CPU_SET_H 1
#define BOOST_PP_FRAME_ITERATION(i) BOOST_PP_CAT(BOOST_PP_ITERATION_, i)
#define EVP_PKEY_ALG_CTRL 0x1000
#define X509v3_KU_DATA_ENCIPHERMENT 0x0010
#define BOOST_PP_SEQ_ELEM_160(_) BOOST_PP_SEQ_ELEM_159
#define FOLLY_EXPECTED_ID(X) FB_CONCATENATE(FB_CONCATENATE(Folly, X), __LINE__)
#define TLS1_TXT_ECDH_anon_WITH_AES_256_CBC_SHA "AECDH-AES256-SHA"
#define FOPEN_MAX 16
#define BOOST_PP_WHILE_137(p,o,s) BOOST_PP_WHILE_137_C(BOOST_PP_BOOL(p(138, s)), p, o, s)
#define SSL_F_SSL_SET_PKEY 193
#define SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE 1030
#define BOOST_PP_DEC_1 0
#define BOOST_PP_DEC_2 1
#define BOOST_PP_DEC_4 3
#define BOOST_PP_DEC_6 5
#define BOOST_PP_DEC_7 6
#define BOOST_PP_DEC_8 7
#define EHOSTDOWN 112
#define i2d_ECPKParameters_fp(fp,x) ASN1_i2d_fp(i2d_ECPKParameters,(fp), (unsigned char *)(x))
#define BOOST_PP_DEC_I(x) BOOST_PP_DEC_ ## x
#define SN_rc5_ecb "RC5-ECB"
#define SN_Independent "id-ppl-independent"
#define BOOST_PP_SEQ_FOLD_LEFT_I_250(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_251, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(251, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_ELEM_162(_) BOOST_PP_SEQ_ELEM_161
#define BIO_R_GETSOCKNAME_ERROR 132
#define SO_CNX_ADVICE 53
#define MS_DIRSYNC 128
#define SSL_F_TLS_CONSTRUCT_CERTIFICATE_REQUEST 372
#define _mm_mask_slli_epi16(W,U,X,C) ((__m128i)__builtin_ia32_psllwi128_mask ((__v8hi)(__m128i)(X), (int)(C), (__v8hi)(__m128i)(W), (__mmask8)(U)))
#define _mm256_cmp_pd(X,Y,P) ((__m256d) __builtin_ia32_cmppd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(P)))
#define sk_dup OPENSSL_sk_dup
#define _mm512_mask_cvtt_roundps_epi64(W,U,A,B) ((__m512i)__builtin_ia32_cvttps2qq512_mask ((A), (__v8di)(W), (U), (B)))
#define BOOST_PP_WHILE_188_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_189, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(189, s))
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_SHA384 "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"
#define SYS_F_WSASTARTUP 9
#define SSL_F_SSL_CTX_USE_CERTIFICATE_FILE 173
#define _mm256_cmp_ps(X,Y,P) ((__m256) __builtin_ia32_cmpps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(P)))
#define FOLLY_S390X 0
#define SSL_set1_chain_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_CHAIN_CERT_STORE,1,(char *)(st))
#define ASN1_F_X509_INFO_NEW 170
#define _knot_mask16 _mm512_knot
#define BOOST_PP_SEQ_FOLD_LEFT_242(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_242(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVP_VerifyInit_ex(a,b,c) EVP_DigestInit_ex(a,b,c)
#define LN_cast5_ecb "cast5-ecb"
#define BOOST_PP_SEQ_FOLD_LEFT_I_254(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_255, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(255, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_LIST_FOLD_LEFT_154(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_155, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(155, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EC_F_EC_POINT_OCT2POINT 122
#define ASN1_R_NULL_IS_WRONG_LENGTH 144
#define X509_FILETYPE_DEFAULT 3
#define MADV_NOHUGEPAGE 15
#define BOOST_PP_SEQ_FOLD_LEFT_I_255(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_256, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(256, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EVP_R_PRIVATE_KEY_ENCODE_ERROR 146
#define _mm_mask_slli_epi32(W,U,X,C) ((__m128i)__builtin_ia32_pslldi128_mask ((__v4si)(__m128i)(X), (int)(C), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define _LINUX_ERRQUEUE_H 
#define SSL_F_TLS_PARSE_CTOS_SIG_ALGS 575
#define __cpp_namespace_attributes 201411L
#define EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR16 1
#define OBJ_id_smime_cti_ets_proofOfSender OBJ_id_smime_cti,4L
#define EC_R_POINT_IS_NOT_ON_CURVE 107
#define OBJ_camellia_128_cbc 1L,2L,392L,200011L,61L,1L,1L,1L,2L
#define SN_id_on_permanentIdentifier "id-on-permanentIdentifier"
#define BOOST_TT_DECAY_HPP_INCLUDED 
#define EVUTIL_EAI_NODATA EAI_NODATA
#define SSL_F_OSSL_STATEM_SERVER_POST_PROCESS_MESSAGE 601
#define TLSEXT_TYPE_cert_type 9
#define OBJ_setct_RegFormResTBS OBJ_set_ctype,44L
#define BOOST_PP_FOR_75_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(76, s) BOOST_PP_IIF(c, BOOST_PP_FOR_76, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(76, s), p, o, m)
#define TLS1_CK_ECDHE_PSK_WITH_RC4_128_SHA 0x0300C033
#define OBJ_des_ofb64 OBJ_algorithm,8L
#define X509V3_ADD_OP_MASK 0xfL
#define NID_camellia_192_cfb1 761
#define __LC_CTYPE 0
#define NID_camellia_192_cfb8 764
#define UINTMAX_MAX (__UINT64_C(18446744073709551615))
#define SSL3_TXT_RSA_DES_64_CBC_SHA "DES-CBC-SHA"
#define CRYPTO_F_OPENSSL_BUF2HEXSTR 117
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110000 (1)(1)(1)(0)(0)(0)(0),
#define SSL3_VERSION 0x0300
#define BOOST_PP_WHILE_110(p,o,s) BOOST_PP_WHILE_110_C(BOOST_PP_BOOL(p(111, s)), p, o, s)
#define BN_F_BN_SET_WORDS 144
#define __cpp_lib_char8_t 201907L
#define _mm_mask_slli_epi64(W,U,X,C) ((__m128i)__builtin_ia32_psllqi128_mask ((__v2di)(__m128i)(X), (int)(C), (__v2di)(__m128i)(W), (__mmask8)(U)))
#define CRYPTO_EX_INDEX_APP 13
#define SN_id_tc26_digest_constants "id-tc26-digest-constants"
#define BN_R_NO_INVERSE 108
#define AI_NUMERICHOST 0x0004
#define BOOST_PP_WHILE_113(p,o,s) BOOST_PP_WHILE_113_C(BOOST_PP_BOOL(p(114, s)), p, o, s)
#define TLS1_TXT_PSK_WITH_3DES_EDE_CBC_SHA "PSK-3DES-EDE-CBC-SHA"
#define BOOST_PP_WHILE_114(p,o,s) BOOST_PP_WHILE_114_C(BOOST_PP_BOOL(p(115, s)), p, o, s)
#define BOOST_MPL_AUX_ADL_BARRIER_DECL(type) namespace boost { namespace mpl { using ::BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE::type; } }
#define NID_hmac_sha3_512 1105
#define __INO_T_MATCHES_INO64_T 1
#define BOOST_PP_WHILE_96(p,o,s) BOOST_PP_WHILE_96_C(BOOST_PP_BOOL(p(97, s)), p, o, s)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_241(op,st,ss,sz) 0
#define __POSIX_FADV_NOREUSE 5
#define __CHAR32_TYPE__ unsigned int
#define NID_rsaOAEPEncryptionSET 644
#define NID_id_ce 81
#define __DECL_SIMD_pow 
#define OBJ_policy_mappings OBJ_id_ce,33L
#define _mm512_maskz_shuffle_i32x4(U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))
#define ASN1_F_PKCS5_PBE_SET 202
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_132(o,s,l) 0
#define BOOST_PP_WHILE_144_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_145, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(145, s))
#define EVUTIL_AI_CANONNAME AI_CANONNAME
#define BOOST_PP_WHILE_119(p,o,s) BOOST_PP_WHILE_119_C(BOOST_PP_BOOL(p(120, s)), p, o, s)
#define BOOST_PP_INTERCEPT_65 
#define BOOST_DO_JOIN(X,Y) BOOST_DO_JOIN2(X,Y)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_243(op,st,ss,sz) 0
#define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_CXX11
#define BOOST_PP_BOOL_224 1
#define _mm512_maskz_scalef_round_pd(U,A,B,C) (__m512d)__builtin_ia32_scalefpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)
#define BOOST_PP_INTERCEPT_66 
#define BOOST_DEDUCED_TYPENAME typename
#define _mm512_maskz_scalef_round_ps(U,A,B,C) (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)
#define NID_dstu4145le 1158
#define FOLLY_HAVE_SO_TIMESTAMPING 1
#define BOOST_PP_LIST_FOLD_LEFT_11(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_12, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(12, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_14(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_15, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(15, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_16(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_17, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(17, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define UINT_LEAST32_MAX (4294967295U)
#define __GNUC_MINOR___WORKAROUND_GUARD 0
#define CPU_XOR(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, ^)
#define SSL_clear_cert_flags(s,op) SSL_ctrl((s),SSL_CTRL_CLEAR_CERT_FLAGS,(op),NULL)
#define EVP_PKEY_POLY1305 NID_poly1305
#define BIO_TYPE_CONNECT (12|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
#define BOOST_PP_SEQ_SIZE_193(_) BOOST_PP_SEQ_SIZE_194
#define LN_subtreeMinimumQuality "subtreeMinimumQuality"
#define SN_X9cm "X9cm"
#define ASN1_F_ASN1_DIGEST 184
#define __cpp_lib_apply 201603
#define SSL_F_SRP_GENERATE_SERVER_MASTER_SECRET 589
#define _GLIBCXX_CMATH 1
#define BOOST_PP_BOOL_229 1
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_100 4
#define BOOST_PP_LIST_FOLD_LEFT_20(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_21, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(21, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_22(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_23, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(23, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_24(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_25, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(25, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_25(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_26, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(26, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_27(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_28, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(28, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_28(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_29, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(29, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_29(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_30, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(30, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __lldiv_t_defined 1
#define BOOST_PP_SEQ_SIZE_197(_) BOOST_PP_SEQ_SIZE_198
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_100 100
#define SSL3_CK_EDH_DSS_DES_64_CBC_SHA SSL3_CK_DHE_DSS_DES_64_CBC_SHA
#define SSL_R_MISSING_PARAMETERS 290
#define X509_V_ERR_CA_KEY_TOO_SMALL 67
#define EVENT__HAVE_SYS_TYPES_H 1
#define SSL_F_DTLS1_RETRANSMIT_MESSAGE 390
#define BOOST_PP_LIST_FOLD_LEFT_31(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_32, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(32, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_32(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_33, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(33, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define LN_dsa "dsaEncryption"
#define _PSTL_MONOTONIC_PRESENT (__INTEL_COMPILER >= 1800)
#define BOOST_PP_LIST_FOLD_LEFT_35(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_36, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(36, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_36(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_37, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(37, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_38(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_39, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(39, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_39(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_40, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(40, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_F_TLS_PROCESS_CKE_RSA 415
#define SN_camellia_192_gcm "CAMELLIA-192-GCM"
#define SN_id_cmc_popLinkRandom "id-cmc-popLinkRandom"
#define BOOST_PP_FOR_150_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(151, s) BOOST_PP_IIF(c, BOOST_PP_FOR_151, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(151, s), p, o, m)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_102 102
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_139(o,s,l) 0
#define ASN1_i2d_bio_of_const(type,i2d,out,x) (ASN1_i2d_bio(CHECKED_I2D_OF(const type, i2d), out, CHECKED_PTR_OF(const type, x)))
#define _mm_shuffle_epi32(A,N) ((__m128i)__builtin_ia32_pshufd ((__v4si)(__m128i)(A), (int)(N)))
#define SSL_F_TLS_PARSE_CTOS_SUPPORTED_GROUPS 578
#define BOOST_PP_TUPLE_ELEM_O_2(n,tuple) BOOST_PP_VARIADIC_ELEM(n, BOOST_PP_REM tuple)
#define BOOST_PP_TUPLE_ELEM_O_3(size,n,tuple) BOOST_PP_TUPLE_ELEM_O_2(n, tuple)
#define BOOST_PP_LIST_FOLD_LEFT_44(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_45, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(45, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
#define BOOST_PP_LIST_FOLD_LEFT_46(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_47, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(47, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_47(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_48, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(48, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_48(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_49, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(49, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define FOLLY_DECLVAL(...) static_cast<__VA_ARGS__ (*)() noexcept>(nullptr)()
#define TLS1_RFC_DHE_RSA_WITH_CHACHA20_POLY1305 "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
#define SN_aes_128_ccm "id-aes128-CCM"
#define _XBEGIN_STARTED (~0u)
#define _mm512_insertf64x4(X,Y,C) ((__m512d) __builtin_ia32_insertf64x4_mask ((__v8df)(__m512d) (X), (__v4df)(__m256d) (Y), (int) (C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))
#define EVP_F_EVP_PBE_CIPHERINIT 116
#define _mm512_maskz_extracti32x4_epi32(U,X,C) ((__m128i) __builtin_ia32_extracti32x4_mask ((__v16si)(__m512i) (X), (int) (C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define LN_policy_constraints "X509v3 Policy Constraints"
#define O_DIRECTORY __O_DIRECTORY
#define BOOST_PP_LIST_FOLD_LEFT_50(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_51, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(51, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_52(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_53, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(53, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_53(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_54, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(54, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_54(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_55, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(55, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_55(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_56, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(56, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_56(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_57, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(57, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_pbeWithMD2AndDES_CBC 9
#define BOOST_PP_LIST_FOLD_LEFT_59(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_60, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(60, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define MAP_HUGETLB 0x40000
#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 0x030000C3
#define SSL_ERROR_NONE 0
#define PF_KCM 41
#define ASN1_R_DECODE_ERROR 110
#define CONF_F_CONF_PARSE_LIST 119
#define NID_surname 100
#define BIO_C_GET_MD 112
#define BOOST_PP_SEQ_FOLD_LEFT_10(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_10(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_11(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_11(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_F_SSL_SET_FD 192
#define BOOST_PP_SEQ_FOLD_LEFT_14(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_14(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_15(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_15(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_17(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_17(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_18(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_18(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define sk_pop OPENSSL_sk_pop
#define OBJ_dSAQuality OBJ_pilotAttributeType,49L
#define _mm_mask_range_pd(W,U,A,B,C) ((__m128d) __builtin_ia32_rangepd128_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define OBJ_id_smime_ct_publishCert OBJ_id_smime_ct,3L
#define BOOST_PP_LIST_FOLD_LEFT_63(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_64, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(64, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_65(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_66, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(66, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_66(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_67, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(67, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BUF_MEM_FLAG_SECURE 0x01
#define BOOST_PP_LIST_FOLD_LEFT_68(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_69, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(69, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_69(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_70, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(70, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_R_INVALID_COMMAND 280
#define EVENT_DBG_NONE 0
#define _mm_mask_range_ps(W,U,A,B,C) ((__m128) __builtin_ia32_rangeps128_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define NID_basic_constraints 87
#define BOOST_PP_LIST_FOLD_LEFT_107(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_108, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(108, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define DN_CREATE 0x00000004
#define PRIdFAST8 "d"
#define _GLIBCXX_HAVE_TLS 1
#define BIO_C_SET_PREFIX 149
#define RSA_FLAG_CACHE_PRIVATE 0x0004
#define TLS1_TXT_ECDHE_PSK_WITH_CHACHA20_POLY1305 "ECDHE-PSK-CHACHA20-POLY1305"
#define EC_F_OLD_EC_PRIV_DECODE 222
#define EVENT__HAVE_SA_FAMILY_T 1
#define S_IXGRP (S_IXUSR >> 3)
#define BOOST_PP_SEQ_FOLD_LEFT_20(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_20(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_24(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_24(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_27(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_27(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_28(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_28(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __ATOMIC_CONSUME 1
#define BOOST_PP_LIST_FOLD_LEFT_74(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_75, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(75, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_75(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_76, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(76, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_76(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_77, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(77, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define LN_aes_192_cfb128 "aes-192-cfb"
#define SN_id_smime_cti_ets_proofOfDelivery "id-smime-cti-ets-proofOfDelivery"
#define __GNUC_MINOR__ 2
#define BOOST_PP_LIST_FOLD_RIGHT_13(o,s,l) BOOST_PP_LIST_FOLD_LEFT_13(o, s, BOOST_PP_LIST_REVERSE_D(13, l))
#define CPU_CLR_S(cpu,setsize,cpusetp) __CPU_CLR_S (cpu, setsize, cpusetp)
#define __DEC32_MANT_DIG__ 7
#define NID_singleLevelQuality 496
#define BOOST_INTRUSIVE_CIRCULAR_LIST_ALGORITHMS_HPP 
#define EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES 229
#define SSL3_RFC_RSA_NULL_SHA "TLS_RSA_WITH_NULL_SHA"
#define BOOST_PP_WHILE_229_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_230, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(230, s))
#define ASN1_F_A2D_ASN1_OBJECT 100
#define BOOST_PP_SEQ_FOLD_LEFT_33(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_33(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_34(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_34(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_mime_mhs_headings "mime-mhs-headings"
#define BOOST_PP_SEQ_FOLD_LEFT_36(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_36(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_38(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_38(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_39(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_39(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define M_SQRT2l 1.414213562373095048801688724209698079L
#define BOOST_PP_REPEAT_1_210(m,d) BOOST_PP_REPEAT_1_209(m, d) m(2, 209, d)
#define CRL_REASON_SUPERSEDED 4
#define BOOST_PP_LIST_FOLD_LEFT_83(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_84, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(84, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_84(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_85, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(85, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_85(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_86, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(86, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EVP_F_EVP_PKEY_CTX_CTRL 137
#define OBJ_pkcs7_digest OBJ_pkcs7,5L
#define OBJ_setct_PInitResData OBJ_set_ctype,12L
#define BOOST_INTRUSIVE_DETAIL_NODE_TO_VALUE_HPP 
#define TLS1_CK_ADH_WITH_AES_256_GCM_SHA384 0x030000A7
#define NID_aes_128_cbc 419
#define _PATH_NETWORKS "/etc/networks"
#define TCPOPT_NOP 1
#define CRYPTO_THREADID_set_pointer(id,ptr) 
#define SN_aes_128_cfb128 "AES-128-CFB"
#define BOOST_PP_SEQ_SIZE_84(_) BOOST_PP_SEQ_SIZE_85
#define BIO_set_conn_port(b,port) BIO_ctrl(b,BIO_C_SET_CONNECT,1, (char *)(port))
#define BOOST_PP_SEQ_FOLD_LEFT_40(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_40(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_41(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_41(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_42(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_42(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_45(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_45(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_46(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_46(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_47(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_47(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_id_aes256_wrap "id-aes256-wrap"
#define BOOST_MPL_AUX_ARITY_SPEC(i,name) BOOST_MPL_AUX_NONTYPE_ARITY_SPEC(i,typename,name)
#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
#define _mm_mask_range_sd(W,U,A,B,C) ((__m128d) __builtin_ia32_rangesd128_mask_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_LIST_FOLD_LEFT_92(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_93, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(93, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_93(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_94, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(94, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_95(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_96, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(96, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define ASN1_PCTX_FLAGS_SHOW_SSOF 0x004
#define BOOST_PP_LIST_FOLD_LEFT_97(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_98, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(98, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_98(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_99, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(99, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_set_cert_flags(s,op) SSL_ctrl((s),SSL_CTRL_CERT_FLAGS,(op),NULL)
#define BOOST_ALIGNMENT_OF(T) __alignof__(T)
#define _mm_mask_range_ss(W,U,A,B,C) ((__m128) __builtin_ia32_rangess128_mask_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define IN_CLASSC_NSHIFT 8
#define SIGEV_NONE SIGEV_NONE
#define BOOST_PP_WHILE_147_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_148, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(148, s))
#define TCP_REPAIR_WINDOW 29
#define SN_countryName "C"
#define OBJ_id_pe OBJ_id_pkix,1L
#define S_ISUID __S_ISUID
#define EC_F_ECKEY_PUB_DECODE 215
#define BOOST_PP_REPEAT_1_217(m,d) BOOST_PP_REPEAT_1_216(m, d) m(2, 216, d)
#define BOOST_PP_SEQ_FOLD_LEFT_53(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_53(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_55(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_55(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm512_rsqrt28_ps(A) _mm512_rsqrt28_round_ps(A, _MM_FROUND_CUR_DIRECTION)
#define SSL_R_CERT_CB_ERROR 377
#define BOOST_PP_NODE_182(p) BOOST_PP_IIF(p(182), BOOST_PP_NODE_181, BOOST_PP_NODE_183)
#define NID_setct_CapRevResTBE 585
#define FS_MAX_KEY_SIZE FSCRYPT_MAX_KEY_SIZE
#define SSL3_TXT_DHE_RSA_DES_40_CBC_SHA "EXP-DHE-RSA-DES-CBC-SHA"
#define OBJ_setct_CapReqTBEX OBJ_set_ctype,63L
#define _mm_cvtt_roundss_si32(A,B) ((int)__builtin_ia32_vcvttss2si32(A, B))
#define SSL_F_CUSTOM_EXT_ADD 554
#define _GLIBCXX_USE_REALPATH 1
#define BOOST_PP_VARIADIC_ELEM_40(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,...) e40
#define NID_X9_62_tpBasis 682
#define BOOST_PP_SEQ_FOLD_LEFT_66(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_66(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_69(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_69(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define FMT_USE_STRING_VIEW 
#define __attribute_malloc__ __attribute__ ((__malloc__))
#define SN_ac_targeting "ac-targeting"
#define OBJ_id_smime_aa_ets_escTimeStamp OBJ_id_smime_aa,25L
#define ELIBMAX 82
#define BOOST_PP_SEQ_FOLD_LEFT_72(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_72(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_73(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_73(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_BOOL_1 1
#define BOOST_PP_SEQ_FOLD_LEFT_76(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_76(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PEM_R_HEADER_TOO_LONG 128
#define BOOST_PP_SEQ_FOLD_LEFT_78(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_78(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_79(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_79(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define STATX_BTIME 0x00000800U
#define _ISOC2X_SOURCE 1
#define OBJ_wap_wsg_idm_ecid OBJ_wap_wsg,4L
#define SSL_AD_UNEXPECTED_MESSAGE SSL3_AD_UNEXPECTED_MESSAGE
#define OBJ_protocolInformation OBJ_X509,48L
#define __STDC_CONSTANT_MACROS 
#define NID_kx_dhe_psk 1041
#define BOOST_PP_BOOL_4 1
#define SN_des_ecb "DES-ECB"
#define BOOST_PP_SEQ_FOLD_LEFT_80(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_80(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_82(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_82(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_83(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_83(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_84(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_84(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_85(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_85(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_87(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_87(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define AF_ISDN PF_ISDN
#define __clockid_t_defined 1
#define BLKZEROOUT _IO(0x12,127)
#define _mm_cvtt_roundss_si64(A,B) ((long long)__builtin_ia32_vcvttss2si64(A, B))
#define BOOST_PP_VARIADIC_ELEM_45(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,...) e45
#define TLS1_FLAGS_REQUIRED_EXTMS 0x1000
#define _BITS_SIGINFO_CONSTS_ARCH_H 1
#define BOOST_PP_BOOL_8 1
#define OBJ_pss OBJ_data,2342L
#define BOOST_PP_SEQ_FOLD_LEFT_91(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_91(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_92(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_92(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_subject_directory_attributes "X509v3 Subject Directory Attributes"
#define BOOST_PP_SEQ_FOLD_LEFT_97(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_97(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_99(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_99(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_INTRUSIVE_SEEDOC(TYPE) TYPE
#define IPV6_2292HOPLIMIT 8
#define EVP_PKEY_CTX_get1_id_len(ctx,id_len) EVP_PKEY_CTX_ctrl(ctx, -1, -1, EVP_PKEY_CTRL_GET1_ID_LEN, 0, (void*)(id_len))
#define OBJ_id_tc26_mac OBJ_id_tc26_algorithms,4L
#define X509V3_F_ADDR_VALIDATE_PATH_INTERNAL 166
#define ENOENT 2
#define LN_localKeyID "localKeyID"
#define BLKTRACESETUP _IOWR(0x12,115,struct blk_user_trace_setup)
#define NID_cACertificate 881
#define BOOST_PP_ITERATION_START_1_DIGIT_1 0
#define IPV6_LEAVE_ANYCAST 28
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100 (1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101 (1)(1)(1)(0)(1),
#define SSL_CERT_SET_SERVER 3
#define _SHARED_PTR_BASE_H 1
#define SO_BUSY_POLL 46
#define EVP_F_EVP_PKEY_ASN1_ADD0 188
#define _mm512_alignr_epi32(X,Y,C) ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)_mm512_undefined_epi32 (), (__mmask16)-1))
#define NID_tlsfeature 1020
#define _mm256_mask_srai_epi16(W,U,A,B) ((__m256i) __builtin_ia32_psrawi256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)(__m256i)(W), (__mmask16)(U)))
#define EC_F_EC_POINT_IS_AT_INFINITY 118
#define EVP_PKEY_NONE NID_undef
#define OBJ_hold_instruction_reject OBJ_holdInstruction,3L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110 (1)(1)(1)(1)(0),
#define EV_RATE_LIMIT_MAX EV_SSIZE_MAX
#define LONG_WIDTH __WORDSIZE
#define LN_des_ofb64 "des-ofb"
#define PTHREAD_KEYS_MAX 1024
#define OBJ_camellia_128_ccm OBJ_camellia,7L
#define XN_FLAG_SEP_MULTILINE (4 << 16)
#define DN_ATTRIB 0x00000020
#define BOOST_PP_WHILE_122(p,o,s) BOOST_PP_WHILE_122_C(BOOST_PP_BOOL(p(123, s)), p, o, s)
#define SSL_need_tmp_RSA(ssl) 0
#define BOOST_PREPROCESSOR_SEQ_FOLD_LEFT_HPP 
#define TLS1_TXT_DHE_PSK_WITH_AES_128_GCM_SHA256 "DHE-PSK-AES128-GCM-SHA256"
#define NID_X9_62_c2tnb191v1 688
#define NID_X9_62_c2tnb191v2 689
#define NID_X9_62_c2tnb191v3 690
#define _GLIBCXX_THROW_OR_ABORT(_EXC) (throw (_EXC))
#define IMPLEMENT_PEM_write_cb_bio_const(name,type,str,asn1) int PEM_write_bio_ ##name(BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ##asn1,str,bp,(void *)x,enc,kstr,klen,cb,u); }
#define __FD_ELT(d) ((d) / __NFDBITS)
#define BOOST_HASH_VARIANT_FUNCTION_HPP 
#define IPV6_RTHDR_STRICT 1
#define BOOST_PP_TUPLE_ELEM_2_0(a,b) a
#define BOOST_PP_TUPLE_ELEM_2_1(a,b) b
#define BOOST_PP_WHILE_125(p,o,s) BOOST_PP_WHILE_125_C(BOOST_PP_BOOL(p(126, s)), p, o, s)
#define BOOST_MPL_CFG_EXTENDED_TEMPLATE_PARAMETERS_MATCHING 
#define BOOST_PP_INTERCEPT_71 
#define _LFS_ASYNCHRONOUS_IO 1
#define EVP_F_EVP_PKEY_VERIFY_RECOVER 144
#define OBJ_BSEARCH_FIRST_VALUE_ON_MATCH 0x02
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_19(op,st,ss,sz) 0
#define BOOST_COPYABLE_AND_MOVABLE_ALT(TYPE) 
#define _mm256_mask_srai_epi32(W,U,A,B) ((__m256i) __builtin_ia32_psradi256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)(__m256i)(W), (__mmask8)(U)))
#define X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN 107
#define PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE 148
#define SSL_CTRL_GET_CLIENT_CERT_REQUEST 9
#define SIGIOT SIGABRT
#define SSL_EXT_TLS1_3_SERVER_HELLO 0x0200
#define BIO_set_md_ctx(b,mdcp) BIO_ctrl(b,BIO_C_SET_MD_CTX,0, (char *)(mdcp))
#define EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH 122
#define BOOST_PP_BOOL_I(x) BOOST_PP_BOOL_ ## x
#define __cpp_lib_polymorphic_allocator 201902L
#define EVENT__HAVE_FD_MASK 1
#define lh_node_usage_stats_bio OPENSSL_LH_node_usage_stats_bio
#define _mm512_alignr_epi64(X,Y,C) ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)_mm512_undefined_epi32 (), (__mmask8)-1))
#define BOOST_PP_INTERCEPT_75 
#define SN_id_tc26_agreement_gost_3410_2012_256 "id-tc26-agreement-gost-3410-2012-256"
#define BOOST_PP_BOOL_234 1
#define LN_SMIMECapabilities "S/MIME Capabilities"
#define POSIX_FADV_SEQUENTIAL 2
#define CRYPTO_F_CRYPTO_DUP_EX_DATA 110
#define BIO_CTRL_DGRAM_SET_SEND_TIMEOUT 35
#define NID_aes_192_ecb 422
#define APACHE_THRIFT_ACCESSOR_streamId 
#define _ASM_X86_SWAB_H 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000101 (0)(0)(0)(0)(1)(0)(1),
#define PKCS7_NOVERIFY 0x20
#define _POSIX_THREAD_KEYS_MAX 128
#define BOOST_PP_BOOL_237 1
#define _mm_cvt_roundss_si64(A,B) ((long long)__builtin_ia32_vcvtss2si64(A, B))
#define _mm512_mask_cvt_roundpd_epu32(W,U,A,B) ((__m256i)__builtin_ia32_cvtpd2udq512_mask(A, (__v8si)(W), U, B))
#define BOOST_PP_WHILE_155_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_156, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(156, s))
#define LN_sendOwner "Send Owner"
#define X509_F_X509_STORE_ADD_CRL 125
#define X509V3_F_V2I_ASN1_BIT_STRING 101
#define NID_aria_192_cfb1 1081
#define NID_aria_192_cfb8 1084
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000110 (0)(0)(0)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000111 (0)(0)(0)(0)(1)(1)(1),
#define ASN1_R_INVALID_NUMBER 187
#define NID_sect283r1 730
#define DECLARE_ASN1_FUNCTIONS_const(name) DECLARE_ASN1_ALLOC_FUNCTIONS(name) DECLARE_ASN1_ENCODE_FUNCTIONS_const(name, name)
#define TLS1_TXT_DHE_RSA_WITH_SEED_SHA "DHE-RSA-SEED-SHA"
#define _mm256_mask_srai_epi64(W,U,A,B) ((__m256i) __builtin_ia32_psraqi256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define NID_id_smime_ct_compressedData 786
#define NID_id_pda_dateOfBirth 348
#define SN_id_tc26_wrap_gostr3412_2015_kuznyechik "id-tc26-wrap-gostr3412-2015-kuznyechik"
#define TLS1_RFC_RSA_WITH_NULL_SHA256 "TLS_RSA_WITH_NULL_SHA256"
#define BOOST_PP_REPEAT_FROM_TO_M_3(z,n,dfmd) BOOST_PP_REPEAT_FROM_TO_M_3_IM(z, n, BOOST_PP_TUPLE_REM_4 dfmd)
#define SSL_set_max_send_fragment(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_MAX_SEND_FRAGMENT,m,NULL)
#define SO_TIMESTAMPNS_OLD 35
#define STATX_MTIME 0x00000040U
#define __DECL_SIMD_powf128x 
#define __HP_aCC_WORKAROUND_GUARD 1
#define OBJ_sbgp_autonomousSysNum OBJ_id_pe,8L
#define TLS1_CK_DHE_PSK_WITH_NULL_SHA256 0x030000B4
#define SSL3_AD_CERTIFICATE_UNKNOWN 46
#define ub_organization_name 64
#define BOOST_INTRUSIVE_DETAIL_NODE_CLONER_DISPOSER_HPP 
#define TLS1_RFC_SRP_SHA_WITH_3DES_EDE_CBC_SHA "TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA"
#define NID_md2WithRSAEncryption 7
#define PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND 154
#define __cpp_lib_starts_ends_with 201711L
#define PRIoFAST8 "o"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011010 (0)(0)(1)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011011 (0)(0)(1)(1)(0)(1)(1),
#define _GLIBCXX_HAVE_UNISTD_H 1
#define _mm512_mask_cvt_roundpd_epu64(W,U,A,B) ((__m512i)__builtin_ia32_cvtpd2uqq512_mask ((A), (__v8di)(W), (U), (B)))
#define OBJ_Domain OBJ_pilotObjectClass,13L
#define BOOST_PP_FOR_42_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(43, s) BOOST_PP_IIF(c, BOOST_PP_FOR_43, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(43, s), p, o, m)
#define PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND 128
#define LN_netscape_ssl_server_name "Netscape SSL Server Name"
#define SCNuFAST8 "hhu"
#define TCP_MD5SIG 14
#define BOOST_MPL_AUX_ARITY_SPEC_HPP_INCLUDED 
#define OBJ_setct_CapReqTBSX OBJ_set_ctype,27L
#define encode_int(evbuf,number) evtag_encode_int((evbuf), (number))
#define FPE_FLTUNK FPE_FLTUNK
#define SSL_R_RENEGOTIATE_EXT_TOO_LONG 335
#define NID_id_GostR3411_94 809
#define BOOST_PP_LIST_FOLD_RIGHT_21(o,s,l) BOOST_PP_LIST_FOLD_LEFT_21(o, s, BOOST_PP_LIST_REVERSE_D(21, l))
#define MOD_STATUS ADJ_STATUS
#define TCP_KEEPCNT 6
#define BOOST_INTRUSIVE_OBTAIN_TYPE_WITH_DEFAULT(INSTANTIATION_NS_PREFIX,T,TNAME,TIMPL) typename INSTANTIATION_NS_PREFIX boost_intrusive_default_type_ ## TNAME< T, TIMPL >::type
#define SEGV_BNDERR SEGV_BNDERR
#define BOOST_PP_WHILE_144(p,o,s) BOOST_PP_WHILE_144_C(BOOST_PP_BOOL(p(145, s)), p, o, s)
#define BOOST_PP_REPEAT_FROM_TO_M_3_IM(z,n,im) BOOST_PP_REPEAT_FROM_TO_M_3_I(z, n, im)
#define SSL3_TXT_RSA_NULL_MD5 "NULL-MD5"
#define evutil_offsetof(type,field) offsetof(type, field)
#define _mm512_range_pd(A,B,C) ((__m512d) __builtin_ia32_rangepd512_mask ((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd (), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION))
#define _mm512_maskz_extracti64x4_epi64(U,X,C) ((__m256i) __builtin_ia32_extracti64x4_mask ((__v8di)(__m512i) (X), (int) (C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define _mm512_cvt_roundepi32_ps(A,B) (__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(A), (__v16sf)_mm512_undefined_ps(), -1, B)
#define BOOST_PP_SEQ_SIZE_91(_) BOOST_PP_SEQ_SIZE_92
#define _mm512_range_ps(A,B,C) ((__m512) __builtin_ia32_rangeps512_mask ((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps (), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION))
#define BOOST_MOVE_HAS_NOTHROW_ASSIGN(T) ((__has_nothrow_assign(T) BOOST_MOVE_INTEL_TT_OPTS))
#define BOOST_PP_REPEAT_1_221(m,d) BOOST_PP_REPEAT_1_220(m, d) m(2, 220, d)
#define BOOST_PP_INTERCEPT_56 
#define OBJ_id_mod_ocsp OBJ_id_pkix_mod,14L
#define AT_STATX_SYNC_AS_STAT 0x0000
#define _mm_alignr_pi8(X,Y,N) ((__m64) __builtin_ia32_palignr ((__v1di)(__m64)(X), (__v1di)(__m64)(Y), (int)(N) * 8))
#define SSL_CTRL_GET_CLIENT_CERT_TYPES 103
#define BOOST_PP_LIST_FOLD_LEFT_62(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_63, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(63, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm256_maskz_roundscale_pd(U,A,B) ((__m256d) __builtin_ia32_rndscalepd_256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)(U)))
#define BOOST_PP_LIST_FOLD_RIGHT_28(o,s,l) BOOST_PP_LIST_FOLD_LEFT_28(o, s, BOOST_PP_LIST_REVERSE_D(28, l))
#define EVP_PKEY_CTX_set_dsa_paramgen_q_bits(ctx,qbits) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS, qbits, NULL)
#define BIO_FP_APPEND 0x08
#define TLS1_RFC_PSK_WITH_AES_256_CBC_SHA "TLS_PSK_WITH_AES_256_CBC_SHA"
#define SSL_SECOP_CURVE_SHARED (5 | SSL_SECOP_OTHER_CURVE)
#define BOOST_PP_SEQ_SIZE_97(_) BOOST_PP_SEQ_SIZE_98
#define OPENSSL_INIT_LOAD_CONFIG 0x00000040L
#define SYSLOG_ERROR(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_ERROR, counter, &google::LogMessage::SendToSyslogAndLog)
#define LN_pilotObjectClass "pilotObjectClass"
#define SN_ext_req "extReq"
#define CMSG_NXTHDR(mhdr,cmsg) __cmsg_nxthdr (mhdr, cmsg)
#define HEADER_DHERR_H 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110100 (0)(1)(1)(0)(1)(0)(0),
#define BOOST_PP_SEQ_SIZE_99(_) BOOST_PP_SEQ_SIZE_100
#define BLKFLSBUF _IO(0x12,97)
#define BOOST_PP_SEQ_FOLD_LEFT_250(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_250(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OBJ_setct_AuthRevResTBE OBJ_set_ctype,60L
#define BOOST_PP_REPEAT_1_228(m,d) BOOST_PP_REPEAT_1_227(m, d) m(2, 227, d)
#define EVP_CIPH_RAND_KEY 0x200
#define _SC_PII_OSI_COTS _SC_PII_OSI_COTS
#define ASN1_F_BIO_NEW_NDEF 208
#define RUSAGE_THREAD RUSAGE_THREAD
#define _SC_NGROUPS_MAX _SC_NGROUPS_MAX
#define BOOST_PP_NODE_194(p) BOOST_PP_IIF(p(194), BOOST_PP_NODE_193, BOOST_PP_NODE_195)
#define NID_setct_CapRevReqTBEX 584
#define SN_server_auth "serverAuth"
#define HEADER_X509_H 
#define SN_ct_cert_scts "ct_cert_scts"
#define _LINUX_TIME_TYPES_H 
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM_8 "TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8"
#define NID_ms_code_ind 134
#define BOOST_PP_SEQ_ELEM_175(_) BOOST_PP_SEQ_ELEM_174
#define EUSERS 87
#define SSL_F_TLS_PROCESS_SKE_SRP 422
#define BOOST_PP_INTERCEPT_59 
#define DSA_F_DSA_PUB_ENCODE 118
#define _T_WCHAR_ 
#define LN_pseudonym "pseudonym"
#define SSL_F_TLS_PARSE_STOC_EC_PT_FORMATS 580
#define _mm512_mask_i64gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gatherdiv8df ((__v8df)(__m512d) (V1OLD), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SN_organizationalUnitName "OU"
#define BUF_F_BUF_MEM_GROW 100
#define _mm_mask_cmp_epi8_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_cmpb128_mask ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(P), (__mmask16)(M)))
#define FOR_EACH_R(i,c) if (bool _FE_ANON(s1_) = false) { } else for (auto&& _FE_ANON(s2_) = (c); !_FE_ANON(s1_); _FE_ANON(s1_) = true) for (auto i = _FE_ANON(s2_).rbegin(); i != _FE_ANON(s2_).rend(); ++i)
#define BOOST_PP_FOR_149_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(150, s) BOOST_PP_IIF(c, BOOST_PP_FOR_150, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(150, s), p, o, m)
#define _mm512_fpclass_pd_mask(X,C) ((__mmask8) __builtin_ia32_fpclasspd512_mask ((__v8df) (__m512d) (X), (int) (C), (__mmask8)-1))
#define __NETINET_UDP_H 1
#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define SSL_set_tmp_rsa_callback(ssl,cb) while(0) (cb)(NULL, 0, 0)
#define ACCESSPERMS (S_IRWXU|S_IRWXG|S_IRWXO)
#define LN_documentLocation "documentLocation"
#define SN_secretary "secretary"
#define OPENSSL_VERSION_NUMBER 0x101010bfL
#define BOOST_MPL_HAS_MEMBER_SUBSTITUTE(args,substitute_macro) BOOST_PP_REPEAT( BOOST_PP_ARRAY_ELEM(2, args) , BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE , args )
#define LN_OGRN "OGRN"
#define _SC_EXPR_NEST_MAX _SC_EXPR_NEST_MAX
#define BOOST_PP_DEC_43 42
#define _BITS_SCHED_H 1
#define __cpp_lib_as_const 201510
#define OBJ_sha1WithRSA OBJ_algorithm,29L
#define SSL_SESS_CACHE_CLIENT 0x0001
#define BOOST_PP_BITAND_11 1
#define NL_NMAX INT_MAX
#define BOOST_HASH_HAS_STRING_VIEW 1
#define BOOST_PP_SEQ_ELEM_11(_) BOOST_PP_SEQ_ELEM_10
#define X509_F_X509_STORE_CTX_PURPOSE_INHERIT 134
#define _VA_LIST_T_H 
#define CLOCK_THREAD_CPUTIME_ID 3
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000101 (0)(0)(0)(1)(0)(1),
#define FOLLY_PUSH_WARNING _Pragma("GCC diagnostic push")
#define OBJ_setAttr_IssCap_CVM OBJ_setAttr_IssCap,3L
#define _GLIBCXX_HAVE_ETIME 1
#define OBJ_pseudonym OBJ_X509,65L
#define CRYPTO_MEM_CHECK_OFF 0x0
#define OBJ_setct_CredReqTBEX OBJ_set_ctype,69L
#define _SC_THREAD_SAFE_FUNCTIONS _SC_THREAD_SAFE_FUNCTIONS
#define EC_F_EC_KEY_PRINT_FP 181
#define OBJ_otherMailbox OBJ_pilotAttributeType,22L
#define NID_id_tc26_constants 994
#define EVENT__SIZEOF_OFF_T 8
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_000110 (0)(0)(0)(1)(1)(0),
#define BOOST_USING_STD_MIN() using std::min
#define SSL3_TXT_RSA_DES_192_CBC3_SHA "DES-CBC3-SHA"
#define EC_R_ASN1_ERROR 115
#define BOOST_PP_SEQ_ELEM_15(_) BOOST_PP_SEQ_ELEM_14
#define SOCK_RAW SOCK_RAW
#define BOOST_PREPROCESSOR_ARITHMETIC_DETAIL_DIV_BASE_HPP 
#define OBJ_md5WithRSA OBJ_algorithm,3L
#define _GLIBCXX_ATOMICITY_H 1
#define NID_camellia_128_cfb8 763
#define LN_sha3_256 "sha3-256"
#define GOOGLE_LOG_INFO(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_INFO, counter, &google::LogMessage::SendToLog)
#define EC_R_DECODE_ERROR 142
#define __MATH_TG(TG_ARG,FUNC,ARGS) __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), float), FUNC ## f ARGS, __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), double), FUNC ARGS, __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), long double), FUNC ## l ARGS, FUNC ## f128 ARGS)))
#define OBJ_id_aca_group OBJ_id_aca,4L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011000 (0)(1)(1)(0)(0)(0),
#define EVENT_SIGNAL(ev) event_get_signal(ev)
#define FMT_HAS_INCLUDE(x) __has_include(x)
#define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(PRM1,PRM2) 
#define BOOST_PP_BOOL_242 1
#define NID_id_smime_alg_ESDH 245
#define SMIME_OLDMIME 0x400
#define _PSTL_VERSION_PATCH (_PSTL_VERSION % 10)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011010 (0)(1)(1)(0)(1)(0),
#define BOOST_PP_WHILE_139(p,o,s) BOOST_PP_WHILE_139_C(BOOST_PP_BOOL(p(140, s)), p, o, s)
#define BOOST_PP_INTERCEPT_85 
#define _BITS_SIGACTION_H 1
#define DTLS1_COOKIE_LENGTH 256
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_228(p,o,s) 0
#define X509V3_F_X509V3_GET_SECTION 142
#define __HAVE_FLOAT16 0
#define SSL_CTX_set_ecdh_auto(dummy,onoff) ((onoff) != 0)
#define EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES 287
#define __USE_XOPEN2KXSI 1
#define BOOST_PP_WHILE_152(p,o,s) BOOST_PP_WHILE_152_C(BOOST_PP_BOOL(p(153, s)), p, o, s)
#define NID_camellia_256_cmac 972
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_256(op,st,ss,sz) 0
#define __cpp_static_assert 201411L
#define BOOST_MPL_VECTOR_AUX_PUSH_BACK_HPP_INCLUDED 
#define BOOST_PP_BOOL_247 1
#define BOOST_PP_INTERCEPT_89 
#define SOCK_RDM SOCK_RDM
#define OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet OBJ_cryptopro,36L,0L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_147(o,s,l) 0
#define _mm_mask_fmsub_round_sd(A,U,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_mask (A, B, -(C), U, R)
#define BOOST_PP_LESS_EQUAL_D(d,x,y) BOOST_PP_NOT(BOOST_PP_SUB_D(d, x, y))
#define _PSTL_PRAGMA_SIMD_SCAN(PRM) _PSTL_PRAGMA(omp simd reduction(inscan, PRM))
#define _mm_mask_fmsub_round_ss(A,U,B,C,R) (__m128) __builtin_ia32_vfmaddss3_mask (A, B, -(C), U, R)
#define V3_ASID_RDI 1
#define _mm512_mask_i64scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8df ((void *) (ADDR), (__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (__v8df)(__m512d) (V1), (int) (SCALE))
#define MINSIGSTKSZ 2048
#define _mm512_mask_i64scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16sf ((void *) (ADDR), (__mmask16) (MASK), (__v8di)(__m512i) (INDEX), (__v8sf)(__m256) (V1), (int) (SCALE))
#define IPV6_CHECKSUM 7
#define SN_X9_62_c2tnb239v1 "c2tnb239v1"
#define X509_LU_FAIL 0
#define __DECL_SIMD_sinl 
#define SN_set_policy "set-policy"
#define BIO_F_ADDR_STRINGS 134
#define OBJ_setCext_hashedRoot OBJ_set_certExt,0L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_113 113
#define EC_F_EC_GFP_MONT_FIELD_SQR 132
#define BOOST_MPL_LIMIT_LIST_SIZE 20
#define TRAP_BRANCH TRAP_BRANCH
#define X509V3_R_EXTENSION_VALUE_ERROR 116
#define IDP_ONLYCA 0x8
#define _mm256_permute4x64_pd(X,M) ((__m256d) __builtin_ia32_permdf256 ((__v4df)(__m256d)(X), (int)(M)))
#define NID_id_GostR3410_94_CryptoPro_XchA_ParamSet 836
#define X509_V_FLAG_NO_CHECK_TIME 0x200000
#define BOOST_PP_NODE_ENTRY_256(p) BOOST_PP_NODE_128(p)(p)(p)(p)(p)(p)(p)(p)
#define SSL3_MD_SERVER_FINISHED_CONST "\x53\x52\x56\x52"
#define BEV_EVENT_ERROR 0x20
#define SSL_TXT_LOW "LOW"
#define __FLT32X_DECIMAL_DIG__ 17
#define F_RDLCK 0
#define _POSIX_THREAD_THREADS_MAX 64
#define IORING_UNREGISTER_EVENTFD 5
#define FOLLY_MAYBE_UNUSED [[maybe_unused]]
#define _mm_mask_max_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_maxsd_mask_round(A, B, W, U, C)
#define SN_md5WithRSAEncryption "RSA-MD5"
#define PEM_STRING_DSAPARAMS "DSA PARAMETERS"
#define FOLLY_F14_ERASE_INTO_AVAILABLE 1
#define COMP_F_BIO_ZLIB_NEW 100
#define _mm_mask_max_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_maxss_mask_round(A, B, W, U, C)
#define BOOST_PP_REPEAT_3_200(m,d) BOOST_PP_REPEAT_3_199(m, d) m(4, 199, d)
#define BOOST_PP_REPEAT_3_201(m,d) BOOST_PP_REPEAT_3_200(m, d) m(4, 200, d)
#define BOOST_PP_REPEAT_3_202(m,d) BOOST_PP_REPEAT_3_201(m, d) m(4, 201, d)
#define BOOST_PP_REPEAT_3_203(m,d) BOOST_PP_REPEAT_3_202(m, d) m(4, 202, d)
#define BOOST_PP_REPEAT_3_204(m,d) BOOST_PP_REPEAT_3_203(m, d) m(4, 203, d)
#define BOOST_PP_REPEAT_3_206(m,d) BOOST_PP_REPEAT_3_205(m, d) m(4, 205, d)
#define BOOST_PP_REPEAT_3_209(m,d) BOOST_PP_REPEAT_3_208(m, d) m(4, 208, d)
#define BOOST_PP_BOOL_111 1
#define ASN1_STRFLGS_ESC_CTRL 2
#define BOOST_PP_FOR_257_ERROR() BOOST_PP_ERROR(0x0002)
#define ASN1_F_C2I_IBUF 226
#define OBJ_documentLocation OBJ_pilotAttributeType,15L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_174(p,o,s) 0
#define __cpp_binary_literals 201304L
#define OBJ_id_Gost28147_89_CryptoPro_C_ParamSet OBJ_cryptopro,31L,3L
#define _CPP_TYPE_TRAITS_H 1
#define SN_cmac "CMAC"
#define RAND_R_PARENT_LOCKING_NOT_ENABLED 130
#define OBJ_sha512_256WithRSAEncryption OBJ_pkcs1,16L
#define BOOST_PP_REPEAT_3_210(m,d) BOOST_PP_REPEAT_3_209(m, d) m(4, 209, d)
#define BOOST_PP_REPEAT_3_214(m,d) BOOST_PP_REPEAT_3_213(m, d) m(4, 213, d)
#define BOOST_PP_REPEAT_3_215(m,d) BOOST_PP_REPEAT_3_214(m, d) m(4, 214, d)
#define _SC_PHYS_PAGES _SC_PHYS_PAGES
#define BOOST_PP_REPEAT_3_217(m,d) BOOST_PP_REPEAT_3_216(m, d) m(4, 216, d)
#define BOOST_PP_REPEAT_3_218(m,d) BOOST_PP_REPEAT_3_217(m, d) m(4, 217, d)
#define BOOST_PP_REPEAT_3_219(m,d) BOOST_PP_REPEAT_3_218(m, d) m(4, 218, d)
#define BIO_F_BIO_GETS 104
#define OBJ_id_aca_encAttrs OBJ_id_aca,6L
#define NID_setct_CapRevReqTBSX 548
#define _XOPEN_VERSION 700
#define __cpp_noexcept_function_type 201510L
#define _GLIBCXX_HAVE_EOVERFLOW 1
#define LC_CTYPE_MASK (1 << __LC_CTYPE)
#define EVENT__HAVE_SIGNAL 1
#define SN_md2 "MD2"
#define SN_md4 "MD4"
#define SCHED_RR 2
#define _MM_PICK_OUT_PS(X,N) _mm_insert_ps (_mm_setzero_ps (), (X), _MM_MK_INSERTPS_NDX ((N), 0, 0x0e))
#define _GLIBCXX_PACKAGE_NAME "package-unused"
#define BOOST_PP_REPEAT_3_220(m,d) BOOST_PP_REPEAT_3_219(m, d) m(4, 219, d)
#define BOOST_PP_REPEAT_3_221(m,d) BOOST_PP_REPEAT_3_220(m, d) m(4, 220, d)
#define BOOST_PP_REPEAT_3_222(m,d) BOOST_PP_REPEAT_3_221(m, d) m(4, 221, d)
#define BOOST_PP_REPEAT_3_223(m,d) BOOST_PP_REPEAT_3_222(m, d) m(4, 222, d)
#define EVP_PKEY_CTX_get0_ecdh_kdf_ukm(ctx,p) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_EC_KDF_UKM, 0, (void *)(p))
#define BOOST_PP_REPEAT_3_225(m,d) BOOST_PP_REPEAT_3_224(m, d) m(4, 224, d)
#define BOOST_PP_REPEAT_3_227(m,d) BOOST_PP_REPEAT_3_226(m, d) m(4, 226, d)
#define BOOST_MOVE_DETAIL_WORKAROUND_HPP 
#define BOOST_PP_REPEAT_3_229(m,d) BOOST_PP_REPEAT_3_228(m, d) m(4, 228, d)
#define SSL_CTRL_SET_CHAIN_CERT_STORE 107
#define EC_F_ECKEY_TYPE2PARAM 220
#define NSIG _NSIG
#define _mm_cvtt_roundsd_i32(A,B) ((int)__builtin_ia32_vcvttsd2si32(A, B))
#define EVP_F_AES_T4_XTS_INIT_KEY 208
#define BOOST_PP_LESS_EQUAL(x,y) BOOST_PP_NOT(BOOST_PP_SUB(x, y))
#define X509_R_INVALID_FIELD_NAME 119
#define OPENSSL_MALLOC_MAX_NELEMS(type) (((1U<<(sizeof(int)*8-1))-1)/sizeof(type))
#define BOOST_PP_FOR_184_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(185, s) BOOST_PP_IIF(c, BOOST_PP_FOR_185, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(185, s), p, o, m)
#define BOOST_PP_REPEAT_3_231(m,d) BOOST_PP_REPEAT_3_230(m, d) m(4, 230, d)
#define BOOST_PP_REPEAT_3_232(m,d) BOOST_PP_REPEAT_3_231(m, d) m(4, 231, d)
#define TLS1_AD_DECRYPTION_FAILED 21
#define BOOST_PP_REPEAT_3_234(m,d) BOOST_PP_REPEAT_3_233(m, d) m(4, 233, d)
#define BOOST_PP_REPEAT_3_235(m,d) BOOST_PP_REPEAT_3_234(m, d) m(4, 234, d)
#define BOOST_PP_REPEAT_3_236(m,d) BOOST_PP_REPEAT_3_235(m, d) m(4, 235, d)
#define PRIdFAST64 __PRI64_PREFIX "d"
#define FS_IOC_SETVERSION _IOW('v', 2, long)
#define ADJ_SETOFFSET 0x0100
#define _mm512_mask_roundscale_pd(A,B,C,D) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(C), (int)(D), (__v8df)(__m512d)(A), (__mmask8)(B), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_LIST_FOLD_RIGHT_39(o,s,l) BOOST_PP_LIST_FOLD_LEFT_39(o, s, BOOST_PP_LIST_REVERSE_D(39, l))
#define BOOST_PP_SEQ_FOLD_LEFT_143(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_143(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PF_LLC 26
#define SSL_CTX_get_extra_chain_certs(ctx,px509) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_EXTRA_CHAIN_CERTS,0,px509)
#define _mm512_mask_permutex_pd(W,U,X,M) ((__m512d) __builtin_ia32_permdf512_mask ((__v8df)(__m512d)(X), (int)(M), (__v8df)(__m512d)(W), (__mmask8)(U)))
#define BOOST_PP_REPEAT_3_240(m,d) BOOST_PP_REPEAT_3_239(m, d) m(4, 239, d)
#define SSL_ERROR_WANT_WRITE 3
#define BIO_get_flags(b) BIO_test_flags(b, ~(0x0))
#define BOOST_PP_REPEAT_3_243(m,d) BOOST_PP_REPEAT_3_242(m, d) m(4, 242, d)
#define BOOST_PP_REPEAT_3_244(m,d) BOOST_PP_REPEAT_3_243(m, d) m(4, 243, d)
#define BOOST_PP_REPEAT_3_246(m,d) BOOST_PP_REPEAT_3_245(m, d) m(4, 245, d)
#define BOOST_PP_REPEAT_3_247(m,d) BOOST_PP_REPEAT_3_246(m, d) m(4, 246, d)
#define BOOST_PP_REPEAT_1_236(m,d) BOOST_PP_REPEAT_1_235(m, d) m(2, 235, d)
#define BOOST_PP_REPEAT_3_249(m,d) BOOST_PP_REPEAT_3_248(m, d) m(4, 248, d)
#define RSA_ASN1_VERSION_MULTI 1
#define MCAST_LEAVE_GROUP 45
#define X509V3_R_NO_POLICY_IDENTIFIER 139
#define BOOST_PP_WHILE_122_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_123, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(123, s))
#define SOL_BLUETOOTH 274
#define IMPLEMENT_PEM_write(name,type,str,asn1) IMPLEMENT_PEM_write_bio(name, type, str, asn1) IMPLEMENT_PEM_write_fp(name, type, str, asn1)
#define _SC_CPUTIME _SC_CPUTIME
#define __UINT_FAST64_MAX__ 0xffffffffffffffffUL
#define SSL_F_DO_SSL3_WRITE 104
#define BOOST_PP_REPEAT_3_251(m,d) BOOST_PP_REPEAT_3_250(m, d) m(4, 250, d)
#define BOOST_PP_REPEAT_3_252(m,d) BOOST_PP_REPEAT_3_251(m, d) m(4, 251, d)
#define BOOST_PP_REPEAT_3_253(m,d) BOOST_PP_REPEAT_3_252(m, d) m(4, 252, d)
#define BOOST_PP_REPEAT_3_254(m,d) BOOST_PP_REPEAT_3_253(m, d) m(4, 253, d)
#define BOOST_PP_REPEAT_3_255(m,d) BOOST_PP_REPEAT_3_254(m, d) m(4, 254, d)
#define BOOST_PP_REPEAT_3_256(m,d) BOOST_PP_REPEAT_3_255(m, d) m(4, 255, d)
#define IOSQE_BUFFER_SELECT (1U << IOSQE_BUFFER_SELECT_BIT)
#define DSA_F_DSA_SIG_NEW 102
#define _mm_cvtt_roundsd_i64(A,B) ((long long)__builtin_ia32_vcvttsd2si64(A, B))
#define SSL_CTRL_SESS_TIMEOUTS 30
#define OBJ_id_regCtrl_regToken OBJ_id_regCtrl,1L
#define DTLS_CTRL_GET_TIMEOUT 73
#define OBJ_setct_CredReqTBSX OBJ_set_ctype,33L
#define SSL_F_TLS1_SETUP_KEY_BLOCK 211
#define SSL_R_ECC_CERT_NOT_FOR_SIGNING 318
#define BOOST_MPL_PP_AUX_ENUM_FUNC(unused,i,param) BOOST_PP_COMMA_IF(i) param
#define PRIi32 "i"
#define MOD_NANO ADJ_NANO
#define SSL_CTX_set_tlsext_ticket_key_cb(ssl,cb) SSL_CTX_callback_ctrl(ssl,SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB, (void (*)(void))cb)
#define BOOST_PP_TUPLE_REM_1(e0) e0
#define BOOST_PP_TUPLE_REM_2(e0,e1) e0, e1
#define BOOST_PP_TUPLE_REM_3(e0,e1,e2) e0, e1, e2
#define BOOST_PP_TUPLE_REM_4(e0,e1,e2,e3) e0, e1, e2, e3
#define BOOST_PP_TUPLE_REM_6(e0,e1,e2,e3,e4,e5) e0, e1, e2, e3, e4, e5
#define BOOST_PP_TUPLE_REM_7(e0,e1,e2,e3,e4,e5,e6) e0, e1, e2, e3, e4, e5, e6
#define BOOST_PP_TUPLE_REM_8(e0,e1,e2,e3,e4,e5,e6,e7) e0, e1, e2, e3, e4, e5, e6, e7
#define BOOST_PP_TUPLE_REM_9(e0,e1,e2,e3,e4,e5,e6,e7,e8) e0, e1, e2, e3, e4, e5, e6, e7, e8
#define MATH_ERREXCEPT 2
#define __u_char_defined 
#define X509_V_ERR_DANE_NO_MATCH 65
#define _MM_FLUSH_ZERO_MASK 0x8000
#define ERR_R_BUF_LIB ERR_LIB_BUF
#define EVP_CIPH_STREAM_CIPHER 0x0
#define SN_id_smime_cti_ets_proofOfSender "id-smime-cti-ets-proofOfSender"
#define SSL_R_INVALID_CCS_MESSAGE 260
#define _GLIBCXX_STD_A std
#define __FLT32_HAS_DENORM__ 1
#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME 79
#define _mm_mask_roundscale_ps(W,U,A,B) ((__m128) __builtin_ia32_rndscaleps_128_mask ((__v4sf)(__m128)(A), (int)(B), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA "CAMELLIA256-SHA"
#define IP_ADD_MEMBERSHIP 35
#define __INT_LEAST16_TYPE__ short int
#define X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256 61
#define HUGE_VAL_F32X (__builtin_huge_valf32x ())
#define SN_setct_AuthRevResData "setct-AuthRevResData"
#define SSL_get1_groups(s,glist) SSL_ctrl(s,SSL_CTRL_GET_GROUPS,0,(int*)(glist))
#define SSL_SECOP_PEER_EE_KEY (SSL_SECOP_EE_KEY | SSL_SECOP_PEER)
#define DTLS1_VERSION 0xFEFF
#define CLONE_NEWCGROUP 0x02000000
#define OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC OBJ_pkcs12_pbeids,4L
#define OBJ_cast5_cbc OBJ_ISO_US,113533L,7L,66L,10L
#define SSL3_TXT_ADH_DES_64_CBC_SHA "ADH-DES-CBC-SHA"
#define ERR_R_RSA_LIB ERR_LIB_RSA
#define OBJ_mdc2WithRSA OBJ_X500algorithms,3L,100L
#define _mm512_maskz_fmsubadd_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddsubpd512_maskz(A, B, -(C), U, R)
#define ERR_LIB_SSL 20
#define _WCHAR_T_DEFINED 
#define FOLLY_DISABLE_SANITIZERS FOLLY_DISABLE_ADDRESS_SANITIZER FOLLY_DISABLE_THREAD_SANITIZER FOLLY_DISABLE_MEMORY_SANITIZER FOLLY_DISABLE_UNDEFINED_BEHAVIOR_SANITIZER("undefined")
#define __O_NOATIME 01000000
#define __SI_SIGFAULT_ADDL 
#define SSL_AD_BAD_RECORD_MAC SSL3_AD_BAD_RECORD_MAC
#define X509V3_F_V2I_IDP 157
#define _mm256_mask_dbsad_epu8(W,U,X,Y,C) ((__m256i) __builtin_ia32_dbpsadbw256_mask ((__v32qi)(__m256i) (X), (__v32qi)(__m256i) (Y), (int) (C), (__v16hi)(__m256i)(W), (__mmask16)(U)))
#define SN_id_on_personalData "id-on-personalData"
#define _mm_mask_roundscale_sd(A,U,B,C,I) ((__m128d) __builtin_ia32_rndscalesd_mask_round ((__v2df) (__m128d) (B), (__v2df) (__m128d) (C), (int) (I), (__v2df) (__m128d) (A), (__mmask8) (U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_143(p,o,s) BOOST_PP_WHILE_143_C(BOOST_PP_BOOL(p(144, s)), p, o, s)
#define SOL_TIPC 271
#define SN_brainpoolP320r1 "brainpoolP320r1"
#define _mm_mask_roundscale_ss(A,U,B,C,I) ((__m128) __builtin_ia32_rndscaless_mask_round ((__v4sf) (__m128) (B), (__v4sf) (__m128) (C), (int) (I), (__v4sf) (__m128) (A), (__mmask8) (U), _MM_FROUND_CUR_DIRECTION))
#define GFLAGS_DLL_DECL __attribute__((visibility("default")))
#define RSA_X931_PADDING 5
#define BIO_dgram_set_peer(b,peer) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_PEER, 0, (char *)(peer))
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
#define BOOST_VARIANT_NULL nullptr
#define B_ASN1_DISPLAYTEXT B_ASN1_IA5STRING| B_ASN1_VISIBLESTRING| B_ASN1_BMPSTRING| B_ASN1_UTF8STRING
#define BOOST_INTRUSIVE_COMMON_SLIST_ALGORITHMS_HPP 
#define IP_MSFILTER_SIZE(numsrc) (sizeof (struct ip_msfilter) - sizeof (struct in_addr) + (numsrc) * sizeof (struct in_addr))
#define __cpp_capture_star_this 201603L
#define SYNC_FILE_RANGE_WRITE_AND_WAIT (SYNC_FILE_RANGE_WRITE | SYNC_FILE_RANGE_WAIT_BEFORE | SYNC_FILE_RANGE_WAIT_AFTER)
#define IN_CLASSB_NSHIFT 16
#define LN_bf_cfb64 "bf-cfb"
#define OBJ_hmacWithSHA512_256 OBJ_rsadsi,2L,13L
#define TLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384 0x0300009F
#define SN_brainpoolP320t1 "brainpoolP320t1"
#define APACHE_THRIFT_ACCESSOR_exceptions 
#define CT_F_SCT_SET1_LOG_ID 115
#define TCPI_OPT_ECN 8
#define BOOST_PP_BOOL_255 1
#define CRYPTO_EX_INDEX_UI_METHOD 14
#define BOOST_PP_INTERCEPT_97 
#define SSL_CTX_get_tlsext_status_cb(ssl,cb) SSL_CTX_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB,0,(void *)cb)
#define _mm_fixupimm_round_sd(X,Y,Z,C,R) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(-1), (R)))
#define TLS_MD_KEY_EXPANSION_CONST_SIZE 13
#define SSL_R_DANE_TLSA_BAD_DIGEST_LENGTH 192
#define _mm_fixupimm_round_ss(X,Y,Z,C,R) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(-1), (R)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100011 (0)(1)(0)(0)(0)(1)(1),
#define XKU_OCSP_SIGN 0x20
#define _DARWIN_USE_64_BIT_INODE 1
#define __ILP32_OFFBIG_CFLAGS "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
#define BOOST_MPL_ITERATOR_CATEGORY_HPP_INCLUDED 
#define HEADER_COMPERR_H 
#define SOL_IPV6 41
#define __O_CLOEXEC 02000000
#define BOOST_PP_FOR_116_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(117, s) BOOST_PP_IIF(c, BOOST_PP_FOR_117, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(117, s), p, o, m)
#define SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE 199
#define NID_subject_alt_name 85
#define IP_MTU 14
#define _mm256_ternarylogic_epi32(A,B,C,I) ((__m256i) __builtin_ia32_pternlogd256_mask ((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (__v8si)(__m256i)(C), (int)(I), (__mmask8)-1))
#define __va_copy(d,s) __builtin_va_copy(d,s)
#define NID_id_pkix1_implicit_88 270
#define BOOST_PP_FOR_152_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(153, s) BOOST_PP_IIF(c, BOOST_PP_FOR_153, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(153, s), p, o, m)
#define SSL_CTRL_SET_MAX_PROTO_VERSION 124
#define TLS1_TXT_ADH_WITH_AES_128_SHA256 "ADH-AES128-SHA256"
#define __fortify_function __extern_always_inline __attribute_artificial__
#define NID_aria_128_cfb1 1080
#define NID_aria_128_cfb8 1083
#define XN_FLAG_FN_OID (2 << 21)
#define SN_shake256 "SHAKE256"
#define FMT_STRING_IMPL(s,base) [] { struct FMT_COMPILE_STRING : base { using char_type = fmt::remove_cvref_t<decltype(s[0])>; FMT_MAYBE_UNUSED FMT_CONSTEXPR operator fmt::basic_string_view<char_type>() const { return fmt::detail::compile_string_to_view<char_type>(s); } }; return FMT_COMPILE_STRING(); }()
#define OBJ_seed_cfb128 OBJ_kisa,1L,5L
#define SSL_F_SSL_CONF_CMD 334
#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define SSL_R_NO_CLIENT_CERT_METHOD 331
#define FOLLY_HAVE_GETRANDOM 1
#define __UINT_LEAST8_MAX__ 0xff
#define BOOST_DETAIL_BITS_PER_OCTIT 3
#define CRYPTO_EX_INDEX_BIO 12
#define BOOST_DETAIL_NO_CONTAINER_FWD 
#define BOOST_PP_FOR_225_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(226, s) BOOST_PP_IIF(c, BOOST_PP_FOR_226, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(226, s), p, o, m)
#define _SC_SYMLOOP_MAX _SC_SYMLOOP_MAX
#define __UINTMAX_TYPE__ long unsigned int
#define __ASM_GENERIC_BITS_PER_LONG 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110010 (1)(1)(1)(1)(0)(0)(1)(0),
#define _mm256_ternarylogic_epi64(A,B,C,I) ((__m256i) __builtin_ia32_pternlogq256_mask ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (__v4di)(__m256i)(C), (int)(I), (__mmask8)-1))
#define PRIO_USER PRIO_USER
#define EVP_R_UNKNOWN_OPTION 169
#define BOOST_INTRUSIVE_LIST_HPP 
#define X509V3_F_V2I_EXTENDED_KEY_USAGE 103
#define OBJ_brainpoolP192r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,3L
#define SSL_CTX_set_tmp_dh(ctx,dh) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TMP_DH,0,(char *)(dh))
#define LN_pkcs9_unstructuredName "unstructuredName"
#define OBJ_setct_CredResData OBJ_set_ctype,34L
#define SN_camellia_256_cfb128 "CAMELLIA-256-CFB"
#define EC_R_UNDEFINED_ORDER 128
#define NID_camellia_256_ecb 756
#define NID_setct_CredResTBE 588
#define SSL_F_SSL_CACHE_CIPHERLIST 520
#define __MATHDECLX(type,function,suffix,args,attrib) __MATHDECL_1(type, function,suffix, args) __attribute__ (attrib); __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
#define RAND_F_RAND_POOL_ACQUIRE_ENTROPY 122
#define ERR_free_strings() while(0) continue
#define OBJ_aria_192_ofb128 OBJ_aria,9L
#define FIZZ_SERVER_ACTIONS(F,...) F(DeliverAppData, __VA_ARGS__) F(WriteToSocket, __VA_ARGS__) F(ReportHandshakeSuccess, __VA_ARGS__) F(ReportEarlyHandshakeSuccess, __VA_ARGS__) F(ReportError, __VA_ARGS__) F(EndOfData, __VA_ARGS__) F(MutateState, __VA_ARGS__) F(WaitForData, __VA_ARGS__) F(AttemptVersionFallback, __VA_ARGS__) F(SecretAvailable, __VA_ARGS__)
#define __cpp_lib_constexpr_utility 201811L
#define BOOST_PP_LIST_FOLD_RIGHT_42(o,s,l) BOOST_PP_LIST_FOLD_LEFT_42(o, s, BOOST_PP_LIST_REVERSE_D(42, l))
#define EVENT__HAVE_STRTOLL 1
#define RSA_PSS_SALTLEN_DIGEST -1
#define TLS1_RFC_ECDHE_RSA_WITH_AES_128_SHA256 "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
#define __swab32(x) (__builtin_constant_p((__u32)(x)) ? ___constant_swab32(x) : __fswab32(x))
#define OBJ_id_it_confirmWaitTime OBJ_id_it,14L
#define __GXX_EXPERIMENTAL_CXX0X__ 1
#define BOOST_PP_LIST_FOLD_RIGHT_44(o,s,l) BOOST_PP_LIST_FOLD_LEFT_44(o, s, BOOST_PP_LIST_REVERSE_D(44, l))
#define _GLIBCXX_HAVE_SINCOSL 1
#define BOOST_CURRENT_FUNCTION_HPP_INCLUDED 
#define NID_jurisdictionCountryName 957
#define IORING_REGISTER_EVENTFD_ASYNC 7
#define _MM_FROUND_FLOOR (_MM_FROUND_TO_NEG_INF | _MM_FROUND_RAISE_EXC)
#define SN_des_ede_cfb64 "DES-EDE-CFB"
#define _mm_mask_mul_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_mulsd_mask_round(A, B, W, U, C)
#define _mm_mask_mul_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_mulss_mask_round(A, B, W, U, C)
#define BOOST_PP_REPEAT_1_243(m,d) BOOST_PP_REPEAT_1_242(m, d) m(2, 242, d)
#define BOOST_PP_LIST_FOLD_RIGHT_48(o,s,l) BOOST_PP_LIST_FOLD_LEFT_48(o, s, BOOST_PP_LIST_REVERSE_D(48, l))
#define __S_ISVTX 01000
#define BOOST_PP_LIST_FOLD_RIGHT_49(o,s,l) BOOST_PP_LIST_FOLD_LEFT_49(o, s, BOOST_PP_LIST_REVERSE_D(49, l))
#define M_PIf64x __f64x (3.141592653589793238462643383279502884)
#define _ATFILE_SOURCE 1
#define OBJ_id_alg_PWRI_KEK OBJ_id_smime_alg,9L
#define CRYPTO_R_FIPS_MODE_NOT_SUPPORTED 101
#define BOOST_VARIANT_AUX_ENABLE_RECURSIVE_IMPL(T,Dest,Source) substitute< T , Dest , Source >
#define BOOST_PP_FOR_76_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(77, s) BOOST_PP_IIF(c, BOOST_PP_FOR_77, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(77, s), p, o, m)
#define FMT_HAS_CPP17_ATTRIBUTE(attribute) (__cplusplus >= 201703L && FMT_HAS_CPP_ATTRIBUTE(attribute))
#define BOOST_PP_FOR_31_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(32, s) BOOST_PP_IIF(c, BOOST_PP_FOR_32, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(32, s), p, o, m)
#define _PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT (!__INTEL_COMPILER || __INTEL_COMPILER >= 1700) && (_MSC_FULL_VER >= 190023918 || __cplusplus >= 201402L)
#define FOLLY_SINGLETON_TRY_GET 
#define SN_sm4_ofb128 "SM4-OFB"
#define LOG_AT_LEVEL(severity) google::LogMessage(__FILE__, __LINE__, severity).stream()
#define BOOST_PP_REPEAT_1_249(m,d) BOOST_PP_REPEAT_1_248(m, d) m(2, 248, d)
#define BOOST_MPL_MAX_ELEMENT_HPP_INCLUDED 
#define NID_dh_std_kdf 946
#define DH_R_SHARED_INFO_ERROR 113
#define ev_int8_t int8_t
#define NID_X9_62_c2pnb304w1 700
#define SSL_F_FINAL_RENEGOTIATE 483
#define _STATBUF_ST_RDEV 
#define TCP_TX_DELAY 37
#define UINT16_C(c) c
#define _GLIBCXX_HAVE_MEMALIGN 1
#define PRIO_MIN -20
#define CRYPTO_WRITE 8
#define BOOST_PP_SEQ_FOLD_LEFT_21(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_21(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_R_INVALID_COMPRESSION_ALGORITHM 341
#define CLONE_SETTLS 0x00080000
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_24(op,st,ss,sz) 0
#define PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP 118
#define LN_X500 "directory services (X.500)"
#define ENOKEY 126
#define NID_hmacWithSHA224 798
#define STABLE_NO_MASK 0x02
#define ERR_FATAL_ERROR(l) (int)( (l) & ERR_R_FATAL)
#define EXIT_FAILURE 1
#define SSL_R_SSL_HANDSHAKE_FAILURE 229
#define __INT_LEAST16_WIDTH__ 16
#define LN_email_protect "E-mail Protection"
#define AI_IDN_ALLOW_UNASSIGNED __glibc_macro_warning ("AI_IDN_ALLOW_UNASSIGNED is deprecated") 0x0100
#define RAND_F_RAND_DRBG_ENABLE_LOCKING 119
#define SN_setCext_setQualf "setCext-setQualf"
#define _GLIBCXX_MEMORY 1
#define __SCHAR_MAX__ 0x7f
#define SN_camellia_256_ecb "CAMELLIA-256-ECB"
#define FOLLY_HAVE_PREADV 1
#define ATOMIC_WCHAR_T_LOCK_FREE __GCC_ATOMIC_WCHAR_T_LOCK_FREE
#define BLKSSZGET _IO(0x12,104)
#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA"
#define X509V3_R_INVALID_ASRANGE 163
#define OBJ_joint_iso_ccitt OBJ_joint_iso_itu_t
#define _mm512_maskz_fmadd_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_maskz(A, B, C, U, R)
#define _mm512_maskz_fmadd_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddps512_maskz(A, B, C, U, R)
#define _GLIBCXX_CONST __attribute__ ((__const__))
#define OPENSSL_DH_MAX_MODULUS_BITS 10000
#define EXFLAG_NSCERT 0x8
#define __DECL_SIMD_expf 
#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY 177
#define NID_hmacWithSHA256 799
#define _mm512_cmp_epu16_mask(X,Y,P) ((__mmask32) __builtin_ia32_ucmpw512_mask ((__v32hi)(__m512i)(X), (__v32hi)(__m512i)(Y), (int)(P), (__mmask32)(-1)))
#define BOOST_MPL_CFG_GCC_WORKAROUND_GUARD 0
#define BOOST_CSTDINT_HPP 
#define EVP_PKEY_CTRL_CMS_DECRYPT 10
#define NID_roomNumber 463
#define SSL_F_TLS_PROCESS_CKE_SRP 416
#define TLS1_RFC_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA "TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA"
#define BOOST_PP_TUPLE_REM_23(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22
#define MS_REMOUNT 32
#define BOOST_PP_WHILE_1(p,o,s) BOOST_PP_WHILE_1_C(BOOST_PP_BOOL(p(2, s)), p, o, s)
#define BOOST_PP_WHILE_2(p,o,s) BOOST_PP_WHILE_2_C(BOOST_PP_BOOL(p(3, s)), p, o, s)
#define BOOST_PP_WHILE_3(p,o,s) BOOST_PP_WHILE_3_C(BOOST_PP_BOOL(p(4, s)), p, o, s)
#define BOOST_PP_WHILE_5(p,o,s) BOOST_PP_WHILE_5_C(BOOST_PP_BOOL(p(6, s)), p, o, s)
#define BOOST_PP_WHILE_6(p,o,s) BOOST_PP_WHILE_6_C(BOOST_PP_BOOL(p(7, s)), p, o, s)
#define BOOST_PP_WHILE_7(p,o,s) BOOST_PP_WHILE_7_C(BOOST_PP_BOOL(p(8, s)), p, o, s)
#define BOOST_PP_WHILE_8(p,o,s) BOOST_PP_WHILE_8_C(BOOST_PP_BOOL(p(9, s)), p, o, s)
#define GFLAGS_IS_A_DLL 0
#define OBJ_id_alg_dh_sig_hmac_sha1 OBJ_id_alg,3L
#define TLS1_CK_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C061
#define BOOST_PP_REPEAT_3_14(m,d) BOOST_PP_REPEAT_3_13(m, d) m(4, 13, d)
#define BOOST_PP_WHILE_F(d,_) 0
#define LN_client_auth "TLS Web Client Authentication"
#define BOOST_PP_WHILE_P(n) BOOST_PP_BITAND(BOOST_PP_CAT(BOOST_PP_WHILE_CHECK_, BOOST_PP_WHILE_ ## n(BOOST_PP_WHILE_F, BOOST_PP_NIL, BOOST_PP_NIL)), BOOST_PP_CAT(BOOST_PP_LIST_FOLD_LEFT_CHECK_, BOOST_PP_LIST_FOLD_LEFT_ ## n(BOOST_PP_NIL, BOOST_PP_NIL, BOOST_PP_NIL)))
#define BOOST_MOVE_IS_POD(T) __is_pod(T)
#define _BITS_LIBM_SIMD_DECL_STUBS_H 1
#define BOOST_HAS_PTHREADS 
#define BOOST_MPL_AUX_TEMPLATE_ARITY_SPEC(i,name) namespace aux { template< BOOST_MPL_PP_PARAMS(i,typename T) > struct template_arity< name<BOOST_MPL_PP_PARAMS(i,T)> > : int_<i> { }; }
#define EVP_F_EVP_PKEY_SIGN_INIT 141
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_104(op,st,ss,sz) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_19(o,s,l) 0
#define EVP_R_CAMELLIA_KEY_SETUP_FAILED 157
#define __DECL_SIMD_expl 
#define BOOST_PP_FOR_151_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(152, s) BOOST_PP_IIF(c, BOOST_PP_FOR_152, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(152, s), p, o, m)
#define EVBUFFER_CB_ENABLED 1
#define OBJ_Private OBJ_internet,4L
#define CT_R_UNSUPPORTED_VERSION 103
#define _mm_maskz_sqrt_round_sd(U,A,B,C) (__m128d)__builtin_ia32_sqrtsd_mask_round (B, A, (__v2df) _mm_setzero_pd (), U, C)
#define BOOST_PP_WHILE_153(p,o,s) BOOST_PP_WHILE_153_C(BOOST_PP_BOOL(p(154, s)), p, o, s)
#define _mm512_mask_min_round_ps(W,U,A,B,R) (__m512)__builtin_ia32_minps512_mask(A, B, W, U, R)
#define DSA_F_OLD_DSA_PRIV_DECODE 122
#define _mm_mask_reduce_pd(W,U,A,B) ((__m128d) __builtin_ia32_reducepd128_mask ((__v2df)(__m128d)(A), (int)(B), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define SN_OGRN "OGRN"
#define _mm_mask_reduce_ps(W,U,A,B) ((__m128) __builtin_ia32_reduceps128_mask ((__v4sf)(__m128)(A), (int)(B), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER 0x00000002U
#define BOOST_PP_REPEAT_1_51(m,d) BOOST_PP_REPEAT_1_50(m, d) m(2, 50, d)
#define SN_rsaesOaep "RSAES-OAEP"
#define BOOST_PP_WHILE_155(p,o,s) BOOST_PP_WHILE_155_C(BOOST_PP_BOOL(p(156, s)), p, o, s)
#define IORING_SETUP_ATTACH_WQ (1U << 5)
#define SMIME_STREAM 0x1000
#define X509_V_ERR_SUBJECT_ISSUER_MISMATCH 29
#define BOOST_PP_WHILE_55_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_56, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(56, s))
#define BOOST_INTRUSIVE_CREATE_FUNCTION_DETECTOR(Identifier,InstantiationKey) namespace boost { namespace intrusive { namespace function_detector { template < class T, class NonStaticType, class NonStaticConstType, class StaticType > class DetectMember_ ##InstantiationKey_ ##Identifier { template < NonStaticType > struct TestNonStaticNonConst ; template < NonStaticConstType > struct TestNonStaticConst ; template < StaticType > struct TestStatic ; template <class U > static NonStaticFunctionType Test( TestNonStaticNonConst<&U::Identifier>*, int ); template <class U > static NonStaticFunctionType Test( TestNonStaticConst<&U::Identifier>*, int ); template <class U> static StaticFunctionType Test( TestStatic<&U::Identifier>*, int ); template <class U> static NotFoundType Test( ... ); public : static const int check = NotFound + (sizeof(Test<T>(0, 0)) - sizeof(NotFoundType)); };}}}
#define LN_inhibit_any_policy "X509v3 Inhibit Any Policy"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_106(op,st,ss,sz) 0
#define _BITS_SIGINFO_ARCH_H 1
#define BOOST_PP_WHILE_85_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_86, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(86, s))
#define BOOST_MPL_ASSERT_HPP_INCLUDED 
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_45(s,p,o,m) 0
#define PKCS7_TEXT 0x1
#define NS_SMIME 0x20
#define SSL_SECOP_OTHER_TYPE 0xffff0000
#define NID_set_ctype 513
#define SCNxFAST64 __PRI64_PREFIX "x"
#define _mm512_cvtt_roundpd_epu32(A,B) ((__m256i)__builtin_ia32_cvttpd2udq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))
#define SN_id_smime_spq_ets_sqt_unotice "id-smime-spq-ets-sqt-unotice"
#define BOOST_PP_VARIADIC_HAS_OPT_ELEM_0(e0,...) e0
#define BOOST_PP_VARIADIC_HAS_OPT_ELEM_2(e0,e1,e2,...) e2
#define _mm_mask_div_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_divsd_mask_round(A, B, W, U, C)
#define BOOST_PP_REPEAT_3_239(m,d) BOOST_PP_REPEAT_3_238(m, d) m(4, 238, d)
#define _ASM_GENERIC_INT_LL64_H 
#define _mm_mask_div_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_divss_mask_round(A, B, W, U, C)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_122 122
#define PRIuFAST16 __PRIPTR_PREFIX "u"
#define __cpp_lib_boyer_moore_searcher 201603
#define OBJ_brainpoolP512t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,14L
#define OBJ_id_it_revPassphrase OBJ_id_it,12L
#define _SC_RE_DUP_MAX _SC_RE_DUP_MAX
#define _ARPA_INET_H 1
#define __USER_LABEL_PREFIX__ 
#define CMSG_LEN(len) (CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))
#define _mm_mask_reduce_ss(W,U,A,B,C) ((__m128) __builtin_ia32_reducess_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define X509V3_EXT_CTX_DEP 0x2
#define EVP_CIPHER_CTX_cleanup(c) EVP_CIPHER_CTX_reset(c)
#define SN_Domain "domain"
#define BOOST_PP_LIST_FOLD_LEFT_124(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_125, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(125, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EVP_MD_CTX_FLAG_PAD_PKCS1 0x00
#define BOOST_ITERATOR_CONVERTIBLE(a,b) is_convertible<a,b>()
#define __LC_MEASUREMENT 11
#define _POSIX_TRACE -1
#define __GLIBC__ 2
#define BOOST_MOVE_HAS_TRIVIAL_CONSTRUCTOR(T) ((__has_trivial_constructor(T) BOOST_MOVE_INTEL_TT_OPTS))
#define PRIuFAST32 __PRIPTR_PREFIX "u"
#define JEMALLOC_H_ 
#define SSL_F_TLS_CONSTRUCT_CTOS_ALPN 466
#define FOLLY_CREATE_MEMBER_INVOKER_SUITE(membername) FOLLY_CREATE_MEMBER_INVOKER(membername ##_fn, membername); FOLLY_MAYBE_UNUSED FOLLY_INLINE_VARIABLE constexpr membername ##_fn membername {}
#define _mm512_cvtt_roundpd_epu64(A,B) ((__m512i)__builtin_ia32_cvttpd2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define WCONTINUED 8
#define _XSAVESINTRIN_H_INCLUDED 
#define APACHE_THRIFT_ACCESSOR_what_utf8 
#define UINT8_MAX (255)
#define _GLIBCXX_TR1_ELL_INTEGRAL_TCC 1
#define FSCRYPT_MODE_AES_128_CBC 5
#define EVP_F_EVP_DECRYPTUPDATE 166
#define BOOST_PP_WHILE_102(p,o,s) BOOST_PP_WHILE_102_C(BOOST_PP_BOOL(p(103, s)), p, o, s)
#define BOOST_PP_WHILE_103(p,o,s) BOOST_PP_WHILE_103_C(BOOST_PP_BOOL(p(104, s)), p, o, s)
#define BOOST_PP_WHILE_104(p,o,s) BOOST_PP_WHILE_104_C(BOOST_PP_BOOL(p(105, s)), p, o, s)
#define BOOST_PP_WHILE_105(p,o,s) BOOST_PP_WHILE_105_C(BOOST_PP_BOOL(p(106, s)), p, o, s)
#define SN_id_GostR3410_2012_512 "gost2012_512"
#define NID_info_access 177
#define BOOST_PP_WHILE_108(p,o,s) BOOST_PP_WHILE_108_C(BOOST_PP_BOOL(p(109, s)), p, o, s)
#define BOOST_PP_WHILE_109(p,o,s) BOOST_PP_WHILE_109_C(BOOST_PP_BOOL(p(110, s)), p, o, s)
#define BOOST_PP_LIST_FOLD_LEFT_70(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_71, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(71, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_F_CUSTOM_EXT_PARSE 555
#define __LDBL_HAS_INFINITY__ 1
#define CRYPTO_get_id_callback() (NULL)
#define _mm_roundscale_sd(A,B,I) ((__m128d) __builtin_ia32_rndscalesd_mask_round ((__v2df) (__m128d) (A), (__v2df) (__m128d) (B), (int) (I), (__v2df) _mm_setzero_pd (), (__mmask8) (-1), _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_111(p,o,s) BOOST_PP_WHILE_111_C(BOOST_PP_BOOL(p(112, s)), p, o, s)
#define BOOST_PP_WHILE_112(p,o,s) BOOST_PP_WHILE_112_C(BOOST_PP_BOOL(p(113, s)), p, o, s)
#define BOOST_PP_WHILE_115(p,o,s) BOOST_PP_WHILE_115_C(BOOST_PP_BOOL(p(116, s)), p, o, s)
#define BOOST_PP_WHILE_116(p,o,s) BOOST_PP_WHILE_116_C(BOOST_PP_BOOL(p(117, s)), p, o, s)
#define BOOST_PP_WHILE_117(p,o,s) BOOST_PP_WHILE_117_C(BOOST_PP_BOOL(p(118, s)), p, o, s)
#define BOOST_PP_WHILE_118(p,o,s) BOOST_PP_WHILE_118_C(BOOST_PP_BOOL(p(119, s)), p, o, s)
#define BOOST_PREPROCESSOR_ARRAY_SIZE_HPP 
#define SSL3_CK_DH_RSA_DES_40_CBC_SHA 0x0300000E
#define EVP_DigestSignUpdate(a,b,c) EVP_DigestUpdate(a,b,c)
#define NID_setct_CertReqTBE 595
#define NID_sect163k1 721
#define BOOST_HAS_NOTHROW_COPY(T) ((__has_nothrow_copy(T) BOOST_INTEL_TT_OPTS) && !is_volatile<T>::value && !is_reference<T>::value && is_copy_constructible<T>::value)
#define NID_setct_CertReqTBS 564
#define AF_PHONET PF_PHONET
#define HEADER_BN_H 
#define LN_aria_192_ofb128 "aria-192-ofb"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110010 (1)(1)(1)(0)(0)(1)(0),
#define BOOST_PP_WHILE_120(p,o,s) BOOST_PP_WHILE_120_C(BOOST_PP_BOOL(p(121, s)), p, o, s)
#define BOOST_PP_WHILE_123(p,o,s) BOOST_PP_WHILE_123_C(BOOST_PP_BOOL(p(124, s)), p, o, s)
#define BOOST_PP_WHILE_124(p,o,s) BOOST_PP_WHILE_124_C(BOOST_PP_BOOL(p(125, s)), p, o, s)
#define BOOST_PP_WHILE_126(p,o,s) BOOST_PP_WHILE_126_C(BOOST_PP_BOOL(p(127, s)), p, o, s)
#define BOOST_PP_WHILE_127(p,o,s) BOOST_PP_WHILE_127_C(BOOST_PP_BOOL(p(128, s)), p, o, s)
#define BOOST_PP_WHILE_129(p,o,s) BOOST_PP_WHILE_129_C(BOOST_PP_BOOL(p(130, s)), p, o, s)
#define SSL3_MT_CERTIFICATE 11
#define RAND_F_RAND_DRBG_RESEED 110
#define _GLIBCXX_HAVE_LIMIT_VMEM 0
#define SHA_LAST_BLOCK (SHA_CBLOCK-8)
#define __EXCEPTION__ 
#define NID_secp256k1 714
#define SN_X9_62_ppBasis "ppBasis"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_200(op,st,ss,sz) 0
#define SSL_R_DECRYPTION_FAILED 147
#define FS_SYNC_FL 0x00000008
#define BOOST_PP_REPEAT_2_70(m,d) BOOST_PP_REPEAT_2_69(m, d) m(3, 69, d)
#define TLS_MD_CLIENT_FINISH_CONST_SIZE 15
#define BOOST_PP_WHILE_130(p,o,s) BOOST_PP_WHILE_130_C(BOOST_PP_BOOL(p(131, s)), p, o, s)
#define BOOST_PP_WHILE_131(p,o,s) BOOST_PP_WHILE_131_C(BOOST_PP_BOOL(p(132, s)), p, o, s)
#define BOOST_PP_WHILE_132(p,o,s) BOOST_PP_WHILE_132_C(BOOST_PP_BOOL(p(133, s)), p, o, s)
#define BOOST_PP_WHILE_133(p,o,s) BOOST_PP_WHILE_133_C(BOOST_PP_BOOL(p(134, s)), p, o, s)
#define BOOST_PP_WHILE_135(p,o,s) BOOST_PP_WHILE_135_C(BOOST_PP_BOOL(p(136, s)), p, o, s)
#define BOOST_PP_WHILE_136(p,o,s) BOOST_PP_WHILE_136_C(BOOST_PP_BOOL(p(137, s)), p, o, s)
#define BOOST_PP_BOOL_127 1
#define BOOST_PP_WHILE_138(p,o,s) BOOST_PP_WHILE_138_C(BOOST_PP_BOOL(p(139, s)), p, o, s)
#define UDP_ENCAP 100
#define MS_ASYNC 1
#define IORING_SQ_NEED_WAKEUP (1U << 0)
#define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
#define BOOST_PP_REPEAT_1_251(m,d) BOOST_PP_REPEAT_1_250(m, d) m(2, 250, d)
#define BOOST_PP_REPEAT_2_71(m,d) BOOST_PP_REPEAT_2_70(m, d) m(3, 70, d)
#define NID_id_cmc_regInfo 341
#define BOOST_MPL_PUSH_FRONT_HPP_INCLUDED 
#define __CPUELT(cpu) ((cpu) / __NCPUBITS)
#define BOOST_PP_WHILE_140(p,o,s) BOOST_PP_WHILE_140_C(BOOST_PP_BOOL(p(141, s)), p, o, s)
#define BOOST_PP_WHILE_141(p,o,s) BOOST_PP_WHILE_141_C(BOOST_PP_BOOL(p(142, s)), p, o, s)
#define BOOST_PP_WHILE_142(p,o,s) BOOST_PP_WHILE_142_C(BOOST_PP_BOOL(p(143, s)), p, o, s)
#define BOOST_PP_WHILE_145(p,o,s) BOOST_PP_WHILE_145_C(BOOST_PP_BOOL(p(146, s)), p, o, s)
#define BOOST_PP_WHILE_146(p,o,s) BOOST_PP_WHILE_146_C(BOOST_PP_BOOL(p(147, s)), p, o, s)
#define BOOST_PP_WHILE_147(p,o,s) BOOST_PP_WHILE_147_C(BOOST_PP_BOOL(p(148, s)), p, o, s)
#define BOOST_PP_WHILE_148(p,o,s) BOOST_PP_WHILE_148_C(BOOST_PP_BOOL(p(149, s)), p, o, s)
#define BOOST_PP_WHILE_149(p,o,s) BOOST_PP_WHILE_149_C(BOOST_PP_BOOL(p(150, s)), p, o, s)
#define TLS1_CK_ECDH_RSA_WITH_AES_128_SHA256 0x0300C029
#define __GXX_WEAK__ 1
#define BOOST_PP_REPEAT_1_254(m,d) BOOST_PP_REPEAT_1_253(m, d) m(2, 253, d)
#define _IOC_SIZESHIFT (_IOC_TYPESHIFT+_IOC_TYPEBITS)
#define TLS1_TXT_DHE_DSS_WITH_AES_128_SHA256 "DHE-DSS-AES128-SHA256"
#define OBJ_aes_128_xts OBJ_ieee_siswg,0L,1L,1L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_207(op,st,ss,sz) 0
#define BOOST_PP_INC_189 190
#define BOOST_TT_ADD_VOLATILE_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_208(op,st,ss,sz) 0
#define CLONE_DETACHED 0x00400000
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001010 (0)(0)(0)(1)(0)(1)(0),
#define BOOST_PP_WHILE_150(p,o,s) BOOST_PP_WHILE_150_C(BOOST_PP_BOOL(p(151, s)), p, o, s)
#define BOOST_PP_WHILE_151(p,o,s) BOOST_PP_WHILE_151_C(BOOST_PP_BOOL(p(152, s)), p, o, s)
#define BOOST_PP_WHILE_154(p,o,s) BOOST_PP_WHILE_154_C(BOOST_PP_BOOL(p(155, s)), p, o, s)
#define BOOST_PP_WHILE_156(p,o,s) BOOST_PP_WHILE_156_C(BOOST_PP_BOOL(p(157, s)), p, o, s)
#define BOOST_PP_WHILE_157(p,o,s) BOOST_PP_WHILE_157_C(BOOST_PP_BOOL(p(158, s)), p, o, s)
#define BOOST_PP_WHILE_158(p,o,s) BOOST_PP_WHILE_158_C(BOOST_PP_BOOL(p(159, s)), p, o, s)
#define BOOST_PP_WHILE_159(p,o,s) BOOST_PP_WHILE_159_C(BOOST_PP_BOOL(p(160, s)), p, o, s)
#define NID_aes_256_cbc 427
#define SSL_R_SCT_VERIFICATION_FAILED 208
#define NID_id_tc26_gost_3410_2012_256_constants 1147
#define BOOST_FUNCTIONAL_HASH_DETAIL_LIMITS_HEADER 
#define SSL3_RFC_DHE_DSS_DES_192_CBC3_SHA "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"
#define SSL_F_SSL3_DIGEST_CACHED_RECORDS 293
#define EVP_F_EVP_PBE_SCRYPT 181
#define V_ASN1_PRIVATE 0xc0
#define S_IWGRP (S_IWUSR >> 3)
#define X509_F_X509_TRUST_ADD 133
#define PEM_R_BAD_END_LINE 102
#define _mm_maskz_getmant_round_ss(U,X,Y,C,D,R) ((__m128)__builtin_ia32_getmantss_mask_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), (__v4sf)(__m128)_mm_setzero_ps(), (__mmask8)(U), (R)))
#define _mm_maskz_getmant_round_sd(U,X,Y,C,D,R) ((__m128d)__builtin_ia32_getmantsd_mask_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), (__v2df)(__m128d)_mm_setzero_pd(), (__mmask8)(U), (R)))
#define __DECL_SIMD_logf16 
#define FS_JOURNAL_DATA_FL 0x00004000
#define BOOST_PP_WHILE_160(p,o,s) BOOST_PP_WHILE_160_C(BOOST_PP_BOOL(p(161, s)), p, o, s)
#define BOOST_PP_WHILE_161(p,o,s) BOOST_PP_WHILE_161_C(BOOST_PP_BOOL(p(162, s)), p, o, s)
#define BOOST_PP_WHILE_162(p,o,s) BOOST_PP_WHILE_162_C(BOOST_PP_BOOL(p(163, s)), p, o, s)
#define BOOST_PP_WHILE_164(p,o,s) BOOST_PP_WHILE_164_C(BOOST_PP_BOOL(p(165, s)), p, o, s)
#define BOOST_PP_WHILE_166(p,o,s) BOOST_PP_WHILE_166_C(BOOST_PP_BOOL(p(167, s)), p, o, s)
#define BOOST_PP_WHILE_168(p,o,s) BOOST_PP_WHILE_168_C(BOOST_PP_BOOL(p(169, s)), p, o, s)
#define SIGIO SIGPOLL
#define HEADER_CT_H 
#define BOOST_INTRUSIVE_DETAIL_TRANSFORM_ITERATOR_HPP 
#define LN_hmacWithSHA1 "hmacWithSHA1"
#define __STDC_UTF_16__ 1
#define EVBUFFER_FLAG_DRAINS_TO_FD 1
#define BOOST_PP_WHILE_238_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_239, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(239, s))
#define ASN1_F_BN_TO_ASN1_STRING 229
#define APACHE_THRIFT_ACCESSOR_appUnknownException 
#define _mm512_getmant_pd(X,B,C) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_170(p,o,s) BOOST_PP_WHILE_170_C(BOOST_PP_BOOL(p(171, s)), p, o, s)
#define BOOST_PP_WHILE_171(p,o,s) BOOST_PP_WHILE_171_C(BOOST_PP_BOOL(p(172, s)), p, o, s)
#define BOOST_PP_WHILE_172(p,o,s) BOOST_PP_WHILE_172_C(BOOST_PP_BOOL(p(173, s)), p, o, s)
#define BOOST_PP_WHILE_173(p,o,s) BOOST_PP_WHILE_173_C(BOOST_PP_BOOL(p(174, s)), p, o, s)
#define BOOST_PP_WHILE_174(p,o,s) BOOST_PP_WHILE_174_C(BOOST_PP_BOOL(p(175, s)), p, o, s)
#define BOOST_PP_WHILE_176(p,o,s) BOOST_PP_WHILE_176_C(BOOST_PP_BOOL(p(177, s)), p, o, s)
#define BOOST_PP_WHILE_177(p,o,s) BOOST_PP_WHILE_177_C(BOOST_PP_BOOL(p(178, s)), p, o, s)
#define le32toh(x) __uint32_identity (x)
#define BOOST_PP_WHILE_179(p,o,s) BOOST_PP_WHILE_179_C(BOOST_PP_BOOL(p(180, s)), p, o, s)
#define BOOST_PP_WHILE_17_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_18, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(18, s))
#define _mm512_getmant_ps(X,B,C) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION))
#define _mm512_mask_rsqrt28_round_pd(W,U,A,C) __builtin_ia32_rsqrt28pd_mask(A, W, U, C)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_194(op,st,ss,sz) 0
#define FP_XSTATE_MAGIC2_SIZE sizeof (FP_XSTATE_MAGIC2)
#define _mm512_mask_rsqrt28_round_ps(W,U,A,C) __builtin_ia32_rsqrt28ps_mask(A, W, U, C)
#define OBJ_enhancedSearchGuide OBJ_X509,47L
#define _mm_mask_sqrt_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_sqrtsd_mask_round (B, A, W, U, C)
#define SSL3_TXT_ADH_RC4_40_MD5 "EXP-ADH-RC4-MD5"
#define BOOST_PP_TUPLE_ELEM_3_0(a,b,c) a
#define BOOST_PP_TUPLE_ELEM_3_1(a,b,c) b
#define BOOST_PP_TUPLE_ELEM_3_2(a,b,c) c
#define BOOST_BINARY_U(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, U )
#define PKCS7_R_UNKNOWN_OPERATION 110
#define BOOST_PP_WHILE_180(p,o,s) BOOST_PP_WHILE_180_C(BOOST_PP_BOOL(p(181, s)), p, o, s)
#define BOOST_PP_WHILE_181(p,o,s) BOOST_PP_WHILE_181_C(BOOST_PP_BOOL(p(182, s)), p, o, s)
#define BOOST_PP_WHILE_182(p,o,s) BOOST_PP_WHILE_182_C(BOOST_PP_BOOL(p(183, s)), p, o, s)
#define BOOST_PP_WHILE_183(p,o,s) BOOST_PP_WHILE_183_C(BOOST_PP_BOOL(p(184, s)), p, o, s)
#define BOOST_PP_WHILE_185(p,o,s) BOOST_PP_WHILE_185_C(BOOST_PP_BOOL(p(186, s)), p, o, s)
#define BOOST_PP_WHILE_186(p,o,s) BOOST_PP_WHILE_186_C(BOOST_PP_BOOL(p(187, s)), p, o, s)
#define BOOST_PP_WHILE_189(p,o,s) BOOST_PP_WHILE_189_C(BOOST_PP_BOOL(p(190, s)), p, o, s)
#define EVP_MAX_IV_LENGTH 16
#define TLS1_TXT_DHE_DSS_WITH_SEED_SHA "DHE-DSS-SEED-SHA"
#define _mm512_mask_cvt_roundps_pd(W,U,A,B) (__m512d)__builtin_ia32_cvtps2pd512_mask(A, (__v8df)(W), U, B)
#define NID_sect163r2 723
#define AT_RECURSIVE 0x8000
#define AT_SYMLINK_FOLLOW 0x400
#define SN_des_cdmf "DES-CDMF"
#define SI_MESGQ SI_MESGQ
#define SSL_R_TLSV1_ALERT_USER_CANCELLED 1090
#define BOOST_PP_WHILE_191(p,o,s) BOOST_PP_WHILE_191_C(BOOST_PP_BOOL(p(192, s)), p, o, s)
#define BOOST_PP_WHILE_194(p,o,s) BOOST_PP_WHILE_194_C(BOOST_PP_BOOL(p(195, s)), p, o, s)
#define EVENT__HAVE_SIGACTION 1
#define SSL_AD_NO_RENEGOTIATION TLS1_AD_NO_RENEGOTIATION
#define BOOST_PP_WHILE_197(p,o,s) BOOST_PP_WHILE_197_C(BOOST_PP_BOOL(p(198, s)), p, o, s)
#define SN_aes_128_cbc_hmac_sha1 "AES-128-CBC-HMAC-SHA1"
#define BOOST_PP_SEQ_SIZE_115(_) BOOST_PP_SEQ_SIZE_116
#define BOOST_BINARY_LL(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, LL )
#define __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
#define BOOST_BINARY_LU(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, LU )
#define LN_LocalKeySet "Microsoft Local Key set"
#define SN_X9_57 "X9-57"
#define BOOST_PP_REPEAT_2_79(m,d) BOOST_PP_REPEAT_2_78(m, d) m(3, 78, d)
#define _SC_PII_OSI _SC_PII_OSI
#define NGREG __NGREG
#define CT_R_INVALID_LOG_ID_LENGTH 100
#define BOOST_PP_SEQ_SIZE_116(_) BOOST_PP_SEQ_SIZE_117
#define _GLIBCXX_USE_C99_STDLIB _GLIBCXX11_USE_C99_STDLIB
#define BOOST_PP_TUPLE_REM_30(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29
#define CRYPTO_EX_INDEX_DRBG 15
#define NID_kx_rsa 1037
#define BOOST_PP_TUPLE_REM_32(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31
#define EC_R_INVALID_GROUP_ORDER 122
#define __DECL_SIMD_logf64 
#define __INT_WIDTH__ 32
#define O_NDELAY O_NONBLOCK
#define BOOST_PP_TUPLE_REM_35(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34
#define S_ISVTX __S_ISVTX
#define BOOST_PP_FOR_230_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(231, s) BOOST_PP_IIF(c, BOOST_PP_FOR_231, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(231, s), p, o, m)
#define OBJ_id_tc26_gost_3410_2012_256_paramSetD OBJ_id_tc26_gost_3410_2012_256_constants,4L
#define BOOST_MPL_AUX_LAMBDA_SPEC_HPP_INCLUDED 
#define __STDC_IEC_559__ 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011100 (0)(0)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011101 (0)(0)(1)(1)(1)(0)(1),
#define BOOST_PP_TUPLE_REM_37(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36
#define BOOST_INTRUSIVE_DETAIL_IITERATOR_HPP 
#define EVENT__HAVE_STRUCT_SOCKADDR_IN6 1
#define LN_ad_dvcs "ad dvcs"
#define BOOST_MPL_LONG_FWD_HPP_INCLUDED 
#define BN_R_EXPAND_ON_STATIC_BIGNUM_DATA 105
#define BOOST_MPL_AUX_IS_MSVC_ETI_ARG_HPP_INCLUDED 
#define EVP_bf_cfb EVP_bf_cfb64
#define BOOST_PP_INTERCEPT_60 
#define RSA_F_RSA_PUB_DECODE 139
#define BOOST_PP_WHILE_165(p,o,s) BOOST_PP_WHILE_165_C(BOOST_PP_BOOL(p(166, s)), p, o, s)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011110 (0)(0)(1)(1)(1)(1)(0),
#define SSL_R_PSK_IDENTITY_NOT_FOUND 223
#define SSL_F_TLS_CONSTRUCT_STOC_SESSION_TICKET 460
#define BOOST_PP_FOR_43_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(44, s) BOOST_PP_IIF(c, BOOST_PP_FOR_44, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(44, s), p, o, m)
#define BOOST_PP_WHILE_167(p,o,s) BOOST_PP_WHILE_167_C(BOOST_PP_BOOL(p(168, s)), p, o, s)
#define SN_pbeWithMD2AndRC2_CBC "PBE-MD2-RC2-64"
#define __USE_FORTIFY_LEVEL 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100010 (1)(1)(0)(0)(0)(1)(0),
#define EVENT__NUMERIC_VERSION 0x02010c00
#define CPU_EQUAL(cpusetp1,cpusetp2) __CPU_EQUAL_S (sizeof (cpu_set_t), cpusetp1, cpusetp2)
#define BOOST_PP_INTERCEPT_109 
#define NID_id_aca_role 358
#define IORING_CQ_EVENTFD_DISABLED (1U << 0)
#define BOOST_PP_WHILE_169(p,o,s) BOOST_PP_WHILE_169_C(BOOST_PP_BOOL(p(170, s)), p, o, s)
#define _IOC_NR(nr) (((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)
#define BOOST_INTEGER_COMMON_FACTOR_CT_HPP 
#define _GLIBCXX_HAVE_HYPOTF 1
#define ASN1_F_C2I_ASN1_INTEGER 194
#define _GLIBCXX_HAVE_HYPOTL 1
#define SSL_CONF_FLAG_CERTIFICATE 0x20
#define NID_localityName 15
#define X509_V_ERR_INVALID_CA 24
#define _LARGEFILE_SOURCE 1
#define MAX_INPUT 255
#define SN_uacurve1 "uacurve1"
#define SN_uacurve2 "uacurve2"
#define SN_uacurve3 "uacurve3"
#define SN_uacurve5 "uacurve5"
#define SN_uacurve6 "uacurve6"
#define SN_uacurve7 "uacurve7"
#define SN_uacurve8 "uacurve8"
#define SN_tlsfeature "tlsfeature"
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_SHA256 "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
#define ESTALE 116
#define JEMALLOC_HAVE_ATTR 
#define _mm512_srli_epi16(A,B) ((__m512i) __builtin_ia32_psrlwi512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)_mm512_setzero_si512 (), (__mmask32)-1))
#define SSL3_CK_ADH_RC4_40_MD5 0x03000017
#define SSL_R_BAD_PSK 219
#define OBJ_sect131r2 OBJ_secg_ellipticCurve,23L
#define __HAVE_FLOAT64X_LONG_DOUBLE 1
#define _mm256_mask_cvtps_ph(W,U,A,I) ((__m128i) __builtin_ia32_vcvtps2ph256_mask ((__v8sf)(__m256) (A), (int) (I), (__v8hi)(__m128i) (W), (__mmask8) (U)))
#define X509_CRL_set_nextUpdate X509_CRL_set1_nextUpdate
#define SN_setCext_IssuerCapabilities "setCext-IssuerCapabilities"
#define INTPTR_MIN (-9223372036854775807L-1)
#define SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT 308
#define BOOST_HASH_CXX17 1
#define CPP2_PROTOCOL_TSIMPLEJSONPROTOCOL_H_ 1
#define LN_hold_instruction_none "Hold Instruction None"
#define ERR_R_BIO_LIB ERR_LIB_BIO
#define IP_ORIGDSTADDR 20
#define EVP_PKEY_ED448 NID_ED448
#define DELAYTIMER_MAX 2147483647
#define __glibcxx_max_b(T,B) (__glibcxx_signed_b (T,B) ? (((((T)1 << (__glibcxx_digits_b (T,B) - 1)) - 1) << 1) + 1) : ~(T)0)
#define NID_pbeWithMD5AndRC2_CBC 169
#define _mm512_srli_epi32(X,C) ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_epi32 (), (__mmask16)-1))
#define __STDCPP_MATH_SPEC_FUNCS__ 201003L
#define BOOST_PP_IF(cond,t,f) BOOST_PP_IIF(BOOST_PP_BOOL(cond), t, f)
#define OBJ_cryptopro OBJ_member_body,643L,2L,2L
#define _mm512_extractf32x4_ps(X,C) ((__m128) __builtin_ia32_extractf32x4_mask ((__v16sf)(__m512) (X), (int) (C), (__v4sf)(__m128)_mm_undefined_ps(), (__mmask8)-1))
#define SSL3_CT_NUMBER 10
#define X509_V_ERR_KEYUSAGE_NO_CRL_SIGN 35
#define FOLLY_HAS_ATTRIBUTE(x) __has_attribute(x)
#define HEADER_DSAERR_H 
#define SOL_ICMPV6 58
#define OSSL_ASYNC_FD int
#define BOOST_TT_IS_VOLATILE_HPP_INCLUDED 
#define REG_ERR REG_ERR
#define SSL_CTRL_SET_VERIFY_CERT_STORE 106
#define BOOST_PP_WHILE_163(p,o,s) BOOST_PP_WHILE_163_C(BOOST_PP_BOOL(p(164, s)), p, o, s)
#define BOOST_BINARY_UL(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, UL )
#define __THROW throw ()
#define HEADER_PKCS7_H 
#define SN_X9_62_c2pnb163v1 "c2pnb163v1"
#define SN_X9_62_c2pnb163v2 "c2pnb163v2"
#define SN_X9_62_c2pnb163v3 "c2pnb163v3"
#define BOOST_PP_SEQ_ELEM_237(_) BOOST_PP_SEQ_ELEM_236
#define _mm256_roundscale_pd(A,B) ((__m256d) __builtin_ia32_rndscalepd_256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)-1))
#define __DECL_SIMD_sincos 
#define EC_R_INVALID_PEER_KEY 133
#define LN_Security "Security"
#define _mm256_roundscale_ps(A,B) ((__m256) __builtin_ia32_rndscaleps_256_mask ((__v8sf)(__m256)(A), (int)(B), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)-1))
#define SN_id_ppl_anyLanguage "id-ppl-anyLanguage"
#define CT_R_SCT_LIST_INVALID 105
#define OPENSSL_FILE __FILE__
#define SN_kx_srp "KxSRP"
#define _BASIC_IOS_TCC 1
#define WIFCONTINUED(status) __WIFCONTINUED (status)
#define SSL_TXT_MD5 "MD5"
#define ASN1_R_DEPTH_EXCEEDED 174
#define __GNUC__ 10
#define BIO_set_ssl_renegotiate_bytes(b,num) BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_BYTES,num,NULL)
#define TLS_CT_DSS_FIXED_DH 4
#define _mm512_srli_epi64(X,C) ((__m512i) __builtin_ia32_psrlqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_undefined_epi32 (), (__mmask8)-1))
#define PRIoLEAST16 "o"
#define __GXX_RTTI 1
#define SSL_F_CONSTRUCT_CA_NAMES 552
#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
#define IPPROTO_TCP IPPROTO_TCP
#define SN_dcObject "dcobject"
#define TLS1_CK_DHE_PSK_WITH_CHACHA20_POLY1305 0x0300CCAD
#define _GLIBCXX_USE_C99_STDIO _GLIBCXX11_USE_C99_STDIO
#define BOOST_PP_WHILE_203_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_204, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(204, s))
#define BOOST_PP_REPEAT_3_105(m,d) BOOST_PP_REPEAT_3_104(m, d) m(4, 104, d)
#define PTHREAD_CANCEL_ENABLE PTHREAD_CANCEL_ENABLE
#define EVP_ENCODE_LENGTH(l) ((((l)+2)/3*4)+((l)/48+1)*2+80)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_211(op,st,ss,sz) 0
#define SN_hold_instruction_call_issuer "holdInstructionCallIssuer"
#define SN_org "ORG"
#define _GLIBCXX_HAVE_STRERROR_L 1
#define SSL3_TXT_DH_RSA_DES_40_CBC_SHA "EXP-DH-RSA-DES-CBC-SHA"
#define _GLIBCXX_HAVE_STRERROR_R 1
#define BOOST_MPL_NOT_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_213(op,st,ss,sz) 0
#define EVENT2_BUFFER_H_INCLUDED_ 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_214(op,st,ss,sz) 0
#define NID_account 446
#define XKU_SGC 0x10
#define SN_X9_62_c2pnb272w1 "c2pnb272w1"
#define PRIoLEAST32 "o"
#define _mm256_maskz_gf2p8affineinv_epi64_epi8(A,B,C,D) ((__m256i) __builtin_ia32_vgf2p8affineinvqb_v32qi_mask( (__v32qi)(__m256i)(B), (__v32qi)(__m256i)(C), (int)(D), (__v32qi)(__m256i) _mm256_setzero_si256 (), (__mmask32)(A)))
#define __DECL_SIMD_logf32x 
#define IN_CLASSA_NSHIFT 24
#define SSL3_CK_EDH_RSA_DES_64_CBC_SHA SSL3_CK_DHE_RSA_DES_64_CBC_SHA
#define BOOST_PP_LIST_FOLD_RIGHT_68(o,s,l) BOOST_PP_LIST_FOLD_LEFT_68(o, s, BOOST_PP_LIST_REVERSE_D(68, l))
#define _mm512_mask_extractf32x8_ps(W,U,X,C) ((__m256) __builtin_ia32_extractf32x8_mask ((__v16sf)(__m512) (X), (int) (C), (__v8sf)(__m256) (W), (__mmask8) (U)))
#define RSA_F_RSA_OSSL_PUBLIC_ENCRYPT 104
#define LN_id_tc26_gost_3410_2012_256_paramSetB "GOST R 34.10-2012 (256 bit) ParamSet B"
#define _mm512_maskz_cvt_roundepi32_ps(U,A,B) (__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(A), (__v16sf)_mm512_setzero_ps(), U, B)
#define BOOST_TRY { try
#define X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS 0x8
#define OBJ_setct_PANOnly OBJ_set_ctype,2L
#define _mm256_mask_shrdi_epi16(A,B,C,D,E) ((__m256i) __builtin_ia32_vpshrd_v16hi_mask ((__v16hi)(__m256i)(C), (__v16hi)(__m256i)(D), (int)(E), (__v16hi)(__m256i)(A), (__mmask16)(B)))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_218(op,st,ss,sz) 0
#define SSL_R_NULL_SSL_CTX 195
#define _PKUINTRIN_H_INCLUDED 
#define NID_aes_256_ctr 906
#define SSL3_CK_RSA_RC4_128_MD5 0x03000004
#define _IOC_DIRMASK ((1 << _IOC_DIRBITS)-1)
#define LN_pilotDSA "pilotDSA"
#define ___constant_swab16(x) ((__u16)( (((__u16)(x) & (__u16)0x00ffU) << 8) | (((__u16)(x) & (__u16)0xff00U) >> 8)))
#define LONG_MAX __LONG_MAX__
#define BOOST_MPL_AUX_ASSERT_CONSTANT(T,expr) enum { expr }
#define BIO_set_fd(b,fd,c) BIO_int_ctrl(b,BIO_C_SET_FD,c,fd)
#define BIO_set_fp(b,fp,c) BIO_ctrl(b,BIO_C_SET_FILE_PTR,c,(char *)(fp))
#define __glibcxx_digits10_b(T,B) (__glibcxx_digits_b (T,B) * 643L / 2136)
#define BOOST_PP_WHILE_191_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_192, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(192, s))
#define __LC_MESSAGES 5
#define X509V3_R_BN_DEC2BN_ERROR 100
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4
#define EVENT__HAVE_SETFD 1
#define _GLIBCXX_POSTYPES_H 1
#define FS_XFLAG_EXTSIZE 0x00000800
#define _mm256_mask_shrdi_epi32(A,B,C,D,E) ((__m256i) __builtin_ia32_vpshrd_v8si_mask ((__v8si)(__m256i)(C), (__v8si)(__m256i)(D), (int)(E), (__v8si)(__m256i)(A), (__mmask8)(B)))
#define EC_F_EC_KEY_SIMPLE_PRIV2OCT 260
#define TLS1_TXT_ECDH_RSA_WITH_AES_256_GCM_SHA384 "ECDH-RSA-AES256-GCM-SHA384"
#define PRIoLEAST64 __PRI64_PREFIX "o"
#define BOOST_TT_DECL 
#define BOOST_PP_WHILE_219_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_220, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(220, s))
#define PKCS7_R_UNSUPPORTED_CIPHER_TYPE 111
#define ___constant_swab32(x) ((__u32)( (((__u32)(x) & (__u32)0x000000ffUL) << 24) | (((__u32)(x) & (__u32)0x0000ff00UL) << 8) | (((__u32)(x) & (__u32)0x00ff0000UL) >> 8) | (((__u32)(x) & (__u32)0xff000000UL) >> 24)))
#define TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA256 0x030000C0
#define BOOST_PP_WHILE_6_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_7, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(7, s))
#define __CPU_SET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] |= __CPUMASK (__cpu)) : 0; }))
#define PEM_F_B2I_DSS 127
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011101 (0)(1)(1)(1)(0)(1),
#define _mm_i32gather_pd(BASE,INDEX,SCALE) (__m128d) __builtin_ia32_gathersiv2df ((__v2df) _mm_setzero_pd (), (double const *) (BASE), (__v4si)(__m128i) (INDEX), (__v2df) _mm_cmpeq_pd (_mm_setzero_pd (), _mm_setzero_pd ()), (int) (SCALE))
#define NID_id_Gost28147_89_CryptoPro_B_ParamSet 825
#define OBJ_setCext_certType OBJ_set_certExt,1L
#define NID_brainpoolP384r1 931
#define EC_R_INVALID_KEY 116
#define EXIT_SUCCESS 0
#define _GLIBCXX_PREDEFINED_OPS_H 1
#define LN_auth_psk "auth-psk"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011111 (0)(1)(1)(1)(1)(1),
#define BOOST_PP_SEQ_ELEM_33(_) BOOST_PP_SEQ_ELEM_32
#define NID_id_cmc_lraPOPWitness 337
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_2(s,p,o,m) 0
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS _CS_XBS5_LPBIG_OFFBIG_CFLAGS
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_160(o,s,l) 0
#define SSL_EXT_CLIENT_HELLO 0x0080
#define NID_aes_256_ccm 902
#define _mm256_mask_shrdi_epi64(A,B,C,D,E) ((__m256i) __builtin_ia32_vpshrd_v4di_mask ((__v4di)(__m256i)(C), (__v4di)(__m256i)(D), (int)(E), (__v4di)(__m256i)(A), (__mmask8)(B)))
#define BOOST_MOVE_IMPL_NO_COPY_CTOR_OR_ASSIGN(TYPE) public: TYPE(TYPE const &) = delete; TYPE& operator=(TYPE const &) = delete; public: typedef int boost_move_no_copy_constructor_or_assign; private:
#define __cpp_lib_nonmember_container_access 201411
#define DEFINE_uint32(name,val,txt) DEFINE_VARIABLE(GFLAGS_NAMESPACE::uint32, U, name, val, txt)
#define EC_F_EC_GF2M_SIMPLE_LADDER_PRE 288
#define SSL_TXT_DH "DH"
#define BOOST_PP_ITERATION_START_1_DIGIT_2 0
#define _PC_CHOWN_RESTRICTED _PC_CHOWN_RESTRICTED
#define __cpp_lib_constexpr_iterator 201811L
#define _ISbit(bit) ((bit) < 8 ? ((1 << (bit)) << 8) : ((1 << (bit)) >> 8))
#define BOOST_PP_SEQ_ELEM_36(_) BOOST_PP_SEQ_ELEM_35
#define BIO_FLAGS_UPLINK 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_7(s,p,o,m) 0
#define ___constant_swab64(x) ((__u64)( (((__u64)(x) & (__u64)0x00000000000000ffULL) << 56) | (((__u64)(x) & (__u64)0x000000000000ff00ULL) << 40) | (((__u64)(x) & (__u64)0x0000000000ff0000ULL) << 24) | (((__u64)(x) & (__u64)0x00000000ff000000ULL) << 8) | (((__u64)(x) & (__u64)0x000000ff00000000ULL) >> 8) | (((__u64)(x) & (__u64)0x0000ff0000000000ULL) >> 24) | (((__u64)(x) & (__u64)0x00ff000000000000ULL) >> 40) | (((__u64)(x) & (__u64)0xff00000000000000ULL) >> 56)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11 (1)(1),
#define BN_RAND_BOTTOM_ODD 1
#define TCP_THIN_LINEAR_TIMEOUTS 16
#define BOOST_PP_SEQ_ELEM_37(_) BOOST_PP_SEQ_ELEM_36
#define _BITS_ENDIAN_H 1
#define EC_R_NOT_IMPLEMENTED 126
#define EVP_R_OPERATON_NOT_INITIALIZED 151
#define LN_name "name"
#define FS_ENCRYPTION_MODE_SPECK128_256_CTS 8
#define THRIFT_TLOGGING_H 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_165(o,s,l) 0
#define BOOST_PP_FOR_211_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(212, s) BOOST_PP_IIF(c, BOOST_PP_FOR_212, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(212, s), p, o, m)
#define TLSEXT_TYPE_signed_certificate_timestamp 18
#define _GLIBCXX_HAVE_UCHAR_H 1
#define SN_jurisdictionLocalityName "jurisdictionL"
#define SIG_BLOCK 0
#define BOOST_DETAIL_SPLIT_AND_SWAP(params) BOOST_PP_IDENTITY( BOOST_DETAIL_SPLIT_AND_SWAP_PARAMS )()( params )
#define _mm512_mask_cmp_epu8_mask(M,X,Y,P) ((__mmask64) __builtin_ia32_ucmpb512_mask ((__v64qi)(__m512i)(X), (__v64qi)(__m512i)(Y), (int)(P), (__mmask64)(M)))
#define X509_V_ERR_CRL_NOT_YET_VALID 11
#define BOOST_PP_WHILE_175(p,o,s) BOOST_PP_WHILE_175_C(BOOST_PP_BOOL(p(176, s)), p, o, s)
#define _CONCURRENCE_H 1
#define TLS1_TXT_SRP_SHA_WITH_AES_128_CBC_SHA "SRP-AES-128-CBC-SHA"
#define __INTPTR_WIDTH__ 64
#define DEFINE_uint64(name,val,txt) DEFINE_VARIABLE(GFLAGS_NAMESPACE::uint64, U64, name, val, txt)
#define BIO_set_md(b,md) BIO_ctrl(b,BIO_C_SET_MD,0,(char *)(md))
#define BIO_TYPE_MEM ( 1|BIO_TYPE_SOURCE_SINK)
#define PKCS7_NO_DUAL_CONTENT 0x10000
#define MAX_HANDLE_SZ 128
#define LN_camellia_256_cfb128 "camellia-256-cfb"
#define _GLIBCXX_HAVE_QUICK_EXIT 1
#define LONG_MIN (-LONG_MAX - 1L)
#define OBJ_id_smime_aa_ets_commitmentType OBJ_id_smime_aa,16L
#define BOOST_PP_LIST_FOLD_LEFT_132(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_133, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(133, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_lastModifiedBy 477
#define SSL_F_TLS_PARSE_CTOS_USE_SRTP 465
#define NID_id_Gost28147_89_None_KeyMeshing 820
#define BOOST_PP_FOR_39_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(40, s) BOOST_PP_IIF(c, BOOST_PP_FOR_40, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(40, s), p, o, m)
#define BIO_CTRL_GET_CLOSE 8
#define PF_KEY 15
#define RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D 169
#define NID_ct_precert_scts 951
#define PEM_STRING_DHXPARAMS "X9.42 DH PARAMETERS"
#define INET_ADDRSTRLEN 16
#define OBJ_setct_CapTokenSeq OBJ_set_ctype,11L
#define _mm512_bsrli_epi128(A,N) ((__m512i)__builtin_ia32_psrldq512 ((__m512i)(A), (int)(N) * 8))
#define SSL3_RT_APPLICATION_DATA 23
#define TLS1_RFC_DHE_RSA_WITH_AES_128_CCM_8 "TLS_DHE_RSA_WITH_AES_128_CCM_8"
#define BOOST_PP_WHILE_86_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_87, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(87, s))
#define _mm_mask_srai_epi16(W,U,A,B) ((__m128i) __builtin_ia32_psrawi128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)(__m128i)(W), (__mmask8)(U)))
#define OBJ_id_it_keyPairParamRep OBJ_id_it,11L
#define OBJ_id_it_keyPairParamReq OBJ_id_it,10L
#define _mm_permute2_pd(X,Y,C,I) ((__m128d) __builtin_ia32_vpermil2pd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(C), (int)(I)))
#define DECLARE_double(name) DECLARE_VARIABLE(double, D, name)
#define SSL_F_TLS_CONSTRUCT_CTOS_COOKIE 535
#define SSL_F_TLS13_CHANGE_CIPHER_STATE 440
#define _mm512_i32gather_epi32(INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv16si ((__v16si)_mm512_undefined_epi32 (), (void const *) (ADDR), (__v16si)(__m512i) (INDEX), (__mmask16)0xFFFF, (int) (SCALE))
#define SN_pbeWithMD5AndDES_CBC "PBE-MD5-DES"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000 (0)(0)(0)(0),
#define __LDBL_HAS_DENORM__ 1
#define SSL_R_DANE_TLSA_BAD_CERTIFICATE 180
#define _MM_GET_DENORMALS_ZERO_MODE() (_mm_getcsr() & _MM_DENORMALS_ZERO_MASK)
#define CLONE_PARENT 0x00008000
#define SCNiLEAST16 "hi"
#define TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA384 0x030000B3
#define __S_IFREG 0100000
#define X509_STORE_CTX_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_X509_STORE_CTX, l, p, newf, dupf, freef)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_138 138
#define LC_TIME_MASK (1 << __LC_TIME)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011 (0)(0)(1)(1),
#define BIO_set_ssl(b,ssl,c) BIO_ctrl(b,BIO_C_SET_SSL,c,(char *)(ssl))
#define SN_brainpoolP384r1 "brainpoolP384r1"
#define _mm_mask_srai_epi32(W,U,A,B) ((__m128i) __builtin_ia32_psradi128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define SN_grasshopper_cfb "grasshopper-cfb"
#define BOOST_PREPROCESSOR_SEQ_ELEM_HPP 
#define SSL3_RANDOM_SIZE 32
#define _GCC_WRAP_STDINT_H 
#define SSL_set_max_proto_version(s,version) SSL_ctrl(s, SSL_CTRL_SET_MAX_PROTO_VERSION, version, NULL)
#define IORING_FSYNC_DATASYNC (1U << 0)
#define TLS1_TXT_DHE_DSS_WITH_ARIA_256_GCM_SHA384 "DHE-DSS-ARIA256-GCM-SHA384"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_200(o,s,l) 0
#define FOR_EACH_RANGE(i,begin,end) for (auto i = (true ? (begin) : (end)); ::folly::detail::notThereYet(i, (end)); ++i)
#define SN_setct_AuthRevResBaggage "setct-AuthRevResBaggage"
#define OBJ_qualityLabelledData OBJ_pilotObjectClass,22L
#define SCNiLEAST32 "i"
#define BOOST_COMPILER_CONFIG "boost/config/compiler/gcc.hpp"
#define _bit_scan_forward(a) __bsfd(a)
#define _mm512_i32gather_epi64(INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gathersiv8di ((__v8di)_mm512_undefined_epi32 (), (void const *) (ADDR), (__v8si)(__m256i) (INDEX), (__mmask8)0xFF, (int) (SCALE))
#define PKCS7_type_is_signed(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_signed)
#define _SC_MONOTONIC_CLOCK _SC_MONOTONIC_CLOCK
#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
#define FPE_INTDIV FPE_INTDIV
#define SSL_F_SSL_START_ASYNC_JOB 389
#define SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC 281
#define _GLIBCXX20_DEPRECATED(MSG) [[deprecated(MSG)]]
#define SSL_CTRL_SET_CURVES SSL_CTRL_SET_GROUPS
#define _mm_mask_srai_epi64(W,U,A,B) ((__m128i) __builtin_ia32_psraqi128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)(W), (__mmask8)(U)))
#define SSL_total_renegotiations(ssl) SSL_ctrl((ssl),SSL_CTRL_GET_TOTAL_RENEGOTIATIONS,0,NULL)
#define BOOST_PP_WHILE_232_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_233, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(233, s))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_20(o,s,l) 0
#define OBJ_id_smime_cti_ets_proofOfDelivery OBJ_id_smime_cti,3L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_221(op,st,ss,sz) 0
#define BOOST_PP_REPEAT_3_116(m,d) BOOST_PP_REPEAT_3_115(m, d) m(4, 115, d)
#define _mm_mask_cmp_round_ss_mask(M,X,Y,P,R) ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (M), R))
#define EVP_MD_CTX_FLAG_REUSE 0x0004
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_222(op,st,ss,sz) 0
#define __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
#define OBJ_id_smime_alg OBJ_SMIME,3L
#define NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac 1175
#define _GLIBCXX_HAVE_ECANCELED 1
#define BOOST_PP_FOR_10_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(11, s) BOOST_PP_IIF(c, BOOST_PP_FOR_11, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(11, s), p, o, m)
#define MS_NOREMOTELOCK (1<<27)
#define ASYNC_F_ASYNC_INIT_THREAD 101
#define SCNiLEAST64 __PRI64_PREFIX "i"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_32(op,st,ss,sz) 0
#define __PTRDIFF_MAX__ 0x7fffffffffffffffL
#define ASYNC_ERR 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_225(op,st,ss,sz) 0
#define SHLIB_VERSION_NUMBER "1.1"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_226(op,st,ss,sz) 0
#define X509V3_R_UNKNOWN_OPTION 120
#define BOOST_STDLIB_CONFIG "boost/config/stdlib/libstdcpp3.hpp"
#define BOOST_MPL_LIMIT_VECTOR_SIZE 20
#define FIZZ_UNION_CTORS(X,NAME) NAME(X&& x) : type_(Type::X ##_E) { new (&X ##_) X(std::move(x)); }
#define _mm512_maskz_fnmsub_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfnmsubpd512_maskz(A, B, C, U, R)
#define _GLIBCXX_LOCALE 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_119(o,s,l) 0
#define _mm512_maskz_fnmsub_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfnmsubps512_maskz(A, B, C, U, R)
#define CRYPTO_ONCE_STATIC_INIT PTHREAD_ONCE_INIT
#define timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)
#define BOOST_BINARY_L(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, L )
#define PF_PHONET 35
#define X509_STORE_CTX_set_app_data(ctx,data) X509_STORE_CTX_set_ex_data(ctx,0,data)
#define BOOST_PP_SEQ_FOLD_LEFT_32(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_32(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __GNU_GETTEXT_SUPPORTED_REVISION(major) ((major) == 0 ? 1 : -1)
#define SSL_R_REQUEST_PENDING 285
#define NID_id_smime_aa_mlExpandHistory 214
#define _mm_mask_sqrt_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_sqrtss_mask_round (B, A, W, U, C)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_25(o,s,l) 0
#define NID_id_regCtrl_pkiArchiveOptions 318
#define JEMALLOC_ALLOC_SIZE2(s1,s2) JEMALLOC_ATTR(alloc_size(s1, s2))
#define _STDARG_H 
#define SSL_TXT_GOST89MAC "GOST89MAC"
#define NID_sbgp_autonomousSysNum 291
#define _PC_VDISABLE _PC_VDISABLE
#define X509_EX_V_INIT 0x0001
#define _mm512_maskz_alignr_epi32(U,X,Y,C) ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)_mm512_setzero_si512 (), (__mmask16)(U)))
#define OBJ_secp192k1 OBJ_secg_ellipticCurve,31L
#define _mm256_mask_i32scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv4di ((void *) (ADDR), (__mmask8) (MASK), (__v4si)(__m128i) (INDEX), (__v4di)(__m256i) (V1), (int) (SCALE))
#define RSA_F_RSA_SIGN_ASN1_OCTET_STRING 118
#define _SC_XOPEN_LEGACY _SC_XOPEN_LEGACY
#define _PSTL_GLUE_NUMERIC_DEFS_H 
#define SN_id_cmc_encryptedPOP "id-cmc-encryptedPOP"
#define __SIG_ATOMIC_WIDTH__ 32
#define OBJ_id_ad OBJ_id_pkix,48L
#define TLS1_3_RFC_AES_128_CCM_SHA256 "TLS_AES_128_CCM_SHA256"
#define BOOST_PP_REPEAT BOOST_PP_CAT(BOOST_PP_REPEAT_, BOOST_PP_AUTO_REC(BOOST_PP_REPEAT_P, 4))
#define SN_hmac_md5 "HMAC-MD5"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_39(op,st,ss,sz) 0
#define X509V3_R_INVALID_PURPOSE 146
#define __PRIPTR_PREFIX "l"
#define __glibcxx_min_b(T,B) (__glibcxx_signed_b (T,B) ? -__glibcxx_max_b (T,B) - 1 : (T)0)
#define SSL_R_BAD_PROTOCOL_VERSION_NUMBER 116
#define BUS_ADRALN BUS_ADRALN
#define __SIZEOF_WINT_T__ 4
#define BOOST_MOVE_DETAIL_POINTER_ELEMENT_HPP 
#define __DECL_SIMD_logf32 
#define BOOST_PP_REPEAT_3_245(m,d) BOOST_PP_REPEAT_3_244(m, d) m(4, 244, d)
#define SHA_LONG unsigned int
#define SSL_TXT_kRSAPSK "kRSAPSK"
#define SN_brainpoolP256t1 "brainpoolP256t1"
#define SSL_F_SSL_USE_CERTIFICATE_ASN1 199
#define __cpp_lib_bind_front 201907L
#define BOOST_PP_TUPLE_REM_51(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11100011 (1)(1)(1)(0)(0)(0)(1)(1),
#define BIO_FLAGS_MEM_RDONLY 0x200
#define TLS1_TXT_DHE_PSK_WITH_RC4_128_SHA "DHE-PSK-RC4-SHA"
#define OBJ_id_ce OBJ_X500,29L
#define _mm512_maskz_alignr_epi64(U,X,Y,C) ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)_mm512_setzero_si512 (), (__mmask8)(U)))
#define ENOTNAM 118
#define __LONG_LONG_WIDTH__ 64
#define SN_aes_192_ofb128 "AES-192-OFB"
#define RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1 153
#define FOLLY_CXX17_CONSTEXPR constexpr
#define __glibcxx_requires_can_increment(_First,_Size) 
#define LN_certBag "certBag"
#define __CFLOAT64 _Complex double
#define APACHE_THRIFT_ACCESSOR_interactionCreate 
#define SSL_R_NO_CERTIFICATE_ASSIGNED 177
#define X509V3_F_X509V3_EXT_ADD 104
#define BIO_TYPE_SOURCE_SINK 0x0400
#define NID_aes_128_gcm 895
#define SSL_SECOP_SIGALG_SHARED (12 | SSL_SECOP_OTHER_SIGALG)
#define EVENT__HAVE_SYS_PARAM_H 1
#define OBJ_id_smime_aa_ets_signerLocation OBJ_id_smime_aa,17L
#define __DECL_SIMD_sinf64x 
#define EC_F_EC_KEY_SIMPLE_OCT2PRIV 259
#define SSL_F_GET_CERT_VERIFY_TBS_DATA 588
#define JEMALLOC_VERSION_BUGFIX 1
#define BOOST_MPL_VECTOR_AUX_POP_BACK_HPP_INCLUDED 
#define X509_F_X509_NAME_CANON 156
#define SSL_BUILD_CHAIN_FLAG_CHECK 0x4
#define BOOST_PP_FOR_226_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(227, s) BOOST_PP_IIF(c, BOOST_PP_FOR_227, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(227, s), p, o, m)
#define BOOST_PP_WHILE_188(p,o,s) BOOST_PP_WHILE_188_C(BOOST_PP_BOOL(p(189, s)), p, o, s)
#define BOOST_LIKELY(x) __builtin_expect(x, 1)
#define BOOST_INTRUSIVE_DETAIL_ALGO_TYPE_HPP 
#define SN_grasshopper_ctr "grasshopper-ctr"
#define OBJ_setct_AcqCardCodeMsgTBE OBJ_set_ctype,58L
#define _POSIX_SPORADIC_SERVER -1
#define _SC_XOPEN_XCU_VERSION _SC_XOPEN_XCU_VERSION
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
#define __isleap(year) ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))
#define COMPACT_GOOGLE_LOG_0 GLOG_ERROR_MSG
#define LN_pilotAttributeType "pilotAttributeType"
#define X509err(f,r) ERR_PUT_error(ERR_LIB_X509,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM "ECDHE-ECDSA-AES256-CCM"
#define NID_setct_CRLNotificationResTBS 599
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101101 (0)(0)(1)(0)(1)(1)(0)(1),
#define F_GETOWN __F_GETOWN
#define _SC_NL_ARGMAX _SC_NL_ARGMAX
#define TLS1_CK_RSA_PSK_WITH_NULL_SHA256 0x030000B8
#define MALLCTL_ARENAS_ALL 4096
#define _SC_XBS5_LPBIG_OFFBIG _SC_XBS5_LPBIG_OFFBIG
#define LC_MEASUREMENT_MASK (1 << __LC_MEASUREMENT)
#define alloca(size) __builtin_alloca (size)
#define BOOST_MPL_PAIR_VIEW_HPP_INCLUDED 
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_000 0
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_001 1
#define SN_des_ede3_cbc "DES-EDE3-CBC"
#define V_ASN1_VIDEOTEXSTRING 21
#define IP_MULTICAST_ALL 49
#define BOOST_PP_LIST_FOLD_LEFT_80(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_81, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(81, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_101 (1)(0)(1),
#define RSA_R_INVALID_PSS_PARAMETERS 149
#define SSL3_RFC_RSA_RC4_128_MD5 "TLS_RSA_WITH_RC4_128_MD5"
#define EVP_PKEY_CTX_set_dh_paramgen_prime_len(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN, len, NULL)
#define OBJ_id_it OBJ_id_pkix,4L
#define __cpp_lib_byte 201603
#define NID_idea_cbc 34
#define BOOST_PP_FOR_208_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(209, s) BOOST_PP_IIF(c, BOOST_PP_FOR_209, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(209, s), p, o, m)
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_010 2
#define INT_LEAST32_WIDTH 32
#define PKEY_DISABLE_ACCESS 0x1
#define FASYNC O_ASYNC
#define _GLIBCXX_GTHRW(name) __gthrw(pthread_ ## name); static inline int __glibcxx_ ## name (pthread_rwlock_t *__rwlock) { if (__gthread_active_p ()) return __gthrw_(pthread_ ## name) (__rwlock); else return 0; }
#define IPV6_RECVHOPLIMIT 51
#define PKCS7_CRLFEOL 0x800
#define __FLT64X_HAS_QUIET_NAN__ 1
#define _mm256_maskz_rol_epi64(U,A,B) ((__m256i)__builtin_ia32_prolq256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define NID_secretBag 154
#define BOOST_PP_FOR_77_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(78, s) BOOST_PP_IIF(c, BOOST_PP_FOR_78, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(78, s), p, o, m)
#define OBJ_rc4 OBJ_rsadsi,3L,4L
#define MAP_STACK 0x20000
#define X509_F_X509_LOOKUP_NEW 155
#define _mm256_shuffle_pd(A,B,N) ((__m256d)__builtin_ia32_shufpd256 ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(N)))
#define BOOST_VARIANT_DETAIL_INITIALIZER_HPP 
#define OBJ_capwapWTP OBJ_id_kp,19L
#define _mm256_shuffle_ps(A,B,N) ((__m256) __builtin_ia32_shufps256 ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(N)))
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM_8 "TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8"
#define OBJ_id_kp OBJ_id_pkix,3L
#define IPV6_RECVTCLASS 66
#define TLS1_CK_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C050
#define SN_ffdhe2048 "ffdhe2048"
#define O_RSYNC O_SYNC
#define FOLLY_HAVE_PIPE2 1
#define TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA "ADH-CAMELLIA256-SHA"
#define M_2_SQRTPIf64x __f64x (1.128379167095512573896158903121545172)
#define BOOST_HAS_STDINT_H 
#define BOOST_PP_REPEAT_3_120(m,d) BOOST_PP_REPEAT_3_119(m, d) m(4, 119, d)
#define SSL_TXT_ECDH "ECDH"
#define BOOST_PP_REPEAT_2_81(m,d) BOOST_PP_REPEAT_2_80(m, d) m(3, 80, d)
#define _mm512_mask_cvt_roundps_ph(U,W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I), (__v16hi)(__m256i)(U), (__mmask16) (W)))
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CBC_SHA "ECDHE-ECDSA-AES256-SHA"
#define BOOST_PP_WHILE_178(p,o,s) BOOST_PP_WHILE_178_C(BOOST_PP_BOOL(p(179, s)), p, o, s)
#define EVP_R_AES_KEY_SETUP_FAILED 143
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0 (0),
#define OBJ_NAME_TYPE_NUM 0x05
#define EVP_R_WRONG_FINAL_BLOCK_LENGTH 109
#define STATX_BLOCKS 0x00000400U
#define LN_pbe_WithSHA1And2_Key_TripleDES_CBC "pbeWithSHA1And2-KeyTripleDES-CBC"
#define BOOST_MOVE_MOVE_UTILITY_HPP 
#define BOOST_PP_LIST_FOLD_RIGHT_2ND_D BOOST_PP_LIST_FOLD_RIGHT_D
#define __cpp_rtti 199711L
#define BOOST_PP_SEQ_FOLD_LEFT_I_158(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_159, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(159, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_sect163r1 722
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_230(op,st,ss,sz) 0
#define SSL_F_TLS_PROCESS_SERVER_DONE 368
#define __FP_LOGB0_IS_MIN 1
#define __WALL 0x40000000
#define X509V3_F_S2I_ASN1_OCTET_STRING 112
#define BN_F_BN_GF2M_MOD_EXP 132
#define CLONE_VM 0x00000100
#define _GLIBCXX_HAVE_ETIMEDOUT 1
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS _CS_POSIX_V6_LP64_OFF64_LDFLAGS
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_234(op,st,ss,sz) 0
#define BOOST_PP_DEC_201 200
#define BOOST_PP_LIST_FOLD_LEFT_87(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_88, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(88, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_RIGHT_87(o,s,l) BOOST_PP_LIST_FOLD_LEFT_87(o, s, BOOST_PP_LIST_REVERSE_D(87, l))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_125(o,s,l) 0
#define __SIGEV_MAX_SIZE 64
#define APACHE_THRIFT_ACCESSOR_module 
#define EC_R_EC_GROUP_NEW_BY_NAME_FAILURE 119
#define __LP64__ 1
#define SN_aes_128_cbc "AES-128-CBC"
#define DSA_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_DSA, l, p, newf, dupf, freef)
#define ENETRESET 102
#define OBJ_id_on OBJ_id_pkix,8L
#define OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm OBJ_id_tc26_cipher_gostr3412_2015_magma,1L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_128(o,s,l) 0
#define FOLLY_APPLE_WATCHOS 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_239(op,st,ss,sz) 0
#define OPENSSL_NO_SSL3_METHOD 
#define EVP_PKEY_CTRL_DH_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 9)
#define CT_F_CT_POLICY_EVAL_CTX_NEW 133
#define BOOST_PP_SEQ_SIZE_123(_) BOOST_PP_SEQ_SIZE_124
#define _mm256_maskz_ternarylogic_epi64(U,A,B,C,I) ((__m256i) __builtin_ia32_pternlogq256_maskz ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (__v4di)(__m256i)(C), (int)(I), (__mmask8)(U)))
#define X509V3_R_NO_PUBLIC_KEY 114
#define CONF_R_VARIABLE_HAS_NO_VALUE 104
#define DSA_F_PKEY_DSA_CTRL_STR 104
#define SN_setct_AuthTokenTBE "setct-AuthTokenTBE"
#define S_IFREG __S_IFREG
#define X509_F_BY_FILE_CTRL 101
#define DECLARE_OBJ_BSEARCH_CMP_FN(type1,type2,cmp) _DECLARE_OBJ_BSEARCH_CMP_FN(static, type1, type2, cmp)
#define FOLLY_SAFE_PCHECK(expr,...) FOLLY_DETAIL_SAFE_CHECK_IMPL( 0, 1, (expr), FOLLY_PP_STRINGIZE(expr), __VA_ARGS__)
#define __RLIM64_T_TYPE __UQUAD_TYPE
#define PF_MAX 45
#define _mm512_cvt_roundps_epi32(A,B) ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))
#define BOOST_PP_REPEAT_2_88(m,d) BOOST_PP_REPEAT_2_87(m, d) m(3, 87, d)
#define NID_idea_cfb64 35
#define _GLIBCXX_HAVE_SETENV 1
#define X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD 13
#define EVP_MD_CTX_FLAG_NO_INIT 0x0100
#define TLS1_RFC_PSK_WITH_AES_256_CCM "TLS_PSK_WITH_AES_256_CCM"
#define BIO_TYPE_CIPHER (10|BIO_TYPE_FILTER)
#define BOOST_PP_SEQ_ELEM_43(_) BOOST_PP_SEQ_ELEM_42
#define EVP_PKEY_CTRL_EC_KDF_TYPE (EVP_PKEY_ALG_CTRL + 4)
#define TLS1_CK_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C078
#define RSA_METHOD_FLAG_NO_CHECK 0x0001
#define NID_hmacWithSHA384 800
#define OBJ_any_policy OBJ_certificate_policies,0L
#define _PSTL_CPP17_EXECUTION_POLICIES_PRESENT (_MSC_VER >= 1912)
#define TLS1_RFC_PSK_WITH_AES_128_GCM_SHA256 "TLS_PSK_WITH_AES_128_GCM_SHA256"
#define timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)
#define NID_pilotObject 444
#define LN_pilotAttributeSyntax "pilotAttributeSyntax"
#define BOOST_PP_REPEAT_3_35(m,d) BOOST_PP_REPEAT_3_34(m, d) m(4, 34, d)
#define SN_setct_CapResTBE "setct-CapResTBE"
#define OBJ_undef 0L
#define _mm512_cvt_roundps_epi64(A,B) ((__m512i)__builtin_ia32_cvtps2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define BOOST_VARIANT_RECURSIVE_VARIANT_HPP 
#define RSA_R_UNSUPPORTED_ENCRYPTION_TYPE 162
#define BOOST_PP_TUPLE_REM_61(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38, e39, e40, e41, e42, e43, e44, e45, e46, e47, e48, e49, e50, e51, e52, e53, e54, e55, e56, e57, e58, e59, e60
#define FP_XSTATE_MAGIC2 0x46505845U
#define EVENT__SIZEOF_VOID_P 8
#define __INTPTR_MAX__ 0x7fffffffffffffffL
#define OBJ_id_smime_aa_signingCertificate OBJ_id_smime_aa,12L
#define _mm_ror_epi64(A,B) ((__m128i)__builtin_ia32_prorq128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)-1))
#define BOOST_MPL_AUX_PREPROCESSOR_DEFAULT_PARAMS_HPP_INCLUDED 
#define _XABORT_NESTED (1 << 5)
#define BOOST_PP_SEQ_SIZE_98(_) BOOST_PP_SEQ_SIZE_99
#define X509_F_BUILD_CHAIN 106
#define ECParameters_dup(x) ASN1_dup_of(EC_KEY,i2d_ECParameters,d2i_ECParameters,x)
#define __CORRECT_ISO_CPP_WCHAR_H_PROTO 
#define BOOST_PP_WHILE_192(p,o,s) BOOST_PP_WHILE_192_C(BOOST_PP_BOOL(p(193, s)), p, o, s)
#define OBJ_code_sign OBJ_id_kp,3L
#define BOOST_PP_ERROR(code) BOOST_PP_CAT(BOOST_PP_ERROR_, code)
#define TLS1_VERSION_MAJOR 0x03
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_190(p,o,s) 0
#define TLS1_RFC_DHE_DSS_WITH_ARIA_128_GCM_SHA256 "TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256"
#define __cpp_lib_memory_resource 201603
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000010 (0)(0)(0)(0)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000000 (0)(1)(0)(0)(0)(0)(0)(0),
#define NID_setct_PIUnsignedTBE 569
#define SSL_CTRL_CERT_FLAGS 99
#define BOOST_PP_WHILE_195(p,o,s) BOOST_PP_WHILE_195_C(BOOST_PP_BOOL(p(196, s)), p, o, s)
#define X509_F_I2D_X509_AUX 151
#define BOOST_PP_WHILE_196(p,o,s) BOOST_PP_WHILE_196_C(BOOST_PP_BOOL(p(197, s)), p, o, s)
#define SN_pbe_WithSHA1And40BitRC2_CBC "PBE-SHA1-RC2-40"
#define BOOST_PP_LIST_FOLD_LEFT_142(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_143, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(143, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_WHILE_201(p,o,s) BOOST_PP_WHILE_201_C(BOOST_PP_BOOL(p(202, s)), p, o, s)
#define SSL_CTRL_GET_EC_POINT_FORMATS 111
#define BOOST_PP_WHILE_204(p,o,s) BOOST_PP_WHILE_204_C(BOOST_PP_BOOL(p(205, s)), p, o, s)
#define _SC_SHARED_MEMORY_OBJECTS _SC_SHARED_MEMORY_OBJECTS
#define BOOST_PP_WHILE_209(p,o,s) BOOST_PP_WHILE_209_C(BOOST_PP_BOOL(p(210, s)), p, o, s)
#define BOOST_PP_WHILE_198(p,o,s) BOOST_PP_WHILE_198_C(BOOST_PP_BOOL(p(199, s)), p, o, s)
#define OBJ_pkcs12_BagIds OBJ_pkcs12_Version1,1L
#define SOL_PACKET 263
#define ADJ_STATUS 0x0010
#define SSL_CTX_need_tmp_RSA(ctx) 0
#define RWF_NOWAIT ((__kernel_rwf_t)0x00000008)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110100 (1)(1)(1)(0)(1)(0)(0),
#define BOOST_PP_WHILE_210(p,o,s) BOOST_PP_WHILE_210_C(BOOST_PP_BOOL(p(211, s)), p, o, s)
#define BOOST_PP_WHILE_212(p,o,s) BOOST_PP_WHILE_212_C(BOOST_PP_BOOL(p(213, s)), p, o, s)
#define BOOST_PP_LIST_FOLD_LEFT_144(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_145, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(145, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_WHILE_214(p,o,s) BOOST_PP_WHILE_214_C(BOOST_PP_BOOL(p(215, s)), p, o, s)
#define BOOST_PP_WHILE_215(p,o,s) BOOST_PP_WHILE_215_C(BOOST_PP_BOOL(p(216, s)), p, o, s)
#define BOOST_PP_WHILE_216(p,o,s) BOOST_PP_WHILE_216_C(BOOST_PP_BOOL(p(217, s)), p, o, s)
#define BOOST_PP_WHILE_218(p,o,s) BOOST_PP_WHILE_218_C(BOOST_PP_BOOL(p(219, s)), p, o, s)
#define BOOST_PP_WHILE_219(p,o,s) BOOST_PP_WHILE_219_C(BOOST_PP_BOOL(p(220, s)), p, o, s)
#define AF_NETROM PF_NETROM
#define IPV6_AUTOFLOWLABEL 70
#define SCNiMAX __PRI64_PREFIX "i"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110110 (1)(1)(1)(0)(1)(1)(0),
#define BOOST_PP_WHILE_220(p,o,s) BOOST_PP_WHILE_220_C(BOOST_PP_BOOL(p(221, s)), p, o, s)
#define BOOST_PP_WHILE_223(p,o,s) BOOST_PP_WHILE_223_C(BOOST_PP_BOOL(p(224, s)), p, o, s)
#define BOOST_PP_WHILE_225(p,o,s) BOOST_PP_WHILE_225_C(BOOST_PP_BOOL(p(226, s)), p, o, s)
#define BOOST_PP_WHILE_226(p,o,s) BOOST_PP_WHILE_226_C(BOOST_PP_BOOL(p(227, s)), p, o, s)
#define BOOST_PP_WHILE_227(p,o,s) BOOST_PP_WHILE_227_C(BOOST_PP_BOOL(p(228, s)), p, o, s)
#define BOOST_PP_WHILE_228(p,o,s) BOOST_PP_WHILE_228_C(BOOST_PP_BOOL(p(229, s)), p, o, s)
#define EC_F_PKEY_EC_CTRL 197
#define X509_STORE_CTX_get_app_data(ctx) X509_STORE_CTX_get_ex_data(ctx,0)
#define TLS_MD_SERVER_WRITE_KEY_CONST_SIZE 16
#define FOLLY_SSE 2
#define TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA256 "ECDHE-PSK-AES128-CBC-SHA256"
#define __SLONG32_TYPE int
#define X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE 45
#define _mm_mask_blend_pd(__U,__A,__W) ((__m128d) __builtin_ia32_blendmpd_128_mask ((__v2df) (__A), (__v2df) (__W), (__mmask8) (__U)))
#define _mm_mask_blend_ps(__U,__A,__W) ((__m128) __builtin_ia32_blendmps_128_mask ((__v4sf) (__A), (__v4sf) (__W), (__mmask8) (__U)))
#define BOOST_PP_WHILE_230(p,o,s) BOOST_PP_WHILE_230_C(BOOST_PP_BOOL(p(231, s)), p, o, s)
#define BOOST_PP_WHILE_231(p,o,s) BOOST_PP_WHILE_231_C(BOOST_PP_BOOL(p(232, s)), p, o, s)
#define BOOST_PP_WHILE_232(p,o,s) BOOST_PP_WHILE_232_C(BOOST_PP_BOOL(p(233, s)), p, o, s)
#define BOOST_PP_WHILE_233(p,o,s) BOOST_PP_WHILE_233_C(BOOST_PP_BOOL(p(234, s)), p, o, s)
#define BOOST_PP_WHILE_234(p,o,s) BOOST_PP_WHILE_234_C(BOOST_PP_BOOL(p(235, s)), p, o, s)
#define BOOST_PP_WHILE_236(p,o,s) BOOST_PP_WHILE_236_C(BOOST_PP_BOOL(p(237, s)), p, o, s)
#define BOOST_PP_WHILE_237(p,o,s) BOOST_PP_WHILE_237_C(BOOST_PP_BOOL(p(238, s)), p, o, s)
#define BOOST_PP_WHILE_238(p,o,s) BOOST_PP_WHILE_238_C(BOOST_PP_BOOL(p(239, s)), p, o, s)
#define BOOST_PP_WHILE_239(p,o,s) BOOST_PP_WHILE_239_C(BOOST_PP_BOOL(p(240, s)), p, o, s)
#define X509V3_F_V2I_TLS_FEATURE 165
#define _mm_mask_dbsad_epu8(W,U,X,Y,C) ((__m128i) __builtin_ia32_dbpsadbw128_mask ((__v16qi)(__m128i) (X), (__v16qi)(__m128i) (Y), (int) (C), (__v8hi)(__m128i)(W), (__mmask8)(U)))
#define NID_id_pkix_OCSP_noCheck 369
#define SN_aes_192_cbc_hmac_sha256 "AES-192-CBC-HMAC-SHA256"
#define BOOST_PP_LIST_FOLD_LEFT_149(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_150, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(150, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm512_permute_pd(X,C) ((__m512d) __builtin_ia32_vpermilpd512_mask ((__v8df)(__m512d)(X), (int)(C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)(-1)))
#define NID_rfc822Mailbox 460
#define TLS1_CK_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 0x0300CCA9
#define _mm512_permute_ps(X,C) ((__m512) __builtin_ia32_vpermilps512_mask ((__v16sf)(__m512)(X), (int)(C), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)(-1)))
#define BOOST_PREPROCESSOR_LOGICAL_NOT_HPP 
#define BOOST_PP_WHILE_242(p,o,s) BOOST_PP_WHILE_242_C(BOOST_PP_BOOL(p(243, s)), p, o, s)
#define BOOST_PP_WHILE_243(p,o,s) BOOST_PP_WHILE_243_C(BOOST_PP_BOOL(p(244, s)), p, o, s)
#define _mm_cvt_roundss_i32(A,B) ((int)__builtin_ia32_vcvtss2si32(A, B))
#define BOOST_PP_WHILE_248(p,o,s) BOOST_PP_WHILE_248_C(BOOST_PP_BOOL(p(249, s)), p, o, s)
#define BOOST_PP_WHILE_249(p,o,s) BOOST_PP_WHILE_249_C(BOOST_PP_BOOL(p(250, s)), p, o, s)
#define SSL_TXT_GOST "GOST89"
#define FOLLY_GCC_DISABLE_WARNING(warningName) FOLLY_GNU_DISABLE_WARNING(warningName)
#define FP_SUBNORMAL 3
#define REG_OLDMASK REG_OLDMASK
#define OBJ_id_mod_crmf OBJ_id_pkix_mod,5L
#define BOOST_MPL_ASSERT_RELATION(x,rel,y) BOOST_MPL_ASSERT_RELATION_IMPL(BOOST_MPL_AUX_PP_COUNTER(), x, rel, y)
#define BOOST_PP_WHILE_250(p,o,s) BOOST_PP_WHILE_250_C(BOOST_PP_BOOL(p(251, s)), p, o, s)
#define BOOST_PP_WHILE_252(p,o,s) BOOST_PP_WHILE_252_C(BOOST_PP_BOOL(p(253, s)), p, o, s)
#define BOOST_PP_WHILE_253(p,o,s) BOOST_PP_WHILE_253_C(BOOST_PP_BOOL(p(254, s)), p, o, s)
#define BOOST_PP_WHILE_254(p,o,s) BOOST_PP_WHILE_254_C(BOOST_PP_BOOL(p(255, s)), p, o, s)
#define BOOST_PP_WHILE_255(p,o,s) BOOST_PP_WHILE_255_C(BOOST_PP_BOOL(p(256, s)), p, o, s)
#define TCP_MAX_WINSHIFT 14
#define _STDC_PREDEF_H 1
#define ASN1_R_MIME_NO_CONTENT_TYPE 206
#define TCP_COOKIE_OUT_NEVER (1 << 1)
#define EVP_MD_CTX_FLAG_PAD_PSS 0x20
#define ASN1_STRFLGS_RFC2253 (ASN1_STRFLGS_ESC_2253 | ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | ASN1_STRFLGS_UTF8_CONVERT | ASN1_STRFLGS_DUMP_UNKNOWN | ASN1_STRFLGS_DUMP_DER)
#define SI_KERNEL SI_KERNEL
#define TLS1_TXT_ECDHE_RSA_WITH_NULL_SHA "ECDHE-RSA-NULL-SHA"
#define SSL_F_DTLS1_PREPROCESS_FRAGMENT 288
#define _mm_rsqrt28_ss(A,B) __builtin_ia32_rsqrt28ss_round(B, A, _MM_FROUND_CUR_DIRECTION)
#define _STL_MULTIMAP_H 1
#define __SIMD_DECL(function) __CONCAT (__DECL_SIMD_, function)
#define X509_V_ERR_UNSPECIFIED 1
#define BOOST_PREPROCESSOR_LIST_FOLD_LEFT_HPP 
#define BOOST_PP_REPEAT_3_130(m,d) BOOST_PP_REPEAT_3_129(m, d) m(4, 129, d)
#define BOOST_PP_SEQ_FOLD_LEFT_164(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_164(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _kshiftri_mask8(X,Y) ((__mmask8) __builtin_ia32_kshiftriqi ((__mmask8)(X), (__mmask8)(Y)))
#define EVP_F_EVP_PKEY_DERIVE_INIT 154
#define BOOST_PP_SEQ_FOLD_LEFT_P(n) BOOST_PP_CAT(BOOST_PP_SEQ_FOLD_LEFT_CHECK_, BOOST_PP_SEQ_FOLD_LEFT_I_ ## n(BOOST_PP_SEQ_FOLD_LEFT_O, BOOST_PP_NIL, (nil), 1))
#define FMT_OVERRIDE override
#define DSA_F_DSA_BUILTIN_PARAMGEN 125
#define SSL_TXT_kDH "kDH"
#define BOOST_PP_REPEAT_3_131(m,d) BOOST_PP_REPEAT_3_130(m, d) m(4, 130, d)
#define SSL_R_TLSV1_ALERT_PROTOCOL_VERSION 1070
#define BOOST_MPL_AUX_NA_SPEC_ETI(i,name) 
#define SN_id_tc26 "id-tc26"
#define _CS_XBS5_LP64_OFF64_LIBS _CS_XBS5_LP64_OFF64_LIBS
#define _GLIBCXX_HAS_NESTED_TYPE(_NTYPE) template<typename _Tp, typename = __void_t<>> struct __has_ ##_NTYPE : false_type { }; template<typename _Tp> struct __has_ ##_NTYPE<_Tp, __void_t<typename _Tp::_NTYPE>> : true_type { };
#define LN_auth_ecdsa "auth-ecdsa"
#define MS_RDONLY 1
#define BOOST_PP_LIST_FOLD_RIGHT_91(o,s,l) BOOST_PP_LIST_FOLD_LEFT_91(o, s, BOOST_PP_LIST_REVERSE_D(91, l))
#define BOOST_PP_REPEAT_3_134(m,d) BOOST_PP_REPEAT_3_133(m, d) m(4, 133, d)
#define BOOST_PP_IS_EMPTY_OPT(...) BOOST_PP_VARIADIC_HAS_OPT_ELEM0(BOOST_PP_IS_EMPTY_FUNCTION(__VA_ARGS__),)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_240(op,st,ss,sz) 0
#define _GLIBCXX_STD_PAIR_CONSTRAINT(T) _Std_pair T
#define BOOST_PP_REPEAT_FROM_TO_2ND BOOST_PP_REPEAT_FROM_TO_2
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define NID_rc2_cbc 37
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_131(o,s,l) 0
#define BOOST_PP_REPEAT_3_136(m,d) BOOST_PP_REPEAT_3_135(m, d) m(4, 135, d)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001111 (0)(0)(1)(1)(1)(1),
#define TRAP_TRACE TRAP_TRACE
#define _mm256_blend_epi16(X,Y,M) ((__m256i) __builtin_ia32_pblendw256 ((__v16hi)(__m256i)(X), (__v16hi)(__m256i)(Y), (int)(M)))
#define SSL_TXT_kECDHr "kECDHr"
#define PF_FILE PF_LOCAL
#define BOOST_PP_REPEAT_3_137(m,d) BOOST_PP_REPEAT_3_136(m, d) m(4, 136, d)
#define IPV6_ADD_MEMBERSHIP IPV6_JOIN_GROUP
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_133(o,s,l) 0
#define _SC_NL_LANGMAX _SC_NL_LANGMAX
#define BOOST_PP_REPEAT_3_138(m,d) BOOST_PP_REPEAT_3_137(m, d) m(4, 137, d)
#define TLSEXT_TYPE_application_layer_protocol_negotiation 16
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_244(op,st,ss,sz) 0
#define SSL_F_SSL_ADD_CERT_CHAIN 316
#define BOOST_PP_FOR_10(s,p,o,m) BOOST_PP_FOR_10_C(BOOST_PP_BOOL(p(11, s)), s, p, o, m)
#define _mm256_maskz_extractf32x4_ps(U,X,C) ((__m128) __builtin_ia32_extractf32x4_256_mask ((__v8sf)(__m256) (X), (int) (C), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)(U)))
#define BOOST_MPL_ALWAYS_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_245(op,st,ss,sz) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100000 (1)(0)(0)(0)(0)(0),
#define SIGABRT 6
#define BOOST_OPTIONAL_OPTIONAL_FLC_19NOV2002_HPP 
#define EVP_PKEY_RSA_PSS NID_rsassaPss
#define BOOST_MPL_AUX_COMMON_NAME_WKND(name) 
#define OBJ_hmacWithSHA1 OBJ_rsadsi,2L,7L
#define BOOST_PP_FOR_12(s,p,o,m) BOOST_PP_FOR_12_C(BOOST_PP_BOOL(p(13, s)), s, p, o, m)
#define BOOST_INTRUSIVE_DETAIL_IS_STATEFUL_VALUE_TRAITS_HPP 
#define NID_aes_192_gcm 898
#define _mm512_extracti32x4_epi32(X,C) ((__m128i) __builtin_ia32_extracti32x4_mask ((__v16si)(__m512i) (X), (int) (C), (__v4si)(__m128i)_mm_undefined_si128 (), (__mmask8)-1))
#define SN_aes_128_ctr "AES-128-CTR"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_247(op,st,ss,sz) 0
#define OBJ_id_GostR3410_94 OBJ_cryptopro,20L
#define NID_kx_srp 1044
#define EC_F_ECP_NISTZ256_MULT_PRECOMPUTE 243
#define BOOST_PP_FOR_14(s,p,o,m) BOOST_PP_FOR_14_C(BOOST_PP_BOOL(p(15, s)), s, p, o, m)
#define OBJ_role OBJ_X509,72L
#define BOOST_PP_WHILE_157_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_158, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(158, s))
#define _mm256_blend_epi32(X,Y,M) ((__m256i) __builtin_ia32_pblendd256 ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(M)))
#define BOOST_PP_FOR_15(s,p,o,m) BOOST_PP_FOR_15_C(BOOST_PP_BOOL(p(16, s)), s, p, o, m)
#define SSL_F_DTLS1_PROCESS_BUFFERED_RECORDS 424
#define _POSIX_STREAM_MAX 8
#define BOOST_PP_FOR_17(s,p,o,m) BOOST_PP_FOR_17_C(BOOST_PP_BOOL(p(18, s)), s, p, o, m)
#define IPV6_MULTICAST_HOPS 18
#define X509_R_NO_CERTIFICATE_FOUND 135
#define OBJ_pbeWithMD5AndRC2_CBC OBJ_pkcs5,6L
#define BOOST_PP_DEC_5 4
#define ASN1_F_ASN1_UTCTIME_ADJ 218
#define BOOST_PP_FOR_19(s,p,o,m) BOOST_PP_FOR_19_C(BOOST_PP_BOOL(p(20, s)), s, p, o, m)
#define OBJ_ntt_ds 0L,3L,4401L,5L
#define COMPACT_GOOGLE_LOG_DFATAL google::LogMessage( __FILE__, __LINE__, google::GLOG_FATAL)
#define __enclu_eenter(leaf,b,c,retval) __asm__ __volatile__("enclu\n\t" : "=a" (retval), "=c" (c) : "a" (leaf), "b" (b), "c" (c) : "cc")
#define FS_BTREE_FL 0x00001000
#define EC_F_PKEY_EC_KEYGEN 199
#define RUSAGE_SELF RUSAGE_SELF
#define UINTPTR_WIDTH __WORDSIZE
#define BOOST_NOEXCEPT noexcept
#define SSL_TICKET_NONE 2
#define MBSTRING_FLAG 0x1000
#define SN_X9_62_prime239v1 "prime239v1"
#define SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT 307
#define SSL_CTRL_SET_TLSEXT_TICKET_KEYS 59
#define MAP_HUGE_SHIFT 26
#define BOOST_PP_REPEAT_FROM_TO_M_3_I(z,n,d,f,m,dt) BOOST_PP_REPEAT_FROM_TO_M_3_II(z, BOOST_PP_ADD_D(d, n, f), m, dt)
#define SN_X9_62_onBasis "onBasis"
#define OBJ_room OBJ_pilotObjectClass,7L
#define ASN1_F_X509_NAME_EX_NEW 171
#define _mm_maskz_min_round_sd(U,A,B,C) (__m128d)__builtin_ia32_minsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define BOOST_PP_FOR_44_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(45, s) BOOST_PP_IIF(c, BOOST_PP_FOR_45, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(45, s), p, o, m)
#define _mm_maskz_min_round_ss(U,A,B,C) (__m128)__builtin_ia32_minss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define OPENSSL_INIT_NO_LOAD_CONFIG 0x00000080L
#define SSL_F_SSL_SESSION_PRINT_FP 190
#define evutil_timersub(tvp,uvp,vvp) timersub((tvp), (uvp), (vvp))
#define si_utime _sifields._sigchld.si_utime
#define TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA 0x03000095
#define SSL_OP_NO_COMPRESSION 0x00020000U
#define MSG_BATCH MSG_BATCH
#define OBJ_ieee OBJ_identified_organization,111L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110000 (0)(0)(1)(1)(0)(0)(0)(0),
#define BOOST_PP_LIST_FOLD_LEFT_77(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_78, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(78, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL3_CK_ADH_DES_40_CBC_SHA 0x03000019
#define FOLLY_SHARED_MUTEX_MAX_YIELD_DEFAULT 1
#define SIOCGSTAMP 0x8906
#define _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
#define BOOST_INTRUSIVE_HAS_STATIC_MEMBER_FUNC_SIGNATURE(TRAITS_NAME,FUNC_NAME) template <typename U, typename Signature> class TRAITS_NAME { private: template<Signature> struct helper; template<typename T> static ::boost::intrusive::detail::yes_type test(helper<&T::FUNC_NAME>*); template<typename T> static ::boost::intrusive::detail::no_type test(...); public: static const bool value = sizeof(test<U>(0)) == sizeof(::boost::intrusive::detail::yes_type); };
#define IORING_SETUP_SQ_AFF (1U << 2)
#define __stub_sstk 
#define NID_sect193r2 725
#define NID_dhSinglePass_cofactorDH_sha384kdf_scheme 944
#define EVENT__HAVE_SYSCTL 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_1 1
#define __wur 
#define SSL_SESS_CACHE_NO_INTERNAL (SSL_SESS_CACHE_NO_INTERNAL_LOOKUP|SSL_SESS_CACHE_NO_INTERNAL_STORE)
#define _mm512_fnmadd_round_pd(A,B,C,R) (__m512d)__builtin_ia32_vfnmaddpd512_mask(A, B, C, -1, R)
#define APACHE_THRIFT_ACCESSOR_kind 
#define _mm512_fnmadd_round_ps(A,B,C,R) (__m512)__builtin_ia32_vfnmaddps512_mask(A, B, C, -1, R)
#define SN_id_smime_mod_ess "id-smime-mod-ess"
#define OBJ_dmdName OBJ_X509,54L
#define BOOST_PP_SEQ_SIZE_80(_) BOOST_PP_SEQ_SIZE_81
#define SSL_F_TLS_HANDLE_STATUS_REQUEST 563
#define THRIFT_UTIL_VARINTUTILS_H_ 1
#define NID_id_it_confirmWaitTime 311
#define EVUTIL_SOCKET_ERROR() (errno)
#define OPENSSL_INIT_NO_ATEXIT 0x00080000L
#define __glibcxx_requires_partitioned_lower(_First,_Last,_Value) 
#define _GLIBCXX_MUTEX_H 1
#define _mm512_maskz_fnmadd_round_pd(U,A,B,C,R) (__m512d)__builtin_ia32_vfnmaddpd512_maskz(A, B, C, U, R)
#define OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS 0x00000001L
#define NID_role 400
#define ASN1_F_DO_BUF 142
#define SN_aria_128_cbc "ARIA-128-CBC"
#define PEM_F_I2B_PVK 137
#define M_PI_2f64x __f64x (1.570796326794896619231321691639751442)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_4 4
#define PKCS7_OP_SET_DETACHED_SIGNATURE 1
#define __PDP_ENDIAN 3412
#define _ISOC95_SOURCE 1
#define LN_id_pkix_OCSP_extendedStatus "Extended OCSP Status"
#define EVP_CTRL_CCM_SET_L 0x14
#define SSL_OP_NO_TLSv1 0x04000000U
#define EL2HLT 51
#define X509_PURPOSE_SMIME_ENCRYPT 5
#define EVUTIL_EAI_MEMORY EAI_MEMORY
#define __cpp_nested_namespace_definitions 201411L
#define OBJ_telexNumber OBJ_X509,21L
#define SN_aria_128_ccm "ARIA-128-CCM"
#define SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE 250
#define _SC_SINGLE_PROCESS _SC_SINGLE_PROCESS
#define SN_id_smime_aa_ets_commitmentType "id-smime-aa-ets-commitmentType"
#define NID_dcObject 390
#define TLS1_RFC_DHE_RSA_WITH_AES_256_CCM_8 "TLS_DHE_RSA_WITH_AES_256_CCM_8"
#define LN_ripemd160WithRSA "ripemd160WithRSA"
#define BIO_F_BIO_SOCK_INFO 141
#define BOOST_RESULT_OF_USE_DECLTYPE 
#define NID_id_cmc_getCert 338
#define ERR_FLAG_MARK 0x01
#define SSL_OP_NETSCAPE_CA_DN_BUG 0x0
#define EVP_F_EVP_PKEY_NEW 106
#define BIO_R_UNABLE_TO_KEEPALIVE 137
#define _BITS_TYPESIZES_H 1
#define OBJ_id_alg_noSignature OBJ_id_alg,2L
#define NID_id_Gost28147_89_TestParamSet 823
#define OPENSSL_NO_SCTP 
#define ILL_COPROC ILL_COPROC
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_7 7
#define LN_countryCode3c "countryCode3c"
#define BN_R_ENCODING_ERROR 104
#define LN_countryCode3n "countryCode3n"
#define NID_room 448
#define EC_F_I2O_ECPUBLICKEY 151
#define RSA_R_INVALID_TRAILER 139
#define WSTOPSIG(status) __WSTOPSIG (status)
#define SSL_F_SSL_MODULE_INIT 392
#define SN_aes_192_ccm "id-aes192-CCM"
#define TLS1_RFC_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
#define NID_pbe_WithSHA1And2_Key_TripleDES_CBC 147
#define IPPROTO_UDP IPPROTO_UDP
#define DSA_R_MODULUS_TOO_LARGE 103
#define BOOST_PP_WHILE_53_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_54, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(54, s))
#define RAND_MAX 2147483647
#define NID_ieee 1170
#define BOOST_PP_WHILE_184(p,o,s) BOOST_PP_WHILE_184_C(BOOST_PP_BOOL(p(185, s)), p, o, s)
#define PEM_STRING_EVP_PKEY "ANY PRIVATE KEY"
#define _mm512_mask_blend_epi8(__U,__A,__W) ((__m512i) __builtin_ia32_blendmb_512_mask ((__v64qi) (__A), (__v64qi) (__W), (__mmask64) (__U)))
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_111 7
#define NID_id_pda_countryOfResidence 353
#define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
#define FMT_UNICODE !FMT_MSC_VER
#define OBJ_setct_AuthResBaggage OBJ_set_ctype,8L
#define BIO_F_BIO_SOCK_INIT 112
#define BOOST_PP_ADD(x,y) BOOST_PP_TUPLE_ELEM(2, 0, BOOST_PP_WHILE(BOOST_PP_ADD_P, BOOST_PP_ADD_O, (x, y)))
#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 "DH-RSA-CAMELLIA256-SHA256"
#define _CHAR_TRAITS_H 1
#define NID_rc4_hmac_md5 915
#define UINT16_WIDTH 16
#define FS_IOC_SET_ENCRYPTION_POLICY _IOR('f', 19, struct fscrypt_policy_v1)
#define __INT16_MAX__ 0x7fff
#define EKEYREJECTED 129
#define _BSD_SIZE_T_ 
#define BOOST_MPL_AUX_NUMERIC_CAST numeric_cast
#define BIO_C_GET_BIND_MODE 132
#define __SIZE_TYPE__ long unsigned int
#define _mm512_mask_alignr_epi32(W,U,X,Y,C) ((__m512i)__builtin_ia32_alignd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define __cpp_lib_execution 201902L
#define __UINT64_MAX__ 0xffffffffffffffffUL
#define OPENSSL_INIT_ADD_ALL_CIPHERS 0x00000004L
#define LN_dstu34311 "DSTU Gost 34311-95"
#define X509_F_NEW_DIR 153
#define NID_camellia_128_cbc 751
#define OBJ_aria_128_ofb128 OBJ_aria,4L
#define OBJ_setct_CertReqTBEX OBJ_set_ctype,78L
#define EVP_F_DES_EDE3_WRAP_CIPHER 171
#define X509_F_X509_NAME_ENTRY_SET_OBJECT 115
#define BOOST_PP_WHILE_192_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_193, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(193, s))
#define FMT_INSTANTIATION_DEF_API FMT_API
#define IN_CLASSA_NET 0xff000000
#define BOOST_PP_REPEAT_3_141(m,d) BOOST_PP_REPEAT_3_140(m, d) m(4, 140, d)
#define GOOGLE_PREDICT_BRANCH_NOT_TAKEN(x) (__builtin_expect(x, 0))
#define _POSIX_QLIMIT 1
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_101 5
#define NID_camellia_128_ccm 962
#define SSL_R_WRONG_SSL_VERSION 266
#define SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE 364
#define TCPI_OPT_SACK 2
#define SN_id_smime_ct_authData "id-smime-ct-authData"
#define _CS_XBS5_LP64_OFF64_LINTFLAGS _CS_XBS5_LP64_OFF64_LINTFLAGS
#define SSL_CTX_clear_extra_chain_certs(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS,0,NULL)
#define _SC_PRIORITIZED_IO _SC_PRIORITIZED_IO
#define RAND_R_NOT_INSTANTIATED 115
#define BOOST_PP_SEQ_SIZE_87(_) BOOST_PP_SEQ_SIZE_88
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_140(o,s,l) 0
#define _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS
#define AF_MPLS PF_MPLS
#define LN_userPassword "userPassword"
#define PEM_F_PEM_X509_INFO_READ 115
#define LN_aria_256_ofb128 "aria-256-ofb"
#define SSL_EXT_IGNORE_ON_RESUMPTION 0x0040
#define SSL_F_SSL3_OUTPUT_CERT_CHAIN 147
#define SSL_F_TLS_CLIENT_KEY_EXCHANGE_POST_WORK 354
#define _mm512_mask_alignr_epi64(W,U,X,Y,C) ((__m512i)__builtin_ia32_alignq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_143(o,s,l) 0
#define SN_setct_CapTokenData "setct-CapTokenData"
#define BOOST_PP_REPEAT_3_148(m,d) BOOST_PP_REPEAT_3_147(m, d) m(4, 147, d)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_204(p,o,s) 0
#define _GLIBCXX_ATOMIC_FUTEX_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_254(op,st,ss,sz) 0
#define BOOST_PP_REPEAT_3_149(m,d) BOOST_PP_REPEAT_3_148(m, d) m(4, 148, d)
#define OBJ_id_pda_countryOfResidence OBJ_id_pda,5L
#define BOOST_PP_REPEAT_3_250(m,d) BOOST_PP_REPEAT_3_249(m, d) m(4, 249, d)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_255(op,st,ss,sz) 0
#define NID_dnQualifier 174
#define NID_ad_ca_issuers 179
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_206(p,o,s) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_146(o,s,l) 0
#define TLS1_CK_DHE_DSS_WITH_AES_256_SHA 0x03000038
#define BOOST_PP_DEC_255 254
#define __CHAR_BIT__ 8
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_207(p,o,s) 0
#define BOOST_PP_SEQ_ELEM_201(_) BOOST_PP_SEQ_ELEM_200
#define SSL_F_TLS_PARSE_STOC_EARLY_DATA_INFO 528
#define _IOC_NRMASK ((1 << _IOC_NRBITS)-1)
#define BOOST_EXPLICIT_OPERATOR_BOOL_NOEXCEPT() BOOST_FORCEINLINE explicit operator bool () const BOOST_NOEXCEPT { return !this->operator! (); }
#define SSL3_TXT_EDH_RSA_DES_64_CBC_SHA "EDH-RSA-DES-CBC-SHA"
#define ERR_R_PASSED_INVALID_ARGUMENT (7)
#define FMT_HAS_BUILTIN(x) __has_builtin(x)
#define SN_account "account"
#define TLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384 0x0300C032
#define _LOCALE_CLASSES_H 1
#define BOOST_MPL_AUX_CONFIG_BCC_HPP_INCLUDED 
#define BOOST_PP_FOR_28(s,p,o,m) BOOST_PP_FOR_28_C(BOOST_PP_BOOL(p(29, s)), s, p, o, m)
#define BOOST_PP_SEQ_ELEM_204(_) BOOST_PP_SEQ_ELEM_203
#define BOOST_PP_FOR_29(s,p,o,m) BOOST_PP_FOR_29_C(BOOST_PP_BOOL(p(30, s)), s, p, o, m)
#define _mm_maskz_fmsub_round_sd(U,A,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_maskz (A, B, -(C), U, R)
#define EVP_R_UNSUPPORTED_KEYLENGTH 123
#define BOOST_MPL_HAS_XXX_HPP_INCLUDED 
#define _mm_maskz_fmsub_round_ss(U,A,B,C,R) (__m128) __builtin_ia32_vfmaddss3_maskz (A, B, -(C), U, R)
#define BOOST_PP_REPEAT_3_41(m,d) BOOST_PP_REPEAT_3_40(m, d) m(4, 40, d)
#define HEADER_ASYNC_H 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010101 (0)(1)(0)(1)(0)(1),
#define evutil_socket_geterror(sock) (errno)
#define _LOCALE_CLASSES_TCC 1
#define SN_idea_ecb "IDEA-ECB"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_49(op,st,ss,sz) 0
#define BOOST_PP_SEQ_ELEM_206(_) BOOST_PP_SEQ_ELEM_205
#define X509V3_set_ctx_test(ctx) X509V3_set_ctx(ctx, NULL, NULL, NULL, NULL, CTX_TEST)
#define EC_F_EC_KEY_NEW_METHOD 245
#define SO_SNDBUFFORCE 32
#define APACHE_THRIFT_ACCESSOR_t_primitive 
#define BOOST_PP_SEQ_FOLD_LEFT_48(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_48(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PREPROCESSOR_IS_BEGIN_PARENS_HPP 
#define _GLIBCXX_SSTREAM 1
#define __SUNPRO_CC_WORKAROUND_GUARD 1
#define SSL_F_SSL_RENEGOTIATE_ABBREVIATED 546
#define XN_FLAG_SPC_EQ (1 << 23)
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_SHA256 "ECDHE-ECDSA-AES128-SHA256"
#define BOOST_MPL_AUX_NA_SPEC_MAIN(i,name) template<> struct name< BOOST_MPL_AUX_NA_PARAMS(i) > { template< BOOST_MPL_PP_PARAMS(i, typename T) BOOST_MPL_PP_NESTED_DEF_PARAMS_TAIL(i, typename T, na) > struct apply : name< BOOST_MPL_PP_PARAMS(i, T) > { }; };
#define BOOST_PP_SEQ_FOLD_LEFT_I_100(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_101, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(101, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_101(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_102, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(102, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_102(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_103, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(103, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_104(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_105, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(105, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_105(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_106, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(106, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_106(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_107, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(107, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_107(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_108, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(108, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_108(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_109, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(109, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_WHILE_139_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_140, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(140, s))
#define BOOST_PP_SEQ_ELEM_57(_) BOOST_PP_SEQ_ELEM_56
#define _mm_alignr_epi8(X,Y,N) ((__m128i) __builtin_ia32_palignr128 ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(N) * 8))
#define CT_F_CTLOG_STORE_NEW 131
#define BOOST_TT_IS_MEMBER_POINTER_HPP_INCLUDED 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110010 (0)(0)(1)(1)(0)(0)(1)(0),
#define BOOST_PP_AND(p,q) BOOST_PP_BITAND(BOOST_PP_BOOL(p), BOOST_PP_BOOL(q))
#define LN_ct_precert_poison "CT Precertificate Poison"
#define SN_secp521r1 "secp521r1"
#define WCHAR_MIN __WCHAR_MIN
#define _mm256_i32scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv8si ((void *) (ADDR), (__mmask8)0xFF, (__v8si)(__m256i) (INDEX), (__v8si)(__m256i) (V1), (int) (SCALE))
#define BOOST_PP_SEQ_FOLD_LEFT_I_110(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_111, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(111, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_111(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_112, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(112, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_113(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_114, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(114, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __cpp_lib_make_from_tuple 201606
#define BOOST_PP_SEQ_FOLD_LEFT_I_115(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_116, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(116, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __cpp_constexpr 201907L
#define BOOST_MPL_AUX_CONFIG_MSVC_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_I_119(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_120, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(120, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_ELEM_59(_) BOOST_PP_SEQ_ELEM_58
#define OBJ_sect283k1 OBJ_secg_ellipticCurve,16L
#define BOOST_PP_FOR_107(s,p,o,m) BOOST_PP_FOR_107_C(BOOST_PP_BOOL(p(108, s)), s, p, o, m)
#define ASN1_R_FIRST_NUM_TOO_LARGE 122
#define BOOST_CATCH_CONST_RLVALUE(TYPE) const TYPE &
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_128(p,o,s) 0
#define PF_NETBEUI 13
#define LN_subject_alt_name "X509v3 Subject Alternative Name"
#define LN_x509Crl "x509Crl"
#define OBJ_setct_BatchAdminResData OBJ_set_ctype,41L
#define NID_id_qt_cps 164
#define BOOST_PP_FOR_108(s,p,o,m) BOOST_PP_FOR_108_C(BOOST_PP_BOOL(p(109, s)), s, p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_I_120(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_121, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(121, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __DECL_SIMD_sinf128x 
#define BOOST_PP_SEQ_FOLD_LEFT_I_125(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_126, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(126, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define ASN1_R_ASN1_PARSE_ERROR 203
#define FOLLY_DETAIL_FORWARD_REF(a) static_cast<decltype(a)&&>(a)
#define BIO_R_UNSUPPORTED_METHOD 121
#define PEM_STRING_PARAMETERS "PARAMETERS"
#define _LFS64_ASYNCHRONOUS_IO 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101 (0)(1)(0)(1),
#define __cpp_lib_shared_ptr_weak_type 201606
#define OBJ_id_it_encKeyPairTypes OBJ_id_it,3L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_151 151
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000010 (0)(1)(0)(0)(0)(0)(1)(0),
#define _LFS64_STDIO 1
#define TLS1_RFC_ECDH_anon_WITH_AES_256_CBC_SHA "TLS_ECDH_anon_WITH_AES_256_CBC_SHA"
#define BOOST_PP_FOR_186_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(187, s) BOOST_PP_IIF(c, BOOST_PP_FOR_187, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(187, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_I_130(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_131, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(131, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_132(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_133, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(133, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_133(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_134, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(134, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define RAND_R_ERROR_RETRIEVING_NONCE 111
#define BOOST_PP_SEQ_FOLD_LEFT_I_136(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_137, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(137, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_138(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_139, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(139, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_139(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_140, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(140, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_152 152
#define BOOST_PP_LIST_FOLD_LEFT_152(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_153, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(153, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110 (0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111 (0)(1)(1)(1),
#define __cpp_lib_allocator_traits_is_always_equal 201411
#define SSL_F_SSL_USE_CERTIFICATE 198
#define ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE 163
#define LOCK_WRITE 128
#define NID_secp224r1 713
#define SN_aria_128_ctr "ARIA-128-CTR"
#define _mm256_i32scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv4di ((void *) (ADDR), (__mmask8)0xFF, (__v4si)(__m128i) (INDEX), (__v4di)(__m256i) (V1), (int) (SCALE))
#define FS_TOPDIR_FL 0x00020000
#define BOOST_PP_SEQ_FOLD_LEFT_I_141(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_142, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(142, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_142(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_143, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(143, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_143(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_144, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(144, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1 178
#define BOOST_PP_SEQ_FOLD_LEFT_I_146(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_147, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(147, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_147(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_148, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(148, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_148(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_149, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(149, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_149(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_150, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(150, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _VECTOR_TCC 1
#define APACHE_THRIFT_ACCESSOR_exceptionMetadata 
#define PKCS7_STREAM 0x1000
#define BOOST_PP_WHILE_124_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_125, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(125, s))
#define MALLCTL_ARENAS_DESTROYED 4097
#define SSL3_CK_RSA_NULL_MD5 0x03000001
#define BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED 144
#define SO_DETACH_FILTER 27
#define HUGE_VALL (__builtin_huge_vall ())
#define BOOST_PP_SEQ_FOLD_LEFT_I_151(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_152, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(152, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_152(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_153, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(153, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_155(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_156, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(156, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OPENSSL_INIT_ENGINE_PADLOCK 0x00004000L
#define BOOST_PP_SEQ_FOLD_LEFT_I_159(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_160, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(160, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_156 156
#define BOOST_PP_RELATIVE_0(m) BOOST_PP_CAT(m, BOOST_PP_ITERATION_DEPTH())
#define BOOST_PREPROCESSOR_REPETITION_ENUM_BINARY_PARAMS_HPP 
#define _mm256_mask_cmp_epu64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(P), (__mmask8)(M)))
#define NID_id_smime_ct_authEnvelopedData 1059
#define THRIFT_HAS_OPTIONAL 
#define APACHE_THRIFT_ACCESSOR_drainCompleteCode 
#define _mm512_mask_i32scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv8df ((void *) (ADDR), (__mmask8) (MASK), (__v8si)(__m256i) (INDEX), (__v8df)(__m512d) (V1), (int) (SCALE))
#define _BASIC_STRING_H 1
#define EBUSY 16
#define NID_stateOrProvinceName 16
#define _mm512_mask_i32scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv16sf ((void *) (ADDR), (__mmask16) (MASK), (__v16si)(__m512i) (INDEX), (__v16sf)(__m512) (V1), (int) (SCALE))
#define __UWORD_TYPE unsigned long int
#define F_OFD_SETLK 37
#define BOOST_PP_SEQ_FOLD_LEFT_I_162(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_163, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(163, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_166(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_167, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(167, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_168(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_169, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(169, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_169(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_170, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(170, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_pbeWithSHA1AndDES_CBC "pbeWithSHA1AndDES-CBC"
#define SN_aes_192_ctr "AES-192-CTR"
#define HEADER_ASN1ERR_H 
#define __MATHDECL_VEC(type,function,suffix,args) __SIMD_DECL (__MATH_PRECNAME (function, suffix)) __MATHDECL(type, function,suffix, args)
#define BOOST_PP_WHILE_233_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_234, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(234, s))
#define BOOST_TT_HAS_NOTHROW_CONSTRUCTOR_HPP_INCLUDED 
#define MAP_POPULATE 0x08000
#define SSL_F_SSL_PEEK 270
#define BOOST_PP_SEQ_FOLD_LEFT_I_170(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_171, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(171, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_173(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_174, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(174, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_174(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_175, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(175, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_177(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_178, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(178, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_178(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_179, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(179, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX_HAVE_DLFCN_H 1
#define FOLLY_PP_DETAIL_FOR_EACH_REC_10(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_9(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_11(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_10(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_12(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_11(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_13(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_12(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_14(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_13(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_15(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_14(fn, __VA_ARGS__)
#define X509_F_X509V3_ADD_EXT 104
#define BOOST_PP_NODE_1(p) BOOST_PP_IIF(p(1), 1, 2)
#define BOOST_PP_NODE_2(p) BOOST_PP_IIF(p(2), BOOST_PP_NODE_1, BOOST_PP_NODE_3)
#define BOOST_PP_NODE_3(p) BOOST_PP_IIF(p(3), 3, 4)
#define BOOST_PP_NODE_4(p) BOOST_PP_IIF(p(4), BOOST_PP_NODE_2, BOOST_PP_NODE_6)
#define BOOST_PP_NODE_5(p) BOOST_PP_IIF(p(5), 5, 6)
#define BOOST_PP_NODE_6(p) BOOST_PP_IIF(p(6), BOOST_PP_NODE_5, BOOST_PP_NODE_7)
#define BOOST_PP_NODE_7(p) BOOST_PP_IIF(p(7), 7, 8)
#define BOOST_PP_NODE_8(p) BOOST_PP_IIF(p(8), BOOST_PP_NODE_4, BOOST_PP_NODE_12)
#define BOOST_PP_NODE_9(p) BOOST_PP_IIF(p(9), 9, 10)
#define SN_id_regInfo_utf8Pairs "id-regInfo-utf8Pairs"
#define TLS1_CK_ECDHE_PSK_WITH_CHACHA20_POLY1305 0x0300CCAC
#define BOOST_PP_SEQ_FOLD_LEFT_I_180(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_181, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(181, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __INT_FAST16_MAX__ 0x7fffffffffffffffL
#define BOOST_COPY_ASSIGN_REF(TYPE) const TYPE &
#define EVP_PKEY_CTRL_GET_DH_KDF_OID (EVP_PKEY_ALG_CTRL + 14)
#define BOOST_PP_SEQ_FOLD_LEFT_I_185(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_186, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(186, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_188(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_189, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(189, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_aes_256_cfb8 655
#define MSG_OOB MSG_OOB
#define _GLIBCXX14_CONSTEXPR constexpr
#define SHRT_MAX __SHRT_MAX__
#define _GLIBCXX_END_NAMESPACE_CXX11 }
#define BOOST_PP_SEQ_FOLD_LEFT_I_190(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_191, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(191, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX_ICONV_CONST 
#define BOOST_PP_SEQ_FOLD_LEFT_I_194(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_195, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(195, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_196(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_197, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(197, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_198(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_199, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(199, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_brainpoolP384t1 932
#define SSL_R_NO_VERIFY_COOKIE_CALLBACK 403
#define __FLT64_DIG__ 15
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_3(p,o,s) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101001 (1)(1)(1)(0)(1)(0)(0)(1),
#define IN_EXPERIMENTAL(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xe0000000)
#define NID_camellia_128_ctr 963
#define BOOST_PP_INC_201 202
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101000 (1)(0)(1)(0)(1)(0)(0)(0),
#define SSL_CTRL_SET_TMP_DH_CB 6
#define BOOST_PP_REPEAT_3_150(m,d) BOOST_PP_REPEAT_3_149(m, d) m(4, 149, d)
#define __cpp_lib_remove_cvref 201711L
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_110 6
#define _mm256_mmask_i32gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gather3siv8si ((__v8si)(__m256i) (V1OLD), (void const *) (ADDR), (__v8si)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER 330
#define __GCC_ASM_FLAG_OUTPUTS__ 1
#define BUS_MCEERR_AO BUS_MCEERR_AO
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101010 (1)(1)(1)(0)(1)(0)(1)(0),
#define EC_F_EC_POINT_POINT2BUF 281
#define OBJ_key_usage OBJ_id_ce,15L
#define _THRIFT_TAPPLICATIONEXCEPTION_H_ 1
#define __cpp_lib_map_try_emplace 201411
#define GEN_X400 3
#define _mm_rol_epi32(A,B) ((__m128i)__builtin_ia32_prold128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)-1))
#define ULLONG_WIDTH 64
#define EC_F_EC_GROUP_SET_CURVE 292
#define BOOST_PP_FOR_145_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(146, s) BOOST_PP_IIF(c, BOOST_PP_FOR_146, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(146, s), p, o, m)
#define BOOST_PP_SEQ_CAT_O_I(a,b) a ## b
#define BOOST_TT_IS_ARRAY_HPP_INCLUDED 
#define NID_iso 181
#define __glibc_c99_flexarr_available 1
#define _mm512_inserti64x2(X,Y,C) ((__m512i) __builtin_ia32_inserti64x2_512_mask ((__v8di)(__m512i) (X), (__v2di)(__m128i) (Y), (int) (C), (__v8di)(__m512i) (X), (__mmask8)-1))
#define LN_certificate_policies "X509v3 Certificate Policies"
#define _mm512_inserti64x4(X,Y,C) ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X), (__v4di)(__m256i) (Y), (int) (C), (__v8di)(__m512i)_mm512_undefined_epi32 (), (__mmask8)-1))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_211(p,o,s) 0
#define SSL_R_CONTEXT_NOT_DANE_ENABLED 167
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_151(o,s,l) 0
#define __cpp_lib_array_constexpr 201811L
#define LN_dnsName "dnsName"
#define SN_id_GostR3410_2001_TestParamSet "id-GostR3410-2001-TestParamSet"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_152(o,s,l) 0
#define TLS_CT_NUMBER 10
#define BOOST_PP_REPEAT_3_157(m,d) BOOST_PP_REPEAT_3_156(m, d) m(4, 156, d)
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS _CS_POSIX_V6_LP64_OFF64_CFLAGS
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_213(p,o,s) 0
#define SSL_R_WRONG_CIPHER_RETURNED 261
#define X509v3_KU_KEY_ENCIPHERMENT 0x0020
#define BOOST_PP_LIST_FOLD_LEFT_99(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_100, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(100, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_REPEAT_2_96(m,d) BOOST_PP_REPEAT_2_95(m, d) m(3, 95, d)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110 (0)(1)(1)(1)(0),
#define BOOST_PP_IS_EMPTY(...) BOOST_PP_DETAIL_IS_EMPTY_IIF ( BOOST_PP_VARIADIC_HAS_OPT() ) ( BOOST_PP_IS_EMPTY_OPT, BOOST_PP_IS_EMPTY_NO_OPT ) (__VA_ARGS__)
#define BOOST_PP_WHILE_14(p,o,s) BOOST_PP_WHILE_14_C(BOOST_PP_BOOL(p(15, s)), p, o, s)
#define SSL_R_NO_REQUIRED_DIGEST 324
#define BOOST_MPL_AUX_JOINT_ITER_HPP_INCLUDED 
#define COMPACT_GOOGLE_LOG_FATAL google::LogMessageFatal( __FILE__, __LINE__)
#define BOOST_PP_REPEAT_3_159(m,d) BOOST_PP_REPEAT_3_158(m, d) m(4, 158, d)
#define PRIxFAST16 __PRIPTR_PREFIX "x"
#define _POSIX2_CHARCLASS_NAME_MAX 14
#define FIZZ_UNION_COPY_CASES(X,other) case Type::X ##_E: new (&X ##_) X(other.X ##_); break;
#define BOOST_BINARY_LLU(bit_groupings) BOOST_SUFFIXED_BINARY_LITERAL( bit_groupings, LLU )
#define BOOST_PP_SEQ_SIZE_134(_) BOOST_PP_SEQ_SIZE_135
#define _GLIBCXX_NUM_CXX11_FACETS 16
#define BOOST_THROW_EXCEPTION_HPP_INCLUDED 
#define FB_ANONYMOUS_VARIABLE(str) FB_CONCATENATE(str, __COUNTER__)
#define _GLIBCXX_CDTOR_CALLABI 
#define _mm256_mmask_i32gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gather3siv4di ((__v4di)(__m256i) (V1OLD), (void const *) (ADDR), (__v4si)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SO_EE_ORIGIN_TXTIME 6
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_158(o,s,l) 0
#define FB_ONE_OR_NONE(a,...) FB_VA_GLUE(FB_THIRD, (a, ##__VA_ARGS__, a))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_159(o,s,l) 0
#define ASYNC_F_ASYNC_WAIT_CTX_SET_WAIT_FD 106
#define SN_aria_192_cbc "ARIA-192-CBC"
#define _mm_rol_epi64(A,B) ((__m128i)__builtin_ia32_prolq128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)-1))
#define PRIXFAST8 "X"
#define _GLIBCXX_OPT_HAVE_RANDOM_SFMT_OPERATOREQUAL 1
#define _mm256_cmp_epu16_mask(X,Y,P) ((__mmask16) __builtin_ia32_ucmpw256_mask ((__v16hi)(__m256i)(X), (__v16hi)(__m256i)(Y), (int)(P), (__mmask16)(-1)))
#define _mm_mask3_fmadd_round_sd(A,B,C,U,R) (__m128d) __builtin_ia32_vfmaddsd3_mask3 (A, B, C, U, R)
#define TLS1_CK_DH_DSS_WITH_AES_128_SHA 0x03000030
#define BOOST_PP_FOR_118_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(119, s) BOOST_PP_IIF(c, BOOST_PP_FOR_119, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(119, s), p, o, m)
#define _mm_mask3_fmadd_round_ss(A,B,C,U,R) (__m128) __builtin_ia32_vfmaddss3_mask3 (A, B, C, U, R)
#define SIGTTIN 21
#define PRIxFAST32 __PRIPTR_PREFIX "x"
#define RAND_R_TOO_MUCH_NONCE_REQUESTED 136
#define __PRAGMA_REDEFINE_EXTNAME 1
#define BOOST_INTRUSIVE_OPTION_CONSTANT(OPTION_NAME,TYPE,VALUE,CONSTANT_NAME) template< TYPE VALUE> struct OPTION_NAME { template<class Base> struct pack : Base { static const TYPE CONSTANT_NAME = VALUE; }; };
#define SN_id_ct_xml "id-ct-xml"
#define X509_R_PUBLIC_KEY_DECODE_ERROR 125
#define LN_shaWithRSAEncryption "shaWithRSAEncryption"
#define OBJ_freshest_crl OBJ_id_ce,46L
#define PEM_F_I2B_PVK_BIO 138
#define BOOST_PP_FOR_39(s,p,o,m) BOOST_PP_FOR_39_C(BOOST_PP_BOOL(p(40, s)), s, p, o, m)
#define _mm_ternarylogic_epi32(A,B,C,I) ((__m128i) __builtin_ia32_pternlogd128_mask ((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (__v4si)(__m128i)(C), (int)(I), (__mmask8)-1))
#define SN_id_pda_placeOfBirth "id-pda-placeOfBirth"
#define S_TYPEISMQ(buf) __S_TYPEISMQ(buf)
#define SN_aria_192_ccm "ARIA-192-CCM"
#define BOOST_PP_WHILE_2_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_3, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(3, s))
#define SSL_R_BAD_PACKET 240
#define EXPR_NEST_MAX _POSIX2_EXPR_NEST_MAX
#define OBJ_id_tc26_cipher OBJ_id_tc26_algorithms,5L
#define PF_INET6 10
#define BOOST_PP_WHILE_20_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_21, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(21, s))
#define BOOST_PP_WHILE_82_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_83, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(83, s))
#define NID_associatedName 485
#define si_fd _sifields._sigpoll.si_fd
#define NID_id_tc26_cipher_gostr3412_2015_magma 1173
#define SSL_F_SSL_WRITE_EARLY_FINISH 527
#define _mm_i64gather_pd(BASE,INDEX,SCALE) (__m128d) __builtin_ia32_gatherdiv2df ((__v2df) _mm_setzero_pd (), (double const *) (BASE), (__v2di)(__m128i) (INDEX), (__v2df) _mm_cmpeq_pd (_mm_setzero_pd (), _mm_setzero_pd ()), (int) (SCALE))
#define BOOST_MPL_AUX_VALUE_WKND(C) C
#define BOOST_PP_SEQ_SIZE_0(_) BOOST_PP_SEQ_SIZE_1
#define _mm_i64gather_ps(BASE,INDEX,SCALE) (__m128) __builtin_ia32_gatherdiv4sf ((__v4sf) _mm_setzero_pd (), (float const *) (BASE), (__v2di)(__m128i) (INDEX), (__v4sf) _mm_cmpeq_ps (_mm_setzero_ps (), _mm_setzero_ps ()), (int) (SCALE))
#define MS_MGC_VAL 0xC0ED0000
#define BOOST_PP_LIST_FOLD_RIGHT_106(o,s,l) BOOST_PP_LIST_FOLD_LEFT_106(o, s, BOOST_PP_LIST_REVERSE_D(106, l))
#define __DEC64_MANT_DIG__ 16
#define OBJ_set_certExt OBJ_id_set,7L
#define CT_F_O2I_SCT_LIST 111
#define BOOST_PP_DEC_79 78
#define BOOST_PP_FOR_227_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(228, s) BOOST_PP_IIF(c, BOOST_PP_FOR_228, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(228, s), p, o, m)
#define EVP_PKEY_CTX_set0_ecdh_kdf_ukm(ctx,p,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_UKM, plen, (void *)(p))
#define BOOST_PP_INTERCEPT_127 
#define EVP_R_ERROR_LOADING_SECTION 165
#define __CORRECT_ISO_CPP_STRINGS_H_PROTO 
#define MS_I_VERSION (1<<23)
#define BN_F_BN_DIV 107
#define PRIxFAST64 __PRI64_PREFIX "x"
#define SOCK_NONBLOCK SOCK_NONBLOCK
#define BOOST_PP_INTERCEPT_128 
#define NID_dsa_2 67
#define SN_setCext_Track2Data "setCext-Track2Data"
#define _mm512_maskz_extractf64x2_pd(U,X,C) ((__m128d) __builtin_ia32_extractf64x2_512_mask ((__v8df)(__m512d) (X), (int) (C), (__v2df)(__m128d) _mm_setzero_pd (), (__mmask8) (U)))
#define _mm_ternarylogic_epi64(A,B,C,I) ((__m128i) __builtin_ia32_pternlogq128_mask ((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (__v2di)(__m128i)(C), (int)(I), (__mmask8)-1))
#define HEADER_SSL3_H 
#define BOOST_PP_LIST_FOLD_RIGHT_109(o,s,l) BOOST_PP_LIST_FOLD_LEFT_109(o, s, BOOST_PP_LIST_REVERSE_D(109, l))
#define BIO_TYPE_FD ( 4|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
#define __DECL_SIMD_sin 
#define __GTHREAD_HAS_COND 1
#define EACCES 13
#define BOOST_PP_SEQ_ELEM_251(_) BOOST_PP_SEQ_ELEM_250
#define SN_aria_192_cfb128 "ARIA-192-CFB"
#define OBJ_id_GostR3410_94_CryptoPro_C_ParamSet OBJ_cryptopro,32L,4L
#define SN_X9_62_prime239v2 "prime239v2"
#define SN_X9_62_prime239v3 "prime239v3"
#define NID_sha512_224 1094
#define SSL_CTX_get_min_proto_version(ctx) SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MIN_PROTO_VERSION, 0, NULL)
#define TCP_MAXSEG 2
#define SSL_CTX_sess_misses(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_MISSES,0,NULL)
#define DVLOG(verboselevel) VLOG(verboselevel)
#define NID_camellia_192_cbc 752
#define SN_sbgp_ipAddrBlock "sbgp-ipAddrBlock"
#define BOOST_PP_WHILE_118_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_119, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(119, s))
#define ASN1_F_D2I_AUTOPRIVATEKEY 207
#define SN_setCext_certType "setCext-certType"
#define __DECCXX_VER_WORKAROUND_GUARD 1
#define CPP2_PROTOCOL_TBINARYPROTOCOL_H_ 1
#define BOOST_PREPROCESSOR_TUPLE_ELEM_HPP 
#define EC_F_ECDH_CMS_SET_SHARED_INFO 239
#define BN_F_BN_BLINDING_UPDATE 103
#define sk_set OPENSSL_sk_set
#define SOL_DCCP 269
#define NID_camellia_192_ccm 966
#define MOD_MICRO ADJ_MICRO
#define NID_supportedAlgorithms 890
#define SN_id_GostR3410_94_TestParamSet "id-GostR3410-94-TestParamSet"
#define SN_issuing_distribution_point "issuingDistributionPoint"
#define _XOPEN_IOV_MAX _POSIX_UIO_MAXIOV
#define TLS1_FLAGS_STATELESS 0x0800
#define __GXX_MERGED_TYPEINFO_NAMES 0
#define BIO_F_BIO_READ_EX 105
#define BOOST_PP_FOR_78_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(79, s) BOOST_PP_IIF(c, BOOST_PP_FOR_79, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(79, s), p, o, m)
#define __STDCPP_DEFAULT_NEW_ALIGNMENT__ 16
#define EVP_CIPHER_CTX_mode(c) EVP_CIPHER_mode(EVP_CIPHER_CTX_cipher(c))
#define BOOST_PP_SEQ_ELEM(i,seq) BOOST_PP_SEQ_ELEM_I(i, seq)
#define X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT 18
#define SSL_R_TLSV1_ALERT_NO_RENEGOTIATION 1100
#define TLS1_CK_RSA_PSK_WITH_NULL_SHA384 0x030000B9
#define NID_sha512_256 1095
#define BOOST_PP_WHILE_190(p,o,s) BOOST_PP_WHILE_190_C(BOOST_PP_BOOL(p(191, s)), p, o, s)
#define EVP_PKEY_CTX_set_dh_nid(ctx,nid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN | EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_DH_NID, nid, NULL)
#define _IOLBF 1
#define NID_id_smime_aa_ets_certValues 234
#define NID_kx_ecdhe 1038
#define MOD_CLKB ADJ_TICK
#define SSL_CTX_set1_client_certificate_types(ctx,clist,clistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CLIENT_CERT_TYPES,clistlen, (char *)(clist))
#define BOOST_PP_TUPLE_TO_LIST_33(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, BOOST_PP_NIL)))))))))))))))))))))))))))))))))
#define EVP_MD_FLAG_XOF 0x0002
#define __cpp_lib_constexpr_algorithms 201806L
#define WIFSIGNALED(status) __WIFSIGNALED (status)
#define ERR_R_FATAL 64
#define _GLIBCXX_HAVE_LDEXPF 1
#define _GLIBCXX_HAVE_LDEXPL 1
#define BOOST_PP_WHILE_193(p,o,s) BOOST_PP_WHILE_193_C(BOOST_PP_BOOL(p(194, s)), p, o, s)
#define SSL_R_BAD_DIGEST_LENGTH 111
#define EVENT__SIZEOF_INT 4
#define __SSE2__ 1
#define OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik,1L
#define NID_sect239k1 728
#define BOOST_PP_SEQ_FOLD_LEFT_172(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_172(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL3_CT_RSA_SIGN 1
#define PEM_STRING_SSL_SESSION "SSL SESSION PARAMETERS"
#define NID_Independent 667
#define __EXCEPTIONS 1
#define BOOST_MPL_PP_REPEAT(n,f,param) BOOST_PP_REPEAT(n,f,param)
#define NID_dITRedirect 500
#define LN_ad_OCSP "OCSP"
#define _CMP_NLE_UQ 0x16
#define SN_camellia_256_gcm "CAMELLIA-256-GCM"
#define BIO_TYPE_MD ( 8|BIO_TYPE_FILTER)
#define OBJ_pkcs9_unstructuredName OBJ_pkcs9,2L
#define NID_id_pkix1_explicit_88 269
#define FS_XFLAG_NOATIME 0x00000040
#define SCM_RIGHTS SCM_RIGHTS
#define _mm512_maskz_shuffle_pd(U,X,Y,C) ((__m512d)__builtin_ia32_shufpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))
#define NID_id_hex_partial_message 507
#define BIO_set_conn_hostname(b,name) BIO_ctrl(b,BIO_C_SET_CONNECT,0, (char *)(name))
#define _PSTL_GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)
#define SA_NOCLDSTOP 1
#define _mm512_maskz_shuffle_ps(U,X,Y,C) ((__m512)__builtin_ia32_shufps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U)))
#define __cpp_lib_constexpr_dynamic_alloc 201907L
#define CRYPTO_EX_INDEX_DSA 7
#define NID_setct_CredRevResTBE 591
#define _THRIFT_TRANSPORT_TTRANSPORTEXCEPTION_H_ 1
#define BOOST_INTRUSIVE_DETAIL_MINIMAL_LESS_EQUAL_HEADER_HPP 
#define NID_id_pkix1_explicit_93 271
#define BOOST_MPL_LIST_AUX_POP_FRONT_HPP_INCLUDED 
#define __UINTMAX_MAX__ 0xffffffffffffffffUL
#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 "DHE-DSS-CAMELLIA256-SHA256"
#define BOOST_PP_SEQ_FOLD_LEFT_I_10(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_11, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(11, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define RSA_R_INVALID_MESSAGE_LENGTH 131
#define BOOST_PP_SEQ_FOLD_LEFT_I_13(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_14, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(14, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_14(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_15, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(15, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_15(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_16, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(16, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_F_SSL_CTX_SET_ALPN_PROTOS 343
#define BOOST_PP_SEQ_FOLD_LEFT_I_17(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_18, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(18, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define ASN1_R_ILLEGAL_OBJECT 183
#define NID_id_tc26_gost_3410_2012_256_paramSetA 1148
#define NID_id_tc26_gost_3410_2012_256_paramSetD 1186
#define _mm256_mask_extractf64x2_pd(W,U,X,C) ((__m128d) __builtin_ia32_extractf64x2_256_mask ((__v4df)(__m256d) (X), (int) (C), (__v2df)(__m128d) (W), (__mmask8) (U)))
#define _WCHAR_T 
#define CRL_REASON_AA_COMPROMISE 10
#define EVENT__HAVE_GETIFADDRS 1
#define SSL_R_BAD_PSK_IDENTITY 114
#define OBJ_sha OBJ_algorithm,18L
#define BOOST_MPL_LIST_AUX_CLEAR_HPP_INCLUDED 
#define BOOST_MPL_PP_DEF_PARAMS_TAIL_IMPL(i,param,value_func) BOOST_PP_REPEAT( BOOST_PP_SUB_D(1, BOOST_MPL_LIMIT_METAFUNCTION_ARITY, i) , BOOST_MPL_PP_AUX_TAIL_PARAM_FUNC , (i, param, value_func) )
#define BOOST_PP_SEQ_FOLD_LEFT_I_22(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_23, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(23, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _mm512_rol_epi32(A,B) ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_undefined_epi32 (), (__mmask16)(-1)))
#define BOOST_PP_SEQ_FOLD_LEFT_I_27(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_28, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(28, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_29(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_30, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(30, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_sshClient OBJ_id_kp,21L
#define BIO_get_info_callback(b,cbp) (int)BIO_ctrl(b,BIO_CTRL_GET_CALLBACK,0, cbp)
#define OBJ_id_cmc_popLinkRandom OBJ_id_cmc,22L
#define _BITS_SIGSTACK_H 1
#define TLS1_TXT_ECDH_ECDSA_WITH_DES_192_CBC3_SHA "ECDH-ECDSA-DES-CBC3-SHA"
#define EVP_PKEY_CTX_set_signature_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, -1, EVP_PKEY_OP_TYPE_SIG, EVP_PKEY_CTRL_MD, 0, (void *)(md))
#define ASN1_R_EXPECTING_AN_INTEGER 115
#define BOOST_PP_FOR_153_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(154, s) BOOST_PP_IIF(c, BOOST_PP_FOR_154, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(154, s), p, o, m)
#define M_2_PI 0.63661977236758134308
#define BOOST_PP_SEQ_FOLD_LEFT_I_32(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_33, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(33, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_36(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_37, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(37, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(_Iter) std::__make_move_if_noexcept_iterator(_Iter)
#define BOOST_PP_SEQ_FOLD_LEFT_I_38(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_39, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(39, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define PF_AX25 3
#define _ADXINTRIN_H_INCLUDED 
#define SN_id_tc26_gost_3410_2012_256_constants "id-tc26-gost-3410-2012-256-constants"
#define BOOST_PP_REPEAT_3_165(m,d) BOOST_PP_REPEAT_3_164(m, d) m(4, 164, d)
#define __MATHCALL_VEC(function,suffix,args) __SIMD_DECL (__MATH_PRECNAME (function, suffix)) __MATHCALL (function, suffix, args)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_221(p,o,s) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_1(o,s,l) 0
#define BOOST_TEMPLATED_STREAM_ALLOC(A) A
#define OBJ_sinfo_access OBJ_id_pe,11L
#define DH_F_DH_PARAM_DECODE 107
#define BOOST_PP_SEQ_FOLD_LEFT_I_43(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_44, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(44, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __WCHAR_TYPE__ int
#define BOOST_PP_SEQ_FOLD_LEFT_I_46(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_47, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(47, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_48(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_49, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(49, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SMIME_DETACHED PKCS7_DETACHED
#define __SIZEOF_FLOAT__ 4
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_208(o,s,l) 0
#define SSL_F_SSL_HANDSHAKE_HASH 560
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_3(o,s,l) 0
#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"
#define BOOST_PP_REPEAT_3_168(m,d) BOOST_PP_REPEAT_3_167(m, d) m(4, 167, d)
#define OBJ_id_aes256_wrap OBJ_aes,45L
#define X509_V_FLAG_INHIBIT_ANY 0x200
#define LN_sha1WithRSA "sha1WithRSA"
#define NID_id_pkinit 1031
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_164(o,s,l) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_225(p,o,s) 0
#define BOOST_PP_FOR_41(s,p,o,m) BOOST_PP_FOR_41_C(BOOST_PP_BOOL(p(42, s)), s, p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_I_52(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_53, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(53, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_54(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_55, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(55, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define TLS1_RFC_DHE_DSS_WITH_AES_256_SHA256 "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"
#define BOOST_PP_SEQ_FOLD_LEFT_I_57(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_58, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(58, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_6(o,s,l) 0
#define BOOST_PP_FOR_42(s,p,o,m) BOOST_PP_FOR_42_C(BOOST_PP_BOOL(p(43, s)), s, p, o, m)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_7(o,s,l) 0
#define ASN1_R_STRING_TOO_SHORT 152
#define __pic__ 2
#define SN_netscape_data_type "nsDataType"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_168(o,s,l) 0
#define X509V3_F_TREE_INIT 172
#define SN_des_cfb1 "DES-CFB1"
#define _GLIBCXX_OPT_HAVE_RANDOM_SFMT_GEN_READ 1
#define SN_des_cfb8 "DES-CFB8"
#define THRIFT_PROTOCOL_TPROTOCOLTYPES_H_ 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_169(o,s,l) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_60(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_61, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(61, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_61(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_62, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(62, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_62(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_63, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(63, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_63(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_64, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(64, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_64(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_65, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(65, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_65(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_66, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(66, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_66(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_67, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(67, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_sm3 OBJ_sm_scheme,401L
#define NID_zlib_compression 125
#define SN_aria_192_ctr "ARIA-192-CTR"
#define BOOST_PP_WHILE_187(p,o,s) BOOST_PP_WHILE_187_C(BOOST_PP_BOOL(p(188, s)), p, o, s)
#define _mm512_shldi_epi16(A,B,C) ((__m512i) __builtin_ia32_vpshld_v32hi ((__v32hi)(__m512i)(A), (__v32hi)(__m512i)(B),(int)(C)))
#define timeout_set(ev,cb,arg) event_set((ev), -1, 0, (cb), (arg))
#define SSL_F_SSL_CTX_USE_SERVERINFO 336
#define __cpp_concepts 201907L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01100010 (0)(1)(1)(0)(0)(0)(1)(0),
#define BOOST_PP_SEQ_FOLD_LEFT_I_70(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_71, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(71, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_id_on_permanentIdentifier OBJ_id_on,3L
#define BOOST_PP_SEQ_FOLD_LEFT_I_75(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_76, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(76, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX_USE_C99 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_79(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_80, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(80, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_id_it_keyPairParamReq 307
#define __O_DIRECT 040000
#define FS_ENCRYPTION_MODE_AES_256_GCM 2
#define V_ASN1_OTHER -3
#define TLS1_TXT_ADH_WITH_SEED_SHA "ADH-SEED-SHA"
#define BOOST_PP_SEQ_ELEM_64(_) BOOST_PP_SEQ_ELEM_63
#define EVBUF_FS_DISABLE_MMAP 0x02
#define BOOST_OPTIONAL_DETAIL_OPTIONAL_CONFIG_AJK_28JAN2015_HPP 
#define __USE_POSIX 1
#define BOOST_MOVE_DETAIL_META_UTILS_CORE_HPP 
#define SN_certificate_issuer "certificateIssuer"
#define OBJ_ms_efs 1L,3L,6L,1L,4L,1L,311L,10L,3L,4L
#define NID_id_it_origPKIMessage 312
#define X509_F_X509_STORE_NEW 158
#define BOOST_VARIANT_VARIANT_FWD_HPP 
#define SN_id_smime_cti_ets_proofOfCreation "id-smime-cti-ets-proofOfCreation"
#define APACHE_THRIFT_ACCESSOR_queueMetadata 
#define BOOST_PP_DEC_217 216
#define X509_V_FLAG_SUITEB_128_LOS_ONLY 0x10000
#define BOOST_PP_SEQ_FOLD_LEFT_I_83(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_84, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(84, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_84(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_85, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(85, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_85(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_86, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(86, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BUFSIZ 8192
#define BOOST_PP_SEQ_FOLD_LEFT_I_87(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_88, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(88, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_88(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_89, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(89, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_89(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_90, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(90, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _AVX512VP2INTERSECTINTRIN_H_INCLUDED 
#define SN_id_GostR3411_94_TestParamSet "id-GostR3411-94-TestParamSet"
#define EVENT__HAVE_STRINGS_H 1
#define ASN1_R_WRONG_INTEGER_TYPE 225
#define _mm256_mask_ror_epi64(W,U,A,B) ((__m256i)__builtin_ia32_prorq256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)(__m256i)(W), (__mmask8)(U)))
#define FS_NOTAIL_FL 0x00008000
#define NID_des_ede_ecb 32
#define BOOST_PP_SEQ_ELEM_219(_) BOOST_PP_SEQ_ELEM_218
#define BOOST_PP_REPEAT_3_55(m,d) BOOST_PP_REPEAT_3_54(m, d) m(4, 54, d)
#define BOOST_PP_FOR_114(s,p,o,m) BOOST_PP_FOR_114_C(BOOST_PP_BOOL(p(115, s)), s, p, o, m)
#define SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet "id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet"
#define __FLT_MAX_10_EXP__ 38
#define NID_X9_62_characteristic_two_field 407
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_193(o,s,l) 0
#define BOOST_PP_SEQ_ELEM_67(_) BOOST_PP_SEQ_ELEM_66
#define BOOST_PP_SEQ_FOLD_LEFT_I_93(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_94, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(94, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_94(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_95, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(95, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define TYPEDEF_D2I_OF(type) typedef type *d2i_of_ ##type(type **,const unsigned char **,long)
#define BOOST_MPL_AUX_COMMON_NAME_WKND_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_I_98(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_99, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(99, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EVP_R_KEYGEN_FAILURE 120
#define _mm512_maskz_cvt_roundps_epi32(U,A,B) ((__m512i)__builtin_ia32_cvtps2dq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))
#define BOOST_PP_REPEAT_3_56(m,d) BOOST_PP_REPEAT_3_55(m, d) m(4, 55, d)
#define CLONE_UNTRACED 0x00800000
#define M_LN10 2.30258509299404568402
#define FMT_HAS_FEATURE(x) 0
#define SN_sect571k1 "sect571k1"
#define FS_IOC_SETFLAGS _IOW('f', 2, long)
#define OBJ_des_cfb64 OBJ_algorithm,9L
#define BOOST_PP_REPEAT_FROM_TO_1ST BOOST_PP_REPEAT_FROM_TO_1
#define BOOST_PP_SEQ_ELEM_69(_) BOOST_PP_SEQ_ELEM_68
#define _GLIBCXX_HAVE_STRTOF 1
#define AF_QIPCRTR PF_QIPCRTR
#define EC_R_INVALID_OUTPUT_LENGTH 161
#define TLS1_RFC_DHE_RSA_WITH_SEED_SHA "TLS_DHE_RSA_WITH_SEED_CBC_SHA"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_197(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_160(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_161, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(161, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA 0x03000094
#define SSL_R_REQUEST_SENT 286
#define EVP_R_EXPECTING_AN_RSA_KEY 127
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011000 (1)(0)(1)(1)(0)(0)(0),
#define _mm512_ror_epi64(A,B) ((__m512i)__builtin_ia32_prorq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_undefined_epi32 (), (__mmask8)(-1)))
#define M_LN2l 0.693147180559945309417232121458176568L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_198(o,s,l) 0
#define __S16_TYPE short int
#define OBJ_secp160k1 OBJ_secg_ellipticCurve,9L
#define APACHE_THRIFT_ACCESSOR_structs 
#define BOOST_PP_VARIADIC_ELEM_28(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,...) e28
#define _mm512_maskz_cvt_roundps_epi64(U,A,B) ((__m512i)__builtin_ia32_cvtps2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define S_ISSOCK(mode) __S_ISTYPE((mode), __S_IFSOCK)
#define __TIMESIZE __WORDSIZE
#define NID_camellia_192_ctr 967
#define __GCC_ATOMIC_CHAR8_T_LOCK_FREE 2
#define SSL_CTRL_GET_FLAGS 13
#define POLLIN 0x001
#define ENGINEerr(f,r) ERR_PUT_error(ERR_LIB_ENGINE,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_PP_REPEAT_1_10(m,d) BOOST_PP_REPEAT_1_9(m, d) m(2, 9, d)
#define BOOST_PP_REPEAT_1_11(m,d) BOOST_PP_REPEAT_1_10(m, d) m(2, 10, d)
#define OBJ_X9_62_prime256v1 OBJ_X9_62_primeCurve,7L
#define BOOST_PP_REPEAT_1_13(m,d) BOOST_PP_REPEAT_1_12(m, d) m(2, 12, d)
#define BOOST_PP_REPEAT_1_14(m,d) BOOST_PP_REPEAT_1_13(m, d) m(2, 13, d)
#define BOOST_PP_REPEAT_1_15(m,d) BOOST_PP_REPEAT_1_14(m, d) m(2, 14, d)
#define BOOST_PP_REPEAT_1_17(m,d) BOOST_PP_REPEAT_1_16(m, d) m(2, 16, d)
#define BOOST_PP_REPEAT_1_18(m,d) BOOST_PP_REPEAT_1_17(m, d) m(2, 17, d)
#define BOOST_PP_REPEAT_1_19(m,d) BOOST_PP_REPEAT_1_18(m, d) m(2, 18, d)
#define MOUNT_ATTR_NOATIME 0x00000010
#define IP_PMTUDISC_OMIT 5
#define EVP_PKEY_OP_VERIFYRECOVER (1<<5)
#define _CMP_UNORD_Q 0x03
#define BOOST_PP_REPEAT_1_20(m,d) BOOST_PP_REPEAT_1_19(m, d) m(2, 19, d)
#define BOOST_PP_REPEAT_1_21(m,d) BOOST_PP_REPEAT_1_20(m, d) m(2, 20, d)
#define BOOST_PP_REPEAT_1_22(m,d) BOOST_PP_REPEAT_1_21(m, d) m(2, 21, d)
#define SSL_CTRL_BUILD_CERT_CHAIN 105
#define BOOST_PP_REPEAT_1_25(m,d) BOOST_PP_REPEAT_1_24(m, d) m(2, 24, d)
#define BOOST_PP_REPEAT_1_28(m,d) BOOST_PP_REPEAT_1_27(m, d) m(2, 27, d)
#define BOOST_PP_REPEAT_1_29(m,d) BOOST_PP_REPEAT_1_28(m, d) m(2, 28, d)
#define BIO_F_ADDRINFO_WRAP 148
#define BOOST_PP_BOOL_160 1
#define X509_V_ERR_CERT_REVOKED 23
#define _mm512_maskz_range_pd(U,A,B,C) ((__m512d) __builtin_ia32_rangepd512_mask ((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd (), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11111110 (1)(1)(1)(1)(1)(1)(1)(0),
#define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ 0x0100
#define _mm512_maskz_range_ps(U,A,B,C) ((__m512) __builtin_ia32_rangeps512_mask ((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps (), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_1END_BIT 
#define PEM_R_BIO_WRITE_FAILURE 118
#define _SC_THREAD_PRIORITY_SCHEDULING _SC_THREAD_PRIORITY_SCHEDULING
#define BOOST_PP_REPEAT_1_30(m,d) BOOST_PP_REPEAT_1_29(m, d) m(2, 29, d)
#define BOOST_PP_REPEAT_1_31(m,d) BOOST_PP_REPEAT_1_30(m, d) m(2, 30, d)
#define BOOST_PP_REPEAT_1_32(m,d) BOOST_PP_REPEAT_1_31(m, d) m(2, 31, d)
#define BOOST_PP_REPEAT_1_33(m,d) BOOST_PP_REPEAT_1_32(m, d) m(2, 32, d)
#define BOOST_PP_REPEAT_1_34(m,d) BOOST_PP_REPEAT_1_33(m, d) m(2, 33, d)
#define ASN1_R_WRONG_TAG 168
#define BOOST_PP_REPEAT_1_36(m,d) BOOST_PP_REPEAT_1_35(m, d) m(2, 35, d)
#define NID_aes_256_ecb 426
#define BOOST_PP_REPEAT_1_39(m,d) BOOST_PP_REPEAT_1_38(m, d) m(2, 38, d)
#define ___int_size_t_h 
#define _POSIX2_EXPR_NEST_MAX 32
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_169 169
#define NID_siphash 1062
#define MSG_ERRQUEUE MSG_ERRQUEUE
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffL
#define _GLIBCXX_HAVE_DIRENT_H 1
#define BOOST_PP_REPEAT_1_41(m,d) BOOST_PP_REPEAT_1_40(m, d) m(2, 40, d)
#define BOOST_PP_REPEAT_1_44(m,d) BOOST_PP_REPEAT_1_43(m, d) m(2, 43, d)
#define BOOST_PP_REPEAT_1_45(m,d) BOOST_PP_REPEAT_1_44(m, d) m(2, 44, d)
#define NID_id_mod_crmf 273
#define BOOST_PP_REPEAT_1_49(m,d) BOOST_PP_REPEAT_1_48(m, d) m(2, 48, d)
#define __clock_t_defined 1
#define BOOST_ENABLE_IF_23022003THW_HPP 
#define BOOST_PP_REPEAT_3_101(m,d) BOOST_PP_REPEAT_3_100(m, d) m(4, 100, d)
#define __GLIBC_MINOR__ 31
#define NID_auth_psk 1048
#define OBJ_ipsec_IKE OBJ_id_kp,17L
#define __SSE__ 1
#define SCNu16 "hu"
#define SSL_F_SSL_WRITE_EX 433
#define SSL_F_SSL_DERIVE 590
#define BOOST_PP_REPEAT_1_52(m,d) BOOST_PP_REPEAT_1_51(m, d) m(2, 51, d)
#define AF_ASH PF_ASH
#define BOOST_PP_REPEAT_1_55(m,d) BOOST_PP_REPEAT_1_54(m, d) m(2, 54, d)
#define FNDELAY O_NDELAY
#define BOOST_PP_REPEAT_1_58(m,d) BOOST_PP_REPEAT_1_57(m, d) m(2, 57, d)
#define BOOST_PP_REPEAT_1_59(m,d) BOOST_PP_REPEAT_1_58(m, d) m(2, 58, d)
#define POLL_PRI POLL_PRI
#define BOOST_MPL_AUX_NA_HPP_INCLUDED 
#define OBJ_aria_256_ccm OBJ_aria,39L
#define FMT_USE_INLINE_NAMESPACES 1
#define _GLIBCXX_HAVE_LOGF 1
#define OBJ_pkInitKDC OBJ_id_pkinit,5L
#define _GLIBCXX_HAVE_LOGL 1
#define OPENSSL_NO_EXTERNAL_TESTS 
#define EVUTIL_EAI_ADDRFAMILY EAI_ADDRFAMILY
#define SSL_get_time(a) SSL_SESSION_get_time(a)
#define TLS1_CK_RSA_WITH_AES_128_SHA256 0x0300003C
#define FS_NOCOMP_FL 0x00000400
#define BOOST_PP_REPEAT_1_60(m,d) BOOST_PP_REPEAT_1_59(m, d) m(2, 59, d)
#define BOOST_PP_REPEAT_1_61(m,d) BOOST_PP_REPEAT_1_60(m, d) m(2, 60, d)
#define BOOST_PP_REPEAT_1_62(m,d) BOOST_PP_REPEAT_1_61(m, d) m(2, 61, d)
#define BOOST_PP_REPEAT_1_63(m,d) BOOST_PP_REPEAT_1_62(m, d) m(2, 62, d)
#define BOOST_PP_REPEAT_1_64(m,d) BOOST_PP_REPEAT_1_63(m, d) m(2, 63, d)
#define BOOST_PP_REPEAT_1_65(m,d) BOOST_PP_REPEAT_1_64(m, d) m(2, 64, d)
#define X509_F_X509_VERIFY_PARAM_NEW 159
#define BOOST_PP_REPEAT_1_67(m,d) BOOST_PP_REPEAT_1_66(m, d) m(2, 66, d)
#define _mm512_sub_round_pd(A,B,C) (__m512d)__builtin_ia32_subpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)
#define NID_cast5_ofb64 111
#define BN_F_BN_RAND_RANGE 122
#define _mm512_sub_round_ps(A,B,C) (__m512)__builtin_ia32_subps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)
#define RAND_R_ENTROPY_INPUT_TOO_LONG 106
#define NID_id_GostR3410_94_bBis 848
#define IPV6_RECVPKTINFO 49
#define OBJ_secp160r1 OBJ_secg_ellipticCurve,8L
#define OBJ_secp160r2 OBJ_secg_ellipticCurve,30L
#define SSL_want_client_hello_cb(s) (SSL_want(s) == SSL_CLIENT_HELLO_CB)
#define _mm_getmant_pd(X,B,C) ((__m128d) __builtin_ia32_getmantpd128_mask ((__v2df)(__m128d) (X), (int)(((C)<<2) | (B)), (__v2df)(__m128d)_mm_setzero_pd (), (__mmask8)-1))
#define SCNu32 "u"
#define _mm512_mask_cvtt_roundpd_epu32(W,U,A,B) ((__m256i)__builtin_ia32_cvttpd2udq512_mask(A, (__v8si)(W), U, B))
#define __cpp_lib_is_invocable 201703
#define stdout stdout
#define BOOST_PP_WHILE_158_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_159, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(159, s))
#define BOOST_MPL_MINUS_HPP_INCLUDED 
#define _mm_getmant_ps(X,B,C) ((__m128) __builtin_ia32_getmantps128_mask ((__v4sf)(__m128) (X), (int)(((C)<<2) | (B)), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)-1))
#define BOOST_PP_REPEAT_1_71(m,d) BOOST_PP_REPEAT_1_70(m, d) m(2, 70, d)
#define BOOST_PP_REPEAT_1_73(m,d) BOOST_PP_REPEAT_1_72(m, d) m(2, 72, d)
#define BOOST_PP_REPEAT_1_74(m,d) BOOST_PP_REPEAT_1_73(m, d) m(2, 73, d)
#define BOOST_PP_REPEAT_1_76(m,d) BOOST_PP_REPEAT_1_75(m, d) m(2, 75, d)
#define NL_SETMAX INT_MAX
#define SYNC_FILE_RANGE_WAIT_AFTER 4
#define COMP_zlib_cleanup() while(0) continue
#define NID_id_mod_kea_profile_88 275
#define LOCK_EX 2
#define SSL_F_SSL_DANE_ENABLE 395
#define BOOST_PP_REPEAT_1_80(m,d) BOOST_PP_REPEAT_1_79(m, d) m(2, 79, d)
#define BOOST_PP_REPEAT_1_81(m,d) BOOST_PP_REPEAT_1_80(m, d) m(2, 80, d)
#define BOOST_PP_REPEAT_1_82(m,d) BOOST_PP_REPEAT_1_81(m, d) m(2, 81, d)
#define BOOST_PP_REPEAT_1_83(m,d) BOOST_PP_REPEAT_1_82(m, d) m(2, 82, d)
#define BOOST_PP_REPEAT_1_84(m,d) BOOST_PP_REPEAT_1_83(m, d) m(2, 83, d)
#define BOOST_PP_REPEAT_1_85(m,d) BOOST_PP_REPEAT_1_84(m, d) m(2, 84, d)
#define BOOST_PP_REPEAT_1_87(m,d) BOOST_PP_REPEAT_1_86(m, d) m(2, 86, d)
#define BOOST_PP_REPEAT_1_89(m,d) BOOST_PP_REPEAT_1_88(m, d) m(2, 88, d)
#define TLS_DEFAULT_CIPHERSUITES "TLS_AES_256_GCM_SHA384:" "TLS_CHACHA20_POLY1305_SHA256:" "TLS_AES_128_GCM_SHA256"
#define BOOST_INTRUSIVE_DETAIL_UNCAST_HPP 
#define BOOST_PP_NODE_ENTRY_16(p) BOOST_PP_NODE_8(p)(p)(p)(p)
#define BOOST_PP_REPEAT_FROM_TO_3RD BOOST_PP_REPEAT_FROM_TO_3
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_55(op,st,ss,sz) 0
#define __ASSERT_VOID_CAST static_cast<void>
#define BOOST_PP_REPEAT_1_90(m,d) BOOST_PP_REPEAT_1_89(m, d) m(2, 89, d)
#define BOOST_PP_REPEAT_1_91(m,d) BOOST_PP_REPEAT_1_90(m, d) m(2, 90, d)
#define SN_setCext_TokenIdentifier "setCext-TokenIdentifier"
#define BOOST_PP_REPEAT_1_95(m,d) BOOST_PP_REPEAT_1_94(m, d) m(2, 94, d)
#define BOOST_PP_REPEAT_1_96(m,d) BOOST_PP_REPEAT_1_95(m, d) m(2, 95, d)
#define BOOST_PP_REPEAT_1_97(m,d) BOOST_PP_REPEAT_1_96(m, d) m(2, 96, d)
#define BOOST_PP_REPEAT_1_98(m,d) BOOST_PP_REPEAT_1_97(m, d) m(2, 97, d)
#define BOOST_PP_REPEAT_1_99(m,d) BOOST_PP_REPEAT_1_98(m, d) m(2, 98, d)
#define LN_pagerTelephoneNumber "pagerTelephoneNumber"
#define _SC_2_FORT_RUN _SC_2_FORT_RUN
#define TLSEXT_curve_P_384 24
#define BOOST_PP_INTERCEPT_139 
#define _mm_getmant_sd(X,Y,C,D) ((__m128d)__builtin_ia32_getmantsd_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), _MM_FROUND_CUR_DIRECTION))
#define PEM_F_D2I_PKCS8PRIVATEKEY_BIO 120
#define SCNu64 __PRI64_PREFIX "u"
#define _mm512_mask_cvtt_roundpd_epu64(W,U,A,B) ((__m512i)__builtin_ia32_cvttpd2uqq512_mask ((A), (__v8di)(W), (U), (B)))
#define BOOST_PP_REPEAT_3_176(m,d) BOOST_PP_REPEAT_3_175(m, d) m(4, 175, d)
#define TLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384 0x030000A5
#define _mm_getmant_ss(X,Y,C,D) ((__m128)__builtin_ia32_getmantss_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), _MM_FROUND_CUR_DIRECTION))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100010 (1)(0)(1)(0)(0)(0)(1)(0),
#define ev_socklen_t socklen_t
#define BOOST_PP_FOR_45_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(46, s) BOOST_PP_IIF(c, BOOST_PP_FOR_46, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(46, s), p, o, m)
#define _CXXABI_H 1
#define CONF_F_GET_NEXT_FILE 107
#define EVP_R_ILLEGAL_SCRYPT_PARAMETERS 171
#define _mm_range_round_ss(A,B,C,R) ((__m128) __builtin_ia32_rangess128_mask_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (), (__mmask8) -1, (R)))
#define BOOST_PP_REPEAT_3_178(m,d) BOOST_PP_REPEAT_3_177(m, d) m(4, 177, d)
#define SN_dstu28147 "dstu28147"
#define BOOST_PP_REPEAT_3_179(m,d) BOOST_PP_REPEAT_3_178(m, d) m(4, 178, d)
#define _SIZET_ 
#define ASN1_R_SIG_INVALID_MIME_TYPE 213
#define _PC_ALLOC_SIZE_MIN _PC_ALLOC_SIZE_MIN
#define NID_id_cmc_dataReturn 330
#define _LP64 1
#define EVP_F_EVP_PKEY_PARAMGEN 148
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_176(o,s,l) 0
#define _GLIBCXX_END_NAMESPACE_LDBL 
#define TLS1_TXT_DHE_DSS_WITH_AES_256_GCM_SHA384 "DHE-DSS-AES256-GCM-SHA384"
#define FOLLY_SSE_PREREQ(major,minor) (FOLLY_SSE > major || FOLLY_SSE == major && FOLLY_SSE_MINOR >= minor)
#define si_call_addr _sifields._sigsys._call_addr
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_177(o,s,l) 0
#define SN_sm4_cfb1 "SM4-CFB1"
#define BOOST_PP_FOR_53(s,p,o,m) BOOST_PP_FOR_53_C(BOOST_PP_BOOL(p(54, s)), s, p, o, m)
#define _XTESTINTRIN_H_INCLUDED 
#define TLS1_TXT_RSA_WITH_AES_128_GCM_SHA256 "AES128-GCM-SHA256"
#define _GLIBCXX_HAVE_CEILF 1
#define REG_R8 REG_R8
#define _GLIBCXX_HAVE_CEILL 1
#define NID_kx_gost 1045
#define SN_id_Gost28147_89_CryptoPro_B_ParamSet "id-Gost28147-89-CryptoPro-B-ParamSet"
#define IPPROTO_NONE IPPROTO_NONE
#define PEM_F_PEM_GET_EVP_CIPHER_INFO 107
#define CRYPTO_THREADID_set_callback(threadid_func) (0)
#define SSL_R_NO_SHARED_GROUPS 410
#define SSL3_RFC_RSA_IDEA_128_SHA "TLS_RSA_WITH_IDEA_CBC_SHA"
#define X509V3_R_INVALID_NULL_VALUE 109
#define LN_id_tc26_gost_28147_param_Z "GOST 28147-89 TC26 parameter set"
#define __stub_stty 
#define OBJ_SNMPv2 OBJ_internet,6L
#define EVP_GCM_TLS_EXPLICIT_IV_LEN 8
#define TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDH-ECDSA-CAMELLIA128-SHA256"
#define __ASM_GENERIC_SOCKIOS_H 
#define _AVX512VLDQINTRIN_H_INCLUDED 
#define BIO_get_bind_mode(b) BIO_ctrl(b,BIO_C_GET_BIND_MODE,0,NULL)
#define MAP_HUGE_MASK 0x3f
#define EV_READ 0x02
#define SN_auth_any "AuthANY"
#define BOOST_PP_SEQ_FOLD_LEFT_58(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_58(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_id_smime_ct_DVCSRequestData 210
#define EAI_ADDRFAMILY -9
#define _PTHREAD_H 1
#define SSL_TLSEXT_ERR_NOACK 3
#define FS_DIRTY_FL 0x00000100
#define PEM_F_PEM_READ_BIO_PRIVATEKEY 123
#define IP_TTL 2
#define TLS1_RFC_RSA_WITH_AES_128_SHA "TLS_RSA_WITH_AES_128_CBC_SHA"
#define SN_id_cmc_responseInfo "id-cmc-responseInfo"
#define LN_ipsecUser "IPSec User"
#define BN_F_BN_RSHIFT 146
#define __stub___compat_bdflush 
#define MB_CUR_MAX (__ctype_get_mb_cur_max ())
#define O_TRUNC 01000
#define EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE 195
#define BOOST_PP_DEC_100 99
#define OBJ_id_smime_mod_ets_eSignature_88 OBJ_id_smime_mod,5L
#define _GLIBCXX_MEMORY_RESOURCE 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101001 (0)(1)(1)(0)(1)(0)(0)(1),
#define EV_SSIZE_MAX EV_INT64_MAX
#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC 
#define BOOST_PP_REPEAT_2_102(m,d) BOOST_PP_REPEAT_2_101(m, d) m(3, 101, d)
#define TLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA 0x0300C01F
#define _LFS_LARGEFILE 1
#define EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE 225
#define BOOST_PP_FOR_120_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(121, s) BOOST_PP_IIF(c, BOOST_PP_FOR_121, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(121, s), p, o, m)
#define OBJ_localKeyID OBJ_pkcs9,21L
#define NID_documentVersion 470
#define OBJ_id_smime_mod_ets_eSignature_97 OBJ_id_smime_mod,6L
#define __PID_T_TYPE __S32_TYPE
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101011 (0)(1)(1)(0)(1)(0)(1)(1),
#define _mm512_maskz_alignr_epi8(U,X,Y,N) ((__m512i) __builtin_ia32_palignr512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)((N) * 8), (__v8di)(__m512i) _mm512_setzero_si512 (), (__mmask64)(U)))
#define OBJ_joint_iso_itu_t 2L
#define STATX_ATTR_IMMUTABLE 0x00000010
#define FMT_NOINLINE __attribute__((noinline))
#define BIO_CTRL_DGRAM_GET_MTU_OVERHEAD 49
#define POLLREMOVE 0x1000
#define LN_sha3_512 "sha3-512"
#define LN_seed_cfb128 "seed-cfb"
#define BOOST_PP_WHILE_54_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_55, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(55, s))
#define TLS_MD_CLIENT_FINISH_CONST "client finished"
#define SSL_AD_REASON_OFFSET 1000
#define NID_id_aes256_wrap 790
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_100(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_101(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_102(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_103(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_105(op,st,ss,sz) 0
#define LN_aria_192_cfb128 "aria-192-cfb"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_107(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_108(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_109(op,st,ss,sz) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101 (1)(0)(1)(0)(1),
#define si_value _sifields._rt.si_sigval
#define EVENT_LOG_WARN 2
#define _POSIX_UIO_MAXIOV 16
#define BUF_strndup(s,size) OPENSSL_strndup(s, size)
#define SN_camellia_128_cmac "CAMELLIA-128-CMAC"
#define _POSIX_MESSAGE_PASSING 200809L
#define BOOST_INTEL_WIN_WORKAROUND_GUARD 1
#define __DECL_SIMD_sinf16 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_110(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_111(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_112(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_113(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_119(op,st,ss,sz) 0
#define NID_id_mod_qualified_cert_88 278
#define INTMAX_MAX (__INT64_C(9223372036854775807))
#define BOOST_PP_DEC_108 107
#define M_1_PIf32 __f32 (0.318309886183790671537767526745028724)
#define __gthrw_pragma(pragma) 
#define _GLIBCXX_FUNCTIONAL 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_120(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_124(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_126(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_127(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_129(op,st,ss,sz) 0
#define TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA384 "RSA-PSK-AES256-CBC-SHA384"
#define BOOST_PP_WHILE_193_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_194, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(194, s))
#define _PSTL_GLUE_ALGORITHM_DEFS_H 
#define ERR_LIB_RAND 36
#define _SIZE_T 
#define NID_internationaliSDNNumber 869
#define __DECL_SIMD_sinf32 
#define APACHE_THRIFT_ACCESSOR_frameworkMetadata 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_130(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_131(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_132(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_133(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_134(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_135(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_136(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_138(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_139(op,st,ss,sz) 0
#define LN_aria_192_cfb1 "aria-192-cfb1"
#define CONF_F_MODULE_RUN 118
#define LIBURING_BARRIER_H 
#define SOCK_STREAM SOCK_STREAM
#define CPU_SET(cpu,cpusetp) __CPU_SET_S (cpu, sizeof (cpu_set_t), cpusetp)
#define ossl_unused __attribute__((unused))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_140(op,st,ss,sz) 0
#define SN_gost89_cbc "gost89-cbc"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_147(op,st,ss,sz) 0
#define _IOC_NRBITS 8
#define APACHE_THRIFT_ACCESSOR_enums 
#define CERT_PKEY_CA_PARAM 0x80
#define NID_setext_pinAny 604
#define BLKFRASET _IO(0x12,100)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_150(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_151(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_152(op,st,ss,sz) 0
#define _AVX512VBMIINTRIN_H_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_155(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_156(op,st,ss,sz) 0
#define EVP_F_B64_NEW 198
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_158(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_159(op,st,ss,sz) 0
#define SHA_CBLOCK (SHA_LBLOCK*4)
#define EV_SSIZE_MIN ((-EV_SSIZE_MAX) - 1)
#define BOOST_MPL_ADVANCE_HPP_INCLUDED 
#define BOOST_PP_FOR_80_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(81, s) BOOST_PP_IIF(c, BOOST_PP_FOR_81, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(81, s), p, o, m)
#define OBJ_idea_cbc 1L,3L,6L,1L,4L,1L,188L,7L,1L,1L,2L
#define NID_setct_AuthResTBE 571
#define NID_setct_AuthResTBS 535
#define __DECL_SIMD_sinf64 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_160(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_161(op,st,ss,sz) 0
#define BOOST_MPL_COUNT_FWD_HPP_INCLUDED 
#define SSL3_CK_RSA_DES_192_CBC3_SHA 0x0300000A
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_165(op,st,ss,sz) 0
#define SN_setct_PInitResData "setct-PInitResData"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_168(op,st,ss,sz) 0
#define NID_id_scrypt 973
#define NID_x509Crl 160
#define _SC_DEVICE_SPECIFIC _SC_DEVICE_SPECIFIC
#define SSL_SECOP_CA_MD (18 | SSL_SECOP_OTHER_CERT)
#define _mm_bslli_si128(A,N) ((__m128i)__builtin_ia32_pslldqi128 ((__m128i)(A), (int)(N) * 8))
#define LN_pSpecified "pSpecified"
#define OBJ_userPassword OBJ_X509,35L
#define __ORDER_BIG_ENDIAN__ 4321
#define FB_THIRD(a,b,...) __VA_ARGS__
#define OBJ_rFC822localPart OBJ_pilotObjectClass,14L
#define _SC_AVPHYS_PAGES _SC_AVPHYS_PAGES
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_170(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_171(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_173(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_174(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_175(op,st,ss,sz) 0
#define BOOST_MPL_AUX_MSVC_ETI_BASE_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_179(op,st,ss,sz) 0
#define ERR_FLAG_CLEAR 0x02
#define SYS_F_ACCEPT 8
#define BOOST_PP_INTERCEPT_131 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100001 (1)(1)(0)(0)(0)(0)(1),
#define BOOST_INTRUSIVE_HAS_TYPE(INSTANTIATION_NS_PREFIX,T,TNAME) INSTANTIATION_NS_PREFIX boost_intrusive_has_type_ ## TNAME< T >::value
#define _POSIX2_VERSION __POSIX2_THIS_VERSION
#define SN_uacurve0 "uacurve0"
#define _MM_DENORMALS_ZERO_OFF 0x0000
#define NID_X9_62_c2onb191v5 692
#define BOOST_PP_REPEAT_3_182(m,d) BOOST_PP_REPEAT_3_181(m, d) m(4, 181, d)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_180(op,st,ss,sz) 0
#define OBJ_telephoneNumber OBJ_X509,20L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_182(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_183(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_184(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_185(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_186(op,st,ss,sz) 0
#define NID_X9_62_prime192v1 409
#define NID_X9_62_prime192v2 410
#define NID_X9_62_prime192v3 411
#define BOOST_PP_REPEAT_3_183(m,d) BOOST_PP_REPEAT_3_182(m, d) m(4, 182, d)
#define BOOST_PP_ENUM_3(c,m,d) BOOST_PP_REPEAT_3(c, BOOST_PP_ENUM_M_3, (m, d))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_240(p,o,s) 0
#define TLS1_TXT_RSA_PSK_WITH_ARIA_256_GCM_SHA384 "RSA-PSK-ARIA256-GCM-SHA384"
#define __SI_HAVE_SIGSYS 1
#define BOOST_PP_REPEAT_3_185(m,d) BOOST_PP_REPEAT_3_184(m, d) m(4, 184, d)
#define SN_uacurve4 "uacurve4"
#define GFLAGS_DECLARE_H_ 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_181(o,s,l) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_191(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_192(op,st,ss,sz) 0
#define BOOST_PP_INTERCEPT_133 
#define IP_NODEFRAG 22
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_198(op,st,ss,sz) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_242(p,o,s) 0
#define __cpp_lib_is_nothrow_convertible 201806L
#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256"
#define BN_F_BN_USUB 115
#define INADDR_BROADCAST ((in_addr_t) 0xffffffff)
#define _GLIBCXX_HAVE_FINITE 1
#define MS_BIND 4096
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_184(o,s,l) 0
#define SN_id_smime_aa_encapContentType "id-smime-aa-encapContentType"
#define BOOST_PP_SEQ_FOLD_LEFT_I_200(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_201, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(201, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_245(p,o,s) 0
#define OPENSSL_DIR 4
#define BOOST_PP_SEQ_FOLD_LEFT_I_204(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_205, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(205, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_206(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_207, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(207, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_209(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_210, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(210, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL3_CK_ADH_DES_192_CBC_SHA 0x0300001B
#define _GLIBCXX_SHARED_MUTEX 1
#define SN_uacurve9 "uacurve9"
#define DN_MODIFY 0x00000002
#define OBJ_F_OBJ_NID2OBJ 103
#define STATX_ATTR_NODUMP 0x00000040
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_186(o,s,l) 0
#define _MM_ROUND_TOWARD_ZERO 0x6000
#define BIO_RR_ACCEPT 0x03
#define SN_sha512WithRSAEncryption "RSA-SHA512"
#define OBJ_businessCategory OBJ_X509,15L
#define BOOST_PP_SEQ_SIZE_147(_) BOOST_PP_SEQ_SIZE_148
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_188(o,s,l) 0
#define BOOST_PP_FOR_64(s,p,o,m) BOOST_PP_FOR_64_C(BOOST_PP_BOOL(p(65, s)), s, p, o, m)
#define LN_sha384WithRSAEncryption "sha384WithRSAEncryption"
#define BOOST_PP_SEQ_FOLD_LEFT_I_212(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_213, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(213, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_214(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_215, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(215, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_215(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_216, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(216, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_216(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_217, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(217, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_217(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_218, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(218, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define POLL_ERR POLL_ERR
#define PTHREAD_EXPLICIT_SCHED PTHREAD_EXPLICIT_SCHED
#define REG_R12 REG_R12
#define X509_R_KEY_TYPE_MISMATCH 115
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001110 (1)(0)(0)(1)(1)(1)(0),
#define BOOST_PP_SEQ_ELEM_227(_) BOOST_PP_SEQ_ELEM_226
#define BOOST_PP_FOR_67(s,p,o,m) BOOST_PP_FOR_67_C(BOOST_PP_BOOL(p(68, s)), s, p, o, m)
#define SSL_R_HTTP_REQUEST 156
#define BOOST_PP_SEQ_FOLD_LEFT_I_220(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_221, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(221, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_222(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_223, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(223, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX_PURE __attribute__ ((__pure__))
#define BOOST_PP_SEQ_FOLD_LEFT_I_229(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_230, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(230, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_R_CA_DN_LENGTH_MISMATCH 131
#define SSL_AD_RECORD_OVERFLOW TLS1_AD_RECORD_OVERFLOW
#define SSL_F_TLS_CONSTRUCT_CTOS_CERTIFICATE 355
#define MALLOCX_ALIGN(a) ((int)(((size_t)(a) < (size_t)INT_MAX) ? ffs((int)(a))-1 : ffs((int)(((size_t)(a))>>32))+31))
#define HEADER_SSLERR_H 
#define BOOST_PP_SEQ_ELEM_76(_) BOOST_PP_SEQ_ELEM_75
#define APACHE_THRIFT_ACCESSOR_streamHeadersPush 
#define FS_IOC32_GETFLAGS _IOR('f', 1, int)
#define BOOST_PP_FOR_187_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(188, s) BOOST_PP_IIF(c, BOOST_PP_FOR_188, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(188, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_I_230(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_231, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(231, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_231(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_232, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(232, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_233(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_234, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(234, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_235(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_236, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(236, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_238(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_239, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(239, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_WHILE_51_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_52, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(52, s))
#define EC_R_LADDER_STEP_FAILURE 162
#define IP_PMTUDISC_PROBE 3
#define GEN_EDIPARTY 5
#define OBJ_SMIMECapabilities OBJ_pkcs9,15L
#define BOOST_PP_BITAND_00 0
#define EVP_PKEY_CTRL_SET1_ID (EVP_PKEY_ALG_CTRL + 11)
#define _mm512_mask_i64scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv16si ((void *) (ADDR), (__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (__v8si)(__m256i) (V1), (int) (SCALE))
#define BOOST_PP_SEQ_FOLD_LEFT_I_240(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_241, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(241, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_242(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_243, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(243, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_244(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_245, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(245, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_247(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_248, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(248, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_249(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_250, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(250, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_ELEM_79(_) BOOST_PP_SEQ_ELEM_78
#define BOOST_PP_WHILE_125_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_126, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(126, s))
#define _POSIX2_CHAR_TERM 200809L
#define SSL_F_SSL_CERT_DUP 221
#define BOOST_PP_BITAND_01 0
#define POLLOUT 0x004
#define ERR_R_PKCS7_LIB ERR_LIB_PKCS7
#define _MM_EXCEPT_OVERFLOW 0x0008
#define SYS_F_IOCTL 21
#define ERFKILL 132
#define BOOST_PP_SEQ_FOLD_LEFT_I_251(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_252, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(252, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_252(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_253, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(253, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_253(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_254, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(254, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define RUSAGE_LWP RUSAGE_THREAD
#define BOOST_PP_SEQ_FOLD_LEFT_I_256(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_257, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(257, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _mm512_mask_shuffle_f64x2(W,U,X,Y,C) ((__m512d) __builtin_ia32_shuf_f64x2_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U)))
#define BLKGETSIZE64 _IOR(0x12,114,size_t)
#define MAP_FIXED 0x10
#define _SC_TRACE_EVENT_NAME_MAX _SC_TRACE_EVENT_NAME_MAX
#define _mm256_extractf128_si256(X,N) ((__m128i) __builtin_ia32_vextractf128_si256 ((__v8si)(__m256i)(X), (int)(N)))
#define _mm512_mask_inserti64x2(W,U,X,Y,C) ((__m512i) __builtin_ia32_inserti64x2_512_mask ((__v8di)(__m512i) (X), (__v2di)(__m128i) (Y), (int) (C), (__v8di)(__m512i) (W), (__mmask8) (U)))
#define _mm512_mask_inserti64x4(W,U,X,Y,C) ((__m512i) __builtin_ia32_inserti64x4_mask ((__v8di)(__m512i) (X), (__v4di)(__m256i) (Y), (int) (C), (__v8di)(__m512i)(W), (__mmask8)(U)))
#define EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM 118
#define SN_id_smime_mod "id-smime-mod"
#define _GLIBCXX_TR1_LEGENDRE_FUNCTION_TCC 1
#define SSL_F_TLS13_FINAL_FINISH_MAC 605
#define SN_gost89_cnt "gost89-cnt"
#define va_start(v,l) __builtin_va_start(v,l)
#define SSL_F_TLS_COLLECT_EXTENSIONS 435
#define X509_TRUST_OCSP_REQUEST 7
#define OBJ_sha1 OBJ_algorithm,26L
#define BOOST_PP_FOR_235_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(236, s) BOOST_PP_IIF(c, BOOST_PP_FOR_236, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(236, s), p, o, m)
#define BIO_F_BIO_PARSE_HOSTSERV 136
#define ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM 199
#define NID_pbes2 161
#define _mm512_mask_i64scatter_epi64(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8di ((void *) (ADDR), (__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (__v8di)(__m512i) (V1), (int) (SCALE))
#define _mm512_maskz_exp2a23_pd(U,A) _mm512_maskz_exp2a23_round_pd(U, A, _MM_FROUND_CUR_DIRECTION)
#define NID_setct_BatchAdminReqData 558
#define SSL_F_TLS_CONSTRUCT_CTOS_PSK 501
#define ASN1_PKEY_SIGPARAM_NULL 0x4
#define _mm512_maskz_exp2a23_ps(U,A) _mm512_maskz_exp2a23_round_ps(U, A, _MM_FROUND_CUR_DIRECTION)
#define DTLS1_RT_HEADER_LENGTH 13
#define BOOST_PP_FOR_12_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(13, s) BOOST_PP_IIF(c, BOOST_PP_FOR_13, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(13, s), p, o, m)
#define FOLLY_HAVE_SENDMMSG 1
#define ASN1_R_WRONG_PUBLIC_KEY_TYPE 200
#define __CPU_FREE(cpuset) __sched_cpufree (cpuset)
#define BOOST_PP_REPEAT_1_108(m,d) BOOST_PP_REPEAT_1_107(m, d) m(2, 107, d)
#define OBJ_setct_BatchAdminResTBE OBJ_set_ctype,75L
#define EVP_PBE_TYPE_KDF 0x2
#define _T_SIZE 
#define EC_F_EC_POINT_NEW 121
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10110 (1)(0)(1)(1)(0),
#define X509_F_X509_PRINT_EX_FP 118
#define SO_MAX_PACING_RATE 47
#define __va_arg_pack() __builtin_va_arg_pack ()
#define LOG_IF_EVERY_N(severity,condition,n) SOME_KIND_OF_LOG_IF_EVERY_N(severity, (condition), (n), google::LogMessage::SendToLog)
#define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT
#define BOOST_PP_SEQ_SIZE_94(_) BOOST_PP_SEQ_SIZE_95
#define GROUP_FILTER_SIZE(numsrc) (sizeof (struct group_filter) - sizeof (struct sockaddr_storage) + ((numsrc) * sizeof (struct sockaddr_storage)))
#define _mm512_maskz_cvtt_roundpd_epi32(U,A,B) ((__m256i)__builtin_ia32_cvttpd2dq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))
#define _GLIBCXX_CSTDINT 1
#define GEN_IPADD 7
#define FP_XSTATE_MAGIC1 0x46505853U
#define BOOST_PP_LIST_FOLD_LEFT_178(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_179, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(179, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SN_caRepository "caRepository"
#define SSL_SECOP_SIGALG_CHECK (13 | SSL_SECOP_OTHER_SIGALG)
#define _SC_TRACE_SYS_MAX _SC_TRACE_SYS_MAX
#define SSL_F_SSL_GENERATE_PKEY_GROUP 559
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_179 179
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101100 (1)(1)(1)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101101 (1)(1)(1)(0)(1)(1)(0)(1),
#define SN_certicom_arc "certicom-arc"
#define ASN1_R_BN_LIB 105
#define PF_INET 2
#define DECLARE_PEM_write_cb_fp(name,type) int PEM_write_ ##name(FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u);
#define _SC_SIGNALS _SC_SIGNALS
#define _GLIBCXX17_DEPRECATED [[__deprecated__]]
#define OBJ_id_aes192_wrap OBJ_aes,25L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101110 (1)(1)(1)(0)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101111 (1)(1)(1)(0)(1)(1)(1)(1),
#define ERR_R_EVP_LIB ERR_LIB_EVP
#define SSL_F_TLS1_SET_RAW_SIGALGS 630
#define CONF_R_VARIABLE_EXPANSION_TOO_LONG 116
#define CRYPTO_THREADID_get_callback() (NULL)
#define SN_id_tc26_cipher_constants "id-tc26-cipher-constants"
#define OBJerr(f,r) ERR_PUT_error(ERR_LIB_OBJ,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_PP_REPEAT_3_112(m,d) BOOST_PP_REPEAT_3_111(m, d) m(4, 111, d)
#define IORING_FEAT_FAST_POLL (1U << 5)
#define OBJ_brainpoolP256r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,7L
#define __DBL_MAX_10_EXP__ 308
#define SN_organizationName "O"
#define BOOST_PP_SEQ_ELEM_III(x,_) x
#define BOOST_INTRUSIVE_GENERIC_HOOK_HPP 
#define IPV6_MINHOPCOUNT 73
#define CT_F_CTLOG_STORE_LOAD_LOG 130
#define RSA_R_INVALID_HEADER 137
#define SN_sbgp_autonomousSysNum "sbgp-autonomousSysNum"
#define _mm512_maskz_cvtt_roundpd_epi64(U,A,B) ((__m512i)__builtin_ia32_cvttpd2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define SN_ms_ctl_sign "msCTLSign"
#define _POSIX_TRACE_LOG -1
#define LN_des_ede3_cbc "des-ede3-cbc"
#define FIZZ_CONST_UNION_ACCESSOR(X,...) const X* as ##X() const { if (type_ == Type::X ##_E) { return &X ##_; } return nullptr; } const X& tryAs ##X() const { auto ptr = as ##X(); if (!ptr) { throw std::runtime_error("Mismatched access type"); } return *ptr; }
#define SN_gost89_ctr "gost89-ctr"
#define DH_F_DH_CMS_SET_PEERKEY 115
#define __MATH_EVAL_FMT2(x,y) ((x) + (y) + 0.0f)
#define BOOST_BAD_OPTIONAL_ACCESS_22MAY2014_HPP 
#define DH_R_CHECK_P_NOT_SAFE_PRIME 118
#define SN_id_smime_aa_macValue "id-smime-aa-macValue"
#define LN_aes_128_xts "aes-128-xts"
#define EC_F_EC_GROUP_COPY 106
#define NID_id_GostR3410_94_CryptoPro_B_ParamSet 833
#define BOOST_PP_BOOL_178 1
#define EV_UINT64_MAX UINT64_MAX
#define _GLIBCXX_HAVE_SYS_IOCTL_H 1
#define OBJ_brainpoolP256t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,8L
#define BOOST_PP_INC_221 222
#define ENFILE 23
#define BN_F_BN_BLINDING_CONVERT_EX 100
#define BOOST_HAS_NOTHROW_ASSIGN(T) ((__has_nothrow_assign(T) BOOST_INTEL_TT_OPTS) && !is_volatile<T>::value && !is_const<T>::value && is_assignable<T&, const T&>::value)
#define EEXIST 17
#define evtimer_new(b,cb,arg) event_new((b), -1, 0, (cb), (arg))
#define NID_sha1 64
#define X509V3_R_EXTENSION_NAME_ERROR 115
#define M_SQRT2f128 __f128 (1.414213562373095048801688724209698079)
#define EXFLAG_INVALID 0x80
#define BIO_FP_WRITE 0x04
#define BOOST_TT_HAS_TRIVIAL_DESTRUCTOR_HPP_INCLUDED 
#define BOOST_PP_FOR_119_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(120, s) BOOST_PP_IIF(c, BOOST_PP_FOR_120, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(120, s), p, o, m)
#define BOOST_PP_REPEAT_3_119(m,d) BOOST_PP_REPEAT_3_118(m, d) m(4, 118, d)
#define OBJ_X9_62_ppBasis OBJ_X9_62_id_characteristic_two_basis,3L
#define BOOST_PP_INC_224 225
#define SSL_SECOP_COMPRESSION (15 | SSL_SECOP_OTHER_NONE)
#define OBJ_id_smime_cti OBJ_SMIME,6L
#define BOOST_PP_WHILE_3_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_4, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(4, s))
#define BOOST_PP_REPEAT_3_190(m,d) BOOST_PP_REPEAT_3_189(m, d) m(4, 189, d)
#define SN_Security "security"
#define _mm256_maskz_insertf32x4(U,X,Y,C) ((__m256) __builtin_ia32_insertf32x4_256_mask ((__v8sf)(__m256) (X), (__v4sf)(__m128) (Y), (int) (C), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)(U)))
#define _SC_2_PBS_CHECKPOINT _SC_2_PBS_CHECKPOINT
#define BOOST_PP_REPEAT_3_194(m,d) BOOST_PP_REPEAT_3_193(m, d) m(4, 193, d)
#define SN_ecdsa_with_SHA384 "ecdsa-with-SHA384"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_190(o,s,l) 0
#define SN_id_tc26_algorithms "id-tc26-algorithms"
#define SSL_R_UNEXPECTED_END_OF_EARLY_DATA 178
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_251(p,o,s) 0
#define BOOST_PP_FOR_228_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(229, s) BOOST_PP_IIF(c, BOOST_PP_FOR_229, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(229, s), p, o, m)
#define BOOST_TT_IS_SAME_HPP_INCLUDED 
#define BOOST_PP_WHILE_231_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_232, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(232, s))
#define SN_aes_128_cbc_hmac_sha256 "AES-128-CBC-HMAC-SHA256"
#define BOOST_TT_HAS_NOTHROW_COPY_HPP_INCLUDED 
#define _CLWBINTRIN_H_INCLUDED 
#define __STDC_LIMIT_MACROS 
#define __UINTPTR_TYPE__ long unsigned int
#define BOOST_BLANK_HPP 
#define TLS1_TXT_DH_anon_WITH_ARIA_128_GCM_SHA256 "ADH-ARIA128-GCM-SHA256"
#define BOOST_PP_LIST_FOLD_RIGHT_233(o,s,l) BOOST_PP_LIST_FOLD_LEFT_233(o, s, BOOST_PP_LIST_REVERSE_D(233, l))
#define THRIFT_CLONEABLE_IOBUF_H_ 
#define TLS1_TXT_DH_DSS_WITH_AES_128_SHA "DH-DSS-AES128-SHA"
#define BOOST_VARIANT_MAKE_VARIADIC(sequence,x) BOOST_VARIANT_MAKE_VARIADIC_I(BOOST_PP_SEQ_SIZE(sequence), x)
#define __cpp_lib_bool_constant 201505
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define ASN1_PCTX_FLAGS_NO_STRUCT_NAME 0x100
#define SN_ms_efs "msEFS"
#define X509V3_F_ASIDENTIFIERCHOICE_CANONIZE 161
#define BOOST_PP_WHILE_160_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_161, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(161, s))
#define __DEC128_MANT_DIG__ 34
#define __cpp_lib_tuples_by_type 201304
#define O_PATH __O_PATH
#define OBJ_pkcs7_enveloped OBJ_pkcs7,3L
#define BOOST_PP_FOR_74(s,p,o,m) BOOST_PP_FOR_74_C(BOOST_PP_BOOL(p(75, s)), s, p, o, m)
#define _GLIBCXX_ERROR_CONSTANTS 1
#define NID_sxnet 143
#define _mm512_cmp_epi32_mask(X,Y,P) ((__mmask16) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)-1))
#define BOOST_PP_WHILE_199(p,o,s) BOOST_PP_WHILE_199_C(BOOST_PP_BOOL(p(200, s)), p, o, s)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_199(o,s,l) 0
#define _SC_SPAWN _SC_SPAWN
#define ASN1_R_MIME_PARSE_ERROR 207
#define SN_X9_62_c2onb239v4 "c2onb239v4"
#define SN_X9_62_c2onb239v5 "c2onb239v5"
#define DH_FLAG_FIPS_METHOD 0x0400
#define SSL_SECOP_OTHER_SIGALG (5 << 16)
#define NID_id_smime_cti_ets_proofOfReceipt 252
#define HEADER_BIO_H 
#define SSL_F_SSL3_GET_RECORD 143
#define EC_F_ECP_NISTZ256_GET_AFFINE 240
#define BOOST_PP_ERROR_0x0000 BOOST_PP_ERROR(0x0000, BOOST_PP_INDEX_OUT_OF_BOUNDS)
#define BOOST_PP_FOR_79(s,p,o,m) BOOST_PP_FOR_79_C(BOOST_PP_BOOL(p(80, s)), s, p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100 (1)(0)(0),
#define _SIDD_POSITIVE_POLARITY 0x00
#define _GLIBCXX_HAVE_ISINFL 1
#define BOOST_PP_ENUM_M_2_I(z,n,m,d) BOOST_PP_COMMA_IF(n) m(z, n, d)
#define NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet 844
#define _POSIX_OPEN_MAX 20
#define SSL_R_TLS_ILLEGAL_EXPORTER_LABEL 367
#define __cpp_lib_atomic_float 201711L
#define __FLT128_DECIMAL_DIG__ 36
#define SSL_CERT_FLAG_TLS_STRICT 0x00000001U
#define TLS1_CK_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA 0x0300C034
#define CRL_REASON_KEY_COMPROMISE 1
#define _mm_cvtt_roundss_i32(A,B) ((int)__builtin_ia32_vcvttss2si32(A, B))
#define EFD_SEMAPHORE EFD_SEMAPHORE
#define _mm256_maskz_gf2p8affine_epi64_epi8(A,B,C,D) ((__m256i) __builtin_ia32_vgf2p8affineqb_v32qi_mask((__v32qi)(__m256i)(B), (__v32qi)(__m256i)(C), (int)(D), (__v32qi)(__m256i) _mm256_setzero_si256 (), (__mmask32)(A)))
#define NID_idea_ecb 36
#define BOOST_PP_FOR_79_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(80, s) BOOST_PP_IIF(c, BOOST_PP_FOR_80, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(80, s), p, o, m)
#define __FLT_DECIMAL_DIG__ 9
#define EVP_CTRL_PBE_PRF_NID 0x7
#define BOOST_PP_ERROR_0x0005 BOOST_PP_ERROR(0x0005, BOOST_PP_SEQ_FOLD_OVERFLOW)
#define SSL_F_SSL_USE_PRIVATEKEY_ASN1 202
#define _mm512_mask_extracti64x2_epi64(W,U,X,C) ((__m128i) __builtin_ia32_extracti64x2_512_mask ((__v8di)(__m512i) (X), (int) (C), (__v2di)(__m128i) (W), (__mmask8) (U)))
#define UDP_SEGMENT 103
#define ERR_LIB_UI 40
#define _mm512_rcp28_pd(A) _mm512_rcp28_round_pd(A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_STATIC_ASSERT(...) static_assert(__VA_ARGS__, #__VA_ARGS__)
#define BOOST_PP_DEC_112 111
#define NID_hmacWithSHA512 801
#define TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA256 "CAMELLIA128-SHA256"
#define _GLIBCXX_HAVE_STDBOOL_H 1
#define BC_BASE_MAX _POSIX2_BC_BASE_MAX
#define _SC_CHAR_BIT _SC_CHAR_BIT
#define MB_LEN_MAX 16
#define BOOST_MPL_HAS_XXX_NO_WRAPPED_TYPES 0
#define FOLLY_PP_DETAIL_FOR_EACH_REC_6(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_5(fn, __VA_ARGS__)
#define PKCS7_R_NO_DEFAULT_DIGEST 151
#define SN_rc4_hmac_md5 "RC4-HMAC-MD5"
#define __ORDER_LITTLE_ENDIAN__ 1234
#define LN_ms_smartcard_login "Microsoft Smartcard Login"
#define SSL3_MT_CERTIFICATE_REQUEST 13
#define X509_F_X509_STORE_CTX_INIT 143
#define SODIUM_SIZE_MAX SODIUM_MIN(UINT64_MAX, SIZE_MAX)
#define __GLIBC_FLT_EVAL_METHOD __FLT_EVAL_METHOD__
#define __UINT_FAST8_TYPE__ unsigned char
#define SSL_SECOP_SIGALG_SUPPORTED (11 | SSL_SECOP_OTHER_SIGALG)
#define __FLT128_MANT_DIG__ 113
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100001 (0)(0)(1)(0)(0)(0)(0)(1),
#define BOOST_PP_FOR_216_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(217, s) BOOST_PP_IIF(c, BOOST_PP_FOR_217, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(217, s), p, o, m)
#define RSA_F_RSA_PRIV_ENCODE 138
#define PRIXFAST16 __PRIPTR_PREFIX "X"
#define FMT_HAS_CPP14_ATTRIBUTE(attribute) (__cplusplus >= 201402L && FMT_HAS_CPP_ATTRIBUTE(attribute))
#define OBJ_hold_instruction_call_issuer OBJ_holdInstruction,2L
#define BOOST_PP_DIV_BASE_O(d,rxy) BOOST_PP_DIV_BASE_O_IM(d, BOOST_PP_TUPLE_REM_3 rxy)
#define NID_secretary 474
#define SSL_TXT_HIGH "HIGH"
#define _mm256_fpclass_ps_mask(X,C) ((__mmask8) __builtin_ia32_fpclassps256_mask ((__v8sf) (__m256) (X), (int) (C),(__mmask8)-1))
#define LN_sha3_224 "sha3-224"
#define ub_email_address 128
#define _GLIBCXX_USE_INT128 1
#define SSL_R_BAD_DATA_RETURNED_BY_CALLBACK 106
#define X509_LOOKUP_load_file(x,name,type) X509_LOOKUP_ctrl((x),X509_L_FILE_LOAD,(name),(long)(type),NULL)
#define APACHE_THRIFT_ACCESSOR_cv_bool 
#define _GLIBCXX_HAVE_SYS_SDT_H 1
#define SN_setCext_hashedRoot "setCext-hashedRoot"
#define NID_id_cmc_senderNonce 332
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 "ECDHE-ECDSA-AES256-GCM-SHA384"
#define BOOST_PP_LIST_FOLD_RIGHT_102(o,s,l) BOOST_PP_LIST_FOLD_LEFT_102(o, s, BOOST_PP_LIST_REVERSE_D(102, l))
#define _mm256_fixupimm_pd(X,Y,Z,C) ((__m256d)__builtin_ia32_fixupimmpd256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (__v4di)(__m256i)(Z), (int)(C), (__mmask8)(-1)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001100 (1)(1)(0)(0)(1)(1)(0)(0),
#define SN_aes_128_ecb "AES-128-ECB"
#define BOOST_PP_LIST_FOLD_RIGHT_103(o,s,l) BOOST_PP_LIST_FOLD_LEFT_103(o, s, BOOST_PP_LIST_REVERSE_D(103, l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001101 (1)(1)(0)(0)(1)(1)(0)(1),
#define ev_uint16_t uint16_t
#define PRIXFAST32 __PRIPTR_PREFIX "X"
#define EVENT_MAX_PRIORITIES 256
#define TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA256 0x030000BF
#define SSL_F_WPACKET_START_SUB_PACKET_LEN__ 634
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010100 (0)(0)(0)(1)(0)(1)(0)(0),
#define _CS_V6_ENV _CS_V6_ENV
#define RSA_PKCS1_PADDING_SIZE 11
#define TLS1_CK_DHE_RSA_WITH_SEED_SHA 0x0300009A
#define _mm512_extracti64x2_epi64(X,C) ((__m128i) __builtin_ia32_extracti64x2_512_mask ((__v8di)(__m512i) (X), (int) (C), (__v2di)(__m128i) _mm_setzero_si128 (), (__mmask8)-1))
#define SSL_CLIENT_HELLO_CB 7
#define PROT_NONE 0x0
#define _GLIBCXX_PARSE_NUMBERS_H 1
#define _BITS_WCTYPE_WCHAR_H 1
#define BOOST_MPL_LIST_LIST10_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_RIGHT_108(o,s,l) BOOST_PP_LIST_FOLD_LEFT_108(o, s, BOOST_PP_LIST_REVERSE_D(108, l))
#define _mm_cmp_pd_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmppd128_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1))
#define M_PI_2 1.57079632679489661923
#define BOOST_PP_FOR_154_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(155, s) BOOST_PP_IIF(c, BOOST_PP_FOR_155, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(155, s), p, o, m)
#define TLS1_RFC_RSA_PSK_WITH_ARIA_128_GCM_SHA256 "TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256"
#define _STL_QUEUE_H 1
#define EC_F_DO_EC_KEY_PRINT 221
#define _POSIX_SHARED_MEMORY_OBJECTS 200809L
#define ASN1_F_ASN1_ITEM_I2D_FP 193
#define SN_aria_256_ofb128 "ARIA-256-OFB"
#define BOOST_NONE_T_17SEP2003_HPP 
#define BOOST_PP_WHILE_200(p,o,s) BOOST_PP_WHILE_200_C(BOOST_PP_BOOL(p(201, s)), p, o, s)
#define SSL_F_TLS_CONSTRUCT_CTOS_EC_PT_FORMATS 467
#define _mm_test_all_zeros(M,V) _mm_testz_si128 ((M), (V))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_62(op,st,ss,sz) 0
#define _GLIBCXX_MOVE_BACKWARD3(_Tp,_Up,_Vp) std::move_backward(_Tp, _Up, _Vp)
#define EVP_PK_DH 0x0004
#define MS_NODEV 4
#define BOOST_PP_FRAME_START(i) BOOST_PP_CAT(BOOST_PP_ITERATION_START_, i)
#define BIO_C_GET_SUFFIX 152
#define OBJ_time_stamp OBJ_id_kp,8L
#define NID_host 466
#define PRIXFAST64 __PRI64_PREFIX "X"
#define NID_id_GostR3410_2001_CryptoPro_C_ParamSet 842
#define SSL_get0_certificate_types(s,clist) SSL_ctrl(s, SSL_CTRL_GET_CLIENT_CERT_TYPES, 0, (char *)(clist))
#define EVP_PK_EC 0x0008
#define BOOST_THREAD_DYN_LINK 1
#define __GLIBC_USE(F) __GLIBC_USE_ ## F
#define __UINT_LEAST8_TYPE__ unsigned char
#define TLS1_RFC_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384"
#define LOG_OCCURRENCES_MOD_N LOG_EVERY_N_VARNAME(occurrences_mod_n_, __LINE__)
#define BOOST_HAS_EXPM1 
#define TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA256 0x030000B6
#define FSOPEN_CLOEXEC 0x00000001
#define SSL_AD_INTERNAL_ERROR TLS1_AD_INTERNAL_ERROR
#define d2i_DHparams_bio(bp,x) ASN1_d2i_bio_of(DH, DH_new, d2i_DHparams, bp, x)
#define NID_ad_timeStamping 363
#define _SYS_CDEFS_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_63(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_63(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define X509_V_ERR_CA_MD_TOO_WEAK 68
#define BOOST_PP_WHILE_178_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_179, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(179, s))
#define BN_F_BN_EXP 123
#define _RWSTD_VER_WORKAROUND_GUARD 1
#define SSL3_MT_NEWSESSION_TICKET 4
#define BOOST_PP_WHILE_201_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_202, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(202, s))
#define BOOST_INTRUSIVE_POINTER_TRAITS_HPP 
#define EC_F_EC_GF2M_SIMPLE_OCT2POINT 160
#define ASN1_R_NO_MULTIPART_BOUNDARY 211
#define _SCHED_H 1
#define ASN1_STRING_FLAG_BITS_LEFT 0x08
#define _MM_FROUND_TO_NEG_INF 0x01
#define __cpp_impl_three_way_comparison 201907L
#define ASN1_F_ASN1_D2I_READ_BIO 107
#define HEADER_PEM_H 
#define __stub_fchflags 
#define BOOST_PP_ARRAY_SIZE(array) BOOST_PP_TUPLE_ELEM(2, 0, array)
#define EVENT__HAVE_PTHREADS 1
#define PEM_R_UNEXPECTED_DEK_IV 130
#define _SC_LEVEL4_CACHE_SIZE _SC_LEVEL4_CACHE_SIZE
#define SSL_F_TLS_CONSTRUCT_CTOS_KEY_SHARE 470
#define _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC __GLIBC_PREREQ(2,23)
#define BOOST_PP_DETAIL_IS_EMPTY_PROCESS(...) BOOST_PP_IS_BEGIN_PARENS ( BOOST_PP_DETAIL_IS_EMPTY_NON_FUNCTION_C __VA_ARGS__ () )
#define _GLIBCXX_TXN_SAFE_DYN 
#define OBJ_dstu28147_ofb OBJ_dstu28147,2L
#define BOOST_CORE_HAS_BUILTIN_ADDRESSOF 
#define FP_NAN 0
#define SSL_F_PROCESS_KEY_SHARE_EXT 439
#define IMPLEMENT_LHASH_HASH_FN(name,o_type) unsigned long name ##_LHASH_HASH(const void *arg) { const o_type *a = arg; return name ##_hash(a); }
#define MOUNT_ATTR_NOSUID 0x00000002
#define EAFNOSUPPORT 97
#define OBJ_algorithm 1L,3L,14L,3L,2L
#define LN_uniqueMember "uniqueMember"
#define BOOST_PP_FOR_130(s,p,o,m) BOOST_PP_FOR_130_C(BOOST_PP_BOOL(p(131, s)), s, p, o, m)
#define LN_camellia_192_cfb8 "camellia-192-cfb8"
#define NID_des_ede_ofb64 62
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_144(op,st,ss,sz) 0
#define OBJ_id_smime_ct_contentCollection OBJ_id_smime_ct,19L
#define BOOST_PP_FOR_80(s,p,o,m) BOOST_PP_FOR_80_C(BOOST_PP_BOOL(p(81, s)), s, p, o, m)
#define FIZZ_UNION_EQUALITY_CASES(X,other) case Type::X ##_E: return X ##_ == *other.as ##X();
#define FS_XFLAG_NODEFRAG 0x00002000
#define BOOST_PP_REPEAT_3_72(m,d) BOOST_PP_REPEAT_3_71(m, d) m(4, 71, d)
#define BOOST_PP_FOR_131(s,p,o,m) BOOST_PP_FOR_131_C(BOOST_PP_BOOL(p(132, s)), s, p, o, m)
#define EVP_R_UNSUPPORTED_PRF 125
#define _POSIX_CLOCK_SELECTION 200809L
#define OBJ_invalidity_date OBJ_id_ce,24L
#define RAND_F_RAND_DRBG_RESTART 102
#define BOOST_MPL_AUX_YES_NO_HPP_INCLUDED 
#define IPV6_PMTUDISC_INTERFACE 4
#define _mm_mask3_fnmsub_round_sd(A,B,C,U,R) (__m128d) __builtin_ia32_vfmsubsd3_mask3 (A, -(B), C, U, R)
#define _mm_mask3_fnmsub_round_ss(A,B,C,U,R) (__m128) __builtin_ia32_vfmsubss3_mask3 (A, -(B), C, U, R)
#define __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)
#define BOOST_PP_SEQ_ELEM_238(_) BOOST_PP_SEQ_ELEM_237
#define BOOST_PP_FOR_133(s,p,o,m) BOOST_PP_FOR_133_C(BOOST_PP_BOOL(p(134, s)), s, p, o, m)
#define SN_document "document"
#define ASN1_F_C2I_ASN1_BIT_STRING 189
#define DEFINE_double(name,val,txt) DEFINE_VARIABLE(double, D, name, val, txt)
#define M_PIl 3.141592653589793238462643383279502884L
#define X509_F_X509_NAME_ONELINE 116
#define BOOST_INTRUSIVE_LIST_ITERATOR_HPP 
#define _mm512_inserti32x4(X,Y,C) ((__m512i) __builtin_ia32_inserti32x4_mask ((__v16si)(__m512i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v16si)(__m512i) (X), (__mmask16)(-1)))
#define NID_id_tc26_hmac_gost_3411_2012_256 988
#define BOOST_PP_FOR_88(s,p,o,m) BOOST_PP_FOR_88_C(BOOST_PP_BOOL(p(89, s)), s, p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_116(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_116(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_RSA_SHA3_224 "id-rsassa-pkcs1-v1_5-with-sha3-224"
#define BOOST_PP_FOR_89(s,p,o,m) BOOST_PP_FOR_89_C(BOOST_PP_BOOL(p(90, s)), s, p, o, m)
#define INT8_MAX (127)
#define __cpp_lib_constexpr_complex 201711L
#define MQ_PRIO_MAX 32768
#define LN_commonName "commonName"
#define NID_id_cmc_revokeRequest 340
#define BOOST_PP_BITAND_10 0
#define CONF_R_SSL_SECTION_EMPTY 119
#define TLSEXT_ECPOINTFORMAT_ansiX962_compressed_char2 2
#define IPV6_PATHMTU 61
#define UINT_LEAST32_WIDTH 32
#define EVP_F_EVP_PKEY_CHECK 186
#define SSL_SESS_CACHE_SERVER 0x0002
#define ASN1_i2d_bio_of(type,i2d,out,x) (ASN1_i2d_bio(CHECKED_I2D_OF(type, i2d), out, CHECKED_PTR_OF(type, x)))
#define ASN1_F_SMIME_TEXT 213
#define _POSIX_TTY_NAME_MAX 9
#define _GLIBCXX_USE_WEAK_REF __GXX_WEAK__
#define EVP_PKEY_CTX_get_dh_kdf_type(ctx) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_TYPE, -2, NULL)
#define FOLLY_DISABLE_UNDEFINED_BEHAVIOR_SANITIZER(...) 
#define BOOST_PP_REPEAT_3_79(m,d) BOOST_PP_REPEAT_3_78(m, d) m(4, 78, d)
#define SI_DETHREAD SI_DETHREAD
#define BOOST_PP_FOR_138(s,p,o,m) BOOST_PP_FOR_138_C(BOOST_PP_BOOL(p(139, s)), s, p, o, m)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_78(s,p,o,m) 0
#define FMT_MSC_VER 0
#define BOOST_PP_LIST_FOLD_RIGHT_124(o,s,l) BOOST_PP_LIST_FOLD_LEFT_124(o, s, BOOST_PP_LIST_REVERSE_D(124, l))
#define BOOST_DETAIL_CREATE_BINARY_LITERAL_OCTAL_SEQUENCE(d,bit_groupings) BOOST_PP_SEQ_TRANSFORM ( BOOST_DETAIL_TRIPLE_TO_OCTAL_OPERATION , BOOST_PP_NIL , BOOST_PP_IDENTITY( BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_TRIPLE_SEQUENCE )() ( BOOST_DETAIL_COMPLETE_TRIPLE_SEQUENCE ( d , BOOST_DETAIL_CREATE_BINARY_LITERAL_BIT_SEQUENCE( d, bit_groupings ) ) ) )
#define __DECL_SIMD_powf 
#define __DECL_SIMD_powl 
#define NID_id_smime_aa_contentIdentifier 218
#define _mm512_shuffle_f64x2(X,Y,C) ((__m512d) __builtin_ia32_shuf_f64x2_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))
#define _SC_TTY_NAME_MAX _SC_TTY_NAME_MAX
#define BOOST_MOVE_IS_ENUM_IMPL(T) BOOST_MOVE_IS_ENUM(T)
#define SN_RSA_SHA3_256 "id-rsassa-pkcs1-v1_5-with-sha3-256"
#define NID_policy_constraints 401
#define COMP_F_BIO_ZLIB_WRITE 102
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_202(o,s,l) 0
#define MS_NOSYMFOLLOW 256
#define NID_dhSinglePass_stdDH_sha256kdf_scheme 938
#define NID_id_GostR3410_2001 811
#define SN_id_smime_mod_ets_eSignature_88 "id-smime-mod-ets-eSignature-88"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_203(o,s,l) 0
#define _mm_permute_pd(X,C) ((__m128d) __builtin_ia32_vpermilpd ((__v2df)(__m128d)(X), (int)(C)))
#define NID_id_tc26_sign 978
#define _mm_permute_ps(X,C) ((__m128) __builtin_ia32_vpermilps ((__v4sf)(__m128)(X), (int)(C)))
#define SSL3_RFC_ADH_RC4_128_MD5 "TLS_DH_anon_WITH_RC4_128_MD5"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_204(o,s,l) 0
#define SN_id_smime_mod_ets_eSignature_97 "id-smime-mod-ets-eSignature-97"
#define SSL_R_DANE_TLSA_BAD_PUBLIC_KEY 201
#define SSL_F_SSL_PEEK_EX 432
#define F_GETOWN_EX __F_GETOWN_EX
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_205(o,s,l) 0
#define BIO_flush(b) (int)BIO_ctrl(b,BIO_CTRL_FLUSH,0,NULL)
#define _mm512_maskz_slli_epi32(U,X,C) ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))
#define _mm256_mask_i64scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4df ((void *) (ADDR), (__mmask8) (MASK), (__v4di)(__m256i) (INDEX), (__v4df)(__m256d) (V1), (int) (SCALE))
#define NID_id_pkix_mod 258
#define __FLT_EVAL_METHOD__ 0
#define _mm256_mask_i64scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8sf ((void *) (ADDR), (__mmask8) (MASK), (__v4di)(__m256i) (INDEX), (__v4sf)(__m128) (V1), (int) (SCALE))
#define SN_setct_AuthRevReqBaggage "setct-AuthRevReqBaggage"
#define BOOST_PP_BOOL_180 1
#define BOOST_PP_INTERCEPT_246 
#define _GLIBCXX_PSEUDO_VISIBILITY(V) 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_207(o,s,l) 0
#define _mm512_mask3_fmadd_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmaddpd512_mask3(A, B, C, U, R)
#define NID_rc2_ecb 38
#define OBJ_id_smime_aa_equivalentLabels OBJ_id_smime_aa,9L
#define IP_DEFAULT_MULTICAST_LOOP 1
#define BOOST_PP_LIST_FOLD_LEFT_188(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_189, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(189, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define ASN1_F_ASN1_I2D_FP 117
#define _IMMINTRIN_H_INCLUDED 
#define _CS_POSIX_V7_ILP32_OFF32_CFLAGS _CS_POSIX_V7_ILP32_OFF32_CFLAGS
#define TLS1_RFC_RSA_PSK_WITH_ARIA_256_GCM_SHA384 "TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384"
#define APACHE_THRIFT_ACCESSOR_t_set 
#define RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1 126
#define FS_IOC_SETFSLABEL _IOW(0x94, 50, char[FSLABEL_MAX])
#define _mm_cmp_pd(X,Y,P) ((__m128d) __builtin_ia32_cmppd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P)))
#define BOOST_PP_DIV_BASE(x,y) BOOST_PP_WHILE(BOOST_PP_DIV_BASE_P, BOOST_PP_DIV_BASE_O, (0, x, y))
#define OBJ_dhSinglePass_stdDH_sha1kdf_scheme OBJ_x9_63_scheme,2L
#define BOOST_PP_LIST_FOLD_RIGHT_128(o,s,l) BOOST_PP_LIST_FOLD_LEFT_128(o, s, BOOST_PP_LIST_REVERSE_D(128, l))
#define _mm_cmp_ps(X,Y,P) ((__m128) __builtin_ia32_cmpps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P)))
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define TLSEXT_signature_gostr34102001 237
#define BOOST_PP_LIST_FOLD_RIGHT_113(o,s,l) BOOST_PP_LIST_FOLD_LEFT_113(o, s, BOOST_PP_LIST_REVERSE_D(113, l))
#define DH_FLAG_NON_FIPS_ALLOW 0x0400
#define OBJ_F_OBJ_NID2LN 102
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010100 (1)(0)(1)(0)(1)(0)(0),
#define BOOST_PP_LIST_FOLD_RIGHT_115(o,s,l) BOOST_PP_LIST_FOLD_LEFT_115(o, s, BOOST_PP_LIST_REVERSE_D(115, l))
#define _mm512_maskz_slli_epi64(U,X,C) ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))
#define _mm512_fixupimm_round_ps(X,Y,Z,C,R) ((__m512)__builtin_ia32_fixupimmps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(-1), (R)))
#define M_1_PIf64 __f64 (0.318309886183790671537767526745028724)
#define INT8_MIN (-128)
#define ASN1_F_UINT64_C2I 112
#define BOOST_PP_REPEAT_3_123(m,d) BOOST_PP_REPEAT_3_122(m, d) m(4, 122, d)
#define SSL_F_TLS_PARSE_CTOS_MAXFRAGMENTLEN 571
#define ASN1_STRFLGS_ESC_QUOTE 8
#define LN_camellia_128_ccm "camellia-128-ccm"
#define FMT_INLINE inline __attribute__((always_inline))
#define TLS1_RFC_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_RSA_WITH_ARIA_128_GCM_SHA256"
#define _mm512_getexp_pd(A) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100100 (1)(0)(1)(0)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100101 (1)(0)(1)(0)(0)(1)(0)(1),
#define __cpp_variadic_templates 200704L
#define SN_sxnet "SXNetID"
#define __DECL_SIMD_sinf128 
#define _mm_cmp_epi16_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpw128_mask ((__v8hi)(__m128i)(X), (__v8hi)(__m128i)(Y), (int)(P), (__mmask8)(-1)))
#define REG_RCX REG_RCX
#define SSL_CB_HANDSHAKE_START 0x10
#define PKCS7_R_SMIME_TEXT_ERROR 129
#define FS_NODUMP_FL 0x00000040
#define BOOST_MPL_POP_BACK_FWD_HPP_INCLUDED 
#define LN_homeTelephoneNumber "homeTelephoneNumber"
#define _mm_cmp_sd(X,Y,P) ((__m128d) __builtin_ia32_cmpsd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P)))
#define TLS1_CK_ECDH_RSA_WITH_NULL_SHA 0x0300C00B
#define NID_dsaWithSHA1 113
#define _mm_cmp_ss(X,Y,P) ((__m128) __builtin_ia32_cmpss ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P)))
#define OBJ_pbeWithMD2AndRC2_CBC OBJ_pkcs5,4L
#define _UNIQUE_PTR_H 1
#define SN_siphash "SipHash"
#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "DHE-RSA-CAMELLIA128-SHA256"
#define ASYNC_F_ASYNC_JOB_NEW 102
#define BOOST_PP_INTERCEPT_140 
#define BOOST_PP_SEQ_SIZE_152(_) BOOST_PP_SEQ_SIZE_153
#define BOOST_PP_REPEAT_2_46(m,d) BOOST_PP_REPEAT_2_45(m, d) m(3, 45, d)
#define _mm256_extractf128_pd(X,N) ((__m128d) __builtin_ia32_vextractf128_pd256 ((__v4df)(__m256d)(X), (int)(N)))
#define CRYPTO_MEM_CHECK_DISABLE 0x3
#define IORING_FEAT_NODROP (1U << 1)
#define si_overrun _sifields._timer.si_overrun
#define BOOST_MPL_AUX_PP_COUNTER() __LINE__
#define BOOST_PP_INTERCEPT_141 
#define _PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(PRM) _PSTL_PRAGMA(omp scan inclusive(PRM))
#define BOOST_PP_SEQ_FOLD_LEFT_I_12(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_13, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(13, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define UINTMAX_C(c) c ## UL
#define MOD_TIMECONST ADJ_TIMECONST
#define BOOST_PP_FOR_240_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(241, s) BOOST_PP_IIF(c, BOOST_PP_FOR_241, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(241, s), p, o, m)
#define __sched_priority sched_priority
#define V_ASN1_BOOLEAN 1
#define BIO_get_buffer_num_lines(b) BIO_ctrl(b,BIO_C_GET_BUFF_NUM_LINES,0,NULL)
#define SN_id_pkix_OCSP_CrlID "CrlID"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001 (1)(0)(0)(0)(1),
#define BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC(i,name,params) 
#define SN_rc2_ofb64 "RC2-OFB"
#define SN_id_tc26_signwithdigest_gost3410_2012_512 "id-tc26-signwithdigest-gost3410-2012-512"
#define SSL_AD_DECOMPRESSION_FAILURE SSL3_AD_DECOMPRESSION_FAILURE
#define EVBUF_FS_CLOSE_ON_FREE 0x01
#define LN_sm4_cbc "sm4-cbc"
#define STA_PPSERROR 0x0800
#define PEM_TYPE_ENCRYPTED 10
#define BIO_CTRL_DGRAM_SET_CONNECTED 32
#define SSL_F_SSL_CIPHER_LIST_TO_BYTES 425
#define BOOST_PP_SEQ_FOLD_LEFT_I_19(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_20, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(20, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EADV 68
#define ERANGE 34
#define SSL_F_TLS_PROCESS_SKE_PSK_PREAMBLE 421
#define SSL_F_WRITE_STATE_MACHINE 586
#define EVENT__HAVE_TAILQFOREACH 1
#define SN_id_it_confirmWaitTime "id-it-confirmWaitTime"
#define LOG_EVERY_N_VARNAME_CONCAT(base,line) base ## line
#define TLS1_TXT_ADH_WITH_AES_256_SHA "ADH-AES256-SHA"
#define BOOST_MPL_PLACEHOLDERS_HPP_INCLUDED 
#define SSL3_TXT_DH_DSS_DES_192_CBC3_SHA "DH-DSS-DES-CBC3-SHA"
#define TLS1_2_VERSION 0x0303
#define BOOST_PP_LIST_FOLD_RIGHT_125(o,s,l) BOOST_PP_LIST_FOLD_LEFT_125(o, s, BOOST_PP_LIST_REVERSE_D(125, l))
#define OBJ_F_OBJ_NID2SN 104
#define IPV6_RTHDRDSTOPTS 55
#define HEADER_BIOERR_H 
#define X509_V_ERR_UNABLE_TO_GET_CRL 3
#define __size_t 
#define BOOST_PP_REPEAT_FROM_TO_D_2(d,f,l,m,dt) BOOST_PP_REPEAT_2(BOOST_PP_SUB_D(d, l, f), BOOST_PP_REPEAT_FROM_TO_M_2, (d, f, m, dt))
#define SSL_F_SSL_GET_PREV_SESSION 217
#define BOOST_PP_LIST_FOLD_RIGHT_126(o,s,l) BOOST_PP_LIST_FOLD_LEFT_126(o, s, BOOST_PP_LIST_REVERSE_D(126, l))
#define TLSEXT_hash_sha384 5
#define SN_aria_128_ecb "ARIA-128-ECB"
#define TLS1_3_RFC_AES_128_CCM_8_SHA256 "TLS_AES_128_CCM_8_SHA256"
#define SSL_R_SSL_SESSION_ID_CALLBACK_FAILED 301
#define ETXTBSY 26
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101100 (0)(1)(1)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101101 (0)(1)(1)(0)(1)(1)(0)(1),
#define WCHAR_MAX __WCHAR_MAX
#define _GLIBCXX_HAVE_ASINL 1
#define SCNxLEAST32 "x"
#define BOOST_PP_CAT(a,b) BOOST_PP_CAT_I(a, b)
#define _m_pshufw(A,N) _mm_shuffle_pi16 (A, N)
#define HEADER_ASN1_H 
#define BOOST_PP_REPEAT_1_112(m,d) BOOST_PP_REPEAT_1_111(m, d) m(2, 111, d)
#define _AVX512VPOPCNTDQINTRIN_H_INCLUDED 
#define BIO_TYPE_START 128
#define NID_set_policy 516
#define DTLS1_HM_HEADER_LENGTH 12
#define BOOST_PP_FOR_121_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(122, s) BOOST_PP_IIF(c, BOOST_PP_FOR_122, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(122, s), p, o, m)
#define BOOST_PP_FOR_95(s,p,o,m) BOOST_PP_FOR_95_C(BOOST_PP_BOOL(p(96, s)), s, p, o, m)
#define LN_userId "userId"
#define BOOST_TEMPLATED_STREAM_WITH_ALLOC(X,E,T,A) BOOST_JOIN(std::basic_,X)< E , T , A >
#define GFLAGS_GFLAGS_H_ 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101110 (0)(1)(1)(0)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101111 (0)(1)(1)(0)(1)(1)(1)(1),
#define SO_INCOMING_NAPI_ID 56
#define NID_id_tc26_gost_3410_2012_256_paramSetB 1184
#define SN_id_smime_aa_mlExpandHistory "id-smime-aa-mlExpandHistory"
#define BOOST_PP_COMPL_0 1
#define BOOST_PP_COMPL_1 0
#define NID_id_tc26_gost_3410_2012_256_paramSetC 1185
#define SN_aes_192_ecb "AES-192-ECB"
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM "TLS_ECDHE_ECDSA_WITH_AES_128_CCM"
#define BOOST_NESTED_TEMPLATE template
#define _mm256_maskz_slli_epi16(U,X,C) ((__m256i)__builtin_ia32_psllwi256_mask ((__v16hi)(__m256i)(X), (int)(C), (__v16hi)(__m256i)_mm256_setzero_si256 (), (__mmask16)(U)))
#define DCHECK(condition) CHECK(condition)
#define BOOST_PP_FOR_99(s,p,o,m) BOOST_PP_FOR_99_C(BOOST_PP_BOOL(p(100, s)), s, p, o, m)
#define SSL_F_SSL_SHUTDOWN 224
#define RSA_F_PKEY_RSA_CTRL_STR 144
#define BLKRAGET _IO(0x12,99)
#define _SC_PII_INTERNET_DGRAM _SC_PII_INTERNET_DGRAM
#define BOOST_PP_LIST_FOLD_RIGHT_26(o,s,l) BOOST_PP_LIST_FOLD_LEFT_26(o, s, BOOST_PP_LIST_REVERSE_D(26, l))
#define PRIO_PGRP PRIO_PGRP
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_202(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_203(op,st,ss,sz) 0
#define _STREAMBUF_TCC 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_209(op,st,ss,sz) 0
#define _BASIC_IOS_H 1
#define SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES 242
#define SSL_R_BAD_DATA 390
#define NID_bf_ofb64 94
#define X509_FLAG_COMPAT 0
#define SIGTTOU 22
#define BOOST_PP_NODE_35(p) BOOST_PP_IIF(p(35), 35, 36)
#define SMIME_NOINTERN PKCS7_NOINTERN
#define ASN1_F_ASN1_STRING_GET_UINT64 230
#define BLKIOOPT _IO(0x12,121)
#define EVP_R_DIFFERENT_KEY_TYPES 101
#define EVP_R_ERROR_SETTING_FIPS_MODE 166
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_100(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_101(o,s,l) 0
#define OBJ_setct_AuthTokenTBE OBJ_set_ctype,55L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_103(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_104(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_106(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_108(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_109(o,s,l) 0
#define BOOST_MPL_AUX_NA_SPEC_NO_ETI(i,name) BOOST_MPL_AUX_NA_SPEC_MAIN(i, name) BOOST_MPL_AUX_NA_SPEC_LAMBDA(i, name) BOOST_MPL_AUX_NA_SPEC_ARITY(i, name) BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY(i, i, name)
#define OBJ_setct_AuthTokenTBS OBJ_set_ctype,19L
#define BOOST_PP_DEC_122 121
#define RSA_R_INVALID_SALT_LENGTH 150
#define BOOST_INTRUSIVE_INSTANTIATE_EVAL_DEFAULT_TYPE_TMPLT(TNAME) template <typename T, typename DefaultType> struct boost_intrusive_eval_default_type_ ## TNAME { template <typename X> static char test(int, typename X::TNAME*); template <typename X> static int test(...); struct DefaultWrap { typedef typename DefaultType::type TNAME; }; static const bool value = (1 == sizeof(test<T>(0, 0))); typedef typename ::boost::intrusive::detail::eval_if_c < value , ::boost::intrusive::detail::identity<T> , ::boost::intrusive::detail::identity<DefaultWrap> >::type::TNAME type; };
#define OBJ_id_cmc_identification OBJ_id_cmc,2L
#define OBJ_setAttr_IssCap_Sig OBJ_setAttr_IssCap,5L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_111(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_112(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_113(o,s,l) 0
#define __DECL_SIMD_logf64x 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_115(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_116(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_118(o,s,l) 0
#define PEM_R_SHORT_HEADER 112
#define ALLPERMS (S_ISUID|S_ISGID|S_ISVTX|S_IRWXU|S_IRWXG|S_IRWXO)
#define LN_kx_any "kx-any"
#define BOOST_PP_REPEAT_1_118(m,d) BOOST_PP_REPEAT_1_117(m, d) m(2, 117, d)
#define BOOST_PP_SEQ_FOLD_LEFT_209(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_209(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_camellia_128_ecb 754
#define OBJ_ripemd160WithRSA 1L,3L,36L,3L,3L,1L,2L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_120(o,s,l) 0
#define BOOST_CATCH(x) catch(x)
#define __LITTLE_ENDIAN 1234
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_123(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_124(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_126(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_127(o,s,l) 0
#define NID_hmacWithSHA1 163
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_129(o,s,l) 0
#define MAP_EXECUTABLE 0x01000
#define SSL_TXT_kECDHE "kECDHE"
#define LN_sm3WithRSAEncryption "sm3WithRSAEncryption"
#define OBJ_des_ede_ecb OBJ_algorithm,17L
#define _SC_THREAD_STACK_MIN _SC_THREAD_STACK_MIN
#define X509V3_R_OPERATION_NOT_DEFINED 148
#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
#define NID_dhKeyAgreement 28
#define BOOST_MOVE_DOC1ST(TYPE1,TYPE2) TYPE2
#define SSL_TXT_kECDHe "kECDHe"
#define TLS1_CK_ADH_WITH_AES_128_GCM_SHA256 0x030000A6
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_130(o,s,l) 0
#define LN_facsimileTelephoneNumber "facsimileTelephoneNumber"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_134(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_135(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_136(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_137(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_138(o,s,l) 0
#define FS_KEY_DESCRIPTOR_SIZE FSCRYPT_KEY_DESCRIPTOR_SIZE
#define _mm_inserti_si64(X,Y,I,L) ((__m128i) __builtin_ia32_insertqi ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (unsigned int)(I), (unsigned int)(L)))
#define BOOST_PP_TUPLE_ELEM(...) BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_ELEM_O_, __VA_ARGS__)(__VA_ARGS__)
#define CLOCK_MONOTONIC_COARSE 6
#define _GLIBCXX_OS_DEFINES 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_141(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_142(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_144(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_145(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_148(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_149(o,s,l) 0
#define X509_V_ERR_INVALID_NON_CA 37
#define RSA_R_BAD_SIGNATURE 104
#define OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet OBJ_cryptopro,35L,1L
#define HUGE_VALF (__builtin_huge_valf ())
#define __FLT_EVAL_METHOD_TS_18661_3__ 0
#define NID_id_smime_mod_ets_eSigPolicy_88 202
#define BOOST_PP_FOR_81_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(82, s) BOOST_PP_IIF(c, BOOST_PP_FOR_82, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(82, s), p, o, m)
#define RSA_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_RSA, l, p, newf, dupf, freef)
#define ASN1_R_NO_CONTENT_TYPE 209
#define BOOST_PP_SEQ_FOLD_LEFT_193(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_193(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL3_RFC_RSA_DES_192_CBC3_SHA "TLS_RSA_WITH_3DES_EDE_CBC_SHA"
#define BOOST_CONTEXT_HAS_CXXABI_H 
#define NID_rsaEncryption 6
#define SSL_R_BINDER_DOES_NOT_VERIFY 253
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_150(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_153(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_154(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_155(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_156(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_157(o,s,l) 0
#define ____gwchar_t_defined 1
#define XN_FLAG_ONELINE (ASN1_STRFLGS_RFC2253 | ASN1_STRFLGS_ESC_QUOTE | XN_FLAG_SEP_CPLUS_SPC | XN_FLAG_SPC_EQ | XN_FLAG_FN_SN)
#define BOOST_MPL_PUSH_BACK_FWD_HPP_INCLUDED 
#define APACHE_THRIFT_ACCESSOR_arguments 
#define TLS1_CK_DH_RSA_WITH_AES_256_SHA256 0x03000069
#define BOOST_PP_LIST_FOLD_RIGHT_123(o,s,l) BOOST_PP_LIST_FOLD_LEFT_123(o, s, BOOST_PP_LIST_REVERSE_D(123, l))
#define NID_id_smime_mod_ets_eSigPolicy_97 203
#define FSCRYPT_MODE_AES_128_CTS 6
#define LN_camellia_128_ctr "camellia-128-ctr"
#define BOOST_PP_FOR_172_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(173, s) BOOST_PP_IIF(c, BOOST_PP_FOR_173, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(173, s), p, o, m)
#define SN_des_ofb64 "DES-OFB"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_161(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_162(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_163(o,s,l) 0
#define NID_setct_PANToken 520
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_166(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_167(o,s,l) 0
#define SN_setct_AuthRevResTBE "setct-AuthRevResTBE"
#define BOOST_MPL_AND_HPP_INCLUDED 
#define BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET 107
#define SN_setct_AuthRevResTBS "setct-AuthRevResTBS"
#define LN_presentationAddress "presentationAddress"
#define INT_FAST32_WIDTH __WORDSIZE
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110111 (0)(1)(1)(0)(1)(1)(1),
#define ASN1_PCTX_FLAGS_SHOW_ABSENT 0x001
#define PROT_GROWSDOWN 0x01000000
#define TLS1_TXT_SRP_SHA_WITH_AES_256_CBC_SHA "SRP-AES-256-CBC-SHA"
#define FD_SETSIZE __FD_SETSIZE
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_170(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_171(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_172(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_173(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_174(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_175(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_178(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_179(o,s,l) 0
#define OBJ_aes_256_xts OBJ_ieee_siswg,0L,1L,2L
#define _GLIBCXX_TR1_POLY_HERMITE_TCC 1
#define _mm256_fpclass_pd_mask(X,C) ((__mmask8) __builtin_ia32_fpclasspd256_mask ((__v4df) (__m256d) (X), (int) (C),(__mmask8)-1))
#define UINT_FAST16_MAX (18446744073709551615UL)
#define BOOST_PP_FOR_253_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(254, s) BOOST_PP_IIF(c, BOOST_PP_FOR_254, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(254, s), p, o, m)
#define _MM_MASK_UNDERFLOW 0x0800
#define SN_id_tc26_hmac_gost_3411_2012_512 "id-tc26-hmac-gost-3411-2012-512"
#define SSL_CONF_FLAG_REQUIRE_PRIVATE 0x40
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_180(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_182(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_183(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_185(o,s,l) 0
#define OBJ_setct_MeAqCInitResTBS OBJ_set_ctype,43L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_187(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_189(o,s,l) 0
#define NID_rsaesOaep 919
#define SN_ms_code_ind "msCodeInd"
#define FMT_USE_DOUBLE 1
#define TLS1_FLAGS_SKIP_CERT_VERIFY 0x0010
#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8
#define EVP_PKEY_SCRYPT NID_id_scrypt
#define _mm512_maskz_rcp28_round_pd(U,A,C) __builtin_ia32_rcp28pd_mask(A, (__v8df)_mm512_setzero_pd(), U, C)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_191(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_192(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_194(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_195(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_196(o,s,l) 0
#define __linux__ 1
#define S_IREAD S_IRUSR
#define LN_key_usage "X509v3 Key Usage"
#define BOOST_PP_SEQ_FOLD_LEFT_I_21(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_22, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(22, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define DSA_R_INVALID_DIGEST_TYPE 106
#define __cpp_lib_ranges 201911L
#define EC_F_EC_POINT_SET_TO_INFINITY 127
#define TLS1_TXT_DHE_RSA_WITH_AES_256_GCM_SHA384 "DHE-RSA-AES256-GCM-SHA384"
#define SSL_AD_CERTIFICATE_UNKNOWN SSL3_AD_CERTIFICATE_UNKNOWN
#define MOD_CLKA ADJ_OFFSET_SINGLESHOT
#define PKCS7err(f,r) ERR_PUT_error(ERR_LIB_PKCS7,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_MPL_AUX_CONFIG_ARRAYS_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_I_24(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_25, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(25, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_OP_ALL (SSL_OP_CRYPTOPRO_TLSEXT_BUG| SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS| SSL_OP_LEGACY_SERVER_CONNECT| SSL_OP_TLSEXT_PADDING| SSL_OP_SAFARI_ECDHE_ECDSA_BUG)
#define OBJ_pkcs9_extCertAttributes OBJ_pkcs9,9L
#define IPV6_MTU_DISCOVER 23
#define _mm512_mask_cmp_epi64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)(M)))
#define SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT 320
#define INT_FAST8_WIDTH 8
#define SN_id_cmc_lraPOPWitness "id-cmc-lraPOPWitness"
#define si_timerid _sifields._timer.si_tid
#define OBJ_pbeWithMD5AndDES_CBC OBJ_pkcs5,3L
#define BOOST_CORE_ENABLE_IF_HPP 
#define RSA_R_INVALID_PADDING 138
#define BOOST_PP_SEQ_FOLD_LEFT_I_28(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_29, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(29, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SO_REUSEADDR 2
#define LN_sm4_ctr "sm4-ctr"
#define EVP_camellia_128_cfb EVP_camellia_128_cfb128
#define _POSIX_SYNCHRONIZED_IO 200809L
#define OPENSSL_INIT_ADD_ALL_DIGESTS 0x00000008L
#define EVP_PKEY_OP_PARAMGEN (1<<1)
#define BOOST_PP_FOR_188_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(189, s) BOOST_PP_IIF(c, BOOST_PP_FOR_189, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(189, s), p, o, m)
#define SSL_TXT_PSK "PSK"
#define CHECK_STRCASEEQ(s1,s2) CHECK_STROP(strcasecmp, ==, true, s1, s2)
#define _FUNCTEXCEPT_H 1
#define ASN1_F_ASN1_D2I_EX_PRIMITIVE 108
#define LN_pbmac1 "PBMAC1"
#define BOOST_PP_SEQ_ELEM_92(_) BOOST_PP_SEQ_ELEM_91
#define BOOST_PP_REPEAT_3_81(m,d) BOOST_PP_REPEAT_3_80(m, d) m(4, 80, d)
#define _CS_XBS5_LP64_OFF64_LDFLAGS _CS_XBS5_LP64_OFF64_LDFLAGS
#define EVP_PKEY_FLAG_AUTOARGLEN 2
#define BOOST_PP_WHILE_90_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_91, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(91, s))
#define BOOST_PP_WHILE_126_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_127, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(127, s))
#define BOOST_PREPROCESSOR_ARITHMETIC_DEC_HPP 
#define _POSIX_TIMEOUTS 200809L
#define OBJ_pilotPerson OBJ_pilotObjectClass,4L
#define X509V3_ADD_APPEND 1L
#define BOOST_DETAIL_CREATE_TRIPLE_COMPLETION_SEQUENCE_0 
#define BOOST_DETAIL_CREATE_TRIPLE_COMPLETION_SEQUENCE_1 (0)(0)
#define BOOST_DETAIL_CREATE_TRIPLE_COMPLETION_SEQUENCE_2 (0)
#define SN_id_mod_timestamp_protocol "id-mod-timestamp-protocol"
#define BOOST_PP_SEQ_ELEM_95(_) BOOST_PP_SEQ_ELEM_94
#define BOOST_PP_REPEAT_3_84(m,d) BOOST_PP_REPEAT_3_83(m, d) m(4, 83, d)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110 (1)(1)(0),
#define RAND_R_ERROR_RETRIEVING_ADDITIONAL_INPUT 109
#define _BITS_TIMEX_H 1
#define SN_pbeWithMD2AndDES_CBC "PBE-MD2-DES"
#define IDP_INDIRECT 0x20
#define OBJ_netscape_cert_type OBJ_netscape_cert_extension,1L
#define LN_camellia_128_cfb1 "camellia-128-cfb1"
#define PTHREAD_INHERIT_SCHED PTHREAD_INHERIT_SCHED
#define LN_camellia_128_cfb8 "camellia-128-cfb8"
#define SSL_F_TLS_CONSTRUCT_CERT_STATUS 429
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111 (1)(1)(1),
#define EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT 0x1b
#define CHARCLASS_NAME_MAX 2048
#define BOOST_PP_WHILE_235_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_236, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(236, s))
#define CERT_PKEY_EXPLICIT_SIGN 0x100
#define EVP_CTRL_SET_RC5_ROUNDS 0x5
#define SN_pbe_WithSHA1And128BitRC4 "PBE-SHA1-RC4-128"
#define NID_physicalDeliveryOfficeName 863
#define BOOST_TT_SAME_TRAITS_HPP_INCLUDED 
#define _LINUX_SWAB_H 
#define _GLIBCXX_CHARCONV_H 1
#define LN_camellia_192_cbc "camellia-192-cbc"
#define MOD_OFFSET ADJ_OFFSET
#define BOOST_PP_FOR_13_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(14, s) BOOST_PP_IIF(c, BOOST_PP_FOR_14, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(14, s), p, o, m)
#define OBJ_set_brand OBJ_id_set,8L
#define DH_NOT_SUITABLE_GENERATOR 0x08
#define BOOST_MPL_LIST_HPP_INCLUDED 
#define NID_id_smime_aa_ets_otherSigCert 230
#define HEADER_ERR_H 
#define NID_netscape_ca_revocation_url 74
#define PRIO_PROCESS PRIO_PROCESS
#define SN_id_it_currentCRL "id-it-currentCRL"
#define OBJ_id_smime_cti_ets_proofOfCreation OBJ_id_smime_cti,6L
#define _MSC_VER_WORKAROUND_GUARD 1
#define BIO_get_accept_name(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,0))
#define LN_camellia_256_cmac "camellia-256-cmac"
#define SN_setAttr_TokenType "setAttr-TokenType"
#define ETIMEDOUT 110
#define LN_camellia_192_ccm "camellia-192-ccm"
#define NID_ms_efs 138
#define LN_rsadsi "RSA Data Security, Inc."
#define SSL_CTX_set_tlsext_servername_callback(ctx,cb) SSL_CTX_callback_ctrl(ctx,SSL_CTRL_SET_TLSEXT_SERVERNAME_CB, (void (*)(void))cb)
#define SYSLOG_IF(severity,condition) static_cast<void>(0), !(condition) ? (void) 0 : google::LogMessageVoidify() & SYSLOG(severity)
#define NID_aes_192_ocb 959
#define BOOST_PP_SEQ_FOLD_LEFT_213(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_213(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_ffdhe8192 1130
#define SN_ua_pki "ua-pki"
#define RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY 112
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_33(p,o,s) 0
#define LN_zlib_compression "zlib compression"
#define RSA_R_SLEN_RECOVERY_FAILED 135
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_213(o,s,l) 0
#define _GLIBCXX_HAVE_LINUX_RANDOM_H 1
#define X509V3_R_INVALID_NUMBER 140
#define FSCRYPT_POLICY_FLAG_DIRECT_KEY 0x04
#define BOOST_PP_VARIADIC_HAS_OPT_FUNCTION(...) __VA_OPT__(,) , 1, 0
#define TLS1_RT_CRYPTO_WRITE 0x0100
#define NID_id_pkip 261
#define NID_id_pkix 127
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000010 (1)(1)(0)(0)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000011 (1)(1)(0)(0)(0)(0)(1)(1),
#define DN_ACCESS 0x00000001
#define _GLIBCXX_USE_C11_UCHAR_CXX11 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_195 195
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_215(o,s,l) 0
#define BOOST_VARIANT_BAD_VISIT_HPP 
#define _POSIX_V6_LPBIG_OFFBIG -1
#define __CONCAT(x,y) x ## y
#define __USE_LARGEFILE64 1
#define EVP_F_AES_T4_INIT_KEY 178
#define SSL3_MT_CERTIFICATE_VERIFY 15
#define SSL_EXT_TLS1_3_NEW_SESSION_TICKET 0x2000
#define ASN1_F_ASN1_ITEM_EMBED_D2I 120
#define FMT_ENABLE_IF(...) enable_if_t<(__VA_ARGS__), int> = 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_63(op,st,ss,sz) 0
#define BOOST_TT_ENABLE_IF_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_217(o,s,l) 0
#define FSCRYPT_MODE_AES_256_CTS 4
#define _bit_scan_reverse(a) __bsrd(a)
#define BOOST_PREPROCESSOR_FACILITIES_EMPTY_HPP 
#define CHECK_STRCASENE(s1,s2) CHECK_STROP(strcasecmp, !=, false, s1, s2)
#define __BITS_PER_LONG 64
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_218(o,s,l) 0
#define TLS1_RFC_ADH_WITH_AES_256_SHA256 "TLS_DH_anon_WITH_AES_256_CBC_SHA256"
#define BOOST_PREPROCESSOR_SEQ_CAT_HPP 
#define BOOST_HASH_CONFORMANT_FLOATS 1
#define SSL_OP_NO_SSLv2 0x0
#define SSL_OP_NO_SSLv3 0x02000000U
#define BLKSECTGET _IO(0x12,103)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_219(o,s,l) 0
#define BOOST_VARIANT_DETAIL_SUBSTITUTE_HPP 
#define TLS1_CK_DHE_RSA_WITH_AES_256_SHA256 0x0300006B
#define SSL_CTRL_SET_MAX_SEND_FRAGMENT 52
#define RSA_R_DATA_GREATER_THAN_MOD_LEN 108
#define EVENT__SIZEOF_SHORT 2
#define SODIUM_MIN(A,B) ((A) < (B) ? (A) : (B))
#define BOOST_PP_LIST_FOLD_RIGHT_130(o,s,l) BOOST_PP_LIST_FOLD_LEFT_130(o, s, BOOST_PP_LIST_REVERSE_D(130, l))
#define BOOST_PP_FOR_3(s,p,o,m) BOOST_PP_FOR_3_C(BOOST_PP_BOOL(p(4, s)), s, p, o, m)
#define BOOST_PREPROCESSOR_VARIADIC_SIZE_HPP 
#define BIO_R_MALFORMED_HOST_OR_SERVICE 130
#define _mm_reduce_pd(A,B) ((__m128d) __builtin_ia32_reducepd128_mask ((__v2df)(__m128d)(A), (int)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1))
#define NID_setCext_IssuerCapabilities 619
#define RSA_F_RSA_MGF1_TO_MD 157
#define OBJ_ms_upn 1L,3L,6L,1L,4L,1L,311L,20L,2L,3L
#define _mm_mask_min_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_minsd_mask_round(A, B, W, U, C)
#define SN_Enterprises "enterprises"
#define SN_invalidity_date "invalidityDate"
#define UNREACHABLE() (abort())
#define TCP_INQ 36
#define _mm_mask_min_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_minss_mask_round(A, B, W, U, C)
#define _mm512_i64gather_pd(INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gatherdiv8df ((__v8df)_mm512_undefined_pd(), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8)0xFF, (int) (SCALE))
#define EVP_PKEY_CTX_set_dh_pad(ctx,pad) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_PAD, pad, NULL)
#define FSCRYPT_KEY_DESC_PREFIX "fscrypt:"
#define OBJ_des_ede3_cbc OBJ_rsadsi,3L,7L
#define _mm512_maskz_sub_round_pd(U,A,B,C) (__m512d)__builtin_ia32_subpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)
#define AF_INET6 PF_INET6
#define RSA_F_RSA_MULTIP_INFO_NEW 166
#define SN_aria_192_ecb "ARIA-192-ECB"
#define _mm512_maskz_sub_round_ps(U,A,B,C) (__m512)__builtin_ia32_subps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)
#define BOOST_PP_WHILE_4_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_5, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(5, s))
#define SSL3_TXT_DH_DSS_DES_40_CBC_SHA "EXP-DH-DSS-DES-CBC-SHA"
#define PKCS7_NOCERTS 0x2
#define __cpp_char8_t 201811L
#define SN_pkInitClientAuth "pkInitClientAuth"
#define BOOST_PP_INC_240 241
#define STA_CLOCKERR 0x1000
#define _SC_SPORADIC_SERVER _SC_SPORADIC_SERVER
#define SSLEAY_DIR OPENSSL_DIR
#define ASN1_R_ILLEGAL_INTEGER 180
#define BOOST_PP_LIST_FOLD_RIGHT_139(o,s,l) BOOST_PP_LIST_FOLD_LEFT_139(o, s, BOOST_PP_LIST_REVERSE_D(139, l))
#define _mm256_insertf64x2(X,Y,C) ((__m256d) __builtin_ia32_insertf64x2_256_mask ((__v4df)(__m256d) (X), (__v2df)(__m128d) (Y), (int) (C), (__v4df)(__m256d)_mm256_setzero_pd(), (__mmask8)-1))
#define _POSIX_SPAWN 200809L
#define _GLIBCXX_HAVE_ISNANF 1
#define ATOMIC_CHAR_LOCK_FREE __GCC_ATOMIC_CHAR_LOCK_FREE
#define _GLIBCXX_HAVE_ISNANL 1
#define SN_X9_62_id_ecPublicKey "id-ecPublicKey"
#define FOLLY_SSSE 0
#define SN_id_tc26_gost_3410_2012_256_paramSetB "id-tc26-gost-3410-2012-256-paramSetB"
#define SN_id_tc26_gost_3410_2012_256_paramSetC "id-tc26-gost-3410-2012-256-paramSetC"
#define SN_id_tc26_gost_3410_2012_256_paramSetD "id-tc26-gost-3410-2012-256-paramSetD"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_148(op,st,ss,sz) 0
#define BOOST_PP_FOR_229_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(230, s) BOOST_PP_IIF(c, BOOST_PP_FOR_230, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(230, s), p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000 (0)(0)(0)(0)(0),
#define si_status _sifields._sigchld.si_status
#define OBJ_set_policy_root OBJ_set_policy,0L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_11(op,st,ss,sz) 0
#define AF_WANPIPE PF_WANPIPE
#define B_ASN1_PRINTABLESTRING 0x0002
#define LN_id_GostR3411_94_with_GostR3410_2001_cc "GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom"
#define _mm_blend_epi32(X,Y,M) ((__m128i) __builtin_ia32_pblendd128 ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(M)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001 (0)(0)(0)(0)(1),
#define FMT_ICC_VERSION 0
#define BOOST_PP_REPEAT_3_139(m,d) BOOST_PP_REPEAT_3_138(m, d) m(4, 138, d)
#define RAND_R_GENERATE_ERROR 112
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_76(op,st,ss,sz) 0
#define _GLIBCXX_BIT 1
#define FOLLY_APPLE_TVOS 0
#define OBJ_issuer_alt_name OBJ_id_ce,18L
#define NID_pbe_WithSHA1And128BitRC2_CBC 148
#define BN_F_BN_GF2M_MOD_SQRT 137
#define TLS1_3_RFC_CHACHA20_POLY1305_SHA256 "TLS_CHACHA20_POLY1305_SHA256"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_66(o,s,l) 0
#define _mm512_i64gather_ps(INDEX,ADDR,SCALE) (__m256) __builtin_ia32_gatherdiv16sf ((__v8sf)_mm256_undefined_ps(), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8)0xFF, (int) (SCALE))
#define __PIC__ 2
#define EVP_PKEY_CTX_get_rsa_mgf1_md(ctx,pmd) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_GET_RSA_MGF1_MD, 0, (void *)(pmd))
#define V_ASN1_CONSTRUCTED 0x20
#define BIO_R_NO_SUCH_FILE 128
#define SN_netscape "Netscape"
#define SN_id_smime_aa_ets_signerAttr "id-smime-aa-ets-signerAttr"
#define BOOST_PP_SEQ_FOLD_LEFT_I_33(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_34, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(34, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_34(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_35, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(35, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BN_F_BNRAND 127
#define SSL_F_SSL_CTX_NEW 169
#define hex_to_string OPENSSL_buf2hexstr
#define SN_id_smime_aa_ets_certCRLTimestamp "id-smime-aa-ets-certCRLTimestamp"
#define BOOST_PP_WHILE_37(p,o,s) BOOST_PP_WHILE_37_C(BOOST_PP_BOOL(p(38, s)), p, o, s)
#define TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE 113
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_31(p,o,s) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_37(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_38, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(38, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define TLS1_TXT_ECDH_anon_WITH_RC4_128_SHA "AECDH-RC4-SHA"
#define BOOST_PP_WHILE_110_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_111, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(111, s))
#define _GLIBCXX_USE_CLOCK_REALTIME 1
#define NID_SNILS 1006
#define SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 "id-tc26-wrap-gostr3412-2015-kuznyechik-kexp15"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_14(op,st,ss,sz) 0
#define _GLIBCXX_HAVE_STDLIB_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_39(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_40, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(40, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PREPROCESSOR_INC_HPP 
#define OBJ_internationaliSDNNumber OBJ_X509,25L
#define BOOST_VERIFY_MSG(expr,msg) BOOST_ASSERT_MSG(expr,msg)
#define BIO_set_bind_mode(b,mode) BIO_ctrl(b,BIO_C_SET_BIND_MODE,mode,NULL)
#define EC_R_WRONG_CURVE_PARAMETERS 145
#define LC_IDENTIFICATION __LC_IDENTIFICATION
#define BOOST_PP_LIST_FOLD_RIGHT_30(o,s,l) BOOST_PP_LIST_FOLD_LEFT_30(o, s, BOOST_PP_LIST_REVERSE_D(30, l))
#define BOOST_MPL_AUX_CONFIG_INTEGRAL_HPP_INCLUDED 
#define OBJ_des_cbc OBJ_algorithm,7L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001000 (1)(0)(0)(0)(1)(0)(0)(0),
#define __sigstack_defined 1
#define BOOST_PP_LIST_FOLD_RIGHT_31(o,s,l) BOOST_PP_LIST_FOLD_LEFT_31(o, s, BOOST_PP_LIST_REVERSE_D(31, l))
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
#define TLS_MD_IV_BLOCK_CONST_SIZE 8
#define _BITS_FLOATN_H 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010100 (1)(1)(0)(1)(0)(1)(0)(0),
#define _PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(PRM) 
#define BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_1(bit) ( ( bit, BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_2
#define __SIZEOF_LONG__ 8
#define _IONBF 2
#define DH_F_DH_NEW_METHOD 105
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_35(p,o,s) 0
#define OBJ_ucl OBJ_pss,19200300L
#define SSL_F_SSL_NEXT_PROTO_VALIDATE 565
#define _GLIBCXX_HAVE_STDALIGN_H 1
#define SN_ad_dvcs "AD_DVCS"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011100 (1)(0)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011111 (0)(1)(0)(1)(1)(1)(1)(1),
#define RC4_INT unsigned int
#define PF_NETLINK 16
#define RSA_F_RSA_PSS_TO_CTX 155
#define SN_id_camellia192_wrap "id-camellia192-wrap"
#define __UINT16_C(c) c
#define EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY 208
#define BOOST_MOVE_STD_NS_END _GLIBCXX_END_NAMESPACE_VERSION }
#define TLS1_TXT_ECDH_RSA_WITH_DES_192_CBC3_SHA "ECDH-RSA-DES-CBC3-SHA"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_136 136
#define TLS1_TXT_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA "SRP-RSA-3DES-EDE-CBC-SHA"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011101 (1)(0)(1)(1)(1)(0)(1),
#define EVP_PKEY_ED25519 NID_ED25519
#define TLS1_RFC_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA "TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA"
#define ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH 215
#define FOLLY_HAVE_PWRITEV 1
#define TLS1_CK_DHE_PSK_WITH_AES_128_CCM_8 0x0300C0AA
#define OPENSSL_strdup(str) CRYPTO_strdup(str, OPENSSL_FILE, OPENSSL_LINE)
#define OBJ_aria 1L,2L,410L,200046L,1L,1L
#define SN_pbe_WithSHA1And2_Key_TripleDES_CBC "PBE-SHA1-2DES"
#define NID_id_smime_aa_ets_revocationValues 235
#define RAND_R_ENTROPY_OUT_OF_RANGE 124
#define _mm256_srai_epi64(A,B) ((__m256i) __builtin_ia32_psraqi256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)_mm256_setzero_si256 (), (__mmask8)-1))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100100 (0)(0)(1)(0)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100101 (0)(0)(1)(0)(0)(1)(0)(1),
#define EVP_F_CAMELLIA_INIT_KEY 159
#define SN_id_mod_dvcs "id-mod-dvcs"
#define OBJ_X9_62_onBasis OBJ_X9_62_id_characteristic_two_basis,1L
#define AF_CAN PF_CAN
#define SCNdLEAST16 "hd"
#define CT_F_CTLOG_STORE_LOAD_FILE 123
#define BIO_TYPE_NULL_FILTER (17|BIO_TYPE_FILTER)
#define LN_camellia_192_ctr "camellia-192-ctr"
#define SSL_CB_ACCEPT_EXIT (SSL_ST_ACCEPT|SSL_CB_EXIT)
#define _mm_mask_range_round_ss(W,U,A,B,C,R) ((__m128) __builtin_ia32_rangess128_mask_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U), (R)))
#define EVP_PKEY_CTX_get_ecdh_kdf_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_EC_KDF_MD, 0, (void *)(pmd))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100110 (0)(0)(1)(0)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100111 (0)(0)(1)(0)(0)(1)(1)(1),
#define __INTMAX_WIDTH__ 64
#define _GLIBCXX_GCC_GTHR_POSIX_H 
#define _mm_insert_epi8(D,S,N) ((__m128i) __builtin_ia32_vec_set_v16qi ((__v16qi)(__m128i)(D), (int)(S), (int)(N)))
#define _mm_round_ss(D,V,M) ((__m128) __builtin_ia32_roundss ((__v4sf)(__m128)(D), (__v4sf)(__m128)(V), (int)(M)))
#define ATOMIC_CHAR8_T_LOCK_FREE __GCC_ATOMIC_CHAR8_T_LOCK_FREE
#define _mm_maskz_shuffle_epi32(U,X,C) ((__m128i) __builtin_ia32_pshufd128_mask ((__v4si)(__m128i)(X), (int)(C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define FOLLY_HAVE_ELF 1
#define LN_telexNumber "telexNumber"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_41(p,o,s) 0
#define ENOTSOCK 88
#define _mm_roti_epi16(A,N) ((__m128i) __builtin_ia32_vprotwi ((__v8hi)(__m128i)(A), (int)(N)))
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 "ECDH-ECDSA-AES256-GCM-SHA384"
#define ASN1_R_UNKNOWN_OBJECT_TYPE 162
#define SCNdLEAST32 "d"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111001 (0)(0)(1)(1)(1)(0)(0)(1),
#define event_get_signal(ev) ((int)event_get_fd(ev))
#define _mm256_maskz_range_pd(U,A,B,C) ((__m256d) __builtin_ia32_rangepd256_mask ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)_mm256_setzero_pd(), (__mmask8)(U)))
#define SSL_TXT_kDHEPSK "kDHEPSK"
#define BOOST_HAS_TRIVIAL_DESTRUCTOR(T) (__has_trivial_destructor(T) BOOST_INTEL_TT_OPTS && is_destructible<T>::value)
#define __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
#define _mm512_i32gather_ps(INDEX,ADDR,SCALE) (__m512) __builtin_ia32_gathersiv16sf ((__v16sf)_mm512_undefined_ps(), (void const *) (ADDR), (__v16si)(__m512i) (INDEX), (__mmask16)0xFFFF, (int) (SCALE))
#define _mm256_maskz_range_ps(U,A,B,C) ((__m256) __builtin_ia32_rangeps256_mask ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U)))
#define BOOST_DO_JOIN2(X,Y) X ##Y
#define __glibcxx_requires_cond(_Cond,_Msg) 
#define OPENSSL_NO_STATIC_ENGINE 
#define BOOST_PP_SEQ_FOLD_LEFT_227(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_227(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256"
#define SSL_F_TLS_PROCESS_FINISHED 364
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111010 (0)(0)(1)(1)(1)(0)(1)(0),
#define LN_sendProxiedOwner "Send Proxied Owner"
#define BIO_CTRL_DUP 12
#define EVENT__HAVE_STDINT_H 1
#define LN_dsaWithSHA1_2 "dsaWithSHA1-old"
#define BOOST_PP_DEC_137 136
#define HEADER_OBJECTS_H 
#define _mm_roti_epi32(A,N) ((__m128i) __builtin_ia32_vprotdi ((__v4si)(__m128i)(A), (int)(N)))
#define NID_id_aes128_wrap_pad 897
#define EC_R_DISCRIMINANT_IS_ZERO 118
#define TCPOPT_SACK 5
#define SSL_F_SSL_READ 223
#define OBJ_pilot OBJ_ucl,100L
#define PEM_STRING_PUBLIC "PUBLIC KEY"
#define SCNdLEAST64 __PRI64_PREFIX "d"
#define BOOST_PP_WHILE_89_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_90, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(90, s))
#define EVP_R_DECODE_ERROR 114
#define RSA_F_RSA_BUILTIN_KEYGEN 129
#define _mm256_maskz_permutex_pd(U,A,B) ((__m256d) __builtin_ia32_permdf256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)(U)))
#define NID_freshest_crl 857
#define BIO_F_BIO_SOCKET 140
#define BOOST_PP_REPEAT_3_102(m,d) BOOST_PP_REPEAT_3_101(m, d) m(4, 101, d)
#define LN_deltaRevocationList "deltaRevocationList"
#define _T_PTRDIFF 
#define BOOST_PREPROCESSOR_TUPLE_SIZE_HPP 
#define BOOST_DETAIL_TEMPLATED_STREAMS_HPP 
#define EVP_OpenUpdate(a,b,c,d,e) EVP_DecryptUpdate(a,b,c,d,e)
#define EVP_camellia_192_cfb EVP_camellia_192_cfb128
#define _GLIBCXX_CLIMITS 1
#define _mm512_mask_inserti32x4(A,B,X,Y,C) ((__m512i) __builtin_ia32_inserti32x4_mask ((__v16si)(__m512i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v16si)(__m512i) (A), (__mmask16)(B)))
#define _mm512_mask_inserti32x8(W,U,X,Y,C) ((__m512i) __builtin_ia32_inserti32x8_mask ((__v16si)(__m512i) (X), (__v8si)(__m256i) (Y), (int) (C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define CLONE_FILES 0x00000400
#define BOOST_PP_REPEAT_3_103(m,d) BOOST_PP_REPEAT_3_102(m, d) m(4, 102, d)
#define BOOST_PP_LIST_FOLD_RIGHT_141(o,s,l) BOOST_PP_LIST_FOLD_LEFT_141(o, s, BOOST_PP_LIST_REVERSE_D(141, l))
#define _mm256_mmask_i32gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256d) __builtin_ia32_gather3siv4df ((__v4df)(__m256d) (V1OLD), (void const *) (ADDR), (__v4si)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define CRYPTO_F_CRYPTO_OCB128_INIT 122
#define _mm256_mmask_i32gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256) __builtin_ia32_gather3siv8sf ((__v8sf)(__m256) (V1OLD), (void const *) (ADDR), (__v8si)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define BOOST_PP_LIST_FOLD_RIGHT_142(o,s,l) BOOST_PP_LIST_FOLD_LEFT_142(o, s, BOOST_PP_LIST_REVERSE_D(142, l))
#define BOOST_CHECKED_DELETE_HPP 
#define L_ctermid 9
#define BOOST_PP_LIST_FOLD_RIGHT_143(o,s,l) BOOST_PP_LIST_FOLD_LEFT_143(o, s, BOOST_PP_LIST_REVERSE_D(143, l))
#define BOOST_PP_SEQ_SIZE_160(_) BOOST_PP_SEQ_SIZE_161
#define LN_des_ede_cbc "des-ede-cbc"
#define LN_netscape_comment "Netscape Comment"
#define BIO_get_write_guarantee(b) (int)BIO_ctrl(b,BIO_C_GET_WRITE_GUARANTEE,0,NULL)
#define CHECKED_PPTR_OF(type,p) ((void**) (1 ? p : (type**)0))
#define XN_FLAG_RFC2253 (ASN1_STRFLGS_RFC2253 | XN_FLAG_SEP_COMMA_PLUS | XN_FLAG_DN_REV | XN_FLAG_FN_SN | XN_FLAG_DUMP_UNKNOWN_FIELDS)
#define ASN1_R_INVALID_SEPARATOR 131
#define BOOST_DETAIL_FIXED_COMPL_0 1
#define BOOST_HAS_GETTIMEOFDAY 
#define BOOST_PP_LIST_FOLD_RIGHT_146(o,s,l) BOOST_PP_LIST_FOLD_LEFT_146(o, s, BOOST_PP_LIST_REVERSE_D(146, l))
#define ASN1_R_ADDING_OBJECT 171
#define BOOST_HAS_NL_TYPES_H 
#define SN_id_it_keyPairParamRep "id-it-keyPairParamRep"
#define BOOST_PP_LIST_FOLD_RIGHT_149(o,s,l) BOOST_PP_LIST_FOLD_LEFT_149(o, s, BOOST_PP_LIST_REVERSE_D(149, l))
#define SN_pbe_WithSHA1And128BitRC2_CBC "PBE-SHA1-RC2-128"
#define M_2_PIf128 __f128 (0.636619772367581343075535053490057448)
#define WORKAROUND_DWA2002126_HPP 
#define SCOPE_EXIT auto FB_ANONYMOUS_VARIABLE(SCOPE_EXIT_STATE) = ::folly::detail::ScopeGuardOnExit() + [&]() noexcept
#define BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES 
#define BOOST_PP_INTERCEPT_151 
#define BOOST_PP_WHILE_224(p,o,s) BOOST_PP_WHILE_224_C(BOOST_PP_BOOL(p(225, s)), p, o, s)
#define SCNxMAX __PRI64_PREFIX "x"
#define __cpp_lib_jthread 201911L
#define FOLLY_HAVE_LINUX_VDSO 1
#define _GLIBCXX_RES_LIMITS 1
#define BEV_EVENT_READING 0x01
#define TLS1_RFC_RSA_PSK_WITH_AES_256_GCM_SHA384 "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384"
#define BOOST_PP_ENUM_TRAILING_PARAMS(count,param) BOOST_PP_REPEAT(count, BOOST_PP_ENUM_TRAILING_PARAMS_M, param)
#define BOOST_ITERATOR_REF_CONSTNESS_KILLS_WRITABILITY 1
#define BOOST_PP_LIST_FOLD_RIGHT_132(o,s,l) BOOST_PP_LIST_FOLD_LEFT_132(o, s, BOOST_PP_LIST_REVERSE_D(132, l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011 (0)(0)(0)(1)(1),
#define NID_ms_csp_name 417
#define OBJ_anyExtendedKeyUsage OBJ_ext_key_usage,0L
#define BOOST_PP_REPEAT_3_108(m,d) BOOST_PP_REPEAT_3_107(m, d) m(4, 107, d)
#define _STREAM_ITERATOR_H 1
#define __ONCE_ALIGNMENT 
#define _PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(PRM) _PSTL_PRAGMA(omp scan exclusive(PRM))
#define EV_INT32_MAX INT32_MAX
#define EVP_CTRL_AEAD_SET_MAC_KEY 0x17
#define SSL_set1_verify_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_VERIFY_CERT_STORE,1,(char *)(st))
#define BOOST_PP_SEQ_FOLD_LEFT_I_41(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_42, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(42, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define FMT_CORE_H_ 
#define BN_F_BN_GENERATE_PRIME_EX 141
#define BOOST_PP_SEQ_FOLD_LEFT_I_42(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_43, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(43, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define O_FSYNC O_SYNC
#define OBJ_id_GostR3411_2012_256 OBJ_id_tc26_digest,2L
#define BOOST_PP_SEQ_ELEM_252(_) BOOST_PP_SEQ_ELEM_251
#define OBJ_brainpoolP224r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,5L
#define BOOST_PP_SEQ_FOLD_LEFT_I_44(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_45, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(45, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _mm256_maskz_permutex_epi64(M,X,I) ((__m256i) __builtin_ia32_permdi256_mask ((__v4di)(__m256i)(X), (int)(I), (__v4di)(__m256i) (_mm256_setzero_si256 ()), (__mmask8)(M)))
#define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
#define BOOST_PP_SEQ_SIZE_167(_) BOOST_PP_SEQ_SIZE_168
#define _GLIBCXX_HAVE_ICONV 1
#define BOOST_PP_REPEAT_3_90(m,d) BOOST_PP_REPEAT_3_89(m, d) m(4, 89, d)
#define BIO_set_app_data(s,arg) BIO_set_ex_data(s,0,arg)
#define BOOST_PP_WHILE_71_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_72, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(72, s))
#define __DBL_MAX__ double(1.79769313486231570814527423731704357e+308L)
#define FOLLY_OPENSSL_HAS_ALPN 1
#define FS_IOC_ADD_ENCRYPTION_KEY _IOWR('f', 23, struct fscrypt_add_key_arg)
#define OBJ_uniqueMember OBJ_X509,50L
#define _BITS_STDINT_UINTN_H 1
#define BOOST_PP_REPEAT_3_5(m,d) BOOST_PP_REPEAT_3_4(m, d) m(4, 4, d)
#define _CS_LFS64_CFLAGS _CS_LFS64_CFLAGS
#define BOOST_PP_REPEAT_3_6(m,d) BOOST_PP_REPEAT_3_5(m, d) m(4, 5, d)
#define __cpp_raw_strings 200710L
#define EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS 264
#define BOOST_PP_REPEAT_1_121(m,d) BOOST_PP_REPEAT_1_120(m, d) m(2, 120, d)
#define OBJ_brainpoolP224t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,6L
#define SSL3_RT_HEADER_LENGTH 5
#define BOOST_PP_REPEAT_3_92(m,d) BOOST_PP_REPEAT_3_91(m, d) m(4, 91, d)
#define BOOST_PP_LIST_FOLD_RIGHT_137(o,s,l) BOOST_PP_LIST_FOLD_LEFT_137(o, s, BOOST_PP_LIST_REVERSE_D(137, l))
#define BOOST_ASSERT_SOURCE_LOCATION_HPP_INCLUDED 
#define BOOST_PP_REPEAT_3_8(m,d) BOOST_PP_REPEAT_3_7(m, d) m(4, 7, d)
#define TLS1_TXT_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 "RSA-PSK-CAMELLIA128-SHA256"
#define BOOST_ITERATOR_FACADE_23022003THW_HPP 
#define WEOF (0xffffffffu)
#define sk_delete OPENSSL_sk_delete
#define BOOST_PP_LIST_FOLD_RIGHT_138(o,s,l) BOOST_PP_LIST_FOLD_LEFT_138(o, s, BOOST_PP_LIST_REVERSE_D(138, l))
#define ECOMM 70
#define _POSIX_NGROUPS_MAX 8
#define ASN1_R_ILLEGAL_NEGATIVE_VALUE 226
#define EVP_PKEY_CTX_get_ecdh_kdf_type(ctx) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_TYPE, -2, NULL)
#define _mm_cvt_roundu64_sd(A,B,C) (__m128d)__builtin_ia32_cvtusi2sd64(A, B, C)
#define SSL_F_TLS_CONSTRUCT_STOC_STATUS_REQUEST 461
#define __glibcxx_requires_subscript(_N) 
#define SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS 230
#define UDP_CORK 1
#define SN_countryCode3n "n3"
#define __SIZEOF_PTHREAD_RWLOCK_T 56
#define _mm_cvt_roundu64_ss(A,B,C) (__m128)__builtin_ia32_cvtusi2ss64(A, B, C)
#define __cpp_lib_uncaught_exceptions 201411L
#define MOVE_MOUNT__MASK 0x00000077
#define __HAVE_SPECULATION_SAFE_VALUE 1
#define BOOST_MPL_DEREF_HPP_INCLUDED 
#define SN_aes_192_cbc_hmac_sha1 "AES-192-CBC-HMAC-SHA1"
#define SSL_CTRL_SET_READ_AHEAD 41
#define IORING_REGISTER_EVENTFD 4
#define TLS1_RFC_SRP_SHA_RSA_WITH_AES_256_CBC_SHA "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA"
#define NID_aes_256_gcm 901
#define SN_setCext_merchData "setCext-merchData"
#define NID_pilotOrganization 455
#define SIGEV_THREAD_ID SIGEV_THREAD_ID
#define ERR_LIB_COMP 41
#define SSL_EARLY_DATA_ACCEPTED 2
#define BOOST_PP_LIST_FOLD_RIGHT_247(o,s,l) BOOST_PP_LIST_FOLD_LEFT_247(o, s, BOOST_PP_LIST_REVERSE_D(247, l))
#define _SIGNAL_H 
#define NID_setct_PANOnly 521
#define RSA_R_N_DOES_NOT_EQUAL_P_Q 127
#define SSL_CTRL_GET_GROUPS 90
#define NID_id_tc26_algorithms 977
#define BOOST_PP_REPEAT_3_98(m,d) BOOST_PP_REPEAT_3_97(m, d) m(4, 97, d)
#define OBJ_postalAddress OBJ_X509,16L
#define NID_auth_rsa 1046
#define ub_common_name 64
#define SSL_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_SSL, l, p, newf, dupf, freef)
#define BOOST_PP_WHILE_87_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_88, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(88, s))
#define EVP_CIPH_FLAG_DEFAULT_ASN1 0x1000
#define _ITERATOR_CONCEPTS_H 1
#define BOOST_PP_FOR_190_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(191, s) BOOST_PP_IIF(c, BOOST_PP_FOR_191, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(191, s), p, o, m)
#define BIO_make_bio_pair(b1,b2) (int)BIO_ctrl(b1,BIO_C_MAKE_BIO_PAIR,0,b2)
#define SSL_F_TLS_PROCESS_CHANGE_CIPHER_SPEC 363
#define DC_DISALLOW_IMPLICIT_CONSTRUCTORS(TypeName) TypeName(); DC_DISALLOW_COPY_AND_ASSIGN(TypeName)
#define be32toh(x) __bswap_32 (x)
#define _XMMINTRIN_H_INCLUDED 
#define BIO_set_info_callback(b,cb) (int)BIO_callback_ctrl(b,BIO_CTRL_SET_CALLBACK,cb)
#define BOOST_PP_REPEAT_3_I(c,m,d) BOOST_PP_REPEAT_3_ ## c(m, d)
#define IPPROTO_SCTP IPPROTO_SCTP
#define BIO_buffer_peek(b,s,l) BIO_ctrl(b,BIO_CTRL_PEEK,(l),(s))
#define SN_RSA_SHA3_384 "id-rsassa-pkcs1-v1_5-with-sha3-384"
#define _PC_REC_MAX_XFER_SIZE _PC_REC_MAX_XFER_SIZE
#define _AMMINTRIN_H_INCLUDED 
#define OBJ_id_ppl OBJ_id_pkix,21L
#define __FLT32X_HAS_DENORM__ 1
#define SN_magma_ofb "magma-ofb"
#define _mm256_mask_gf2p8affineinv_epi64_epi8(A,B,C,D,E) ((__m256i) __builtin_ia32_vgf2p8affineinvqb_v32qi_mask( (__v32qi)(__m256i)(C), (__v32qi)(__m256i)(D), (int)(E), (__v32qi)(__m256i)(A), (__mmask32)(B)))
#define NI_IDN 32
#define BIO_C_GET_FILE_PTR 107
#define SO_SECURITY_ENCRYPTION_NETWORK 24
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_51(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_52(p,o,s) 0
#define LN_id_tc26_gost_3410_2012_512_paramSetTest "GOST R 34.10-2012 (512 bit) testing parameter set"
#define XN_FLAG_SEP_MASK (0xf << 16)
#define SCNdFAST8 "hhd"
#define _SC_V6_ILP32_OFF32 _SC_V6_ILP32_OFF32
#define _mm256_mask_cmp_epu8_mask(M,X,Y,P) ((__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(P), (__mmask32)(M)))
#define _STL_RAW_STORAGE_ITERATOR_H 1
#define BOOST_PP_INTERCEPT_256 
#define X509_FILETYPE_ASN1 2
#define NID_pkcs9_messageDigest 51
#define BN_R_INVALID_RANGE 115
#define SN_setct_CredRevResData "setct-CredRevResData"
#define NID_sinfo_access 398
#define BOOST_RESULT_OF_NUM_ARGS 16
#define __va_arg_pack_len() __builtin_va_arg_pack_len ()
#define _SC_ASYNCHRONOUS_IO _SC_ASYNCHRONOUS_IO
#define EC_R_INVALID_CURVE 141
#define HEADER_CONF_H 
#define BOOST_PP_SEQ_FOLD_LEFT_239(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_239(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_BITSET 1
#define F_GET_RW_HINT 1035
#define TLS1_RFC_ECDHE_RSA_WITH_AES_256_SHA384 "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
#define BOOST_PP_REPEAT_2_52(m,d) BOOST_PP_REPEAT_2_51(m, d) m(3, 51, d)
#define SSL_R_DANE_TLSA_BAD_SELECTOR 202
#define evuser_del(ev) event_del(ev)
#define OBJ_X9_62_id_ecSigType OBJ_ansi_X9_62,4L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_228(o,s,l) 0
#define _STL_ITERATOR_BASE_TYPES_H 1
#define SSL3_TXT_ADH_DES_40_CBC_SHA "EXP-ADH-DES-CBC-SHA"
#define FS_XFLAG_NODUMP 0x00000080
#define NID_id_smime_ct_contentCollection 1058
#define ECDHerr(f,r) ERR_PUT_error(ERR_LIB_ECDH,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define BOOST_PP_FOR_47_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(48, s) BOOST_PP_IIF(c, BOOST_PP_FOR_48, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(48, s), p, o, m)
#define SN_id_tc26_signwithdigest "id-tc26-signwithdigest"
#define BIO_F_BIO_GET_NEW_INDEX 102
#define BOOST_PP_SUB_O(d,xy) BOOST_PP_SUB_O_I xy
#define _POSIX2_LOCALEDEF __POSIX2_THIS_VERSION
#define BIO_F_BIO_WRITE_INTERN 128
#define RAND_F_RAND_POOL_ADD_END 114
#define BOOST_PP_REPEAT_2_107(m,d) BOOST_PP_REPEAT_2_106(m, d) m(3, 106, d)
#define BOOST_CXX14_CONSTEXPR constexpr
#define _mm_mask_i32gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m128d) __builtin_ia32_gathersiv2df ((__v2df)(__m128d) (SRC), (double const *) (BASE), (__v4si)(__m128i) (INDEX), (__v2df)(__m128d) (MASK), (int) (SCALE))
#define IPV6_ROUTER_ALERT_ISOLATE 30
#define SOL_SOCKET 1
#define BOOST_PP_REPEAT_2_108(m,d) BOOST_PP_REPEAT_2_107(m, d) m(3, 107, d)
#define evsignal_new(b,x,cb,arg) event_new((b), (x), EV_SIGNAL|EV_PERSIST, (cb), (arg))
#define BOOST_PP_SEQ_FOLD_LEFT_I_116(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_117, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(117, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_REPEAT_1_201(m,d) BOOST_PP_REPEAT_1_200(m, d) m(2, 200, d)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111100 (1)(0)(1)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111101 (1)(0)(1)(1)(1)(1)(0)(1),
#define PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP { { __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_ADAPTIVE_NP) } }
#define LN_biometricInfo "Biometric Info"
#define SSL_CTX_set_tmp_rsa_callback(ctx,cb) while(0) (cb)(NULL, 0, 0)
#define BOOST_PP_REPEAT_2_109(m,d) BOOST_PP_REPEAT_2_108(m, d) m(3, 108, d)
#define BOOST_PP_LIST_FOLD_LEFT_100(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_101, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(101, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_102(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_103, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(103, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_104(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_105, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(105, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_105(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_106, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(106, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_106(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_107, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(107, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_REPEAT_3_144(m,d) BOOST_PP_REPEAT_3_143(m, d) m(4, 143, d)
#define BOOST_PP_LIST_FOLD_LEFT_108(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_109, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(109, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_109(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_110, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(110, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm512_maskz_fixupimm_ps(U,X,Y,Z,C) ((__m512)__builtin_ia32_fixupimmps512_maskz ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (__v16si)(__m512i)(Z), (int)(C), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define OPENSSL_MIN_API 0
#define OpenSSL_add_all_ciphers() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS, NULL)
#define _USES_ALLOCATOR_H 1
#define SN_rc2_ecb "RC2-ECB"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111110 (1)(0)(1)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10111111 (1)(0)(1)(1)(1)(1)(1)(1),
#define LN_rc2_40_cbc "rc2-40-cbc"
#define F_GET_FILE_RW_HINT 1037
#define BOOST_PREPROCESSOR_ARITHMETIC_MOD_HPP 
#define IN_CLASSB_HOST (0xffffffff & ~IN_CLASSB_NET)
#define BOOST_PP_LIST_FOLD_LEFT_110(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_111, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(111, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_111(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_112, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(112, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_112(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_113, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(113, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_114(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_115, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(115, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_115(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_116, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(116, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_116(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_117, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(117, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define RSA_R_BAD_FIXED_HEADER_DECRYPT 102
#define BOOST_PP_LIST_FOLD_LEFT_118(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_119, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(119, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_119(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_120, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(120, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define ASN1_F_ASN1_TEMPLATE_NEW 133
#define TLS1_TXT_DHE_DSS_WITH_AES_256_SHA "DHE-DSS-AES256-SHA"
#define BOOST_PP_LIST_FOLD_RIGHT_156(o,s,l) BOOST_PP_LIST_FOLD_LEFT_156(o, s, BOOST_PP_LIST_REVERSE_D(156, l))
#define SSL3_CK_RSA_NULL_SHA 0x03000002
#define X509V3_F_R2I_CERTPOL 130
#define PEM_R_CIPHER_IS_NULL 127
#define SN_cast5_cbc "CAST5-CBC"
#define NID_homePostalAddress 486
#define __amd64 1
#define BOOST_PP_LIST_FOLD_RIGHT_158(o,s,l) BOOST_PP_LIST_FOLD_LEFT_158(o, s, BOOST_PP_LIST_REVERSE_D(158, l))
#define SSL_F_OSSL_STATEM_CLIENT_POST_PROCESS_MESSAGE 593
#define SN_aes_256_cbc "AES-256-CBC"
#define BOOST_PP_LIST_FOLD_LEFT_120(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_121, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(121, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_121(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_122, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(122, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_123(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_124, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(124, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_125(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_126, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(126, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_126(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_127, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(127, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_127(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_128, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(128, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_128(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_129, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(129, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_SECOP_CA_KEY (17 | SSL_SECOP_OTHER_CERT)
#define MADV_KEEPONFORK 19
#define _STDBOOL_H 
#define BOOST_PP_SEQ_TAIL_I(x) 
#define _mm512_maskz_min_round_pd(U,A,B,R) (__m512d)__builtin_ia32_minpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, R)
#define BOOST_PP_INC_254 255
#define __HAVE_FLOAT32 1
#define DECLARE_PEM_write_cb(name,type) DECLARE_PEM_write_cb_bio(name, type) DECLARE_PEM_write_cb_fp(name, type)
#define BOOST_PP_LIST_FOLD_LEFT_130(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_131, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(131, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_131(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_132, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(132, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_133(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_134, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(134, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define FOLLY_DISABLE_THREAD_SANITIZER 
#define BOOST_PP_LIST_FOLD_LEFT_135(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_136, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(136, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SN_aes_256_ccm "id-aes256-CCM"
#define BOOST_PP_LIST_FOLD_LEFT_138(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_139, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(139, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm_mask_i32gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m128) __builtin_ia32_gathersiv4sf ((__v4sf)(__m128) (SRC), (float const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4sf)(__m128) (MASK), (int) (SCALE))
#define SSL_R_REQUIRED_CIPHER_MISSING 215
#define BIO_F_DGRAM_SCTP_READ 132
#define BOOST_PP_TUPLE_TO_LIST_10(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, BOOST_PP_NIL))))))))))
#define BOOST_PP_TUPLE_TO_LIST_11(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, BOOST_PP_NIL)))))))))))
#define BOOST_PP_TUPLE_TO_LIST_12(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, BOOST_PP_NIL))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_14(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, BOOST_PP_NIL))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_15(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, BOOST_PP_NIL)))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_16(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, BOOST_PP_NIL))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_17(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, BOOST_PP_NIL)))))))))))))))))
#define BOOST_PP_LIST_FOLD_LEFT_140(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_141, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(141, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_143(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_144, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(144, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA "DH-RSA-CAMELLIA128-SHA"
#define BOOST_PP_LIST_FOLD_LEFT_146(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_147, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(147, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_147(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_148, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(148, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_148(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_149, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(149, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EC_F_EC_GFP_MONT_GROUP_SET_CURVE 189
#define B_ASN1_UTF8STRING 0x2000
#define EVP_PKT_ENC 0x0020
#define ASN1_F_B64_READ_ASN1 209
#define BOOST_PP_TUPLE_TO_LIST_20(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, BOOST_PP_NIL))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_22(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, BOOST_PP_NIL))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_23(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, BOOST_PP_NIL)))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_25(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, BOOST_PP_NIL)))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_26(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, BOOST_PP_NIL))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_27(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, BOOST_PP_NIL)))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_28(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, BOOST_PP_NIL))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_29(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, BOOST_PP_NIL)))))))))))))))))))))))))))))
#define __GNUG__ 10
#define BOOST_PP_FOR_24(s,p,o,m) BOOST_PP_FOR_24_C(BOOST_PP_BOOL(p(25, s)), s, p, o, m)
#define BIO_CTRL_FLUSH 11
#define FOLLY_HAS_FEATURE(...) 0
#define TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA384 "ECDHE-PSK-NULL-SHA384"
#define ASN1_F_ASN1_GET_UINT64 225
#define STATX_ATTR_ENCRYPTED 0x00000800
#define BOOST_PP_LIST_FOLD_LEFT_153(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_154, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(154, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_FOR_122_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(123, s) BOOST_PP_IIF(c, BOOST_PP_FOR_123, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(123, s), p, o, m)
#define BOOST_PP_LIST_FOLD_LEFT_155(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_156, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(156, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_156(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_157, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(157, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_157(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_158, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(158, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_159(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_160, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(160, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define INDIRECT_TRAITS_DWA2002131_HPP 
#define PRIiLEAST16 "i"
#define BOOST_PP_TUPLE_TO_LIST_30(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, BOOST_PP_NIL))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_31(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, BOOST_PP_NIL)))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_32(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, BOOST_PP_NIL))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_35(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_36(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_37(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_38(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_39(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))
#define NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac 1178
#define O_NONBLOCK 04000
#define EVP_PKEY_CMAC NID_cmac
#define SCNiPTR __PRIPTR_PREFIX "i"
#define SSL_R_FAILED_TO_INIT_ASYNC 405
#define SN_no_rev_avail "noRevAvail"
#define NID_setAttr_IssCap_CVM 628
#define BOOST_PP_LIST_FOLD_LEFT_161(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_162, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(162, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_162(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_163, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(163, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_163(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_164, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(164, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_165(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_166, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(166, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_166(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_167, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(167, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_167(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_168, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(168, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define PTHREAD_MUTEX_INITIALIZER { { __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_TIMED_NP) } }
#define DECLARE_PEM_write_fp(name,type) int PEM_write_ ##name(FILE *fp, type *x);
#define BOOST_PP_SEQ_FOLD_LEFT_I_58(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_59, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(59, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SN_setCext_tunneling "setCext-tunneling"
#define OBJ_registeredAddress OBJ_X509,26L
#define X509V3_F_V2I_IPADDRBLOCKS 159
#define BOOST_PP_SEQ_FOLD_LEFT_I_59(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_60, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(60, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_TUPLE_TO_LIST_40(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_41(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_42(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_43(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_44(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))
#define _mm256_dbsad_epu8(X,Y,C) ((__m256i) __builtin_ia32_dbpsadbw256_mask ((__v32qi)(__m256i) (X), (__v32qi)(__m256i) (Y), (int) (C), (__v16hi)(__m256i)_mm256_setzero_si256(), (__mmask16)-1))
#define BOOST_PP_TUPLE_TO_LIST_46(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_47(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_48(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))
#define LN_set_certExt "certificate extensions"
#define BOOST_PP_LIST_FOLD_LEFT_172(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_173, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(173, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_173(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_174, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(174, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_174(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_175, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(175, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_176(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_177, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(177, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_177(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_178, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(178, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA384 "DHE-PSK-AES256-CBC-SHA384"
#define PRIiLEAST32 "i"
#define _SC_BASE _SC_BASE
#define BOOST_PP_FOR_231_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(232, s) BOOST_PP_IIF(c, BOOST_PP_FOR_232, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(232, s), p, o, m)
#define __NO_CTYPE 1
#define BOOST_PP_TUPLE_TO_LIST_50(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_51(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_52(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_53(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_54(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_55(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_56(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_57(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_58(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define EVP_PKEY_OP_DERIVE (1<<10)
#define TLS1_TXT_DH_DSS_WITH_AES_256_SHA "DH-DSS-AES256-SHA"
#define MSG_WAITFORONE MSG_WAITFORONE
#define BOOST_PP_LIST_FOLD_LEFT_180(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_181, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(181, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_181(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_182, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(182, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_182(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_183, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(183, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_set_split_send_fragment(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_SPLIT_SEND_FRAGMENT,m,NULL)
#define BOOST_PP_LIST_FOLD_LEFT_184(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_185, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(185, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_185(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_186, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(186, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_186(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_187, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(187, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_187(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_188, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(188, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_189(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_190, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(190, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SN_rsaSignature "rsaSignature"
#define _mm256_maskz_alignr_epi32(U,X,Y,C) ((__m256i)__builtin_ia32_alignd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define BOOST_PP_DEC(x) BOOST_PP_DEC_I(x)
#define SSL_F_FINAL_MAXFRAGMENTLEN 557
#define NID_setct_CapTokenTBEX 575
#define BOOST_PP_TUPLE_TO_LIST_60(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, (e58, (e59, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_61(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, (e58, (e59, (e60, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_62(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, (e58, (e59, (e60, (e61, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_63(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, (e58, (e59, (e60, (e61, (e62, BOOST_PP_NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define BOOST_PP_TUPLE_TO_LIST_64(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63) (e0, (e1, (e2, (e3, (e4, (e5, (e6, (e7, (e8, (e9, (e10, (e11, (e12, (e13, (e14, (e15, (e16, (e17, (e18, (e19, (e20, (e21, (e22, (e23, (e24, (e25, (e26, (e27, (e28, (e29, (e30, (e31, (e32, (e33, (e34, (e35, (e36, (e37, (e38, (e39, (e40, (e41, (e42, (e43, (e44, (e45, (e46, (e47, (e48, (e49, (e50, (e51, (e52, (e53, (e54, (e55, (e56, (e57, (e58, (e59, (e60, (e61, (e62, (e63, BOOST_PP_NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
#define _GLIBCXX_HAVE_NETINET_TCP_H 1
#define OBJ_id_GostR3410_94_TestParamSet OBJ_cryptopro,32L,0L
#define _mm_fixupimm_pd(X,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmpd128_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(-1)))
#define BOOST_PP_LIST_FOLD_LEFT_191(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_192, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(192, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_192(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_193, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(193, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_193(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_194, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(194, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_194(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_195, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(195, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_195(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_196, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(196, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_197(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_198, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(198, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_199(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_200, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(200, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_ELEM_108(_) BOOST_PP_SEQ_ELEM_107
#define EC_R_INVALID_COMPRESSED_POINT 110
#define BOOST_PP_WHILE_195_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_196, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(196, s))
#define _mm256_mask_fixupimm_ps(X,U,Y,Z,C) ((__m256)__builtin_ia32_fixupimmps256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (__v8si)(__m256i)(Z), (int)(C), (__mmask8)(U)))
#define BOOST_OPTIONAL_BASE_TYPE(T) boost::conditional< optional_config::optional_uses_direct_storage_for<T>::value, optional_detail::tc_optional_base<T>, optional_detail::optional_base<T> >::type
#define NID_ffdhe2048 1126
#define OPENSSL_add_all_algorithms_noconf() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS | OPENSSL_INIT_ADD_ALL_DIGESTS, NULL)
#define S_IWUSR __S_IWRITE
#define EVP_aes_128_cfb EVP_aes_128_cfb128
#define OBJ_dvcs OBJ_id_kp,10L
#define strndupa(s,n) (__extension__ ({ const char *__old = (s); size_t __len = strnlen (__old, (n)); char *__new = (char *) __builtin_alloca (__len + 1); __new[__len] = '\0'; (char *) memcpy (__new, __old, __len); }))
#define X509V3_R_BAD_OBJECT 119
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_220(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_221(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_222(o,s,l) 0
#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_224(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_226(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_227(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_229(o,s,l) 0
#define DSOerr(f,r) ERR_PUT_error(ERR_LIB_DSO,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define PRIiLEAST64 __PRI64_PREFIX "i"
#define SN_id_aca_role "id-aca-role"
#define CONF_F_CONF_DUMP_FP 104
#define LN_ms_ext_req "Microsoft Extension Request"
#define _GLIBCXX_HOSTED 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_230(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_231(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_233(o,s,l) 0
#define _mm_test_all_ones(V) _mm_testc_si128 ((V), _mm_cmpeq_epi32 ((V), (V)))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_236(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_237(o,s,l) 0
#define _GLIBCXX_HAS_GTHREADS 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_239(o,s,l) 0
#define _mm512_cvt_roundpd_epu64(A,B) ((__m512i)__builtin_ia32_cvtpd2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define SN_id_camellia128_wrap "id-camellia128-wrap"
#define BOOST_PP_WHILE_68_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_69, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(69, s))
#define _mm256_maskz_alignr_epi64(U,X,Y,C) ((__m256i)__builtin_ia32_alignq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define SCNoFAST8 "hho"
#define TCPI_OPT_ECN_SEEN 16
#define DTLSv1_get_timeout(ssl,arg) SSL_ctrl(ssl,DTLS_CTRL_GET_TIMEOUT,0, (void *)(arg))
#define _mm512_mask_sub_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_subpd512_mask(A, B, W, U, C)
#define X509_TRUST_NO_SS_COMPAT (1U << 2)
#define SN_gost89_ecb "gost89-ecb"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_241(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_242(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_243(o,s,l) 0
#define _mm512_prefetch_i32gather_pd(INDEX,ADDR,SCALE,HINT) __builtin_ia32_gatherpfdpd ((__mmask8)0xFF, (__v8si)(__m256i) (INDEX), (void const *) (ADDR), (int) (SCALE), (int) (HINT))
#define _mm256_extractf32x4_ps(X,C) ((__m128) __builtin_ia32_extractf32x4_256_mask ((__v8sf)(__m256) (X), (int) (C), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)-1))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_247(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_249(o,s,l) 0
#define PROT_WRITE 0x2
#define _mm512_prefetch_i32gather_ps(INDEX,ADDR,SCALE,HINT) __builtin_ia32_gatherpfdps ((__mmask16)0xFFFF, (__v16si)(__m512i) (INDEX), (void const *) (ADDR), (int) (SCALE), (int) (HINT))
#define NID_setct_ErrorTBS 567
#define NID_international_organizations 647
#define BOOST_PP_LIST_REVERSE_D(d,list) BOOST_PP_LIST_FOLD_LEFT_ ## d(BOOST_PP_LIST_REVERSE_O, BOOST_PP_NIL, list)
#define BOOST_PP_FOR_82_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(83, s) BOOST_PP_IIF(c, BOOST_PP_FOR_83, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(83, s), p, o, m)
#define CRL_REASON_REMOVE_FROM_CRL 8
#define _PC_LINK_MAX _PC_LINK_MAX
#define LN_sdsiCertificate "sdsiCertificate"
#define BOOST_PP_DEC_145 144
#define SOL_IUCV 277
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_251(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_252(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_253(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_254(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_255(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_256(o,s,l) 0
#define _XABORT_CODE(x) (((x) >> 24) & 0xFF)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_63(p,o,s) 0
#define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1
#define LN_rc5_ofb64 "rc5-ofb"
#define FMT_NOEXCEPT FMT_DETECTED_NOEXCEPT
#define EVP_PKEY_DH NID_dhKeyAgreement
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_65(p,o,s) 0
#define BOOST_SUFFIXED_BINARY_LITERAL_D(d,bit_groupings,suffix) BOOST_PP_CAT( BOOST_BINARY_LITERAL_D( d, bit_groupings ), suffix )
#define _XOPEN_SHM 1
#define AF_NFC PF_NFC
#define TLSEXT_TYPE_signature_algorithms_cert 50
#define BOOST_PP_SEQ_FOLD_LEFT_247(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_247(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define IPAddressChoice_inherit 0
#define __x86_64 1
#define BOOST_PP_SEQ_FOLD_LEFT_59(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_59(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EC_R_UNKNOWN_GROUP 129
#define SSL_F_TLS_CONSTRUCT_STOC_KEY_SHARE 456
#define __PTRDIFF_T 
#define RAND_R_REQUEST_TOO_LARGE_FOR_DRBG 117
#define EVP_PKEY_EC NID_X9_62_id_ecPublicKey
#define _LINUX_IOCTL_H 
#define EVP_CTRL_CCM_GET_TAG EVP_CTRL_AEAD_GET_TAG
#define SN_auth_ecdsa "AuthECDSA"
#define BOOST_MPL_HAS_MEMBER_REJECT(args,member_macro) template< typename V > static boost::mpl::aux::no_tag BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME(args)(...);
#define STA_PPSSIGNAL 0x0100
#define _AVX5124FMAPSINTRIN_H_INCLUDED 
#define FOLLY_ERASE FOLLY_ALWAYS_INLINE FOLLY_ATTR_VISIBILITY_HIDDEN
#define V_ASN1_OCTET_STRING 4
#define NID_idea_ofb64 46
#define FOLLY_HAVE_LIBSNAPPY 1
#define BIO_get_app_data(s) BIO_get_ex_data(s,0)
#define __NGREG 23
#define TLSEXT_TYPE_extended_master_secret 23
#define BN_RAND_TOP_ONE 0
#define APACHE_THRIFT_ACCESSOR_id 
#define _mm512_cmp_epu64_mask(X,Y,P) ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(P), (__mmask8)-1))
#define SNANF128 (__builtin_nansf128 (""))
#define SN_setct_CapRevResData "setct-CapRevResData"
#define LOG_TO_STRING_FATAL(message) google::LogMessage( __FILE__, __LINE__, google::GLOG_FATAL, message)
#define SCHED_FIFO 1
#define TCP_SAVE_SYN 27
#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
#define __DBL_MIN__ double(2.22507385850720138309023271733240406e-308L)
#define SSL_R_REQUIRED_COMPRESSION_ALGORITHM_MISSING 342
#define _VA_LIST 
#define _GLIBCXX_STRING_VIEW 1
#define NID_dvcs 297
#define EVENT__HAVE_SYS_RESOURCE_H 1
#define SSL_F_SSL_USE_CERTIFICATE_FILE 200
#define BOOST_PP_LIST_FOLD_LEFT_204(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_205, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(205, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _GLIBCXX_HAVE_SYS_SEM_H 1
#define __CPU_CLR_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] &= ~__CPUMASK (__cpu)) : 0; }))
#define SN_ipsecTunnel "ipsecTunnel"
#define SN_rc4 "RC4"
#define LHASH_COMP_FN(name) name ##_LHASH_COMP
#define sodium_export_H 
#define SSL3_TXT_ADH_DES_192_CBC_SHA "ADH-DES-CBC3-SHA"
#define OBJ_id_aes192_wrap_pad OBJ_aes,28L
#define NID_id_PasswordBasedMAC 782
#define BOOST_PP_VARIADICS_MSVC 0
#define EVP_PKEY_CTRL_GET_RSA_PADDING (EVP_PKEY_ALG_CTRL + 6)
#define LOCK_NB 4
#define BOOST_PREPROCESSOR_DETAIL_IS_BINARY_HPP 
#define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
#define __O_PATH 010000000
#define SSL_CTRL_SET_SRP_ARG 78
#define X509V3_F_X509V3_EXT_I2D 136
#define _GLIBCXX_HAVE_ENOLINK 1
#define SN_X9_62_c2pnb208w1 "c2pnb208w1"
#define BOOST_PP_SEQ_FOLD_LEFT_I_5(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_6, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(6, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_6(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_7, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(7, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_7(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_8, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(8, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_8(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_9, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(9, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_FOLD_LEFT_I_9(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_10, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(10, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SN_id_GostR3410_94_CryptoPro_B_ParamSet "id-GostR3410-94-CryptoPro-B-ParamSet"
#define BOOST_PP_CHECK(x,type) BOOST_PP_CHECK_D(x, type)
#define BOOST_PP_LIST_FOLD_RIGHT_165(o,s,l) BOOST_PP_LIST_FOLD_LEFT_165(o, s, BOOST_PP_LIST_REVERSE_D(165, l))
#define _GLIBCXX_ATOMIC_LOCK_FREE_H 1
#define FOLLY_OPENSSL_HAS_BLAKE2B 1
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
#define EC_F_ECDH_CMS_DECRYPT 238
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_86(op,st,ss,sz) 0
#define BOOST_PP_FOR_189_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(190, s) BOOST_PP_IIF(c, BOOST_PP_FOR_190, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(190, s), p, o, m)
#define SSL_SECOP_CURVE_SUPPORTED (4 | SSL_SECOP_OTHER_CURVE)
#define SN_aes_256_ctr "AES-256-CTR"
#define SN_setCext_PGWYcapabilities "setCext-PGWYcapabilities"
#define _mm_shrdi_epi16(A,B,C) ((__m128i) __builtin_ia32_vpshrd_v8hi ((__v8hi)(__m128i)(A), (__v8hi)(__m128i)(B),(int)(C)))
#define _POSIX_SYMLOOP_MAX 8
#define RSA_R_Q_NOT_PRIME 129
#define BOOST_PP_WHILE_91_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_92, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(92, s))
#define X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED 157
#define EVP_F_EVP_PKCS82PKEY 111
#define SSL_set1_curves SSL_set1_groups
#define OBJ_id_GostR3411_94_TestParamSet OBJ_cryptopro,30L,0L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_88(op,st,ss,sz) 0
#define NID_brainpoolP320r1 929
#define SN_setct_CredRevReqTBEX "setct-CredRevReqTBEX"
#define __nonnull(params) __attribute__ ((__nonnull__ params))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_163(op,st,ss,sz) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_78(o,s,l) 0
#define F_GETSIG __F_GETSIG
#define EVP_PKEY_MO_DECRYPT 0x0008
#define X509V3_F_V2I_ASIDENTIFIERS 163
#define _mm_shrdi_epi32(A,B,C) ((__m128i) __builtin_ia32_vpshrd_v4si ((__v4si)(__m128i)(A), (__v4si)(__m128i)(B),(int)(C)))
#define APACHE_THRIFT_ACCESSOR_compressionConfig 
#define X509V3_R_INVALID_SYNTAX 143
#define BOOST_PP_DEC_208 207
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011101 (1)(1)(0)(1)(1)(1)(0)(1),
#define OSSL_SSIZE_MAX SSIZE_MAX
#define _mm256_cmp_epi32_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpd256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(P), (__mmask8)-1))
#define CRYPTO_get_dynlock_lock_callback() (NULL)
#define SSL_CTX_sess_cache_full(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CACHE_FULL,0,NULL)
#define MAP_SHARED_VALIDATE 0x03
#define BOOST_PP_SEQ_FOLD_LEFT_88(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_88(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_brainpoolP320t1 930
#define BOOST_MPL_PLUS_HPP_INCLUDED 
#define SSL_F_TLS_CONSTRUCT_EXTENSIONS 447
#define BOOST_PP_WHILE_236_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_237, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(237, s))
#define __DECL_SIMD_sinf32x 
#define REG_CR2 REG_CR2
#define BOOST_PP_FOR_255_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(256, s) BOOST_PP_IIF(c, BOOST_PP_FOR_256, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(256, s), p, o, m)
#define _mm512_mask_prefetch_i64scatter_pd(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqpd ((__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define OBJ_sm2 OBJ_sm_scheme,301L
#define BOOST_PP_SEQ_FOLD_LEFT_89(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_89(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm512_mask_prefetch_i64scatter_ps(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfqps ((__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define NID_mXRecord 480
#define ASIdentifierChoice_inherit 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_166(op,st,ss,sz) 0
#define BOOST_PP_FOR_14_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(15, s) BOOST_PP_IIF(c, BOOST_PP_FOR_15, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(15, s), p, o, m)
#define BN_F_BN_MOD_EXP_MONT_WORD 117
#define BOOST_PP_SEQ_FOLD_LEFT_I_69(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_70, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(70, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
#define OBJ_id_regInfo_utf8Pairs OBJ_id_regInfo,1L
#define RLIMIT_MSGQUEUE __RLIMIT_MSGQUEUE
#define NS_OBJSIGN_CA 0x01
#define BOOST_PP_FOR_163(s,p,o,m) BOOST_PP_FOR_163_C(BOOST_PP_BOOL(p(164, s)), s, p, o, m)
#define ASYNC_F_ASYNC_START_FUNC 104
#define BOOST_PP_SEQ_FOLD_LEFT_I_18(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_19, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(19, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _mm512_shuffle_pd(X,Y,C) ((__m512d)__builtin_ia32_shufpd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))
#define LN_certificate_issuer "X509v3 Certificate Issuer"
#define SSL_F_SSL_ADD_CERT_TO_WPACKET 493
#define OBJ_ms_code_com 1L,3L,6L,1L,4L,1L,311L,2L,1L,22L
#define ERR_R_PASSED_NULL_PARAMETER (3|ERR_R_FATAL)
#define _mm512_shuffle_ps(X,Y,C) ((__m512)__builtin_ia32_shufps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)_mm512_undefined_ps(), (__mmask16)-1))
#define _SC_PAGESIZE _SC_PAGESIZE
#define _mm512_mask_prefetch_i64gather_pd(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfqpd ((__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define OBJ_mailPreferenceOption OBJ_pilotAttributeType,47L
#define LN_X9cm "X9.57 CM ?"
#define BN_mod(rem,m,d,ctx) BN_div(NULL,(rem),(m),(d),(ctx))
#define OBJ_id_GostR3411_94_with_GostR3410_94 OBJ_cryptopro,4L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000101 (1)(1)(0)(0)(0)(1)(0)(1),
#define INT_LEAST32_MAX (2147483647)
#define NID_setct_CertReqData 563
#define STA_INS 0x0010
#define _mm_cmp_sd_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1,_MM_FROUND_CUR_DIRECTION))
#define SSL_R_INVALID_MAX_EARLY_DATA 174
#define DSA_R_MISSING_PARAMETERS 101
#define TLS1_AD_DECRYPT_ERROR 51
#define X509_F_X509_STORE_ADD_LOOKUP 157
#define M_SQRT1_2l 0.707106781186547524400844362104849039L
#define OBJ_target_information OBJ_id_ce,55L
#define _mm512_mask_reduce_pd(W,U,A,B) ((__m512d) __builtin_ia32_reducepd512_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)(__m512d)(W), (__mmask8)(U)))
#define BOOST_MPL_VECTOR_VECTOR10_HPP_INCLUDED 
#define OBJ_X9_62_prime192v1 OBJ_X9_62_primeCurve,1L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000110 (1)(1)(0)(0)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000111 (1)(1)(0)(0)(0)(1)(1)(1),
#define _mm512_mask_reduce_ps(W,U,A,B) ((__m512) __builtin_ia32_reduceps512_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)(__m512)(W), (__mmask16)(U)))
#define BOOST_PP_SLOT_OFFSET_10(x) (x) % 1000000000UL
#define SO_MARK 36
#define FMT_THROW(x) throw x
#define CERT_PKEY_SIGN 0x2
#define OBJ_set_rootKeyThumb OBJ_setAttr_Cert,0L
#define SN_aria_256_cbc "ARIA-256-CBC"
#define __UINT8_TYPE__ unsigned char
#define SSL3_AD_NO_CERTIFICATE 41
#define BOOST_MPL_LIST_AUX_O1_SIZE_HPP_INCLUDED 
#define LN_id_GostR3410_94 "GOST R 34.10-94"
#define CONF_F_NCONF_GET_NUMBER_E 112
#define EVP_sm4_cfb EVP_sm4_cfb128
#define TLS1_TXT_RSA_PSK_WITH_NULL_SHA384 "RSA-PSK-NULL-SHA384"
#define __CPU_COUNT_S(setsize,cpusetp) __sched_cpucount (setsize, cpusetp)
#define TLS1_RFC_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256"
#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA 0x0300C004
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011000 (1)(1)(0)(1)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011001 (1)(1)(0)(1)(1)(0)(0)(1),
#define OBJ_id_it_subscriptionResponse OBJ_id_it,9L
#define OBJ_X9_62_prime192v3 OBJ_X9_62_primeCurve,3L
#define _mm256_i32gather_epi32(BASE,INDEX,SCALE) (__m256i) __builtin_ia32_gathersiv8si ((__v8si) _mm256_setzero_si256 (), (int const *) (BASE), (__v8si)(__m256i) (INDEX), (__v8si)_mm256_set1_epi32 (-1), (int) (SCALE))
#define M_1_PIf128 __f128 (0.318309886183790671537767526745028724)
#define EC_R_GF2M_NOT_SUPPORTED 147
#define X509V3_F_I2S_ASN1_ENUMERATED 121
#define BOOST_HAS_DIRENT_H 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_232(o,s,l) 0
#define PEM_R_BAD_PASSWORD_READ 104
#define SN_aria_256_ccm "ARIA-256-CCM"
#define MSG_RST MSG_RST
#define FOLLY_ERASE_HACK_GCC FOLLY_ALWAYS_INLINE
#define TLS1_TXT_PSK_WITH_AES_128_GCM_SHA256 "PSK-AES128-GCM-SHA256"
#define SSL_F_DTLS_RECORD_LAYER_NEW 635
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011010 (1)(1)(0)(1)(1)(0)(1)(0),
#define PKCS7_R_DIGEST_FAILURE 101
#define _mm512_mask_i64gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gatherdiv16si ((__v8si)(__m256i) (V1OLD), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define LN_des_ede3_ecb "des-ede3"
#define SHA_LONG64 unsigned long long
#define SSL_CB_CONNECT_LOOP (SSL_ST_CONNECT|SSL_CB_LOOP)
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_234(o,s,l) 0
#define ASN1_F_ASN1_GENERALIZEDTIME_ADJ 216
#define DH_UNABLE_TO_CHECK_GENERATOR 0x04
#define STABLE_FLAGS_MALLOC 0x01
#define SSL_set_tmp_dh(ssl,dh) SSL_ctrl(ssl,SSL_CTRL_SET_TMP_DH,0,(char *)(dh))
#define BOOST_VARIANT_RECURSIVE_WRAPPER_HPP 
#define _MM_FROUND_CEIL (_MM_FROUND_TO_POS_INF | _MM_FROUND_RAISE_EXC)
#define _mm256_extracti128_si256(X,M) ((__m128i) __builtin_ia32_extract128i256 ((__v4di)(__m256i)(X), (int)(M)))
#define NID_netscape_ssl_server_name 77
#define _SC_TRACE_NAME_MAX _SC_TRACE_NAME_MAX
#define BOOST_PP_SEQ_FOLD_LEFT_255(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_255(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_STATIC_ASSERT_HPP 
#define BOOST_PP_LIST_FOLD_LEFT_200(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_201, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(201, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define OBJ_id_tc26_signwithdigest OBJ_id_tc26_algorithms,3L
#define TCPOLEN_WINDOW 3
#define _mm256_i32gather_epi64(BASE,INDEX,SCALE) (__m256i) __builtin_ia32_gathersiv4di ((__v4di) _mm256_setzero_si256 (), (long long const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4di)_mm256_set1_epi64x (-1), (int) (SCALE))
#define TLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384 0x030000A1
#define M_SQRT2f32x __f32x (1.414213562373095048801688724209698079)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100110 (1)(1)(0)(0)(1)(1)(0),
#define BOOST_PP_REPEAT_2_114(m,d) BOOST_PP_REPEAT_2_113(m, d) m(3, 113, d)
#define EC_F_EC_GROUP_GET_CURVE_GF2M 172
#define BLKPBSZGET _IO(0x12,123)
#define __cpp_lib_string_view 201803L
#define BOOST_PP_WHILE_23_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_24, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(24, s))
#define SSL_F_SSL_CHOOSE_CLIENT_VERSION 607
#define PTHREAD_PROCESS_SHARED PTHREAD_PROCESS_SHARED
#define BOOST_TT_IS_CONST_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_LEFT_202(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_203, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(203, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_F_CIPHERSUITE_CB 622
#define NID_id_smime_alg_ESDHwith3DES 241
#define OBJ_id_GostR3410_94_CryptoPro_A_ParamSet OBJ_cryptopro,32L,2L
#define PKCS7_type_is_digest(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_digest)
#define EVP_get_digestbyobj(a) EVP_get_digestbynid(OBJ_obj2nid(a))
#define _mm512_mask_i64gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gatherdiv8di ((__v8di)(__m512i) (V1OLD), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SSL_F_TLS12_CHECK_PEER_SIGALG 333
#define X509_FLAG_NO_SERIAL (1L << 2)
#define BOOST_PP_VARIADIC_SIZE_I(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,size,...) size
#define LN_aes_192_cfb1 "aes-192-cfb1"
#define OPENSSL_EXTERN extern
#define CRYPTO_get_add_lock_callback() (NULL)
#define LN_aes_192_cfb8 "aes-192-cfb8"
#define SN_id_pkip "id-pkip"
#define NID_id_tc26_agreement 991
#define SN_id_pkix "PKIX"
#define EVENT__HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY 1
#define X509_F_X509_REQ_CHECK_PRIVATE_KEY 144
#define INT_LEAST32_MIN (-2147483647-1)
#define NID_camellia_256_cbc 753
#define PKCS7_get_signed_attributes(si) ((si)->auth_attr)
#define BOOST_PP_SEQ_NIL(x) (x)
#define SN_id_alg_noSignature "id-alg-noSignature"
#define TLS1_TXT_DHE_PSK_WITH_NULL_SHA256 "DHE-PSK-NULL-SHA256"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_206 206
#define JEMALLOC_FORMAT_ARG(i) JEMALLOC_ATTR(__format_arg__(3))
#define BOOST_PP_REPEAT_2_119(m,d) BOOST_PP_REPEAT_2_118(m, d) m(3, 118, d)
#define COMPUTE_TIME int64_t nowMs = apache::thrift::concurrency::Util::currentTime(); time_t nowSec = (time_t)(nowMs / 1000); nowMs -= nowSec * 1000; int ms = (int)nowMs; char dbgtime[26]; ctime_r(&nowSec, dbgtime); dbgtime[24] = '\0';
#define FIFREEZE _IOWR('X', 119, int)
#define M_SQRT1_2f32 __f32 (0.707106781186547524400844362104849039)
#define BOOST_PP_SEQ_SIZE_171(_) BOOST_PP_SEQ_SIZE_172
#define EC_F_EC_GFP_NIST_FIELD_SQR 201
#define BOOST_TEMPLATED_STREAM_TRAITS(T) T
#define SSL_CTRL_SET_TLSEXT_HOSTNAME 55
#define APACHE_THRIFT_ACCESSOR_compressionSizeLimit 
#define NID_camellia_256_ccm 970
#define BOOST_PP_ENUM_BINARY_PARAMS(count,p1,p2) BOOST_PP_REPEAT(count, BOOST_PP_ENUM_BINARY_PARAMS_M, (p1, p2))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010101 (0)(1)(0)(1)(0)(1)(0)(1),
#define SRTP_AEAD_AES_128_GCM 0x0007
#define __cpp_lib_constexpr_tuple 201811L
#define IORING_ENTER_SQ_WAKEUP (1U << 1)
#define BOOST_PP_LIST_FOLD_LEFT_208(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_209, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(209, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define CONF_F_NCONF_NEW 111
#define BOOST_PP_REPEAT_3_156(m,d) BOOST_PP_REPEAT_3_155(m, d) m(4, 155, d)
#define SO_OOBINLINE 10
#define _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_209 209
#define __SGI_STL_PORT_WORKAROUND_GUARD 1
#define __F_GETOWN 9
#define BOOST_MPL_LIST_AUX_PUSH_FRONT_HPP_INCLUDED 
#define F_OFD_GETLK 36
#define EAI_ALLDONE -103
#define BN_prime_checks_for_size(b) ((b) >= 3747 ? 3 : (b) >= 1345 ? 4 : (b) >= 476 ? 5 : (b) >= 400 ? 6 : (b) >= 347 ? 7 : (b) >= 308 ? 8 : (b) >= 55 ? 27 : 34)
#define OPENSSL_SYS_LINUX 
#define BOOST_PP_SEQ_SIZE_173(_) BOOST_PP_SEQ_SIZE_174
#define BOOST_PP_WHILE_216_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_217, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(217, s))
#define BOOST_PP_LIST_FOLD_RIGHT_175(o,s,l) BOOST_PP_LIST_FOLD_LEFT_175(o, s, BOOST_PP_LIST_REVERSE_D(175, l))
#define SSL3_HM_HEADER_LENGTH 4
#define SSL3_RT_SEND_MAX_ENCRYPTED_OVERHEAD (SSL_RT_MAX_CIPHER_BLOCK_SIZE + SSL3_RT_MAX_MD_SIZE)
#define SSL_F_TLS_CONSTRUCT_STOC_RENEGOTIATE 458
#define BOOST_VERIFY(expr) BOOST_ASSERT(expr)
#define BIO_C_GET_FD 105
#define NID_chacha20 1019
#define OBJ_id_smime_alg_ESDHwith3DES OBJ_id_smime_alg,1L
#define BOOST_PP_BOOL_205 1
#define M_SQRT1_2f64 __f64 (0.707106781186547524400844362104849039)
#define __F_SETOWN_EX 15
#define SN_id_cmc_identification "id-cmc-identification"
#define APACHE_THRIFT_ACCESSOR_proxyException 
#define BOOST_USING_STD_MAX() using std::max
#define INADDR_UNSPEC_GROUP ((in_addr_t) 0xe0000000)
#define EVP_aes_192_cfb EVP_aes_192_cfb128
#define BOOST_PP_WHILE_148_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_149, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(149, s))
#define DH_R_UNABLE_TO_CHECK_GENERATOR 121
#define __struct_tm_defined 1
#define OBJ_id_pda_placeOfBirth OBJ_id_pda,2L
#define SN_id_smime_aa_msgSigDigest "id-smime-aa-msgSigDigest"
#define __ssize_t_defined 
#define BOOST_PP_RELATIVE_3(m) BOOST_PP_CAT(m, BOOST_PP_DEC(BOOST_PP_DEC(BOOST_PP_DEC(BOOST_PP_ITERATION_DEPTH()))))
#define BOOST_MPL_AUX_HAS_TAG_HPP_INCLUDED 
#define BIO_CTRL_EOF 2
#define _SC_FSYNC _SC_FSYNC
#define SSL3_MT_CERTIFICATE_URL 21
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_231(op,st,ss,sz) 0
#define BOOST_HASH_MAP_HEADER <backward/hash_map>
#define SN_id_tc26_constants "id-tc26-constants"
#define LN_X9_57 "X9.57"
#define BOOST_PP_REPEAT_3_15(m,d) BOOST_PP_REPEAT_3_14(m, d) m(4, 14, d)
#define EVP_PKEY_CTX_get_ecdh_kdf_outlen(ctx,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN, 0, (void *)(plen))
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define LN_chacha20 "chacha20"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_25(op,st,ss,sz) 0
#define IPV6_MULTICAST_ALL 29
#define PF_BRIDGE 7
#define FOLLY_DETAIL_BUILTIN_EXPECT(b,t) (__builtin_expect(b, t))
#define X509_R_IDP_MISMATCH 128
#define BOOST_PP_SEQ_SIZE_178(_) BOOST_PP_SEQ_SIZE_179
#define _MM_EXCEPT_DENORM 0x0002
#define BOOST_PP_SEQ_FOLD_LEFT_I_72(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_73, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(73, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_id_cmc_identification 328
#define PF_TIPC 30
#define _mm512_maskz_srai_epi16(U,A,B) ((__m512i) __builtin_ia32_psrawi512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)_mm512_setzero_si512 (), (__mmask32)(U)))
#define SN_camellia_128_cfb1 "CAMELLIA-128-CFB1"
#define BOOST_PP_SEQ_FOLD_LEFT_I_73(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_74, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(74, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SN_camellia_128_cfb8 "CAMELLIA-128-CFB8"
#define _mm512_mask_extractf64x4_pd(W,U,X,C) ((__m256d) __builtin_ia32_extractf64x4_mask ((__v8df)(__m512d) (X), (int) (C), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define _SIDD_UBYTE_OPS 0x00
#define BOOST_MOVE_TT_CXX11_IS_COPY_ASSIGNABLE 
#define X509V3_EXT_DEFAULT 0
#define BOOST_PP_FOR_37(s,p,o,m) BOOST_PP_FOR_37_C(BOOST_PP_BOOL(p(38, s)), s, p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_26(op,st,ss,sz) 0
#define NID_manager 467
#define OBJ_delta_crl OBJ_id_ce,27L
#define _F16CINTRIN_H_INCLUDED 
#define LN_id_GostR3411_94_with_GostR3410_94_cc "GOST R 34.11-94 with GOST R 34.10-94 Cryptocom"
#define BOOST_PP_LIST_FOLD_RIGHT_51(o,s,l) BOOST_PP_LIST_FOLD_LEFT_51(o, s, BOOST_PP_LIST_REVERSE_D(51, l))
#define EVENT1_EVUTIL_H_INCLUDED_ 
#define FSCRYPT_POLICY_FLAGS_PAD_8 0x01
#define BOOST_PP_SEQ_FOLD_LEFT_I_78(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_79, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(79, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define DH_F_DH_PRIV_ENCODE 111
#define LN_setAttr_TokICCsig "ICC or token signature"
#define __glibcxx_requires_string_len(_String,_Len) 
#define _MM_ROUND_UP 0x4000
#define BOOST_PP_REPEAT_3_18(m,d) BOOST_PP_REPEAT_3_17(m, d) m(4, 17, d)
#define BOOST_PP_REPEAT_1_133(m,d) BOOST_PP_REPEAT_1_132(m, d) m(2, 132, d)
#define UNLIKELY(x) (__builtin_expect((x), 0))
#define __LC_ADDRESS 9
#define BIO_set_buffer_size(b,size) BIO_ctrl(b,BIO_C_SET_BUFF_SIZE,size,NULL)
#define EVP_CTRL_AEAD_GET_TAG 0x10
#define _SYS_SIZE_T_H 
#define BIO_R_CONNECT_ERROR 103
#define SN_setct_CredReqTBE "setct-CredReqTBE"
#define _SC_MQ_PRIO_MAX _SC_MQ_PRIO_MAX
#define PKCS7_F_PKCS7_SIMPLE_SMIMECAP 119
#define SN_camellia_256_cmac "CAMELLIA-256-CMAC"
#define TLS1_1_VERSION 0x0302
#define SN_setct_CredReqTBS "setct-CredReqTBS"
#define NID_aes_256_ofb128 428
#define JEMALLOC_VERSION "5.2.1-0-gea6b3e973b477b8061e0076bb257dbd7f3faa756"
#define BOOST_MOVE_HAS_TRIVIAL_ASSIGN(T) ((__has_trivial_assign(T) BOOST_MOVE_INTEL_TT_OPTS) )
#define NID_id_it_keyPairParamRep 308
#define BOOST_PP_WHILE_14_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_15, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(15, s))
#define SN_cryptopro "cryptopro"
#define SSL_SESS_CACHE_OFF 0x0000
#define _cvtss_sh(__F,__I) (__extension__ ({ __v4sf __A = __extension__ (__v4sf){ __F, 0, 0, 0 }; __v8hi __H = __builtin_ia32_vcvtps2ph (__A, __I); (unsigned short) __builtin_ia32_vec_ext_v8hi (__H, 0); }))
#define __glibc_macro_warning1(message) _Pragma (#message)
#define X509_V_ERR_SUITE_B_INVALID_CURVE 58
#define SSL_F_SSL_CTX_USE_SERVERINFO_FILE 337
#define RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1 108
#define RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2 109
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111101 (0)(0)(1)(1)(1)(1)(0)(1),
#define __STDC_IEC_559_COMPLEX__ 1
#define APACHE_THRIFT_ACCESSOR_safety 
#define SN_aes_128_gcm "id-aes128-GCM"
#define EVP_PKEY_ECDH_KDF_X9_62 EVP_PKEY_ECDH_KDF_X9_63
#define EVP_PKEY_ECDH_KDF_X9_63 2
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001110 (0)(0)(0)(0)(1)(1)(1)(0),
#define __encls_bc(leaf,b,c,retval) __asm__ __volatile__ ("encls\n\t" : "=a" (retval) : "a" (leaf), "b" (b), "c" (c) : "cc")
#define SO_TIMESTAMPING SO_TIMESTAMPING_OLD
#define SSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK 1086
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111110 (0)(0)(1)(1)(1)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111111 (0)(0)(1)(1)(1)(1)(1)(1),
#define __FLT32_DECIMAL_DIG__ 9
#define OBJ_rsa OBJ_X500algorithms,1L,1L
#define _mm512_maskz_srai_epi64(U,X,C) ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))
#define ERR_GET_FUNC(l) (int)(((l) >> 12L) & 0xFFFL)
#define LITTLE_ENDIAN __LITTLE_ENDIAN
#define _SC_READER_WRITER_LOCKS _SC_READER_WRITER_LOCKS
#define _GLIBCXX_FAST_MATH 0
#define SIGPWR 30
#define BOOST_PP_FOR_156_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(157, s) BOOST_PP_IIF(c, BOOST_PP_FOR_157, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(157, s), p, o, m)
#define TLS1_CK_DHE_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C052
#define BOOST_PP_FOR_224_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(225, s) BOOST_PP_IIF(c, BOOST_PP_FOR_225, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(225, s), p, o, m)
#define OBJ_authorityRevocationList OBJ_X509,38L
#define TLS1_CK_ECDH_RSA_WITH_AES_256_SHA384 0x0300C02A
#define BOOST_PP_INC_139 140
#define SCNiLEAST8 "hhi"
#define SN_aria_256_ctr "ARIA-256-CTR"
#define EC_R_UNDEFINED_GENERATOR 113
#define SN_id_smime_ct_DVCSRequestData "id-smime-ct-DVCSRequestData"
#define SYS_F_CLOSE 20
#define _CLDEMOTE_H_INCLUDED 
#define BOOST_MPL_FRONT_HPP_INCLUDED 
#define JEMALLOC_USE_CXX_THROW 
#define X509V3_F_X509V3_GET_VALUE_BOOL 110
#define TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA256 0x030000B2
#define _GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_ABI_TAG_CXX11
#define _mm_maskz_roundscale_round_sd(U,A,B,I,R) ((__m128d) __builtin_ia32_rndscalesd_mask_round ((__v2df) (__m128d) (A), (__v2df) (__m128d) (B), (int) (I), (__v2df) _mm_setzero_pd (), (__mmask8) (U), (int) (R)))
#define SSL3_CK_DH_DSS_DES_40_CBC_SHA 0x0300000B
#define sa_handler __sigaction_handler.sa_handler
#define EC_FLAG_NON_FIPS_ALLOW 0x1
#define _mm_maskz_roundscale_round_ss(U,A,B,I,R) ((__m128) __builtin_ia32_rndscaless_mask_round ((__v4sf) (__m128) (A), (__v4sf) (__m128) (B), (int) (I), (__v4sf) _mm_setzero_ps (), (__mmask8) (U), (int) (R)))
#define _GLIBCXX_SYSTEM_ERROR 1
#define OBJ_secp128r1 OBJ_secg_ellipticCurve,28L
#define OBJ_secp128r2 OBJ_secg_ellipticCurve,29L
#define BOOST_PP_SEQ_ELEM_200(_) BOOST_PP_SEQ_ELEM_199
#define CMSG_DATA(cmsg) ((cmsg)->__cmsg_data)
#define X509V3_F_A2I_GENERAL_NAME 164
#define NID_id_smime_cti 195
#define TLS1_TXT_DHE_DSS_WITH_ARIA_128_GCM_SHA256 "DHE-DSS-ARIA128-GCM-SHA256"
#define SN_id_it_subscriptionResponse "id-it-subscriptionResponse"
#define _mm512_cvt_roundpd_ps(A,B) (__m256)__builtin_ia32_cvtpd2ps512_mask(A, (__v8sf)_mm256_undefined_ps(), -1, B)
#define _mm_scalef_round_sd(A,B,C) (__m128d)__builtin_ia32_scalefsd_mask_round (A, B, (__v2df)_mm_setzero_pd (), -1, C)
#define DN_DELETE 0x00000008
#define SN_rc5_ofb64 "RC5-OFB"
#define __GTHREAD_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER
#define X509_V_FLAG_TRUSTED_FIRST 0x8000
#define NID_pkcs7_data 21
#define _GLIBCXX_USE_C99_MATH _GLIBCXX11_USE_C99_MATH
#define _POSIX_THREAD_ATTR_STACKADDR 200809L
#define IPV6_RECVHOPOPTS 53
#define BOOST_PP_SEQ_ELEM_207(_) BOOST_PP_SEQ_ELEM_206
#define _PC_PATH_MAX _PC_PATH_MAX
#define LN_sha512WithRSAEncryption "sha512WithRSAEncryption"
#define BOOST_HAS_TR1_COMPLEX_OVERLOADS 
#define _GLIBCXX_GUARD_BIT __guard_test_bit (0, 1)
#define BOOST_PP_SEQ_ELEM_209(_) BOOST_PP_SEQ_ELEM_208
#define BOOST_VARIANT_DETAIL_ENABLE_RECURSIVE_FWD_HPP 
#define EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP (EVP_PKEY_ALG_CTRL + 4)
#define BOOST_PP_SEQ_CAT_O(s,st,elem) BOOST_PP_SEQ_CAT_O_I(st, elem)
#define BOOST_INTRUSIVE_DOC1ST(TYPE1,TYPE2) TYPE2
#define GFLAGS_DLL_DECLARE_FLAG __attribute__((visibility("default")))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_89(p,o,s) 0
#define BOOST_PP_LIST_FOLD_LEFT_206(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_207, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(207, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define MS_NOUSER (1<<31)
#define _mm256_mask_cmp_epi16_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_cmpw256_mask ((__v16hi)(__m256i)(X), (__v16hi)(__m256i)(Y), (int)(P), (__mmask16)(M)))
#define NID_dsa_with_SHA384 1106
#define RLIM_NLIMITS __RLIM_NLIMITS
#define _SC_TIMER_MAX _SC_TIMER_MAX
#define SO_SNDTIMEO_NEW 67
#define PEM_STRING_PKCS8INF "PRIVATE KEY"
#define PF_NFC 39
#define BIO_F_BIO_ADDR_NEW 144
#define BOOST_LIMITS 
#define EVP_R_UNSUPPORTED_CIPHER 107
#define FOLLY_HAS_RTTI 1
#define ___constant_swahw32(x) ((__u32)( (((__u32)(x) & (__u32)0x0000ffffUL) << 16) | (((__u32)(x) & (__u32)0xffff0000UL) >> 16)))
#define EVP_F_PKCS5_V2_PBE_KEYIVGEN 118
#define BOOST_PREPROCESSOR_EMPTY_HPP 
#define POLLWRBAND 0x200
#define __ULONGWORD_TYPE unsigned long int
#define FMT_MAYBE_UNUSED [[maybe_unused]]
#define BOOST_PP_SEQ_FOLD_LEFT_I_153(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_154, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(154, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _PSTL_EARLYEXIT_PRESENT (__INTEL_COMPILER >= 1800)
#define OBJ_rsassaPss OBJ_pkcs1,10L
#define sk_find OPENSSL_sk_find
#define VLOG_IF(verboselevel,condition) LOG_IF(INFO, (condition) && VLOG_IS_ON(verboselevel))
#define _PC_NO_TRUNC _PC_NO_TRUNC
#define SN_id_pkix_OCSP_archiveCutoff "archiveCutoff"
#define NID_camellia_256_ctr 971
#define XATTR_LIST_MAX 65536
#define _mm512_mask_dbsad_epu8(W,U,X,Y,C) ((__m512i) __builtin_ia32_dbpsadbw512_mask ((__v64qi)(__m512i) (X), (__v64qi)(__m512i) (Y), (int) (C), (__v32hi)(__m512i)(W), (__mmask32)(U)))
#define SSL3_MT_CLIENT_KEY_EXCHANGE 16
#define X509V3_R_INVALID_IPADDRESS 166
#define BIO_C_GET_SSL 110
#define TLS1_TXT_RSA_PSK_WITH_NULL_SHA256 "RSA-PSK-NULL-SHA256"
#define SSL3_CK_SCSV 0x030000FF
#define SSL_OP_NO_DTLSv1 0x04000000U
#define TCP_S_DATA_IN (1 << 2)
#define __encls_bcd(leaf,b,c,d,retval) __asm__ __volatile__("encls\n\t" : "=a" (retval) : "a" (leaf), "b" (b), "c" (c), "d" (d) : "cc")
#define SSL_R_READ_TIMEOUT_EXPIRED 312
#define OBJ_id_smime_aa_encapContentType OBJ_id_smime_aa,6L
#define SSL3_AD_CLOSE_NOTIFY 0
#define get_rfc3526_prime_3072 BN_get_rfc3526_prime_3072
#define TLS1_CK_PSK_WITH_NULL_SHA384 0x030000B1
#define NID_secp521r1 716
#define ENOMEDIUM 123
#define THRIFT_FLAG_DEFINE_int64(_name,_default) THRIFT_FLAG_DEFINE(_name, int64_t, _default)
#define EVP_MD_name(e) OBJ_nid2sn(EVP_MD_nid(e))
#define SN_id_it_caProtEncCert "id-it-caProtEncCert"
#define BOOST_PP_LIST_FOLD_RIGHT_184(o,s,l) BOOST_PP_LIST_FOLD_LEFT_184(o, s, BOOST_PP_LIST_REVERSE_D(184, l))
#define BOOST_PP_LIST_FOLD_RIGHT_185(o,s,l) BOOST_PP_LIST_FOLD_LEFT_185(o, s, BOOST_PP_LIST_REVERSE_D(185, l))
#define SSL_R_PEM_NAME_BAD_PREFIX 391
#define EC_F_ECDSA_SIGN_EX 254
#define SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_VERSIONS 481
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10001010 (1)(0)(0)(0)(1)(0)(1)(0),
#define FOLLY_NEON 0
#define LN_md4WithRSAEncryption "md4WithRSAEncryption"
#define lh_doall OPENSSL_LH_doall
#define APACHE_THRIFT_ACCESSOR_category 
#define ASN1_ITEM_ptr(iptr) (iptr)
#define DH_GENERATOR_2 2
#define CPU_AND(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, &)
#define DH_GENERATOR_5 5
#define _MM_SHUFFLE(fp3,fp2,fp1,fp0) (((fp3) << 6) | ((fp2) << 4) | ((fp1) << 2) | (fp0))
#define TLS1_RFC_DHE_RSA_WITH_AES_128_SHA "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"
#define _ASM_GENERIC_ERRNO_BASE_H 
#define ELIBSCN 81
#define FACADE_ITERATOR_CATEGORY_DWA20031118_HPP 
#define M_2_PIl 0.636619772367581343075535053490057448L
#define _mm256_permute2_ps(X,Y,C,I) ((__m256) __builtin_ia32_vpermil2ps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (__v8si)(__m256i)(C), (int)(I)))
#define SSL_F_USE_CERTIFICATE_CHAIN_FILE 220
#define _mm_ror_epi32(A,B) ((__m128i)__builtin_ia32_prord128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)-1))
#define X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY 20
#define __FLT_RADIX__ 2
#define BOOST_PP_REPEAT_1_92(m,d) BOOST_PP_REPEAT_1_91(m, d) m(2, 91, d)
#define LN_domainRelatedObject "domainRelatedObject"
#define OBJ_id_mod_kea_profile_93 OBJ_id_pkix_mod,8L
#define BOOST_PP_SEQ_FOLD_LEFT_I_23(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_24, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(24, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _LOCALE_FACETS_NONIO_H 1
#define ASN1_PCTX_FLAGS_NO_FIELD_NAME 0x040
#define TCP_SYNCNT 7
#define BOOST_PP_SEQ_FOLD_LEFT_I_80(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_81, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(81, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _ENABLE_SPECIAL_MEMBERS_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_157(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_158, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(158, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EAI_BADFLAGS -1
#define BOOST_PP_SEQ_FOLD_LEFT_I_82(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_83, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(83, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_auth_srp 1052
#define _kshiftli_mask8(X,Y) ((__mmask8) __builtin_ia32_kshiftliqi ((__mmask8)(X), (__mmask8)(Y)))
#define BIO_F_LINEBUFFER_CTRL 129
#define BN_F_BN_MPI2BN 112
#define MADV_WILLNEED 3
#define _mm256_insertf32x4(X,Y,C) ((__m256) __builtin_ia32_insertf32x4_256_mask ((__v8sf)(__m256) (X), (__v4sf)(__m128) (Y), (int) (C), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)-1))
#define NID_id_on_permanentIdentifier 858
#define _SSTREAM_TCC 1
#define _SC_NL_NMAX _SC_NL_NMAX
#define CRYPTO_F_CRYPTO_NEW_EX_DATA 112
#define BOOST_PP_RELATIVE_ITERATION(i) BOOST_PP_CAT(BOOST_PP_RELATIVE_, i)(BOOST_PP_ITERATION_)
#define __SIZEOF_PTHREAD_BARRIERATTR_T 4
#define EC_F_PKEY_EC_PARAMGEN 219
#define SCNx16 "hx"
#define TLS_MD_MASTER_SECRET_CONST_SIZE 13
#define BOOST_PP_SEQ_FOLD_LEFT_137(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_137(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define X509_FLAG_NO_SIGDUMP (1L << 9)
#define BIO_TYPE_FILTER 0x0200
#define _mm_mask_i64scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv2df ((void *) (ADDR), (__mmask8) (MASK), (__v2di)(__m128i) (INDEX), (__v2df)(__m128d) (V1), (int) (SCALE))
#define BOOST_PP_FOR_191_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(192, s) BOOST_PP_IIF(c, BOOST_PP_FOR_192, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(192, s), p, o, m)
#define _mm256_maskz_shuffle_f64x2(U,X,Y,C) ((__m256d) __builtin_ia32_shuf_f64x2_256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(C), (__v4df)(__m256d)_mm256_setzero_pd( ), (__mmask8)(U)))
#define _mm_mask_i64scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4sf ((void *) (ADDR), (__mmask8) (MASK), (__v2di)(__m128i) (INDEX), (__v4sf)(__m128) (V1), (int) (SCALE))
#define OBJ_id_pkix_OCSP_noCheck OBJ_id_pkix_OCSP,5L
#define FOLLY_OPENSSL_HAS_SNI 1
#define BOOST_PP_FOR_174(s,p,o,m) BOOST_PP_FOR_174_C(BOOST_PP_BOOL(p(175, s)), s, p, o, m)
#define FS_XFLAG_DAX 0x00008000
#define CONF_R_MISSING_INIT_FUNCTION 112
#define BOOST_PP_LIST_FOLD_LEFT_5(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_6, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(6, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_camellia_192_gcm 965
#define EVP_CIPH_CTRL_INIT 0x40
#define BOOST_PP_LIST_FOLD_LEFT_7(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_8, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(8, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_TXT_eNULL "eNULL"
#define _GLIBCXX_X86_RDRAND 1
#define OPENSSL_secure_free(addr) CRYPTO_secure_free(addr, OPENSSL_FILE, OPENSSL_LINE)
#define SCNx32 "x"
#define EVP_PKEY_SIPHASH NID_siphash
#define sk_unshift OPENSSL_sk_unshift
#define BOOST_PP_LIST_FOLD_LEFT_9(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_10, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(10, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define EOVERFLOW 75
#define SSL_F_TLS_CONSTRUCT_CLIENT_KEY_EXCHANGE 488
#define EC_F_EC_KEY_PRIV2BUF 279
#define __S_IWRITE 0200
#define AF_PACKET PF_PACKET
#define LN_setext_miAuth "merchant initiated auth"
#define _SC_THREAD_ROBUST_PRIO_PROTECT _SC_THREAD_ROBUST_PRIO_PROTECT
#define _mm512_mask_sub_round_ps(W,U,A,B,C) (__m512)__builtin_ia32_subps512_mask(A, B, W, U, C)
#define UCHAR_MAX (SCHAR_MAX * 2 + 1)
#define BOOST_DETAIL_IS_NULLARY_ARGS_C() 1
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_240(o,s,l) 0
#define NID_owner 876
#define BN_F_BN_MOD_INVERSE 110
#define LN_bf_ecb "bf-ecb"
#define LN_camellia_128_ecb "camellia-128-ecb"
#define SSL_R_BAD_HRR_VERSION 263
#define NID_ac_proxying 397
#define _EXT_RANDOM 1
#define _mm512_ror_epi32(A,B) ((__m512i)__builtin_ia32_prord512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_undefined_epi32 (), (__mmask16)(-1)))
#define BOOST_HAS_SCHED_YIELD 
#define __sig_atomic_t_defined 1
#define TLS1_TXT_PSK_WITH_AES_128_CCM "PSK-AES128-CCM"
#define EXFLAG_KUSAGE 0x2
#define PEM_F_PEM_ASN1_READ 102
#define BOOST_PP_SEQ_FOLD_LEFT_I_236(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_237, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(237, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_ext_req OBJ_pkcs9,14L
#define NID_id_GostR3411_94_CryptoProParamSet 822
#define SCNx64 __PRI64_PREFIX "x"
#define EC_R_KDF_PARAMETER_ERROR 148
#define _GLIBCXX_STD_PAIR_CONSTRAINT_(T) _Std_pair T
#define BOOST_PREPROCESSOR_REPETITION_ENUM_PARAMS_HPP 
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_244(o,s,l) 0
#define BOOST_PP_FOR_48_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(49, s) BOOST_PP_IIF(c, BOOST_PP_FOR_49, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(49, s), p, o, m)
#define EVP_F_EVP_CIPHERINIT_EX 123
#define X509_V_ERR_SUITE_B_INVALID_ALGORITHM 57
#define __restrict_arr 
#define BOOST_MPL_LOGICAL_HPP_INCLUDED 
#define SN_aaControls "aaControls"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_245(o,s,l) 0
#define SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION 0x00010000U
#define T_DEBUG(format_string,...) T_DEBUG_L(0, format_string, ##__VA_ARGS__)
#define BOOST_PP_SEQ_ELEM_211(_) BOOST_PP_SEQ_ELEM_210
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010000 (1)(0)(0)(1)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010001 (1)(0)(0)(1)(0)(0)(0)(1),
#define EVBUFFER_READ BEV_EVENT_READING
#define ERR_R_ASN1_LIB ERR_LIB_ASN1
#define OBJ_ecdsa_with_SHA1 OBJ_X9_62_id_ecSigType,1L
#define PEM_F_PEM_READ_BIO_EX 145
#define __DBL_MIN_10_EXP__ (-307)
#define JEMALLOC_ALIGNED(s) JEMALLOC_ATTR(aligned(s))
#define SN_id_GostR3410_94_CryptoPro_XchC_ParamSet "id-GostR3410-94-CryptoPro-XchC-ParamSet"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_90(p,o,s) 0
#define NID_id_smime_alg_CMS3DESwrap 246
#define EVP_MD_FLAG_DIGALGID_ABSENT 0x0008
#define _SC_V7_ILP32_OFFBIG _SC_V7_ILP32_OFFBIG
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_210 210
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000000 (1)(1)(0)(0)(0)(0)(0)(0),
#define W_OK 2
#define SSL_R_INVALID_STATUS_RESPONSE 328
#define LN_cmac "cmac"
#define BOOST_PP_LIST_FOLD_LEFT_201(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_202, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(202, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _SIZE_T_ 
#define BOOST_PP_LIST_FOLD_LEFT_203(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_204, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(204, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_205(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_206, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(206, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _POSIX2_COLL_WEIGHTS_MAX 2
#define BOOST_PP_LIST_FOLD_LEFT_207(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_208, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(208, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_209(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_210, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(210, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010010 (1)(0)(0)(1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010011 (1)(0)(0)(1)(0)(0)(1)(1),
#define _SIDD_MASKED_NEGATIVE_POLARITY 0x30
#define NID_Management 383
#define NID_dhSinglePass_stdDH_sha224kdf_scheme 937
#define B_ASN1_UNIVERSALSTRING 0x0100
#define BOOST_PP_SEQ_ELEM_218(_) BOOST_PP_SEQ_ELEM_217
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_91(op,st,ss,sz) 0
#define SSL_R_CA_MD_TOO_WEAK 398
#define IP_RETOPTS 7
#define BOOST_PP_LIST_FOLD_LEFT_210(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_211, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(211, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_211(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_212, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(212, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_212(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_213, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(213, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_213(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_214, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(214, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_214(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_215, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(215, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_215(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_216, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(216, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_218(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_219, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(219, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_219(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_220, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(220, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_id_cmc_queryPending 343
#define _GLIBCXX_HAVE_VSWSCANF 1
#define NID_issuing_distribution_point 770
#define FMT_VERSION 70103
#define BOOST_PP_LIST_FOLD_LEFT_216(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_217, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(217, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_221(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_222, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(222, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_222(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_223, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(223, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_223(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_224, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(224, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_224(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_225, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(225, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_226(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_227, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(227, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_227(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_228, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(228, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_228(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_229, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(229, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define LN_sm4_ecb "sm4-ecb"
#define _mm256_mask_i32scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv4df ((void *) (ADDR), (__mmask8) (MASK), (__v4si)(__m128i) (INDEX), (__v4df)(__m256d) (V1), (int) (SCALE))
#define BIO_set_accept_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_ACCEPT,4,f)
#define _mm256_mask_i32scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv8sf ((void *) (ADDR), (__mmask8) (MASK), (__v8si)(__m256i) (INDEX), (__v8sf)(__m256) (V1), (int) (SCALE))
#define BOOST_PP_LIST_FOLD_LEFT_231(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_232, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(232, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_234(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_235, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(235, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_236(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_237, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(237, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_237(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_238, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(238, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_238(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_239, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(239, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_239(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_240, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(240, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_MOVE_STD_NS_BEG namespace std _GLIBCXX_VISIBILITY(default) { _GLIBCXX_BEGIN_NAMESPACE_VERSION
#define TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE 16
#define SSL_get_tlsext_status_ocsp_resp(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP,0,arg)
#define SN_secp192k1 "secp192k1"
#define UDP_ENCAP_L2TPINUDP 3
#define SSL_TXT_RC2 "RC2"
#define SSL_TXT_RC4 "RC4"
#define SN_aria_128_gcm "ARIA-128-GCM"
#define _mm256_mask_blend_epi16(__U,__A,__W) ((__m256i) __builtin_ia32_blendmw_256_mask ((__v16hi) (__A), (__v16hi) (__W), (__mmask16) (__U)))
#define LN_aes_128_cfb1 "aes-128-cfb1"
#define BOOST_PP_LIST_FOLD_LEFT_240(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_241, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(241, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_241(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_242, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(242, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_242(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_243, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(243, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_243(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_244, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(244, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_244(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_245, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(245, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_245(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_246, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(246, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_246(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_247, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(247, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_248(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_249, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(249, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __U64_TYPE unsigned long int
#define X509V3err(f,r) ERR_PUT_error(ERR_LIB_X509V3,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define S_ISLNK(mode) __S_ISTYPE((mode), __S_IFLNK)
#define EVENT2_BUFFER_COMPAT_H_INCLUDED_ 
#define _POSIX_RAW_SOCKETS 200809L
#define LN_internationaliSDNNumber "internationaliSDNNumber"
#define RAND_R_RESEED_ERROR 118
#define BOOST_PP_LIST_FOLD_LEFT_217(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_218, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(218, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_EAT(...) 
#define _BMI2INTRIN_H_INCLUDED 
#define _mm_mask_fpclass_pd_mask(u,X,C) ((__mmask8) __builtin_ia32_fpclasspd128_mask ((__v2df) (__m128d) (X), (int) (C),(__mmask8)(u)))
#define BOOST_PP_LIST_FOLD_LEFT_250(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_251, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(251, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_252(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_253, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(253, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_253(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_254, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(254, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_FOR_123_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(124, s) BOOST_PP_IIF(c, BOOST_PP_FOR_124, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(124, s), p, o, m)
#define BOOST_PP_LIST_FOLD_LEFT_255(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_256, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(256, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_256(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_257, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(257, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_257(o,s,l) BOOST_PP_ERROR(0x0004)
#define SHA224_DIGEST_LENGTH 28
#define BOOST_PREPROCESSOR_ARRAY_ELEM_HPP 
#define __FLT64X_HAS_DENORM__ 1
#define _PC_SYNC_IO _PC_SYNC_IO
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_97(op,st,ss,sz) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010011 (1)(1)(0)(1)(0)(0)(1)(1),
#define va_copy(d,s) __builtin_va_copy(d,s)
#define BOOST_PP_REPEAT_3_169(m,d) BOOST_PP_REPEAT_3_168(m, d) m(4, 168, d)
#define OBJ_clearance OBJ_selected_attribute_types,55L
#define EVP_PADDING_ISO10126 4
#define BOOST_MSVC_WORKAROUND_GUARD 1
#define SN_aes_192_gcm "id-aes192-GCM"
#define __WSTOPSIG(status) __WEXITSTATUS(status)
#define SN_auth_dss "AuthDSS"
#define BOOST_PP_LIST_FOLD_RIGHT_196(o,s,l) BOOST_PP_LIST_FOLD_LEFT_196(o, s, BOOST_PP_LIST_REVERSE_D(196, l))
#define _mm512_exp2a23_pd(A) _mm512_exp2a23_round_pd(A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_PP_SEQ_FOLD_LEFT_51(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_51(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm512_exp2a23_ps(A) _mm512_exp2a23_round_ps(A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_PP_WHILE_57_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_58, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(58, s))
#define _ALLOCATED_PTR_H 1
#define BIO_F_BIO_PUTS 110
#define _mm256_mask_insertf64x2(W,U,X,Y,C) ((__m256d) __builtin_ia32_insertf64x2_256_mask ((__v4df)(__m256d) (X), (__v2df)(__m128d) (Y), (int) (C), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define MCAST_JOIN_SOURCE_GROUP 46
#define THRIFT_TPROCESSOR_H_ 1
#define SO_EE_CODE_TXTIME_INVALID_PARAM 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011011 (0)(1)(0)(1)(1)(0)(1)(1),
#define BOOST_PP_FOR_232_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(233, s) BOOST_PP_IIF(c, BOOST_PP_FOR_233, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(233, s), p, o, m)
#define __bos0(ptr) __builtin_object_size (ptr, 0)
#define X509_EX_V_NETSCAPE_HACK 0x8000
#define __ENUM_IDTYPE_T 1
#define TLS_MD_IV_BLOCK_CONST "IV block"
#define BOOST_PP_FOR_44(s,p,o,m) BOOST_PP_FOR_44_C(BOOST_PP_BOOL(p(45, s)), s, p, o, m)
#define BIO_C_SET_BUFF_SIZE 117
#define NID_cast5_cfb64 110
#define NULL __null
#define TLS1_AD_INSUFFICIENT_SECURITY 71
#define SSL_F_TLS_CONSTRUCT_CTOS_SCT 474
#define BOOST_PP_CONFIG_ERRORS 1
#define ASN1_F_I2D_ASN1_OBJECT 143
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_9 9
#define SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG 148
#define APACHE_THRIFT_ACCESSOR_load 
#define BIO_CTRL_DGRAM_SET_PEER 44
#define TLS1_RFC_ECDHE_RSA_WITH_AES_128_CBC_SHA "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
#define SIGRTMAX (__libc_current_sigrtmax ())
#define BOOST_PP_WHILE_172_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_173, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(173, s))
#define _mm512_maskz_shrdi_epi16(A,B,C,D) ((__m512i) __builtin_ia32_vpshrd_v32hi_mask ((__v32hi)(__m512i)(B), (__v32hi)(__m512i)(C),(int)(D), (__v32hi)(__m512i)_mm512_setzero_si512 (), (__mmask32)(A)))
#define X509_V_ERR_IP_ADDRESS_MISMATCH 64
#define BOOST_PP_SEQ_FOLD_LEFT_I_90(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_91, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(91, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_F_TLS_CONSTRUCT_CTOS_PSK_KEX_MODES 509
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001101 (0)(0)(0)(1)(1)(0)(1),
#define B_ASN1_BMPSTRING 0x0800
#define BOOST_PP_SEQ_FOLD_LEFT_I_91(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_92, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(92, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_MPL_INSERT_RANGE_FWD_HPP_INCLUDED 
#define FOLLY_SSE_MINOR 0
#define OBJ_id_cmc_responseInfo OBJ_id_cmc,19L
#define BOOST_PP_LIST_FOLD_RIGHT_60(o,s,l) BOOST_PP_LIST_FOLD_LEFT_60(o, s, BOOST_PP_LIST_REVERSE_D(60, l))
#define CRYPTO_EX_INDEX_DH 6
#define NID_camellia_128_gcm 961
#define EVENT__HAVE_FCNTL_H 1
#define _GLIBCXX_RATIO 1
#define BOOST_PP_LIST_FOLD_RIGHT_61(o,s,l) BOOST_PP_LIST_FOLD_LEFT_61(o, s, BOOST_PP_LIST_REVERSE_D(61, l))
#define IORING_TIMEOUT_ABS (1U << 0)
#define BOOST_PP_SEQ_FOLD_LEFT_I_95(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_96, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(96, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _mm512_maskz_dbsad_epu8(U,X,Y,C) ((__m512i) __builtin_ia32_dbpsadbw512_mask ((__v64qi)(__m512i) (X), (__v64qi)(__m512i) (Y), (int) (C), (__v32hi)(__m512i) _mm512_setzero_si512 (), (__mmask32)(U)))
#define _SC_LEVEL4_CACHE_LINESIZE _SC_LEVEL4_CACHE_LINESIZE
#define SN_camellia_128_cfb128 "CAMELLIA-128-CFB"
#define _PSTL_ASSERT_MSG(_Condition,_Message) __glibcxx_assert(_Condition)
#define BOOST_PP_REPEAT_2_132(m,d) BOOST_PP_REPEAT_2_131(m, d) m(3, 131, d)
#define OBJ_mdc2 OBJ_X500algorithms,3L,101L
#define _mm512_maskz_shrdi_epi32(A,B,C,D) ((__m512i) __builtin_ia32_vpshrd_v16si_mask ((__v16si)(__m512i)(B), (__v16si)(__m512i)(C),(int)(D), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(A)))
#define _mm_mmask_i64gather_epi32(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128i) __builtin_ia32_gather3div4si ((__v4si)(__m128i) (V1OLD), (void const *) (ADDR), (__v2di)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA 0x03000041
#define BOOST_PP_SEQ_FOLD_LEFT_I_97(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_98, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(98, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define RSA_FLAG_NO_CONSTTIME 0x0000
#define SN_id_aes192_wrap "id-aes192-wrap"
#define OBJ_ns_sgc OBJ_netscape,4L,1L
#define SOL_KCM 281
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100 (1)(1)(0)(0),
#define __INT_LEAST8_TYPE__ signed char
#define BOOST_PP_SEQ_FOLD_LEFT_I_121(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_122, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(122, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define RSA_R_SLEN_CHECK_FAILED 136
#define RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE 148
#define BOOST_PP_CHECK_RESULT_BOOST_PP_IS_BINARY_CHECK 0, BOOST_PP_NIL
#define OpenSSL_add_all_algorithms() OPENSSL_add_all_algorithms_noconf()
#define BOOST_PP_FOR_83_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(84, s) BOOST_PP_IIF(c, BOOST_PP_FOR_84, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(84, s), p, o, m)
#define SSL_CTRL_EXTRA_CHAIN_CERT 14
#define NID_md2 3
#define NID_md4 257
#define NID_md5 4
#define EVENT__HAVE_SELECT 1
#define SSL_CTRL_SET_MAX_PIPELINES 126
#define APACHE_THRIFT_ACCESSOR_version 
#define PKCS7_F_PKCS7_DATAINIT 105
#define TLS1_CK_PSK_WITH_AES_256_CCM 0x0300C0A5
#define TIMER_ABSTIME 1
#define BOOST_UTILITY_HPP 
#define NID_grasshopper_cfb 1016
#define LN_proxyCertInfo "Proxy Certificate Information"
#define ERR_R_ENGINE_LIB ERR_LIB_ENGINE
#define CRYPTO_THREADID_cmp(a,b) (-1)
#define _mm512_maskz_shrdi_epi64(A,B,C,D) ((__m512i) __builtin_ia32_vpshrd_v8di_mask ((__v8di)(__m512i)(B), (__v8di)(__m512i)(C),(int)(D), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(A)))
#define _mm_mmask_i64gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128i) __builtin_ia32_gather3div2di ((__v2di)(__m128i) (V1OLD), (void const *) (ADDR), (__v2di)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define SN_X9_62_c2tnb431r1 "c2tnb431r1"
#define ASN1_F_STABLE_GET 138
#define SN_capwapWTP "capwapWTP"
#define __cpp_sized_deallocation 201309L
#define _mm512_maskz_cvt_roundpd_epu32(U,A,B) ((__m256i)__builtin_ia32_cvtpd2udq512_mask(A, (__v8si)_mm256_setzero_si256(), U, B))
#define BOOST_PP_DEC_162 161
#define BOOST_MPL_EMPTY_FWD_HPP_INCLUDED 
#define EVP_CIPH_CUSTOM_KEY_LENGTH 0x80
#define OPENSSL_UNISTD <unistd.h>
#define SSL_F_TLS_POST_PROCESS_CLIENT_HELLO 378
#define SN_id_GostR3410_2001_cc "gost2001cc"
#define BOOST_MPL_AUX_NONTYPE_ARITY_SPEC(i,type,name) 
#define __cpp_lib_unordered_map_try_emplace 201411
#define _SC_2_VERSION _SC_2_VERSION
#define ASN1_F_ASN1_TEMPLATE_EX_D2I 132
#define SSL_set1_groups(s,glist,glistlen) SSL_ctrl(s,SSL_CTRL_SET_GROUPS,glistlen,(char *)(glist))
#define LN_id_tc26_gost_3410_2012_512_paramSetA "GOST R 34.10-2012 (512 bit) ParamSet A"
#define LN_id_tc26_gost_3410_2012_512_paramSetB "GOST R 34.10-2012 (512 bit) ParamSet B"
#define LN_id_tc26_gost_3410_2012_512_paramSetC "GOST R 34.10-2012 (512 bit) ParamSet C"
#define MAP_FIXED_NOREPLACE 0x100000
#define EVP_PKEY_assign_SIPHASH(pkey,shkey) EVP_PKEY_assign((pkey),EVP_PKEY_SIPHASH, (char *)(shkey))
#define EVP_CTRL_GCM_SET_IV_FIXED EVP_CTRL_AEAD_SET_IV_FIXED
#define EC_R_MISSING_PRIVATE_KEY 125
#define IPV6_RTHDR_LOOSE 0
#define BIO_C_GET_EX_ARG 154
#define __FLT64_HAS_QUIET_NAN__ 1
#define BOOST_INTRUSIVE_HASHTABLE_HPP 
#define BOOST_DETAIL_REFERENCE_CONTENT_HPP 
#define _MM_FROUND_TO_NEAREST_INT 0x00
#define TLS1_RFC_DHE_PSK_WITH_3DES_EDE_CBC_SHA "TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA"
#define SN_ac_auditEntity "ac-auditEntity"
#define _mm512_extractf32x8_ps(X,C) ((__m256) __builtin_ia32_extractf32x8_mask ((__v16sf)(__m512) (X), (int) (C), (__v8sf)(__m256) _mm256_setzero_ps (), (__mmask8)-1))
#define F_GETLK64 5
#define _mm256_mask_blend_epi8(__U,__A,__W) ((__m256i) __builtin_ia32_blendmb_256_mask ((__v32qi) (__A), (__v32qi) (__W), (__mmask32) (__U)))
#define CRYPTO_THREADID_cpy(dest,src) 
#define LN_jurisdictionLocalityName "jurisdictionLocalityName"
#define SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT 299
#define SN_id_pkix_OCSP_extendedStatus "extendedStatus"
#define _mm512_maskz_cvt_roundpd_epu64(U,A,B) ((__m512i)__builtin_ia32_cvtpd2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define BOOST_INTRUSIVE_TT_DECL 
#define BOOST_PP_SEQ_ELEM_223(_) BOOST_PP_SEQ_ELEM_222
#define L_XTND SEEK_END
#define BOOST_PP_SEQ_ELEM_224(_) BOOST_PP_SEQ_ELEM_223
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100101 (1)(1)(0)(0)(1)(0)(1),
#define BOOST_MPL_AUX_ASSERT_NOT_NA(x) BOOST_MPL_ASSERT_NOT((boost::mpl::is_na<type>))
#define _SC_MEMLOCK_RANGE _SC_MEMLOCK_RANGE
#define _GLIBCXX_ISTREAM 1
#define BOOST_PP_SEQ_ELEM_225(_) BOOST_PP_SEQ_ELEM_224
#define BIO_R_UNABLE_TO_LISTEN_SOCKET 119
#define BOOST_PP_SEQ_ELEM_226(_) BOOST_PP_SEQ_ELEM_225
#define OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik OBJ_id_tc26_wrap,2L
#define NID_mdc2 95
#define SSL_R_BAD_ECC_CERT 304
#define SN_id_Gost28147_89_TestParamSet "id-Gost28147-89-TestParamSet"
#define IMPLEMENT_LHASH_DOALL_ARG_FN(name,o_type,a_type) void name ##_LHASH_DOALL_ARG(void *arg1, void *arg2) { o_type *a = arg1; a_type *b = arg2; name ##_doall_arg(a, b); }
#define NID_id_GostR3411_2012_256 982
#define SSL_CTX_build_cert_chain(ctx,flags) SSL_CTX_ctrl(ctx,SSL_CTRL_BUILD_CERT_CHAIN, flags, NULL)
#define OBJ_id_GostR3411_94 OBJ_cryptopro,9L
#define SSL_CTRL_SET_SRP_VERIFY_PARAM_CB 76
#define POLLWRNORM 0x100
#define PSK_MAX_IDENTITY_LEN 128
#define X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN 19
#define LOG(severity) COMPACT_GOOGLE_LOG_ ## severity.stream()
#define EVP_F_PKEY_SET_TYPE 158
#define SSL_F_SSL_SESSION_DUP 348
#define X509_F_X509_CRL_METHOD_NEW 154
#define _mm512_mask3_fmsub_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmsubps512_mask3(A, B, C, U, R)
#define CHECK_DOUBLE_EQ(val1,val2) do { CHECK_LE((val1), (val2)+0.000000000000001L); CHECK_GE((val1), (val2)-0.000000000000001L); } while (0)
#define TLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA 0x0300008B
#define EVENT__HAVE_STRTOK_R 1
#define SSL_TXT_RSA "RSA"
#define _SC_SELECT _SC_SELECT
#define M_PI_4f32 __f32 (0.785398163397448309615660845819875721)
#define __OPEN_NEEDS_MODE(oflag) (((oflag) & O_CREAT) != 0 || ((oflag) & __O_TMPFILE) == __O_TMPFILE)
#define OBJ_hmacWithSHA224 OBJ_rsadsi,2L,8L
#define BOOST_INTRUSIVE_DETAIL_MPL_HPP 
#define SSL_FILETYPE_PEM X509_FILETYPE_PEM
#define __FLT64_HAS_INFINITY__ 1
#define _GLIBCXX_CSTDLIB 1
#define SSL_R_COMPRESSION_FAILURE 141
#define BOOST_PP_WHILE_92_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_93, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(93, s))
#define _mm_maskz_fixupimm_round_sd(U,X,Y,Z,C,R) ((__m128d)__builtin_ia32_fixupimmsd_maskz ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))
#define POLL_HUP POLL_HUP
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_10(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_11(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_12(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_13(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_14(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_15(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_16(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_17(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_18(s,p,o,m) 0
#define NID_id_cmc_confirmCertAcceptance 346
#define BN_R_INPUT_NOT_REDUCED 110
#define SSL_R_SSL3_SESSION_ID_TOO_LONG 300
#define BIO_C_DESTROY_BIO_PAIR 139
#define RLIMIT_NOFILE RLIMIT_NOFILE
#define PKCS5_DEFAULT_ITER 2048
#define NID_no_rev_avail 403
#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_CBC_SHA "ECDHE-RSA-AES256-SHA"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_20(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_21(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_22(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_23(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_24(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_25(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_26(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_27(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_28(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_29(s,p,o,m) 0
#define __cpp_nontype_template_args 201411L
#define NID_sect571k1 733
#define _SIDD_BIT_MASK 0x00
#define BOOST_TEMPLATED_STREAM(X,E,T) BOOST_JOIN(std::basic_,X)< E , T >
#define OBJ_id_tc26_cipher_constants OBJ_id_tc26_constants,5L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_1(op,st,ss,sz) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_2(op,st,ss,sz) 0
#define SN_authority_key_identifier "authorityKeyIdentifier"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_5(op,st,ss,sz) 0
#define BOOST_PP_WHILE_156_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_157, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(157, s))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_8(op,st,ss,sz) 0
#define FILENAME_MAX 4096
#define _mm512_mask_roundscale_ps(A,B,C,D) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(C), (int)(D), (__v16sf)(__m512)(A), (__mmask16)(B), _MM_FROUND_CUR_DIRECTION))
#define SSL_F_TLS_CONSTRUCT_CTOS_SRP 478
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_30(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_31(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_33(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_34(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_35(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_36(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_38(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_39(s,p,o,m) 0
#define SSL_F_SSL_GENERATE_SESSION_ID 547
#define BOOST_MPL_VOID_HPP_INCLUDED 
#define OBJ_F_OBJ_ADD_SIGID 107
#define SSL_F_TLS_PROCESS_KEY_EXCHANGE 365
#define _CMP_NGE_UQ 0x19
#define BOOST_PP_WHILE_256(p,o,s) BOOST_PP_WHILE_256_C(BOOST_PP_BOOL(p(257, s)), p, o, s)
#define _CMP_NGE_US 0x09
#define _WAITPKG_H_INCLUDED 
#define evuser_trigger(ev) event_active((ev), 0, 0)
#define SSL_R_DANE_CANNOT_OVERRIDE_MTYPE_FULL 173
#define NID_anyExtendedKeyUsage 910
#define EC_F_EC_GFP_MONT_FIELD_INV 297
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_40(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_41(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_42(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_43(s,p,o,m) 0
#define OBJ_homeTelephoneNumber OBJ_pilotAttributeType,20L
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_46(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_47(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_48(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_49(s,p,o,m) 0
#define SIG_HOLD ((__sighandler_t) 2)
#define BOOST_PP_FOR_15_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(16, s) BOOST_PP_IIF(c, BOOST_PP_FOR_16, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(16, s), p, o, m)
#define SSL_AD_CERTIFICATE_REVOKED SSL3_AD_CERTIFICATE_REVOKED
#define _POSIX_MEMLOCK_RANGE 200809L
#define IPPROTO_ICMP IPPROTO_ICMP
#define SSL_R_SSL_SECTION_EMPTY 126
#define OBJ_blake2s256 1L,3L,6L,1L,4L,1L,1722L,12L,2L,2L,8L
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_50(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_51(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_52(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_53(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_54(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_55(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_56(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_58(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_59(s,p,o,m) 0
#define BOOST_PP_INTERCEPT_176 
#define SN_set_brand_Visa "set-brand-Visa"
#define SN_code_sign "codeSigning"
#define NID_magma_mac 1192
#define BOOST_PP_REPEAT_1_141(m,d) BOOST_PP_REPEAT_1_140(m, d) m(2, 140, d)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_61(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_62(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_63(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_66(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_67(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_68(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_69(s,p,o,m) 0
#define LN_crl_distribution_points "X509v3 CRL Distribution Points"
#define X509_V_ERR_PATH_LOOP 55
#define CRYPTO_EX_INDEX_UI 11
#define LN_cNAMERecord "cNAMERecord"
#define __HAVE_GENERIC_SELECTION 0
#define OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet OBJ_cryptopro,36L,1L
#define X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD 14
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_70(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_71(s,p,o,m) 0
#define INT64_WIDTH 64
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_73(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_74(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_76(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_77(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_79(s,p,o,m) 0
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define SN_sm2 "SM2"
#define BOOST_PP_REPEAT_3_28(m,d) BOOST_PP_REPEAT_3_27(m, d) m(4, 27, d)
#define CPP2_SERIALIZER_H 
#define STATX_ALL 0x00000fffU
#define NID_grasshopper_ctr 1013
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_80(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_82(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_83(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_84(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_85(s,p,o,m) 0
#define RSA_get_app_data(s) RSA_get_ex_data(s,0)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_87(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_88(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_89(s,p,o,m) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001 (0)(1)(0)(0)(1),
#define AF_ALG PF_ALG
#define SSL_CTRL_GET_PEER_SIGNATURE_NID 108
#define _mm512_maskz_reduce_ps(U,A,B) ((__m512) __builtin_ia32_reduceps512_mask ((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_setzero_ps (), (__mmask16)(U)))
#define SSL_F_TLS_PROCESS_CKE_ECDHE 412
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011100 (1)(1)(0)(1)(1)(1)(0)(0),
#define __cpp_constexpr_in_decltype 201711L
#define __cpp_inline_variables 201606L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0011111 (0)(0)(1)(1)(1)(1)(1),
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_91(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_92(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_93(s,p,o,m) 0
#define BOOST_HAS_HASH 
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_95(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_96(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_97(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_98(s,p,o,m) 0
#define LN_subject_key_identifier "X509v3 Subject Key Identifier"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01010 (0)(1)(0)(1)(0),
#define SSL_F_SSL_WRITE_INTERNAL 524
#define NID_sect571r1 734
#define FOLLY_OPENSSL_HAS_TLS13 1
#define OBJ_id_smime_aa_macValue OBJ_id_smime_aa,8L
#define _mm512_maskz_fmsubadd_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfmaddsubps512_maskz(A, B, -(C), U, R)
#define __LDBL_REDIR_DECL(name) 
#define _mm512_maskz_rcp28_pd(U,A) _mm512_maskz_rcp28_round_pd(U, A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011111 (1)(1)(0)(1)(1)(1)(1)(1),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1110 (1)(1)(1)(0),
#define _mm512_maskz_rcp28_ps(U,A) _mm512_maskz_rcp28_round_ps(U, A, _MM_FROUND_CUR_DIRECTION)
#define TLS1_RFC_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_RSA_WITH_ARIA_256_GCM_SHA384"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111 (1)(1)(1)(1),
#define _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
#define LN_capwapAC "Ctrl/provision WAP Access"
#define BIO_get_accept_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,1))
#define SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK 216
#define TLS1_TXT_RSA_WITH_AES_256_SHA256 "AES256-SHA256"
#define BOOST_PP_TUPLE_REM_14(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13
#define BOOST_PP_WHILE BOOST_PP_CAT(BOOST_PP_WHILE_, BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256))
#define BOOST_MPL_AUX_NA_ASSERT_HPP_INCLUDED 
#define _mm512_reduce_pd(A,B) ((__m512d) __builtin_ia32_reducepd512_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_setzero_pd (), (__mmask8)-1))
#define FMT_BUILTIN_CLZLL(n) __builtin_clzll(n)
#define BOOST_TT_IS_REFERENCE_HPP_INCLUDED 
#define SSL_CTRL_SESS_CACHE_FULL 31
#define BIO_C_SET_SSL_RENEGOTIATE_BYTES 125
#define SSL_AD_BAD_CERTIFICATE_HASH_VALUE TLS1_AD_BAD_CERTIFICATE_HASH_VALUE
#define X509_R_CRL_VERIFY_FAILURE 131
#define OBJ_aes_192_ofb128 OBJ_aes,23L
#define _mm512_shufflehi_epi16(A,B) ((__m512i) __builtin_ia32_pshufhw512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i) _mm512_setzero_si512 (), (__mmask32)-1))
#define UINT8_WIDTH 8
#define LN_kx_ecdhe_psk "kx-ecdhe-psk"
#define TLS1_TXT_DH_RSA_WITH_AES_128_GCM_SHA256 "DH-RSA-AES128-GCM-SHA256"
#define CRYPTO_EX_INDEX_EC_KEY 8
#define SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS 239
#define NID_id_smime_aa_signingCertificateV2 1086
#define __LC_NUMERIC 1
#define _mm256_gf2p8affineinv_epi64_epi8(A,B,C) ((__m256i) __builtin_ia32_vgf2p8affineinvqb_v32qi((__v32qi)(__m256i)(A), (__v32qi)(__m256i)(B), (int)(C)))
#define TLS1_TXT_DHE_RSA_WITH_AES_256_SHA256 "DHE-RSA-AES256-SHA256"
#define _GLIBCXX_STRING 1
#define NID_id_aes256_wrap_pad 903
#define EC_F_ECP_NISTZ256_INV_MOD_ORD 275
#define BOOST_PP_SEQ_ELEM_17(_) BOOST_PP_SEQ_ELEM_16
#define SSL_CB_EXIT 0x02
#define TLSEXT_signature_dsa 2
#define BOOST_MOVE_IS_TRIVIALLY_MOVE_CONSTRUCTIBLE(T) ::boost::move_detail::is_pod<T>::value
#define BOOST_PP_REPEAT_2_131(m,d) BOOST_PP_REPEAT_2_130(m, d) m(3, 130, d)
#define _SC_AIO_PRIO_DELTA_MAX _SC_AIO_PRIO_DELTA_MAX
#define OBJ_setAttr_TokenType OBJ_set_attr,2L
#define FOLLY_PP_FOR_EACH(fn,...) FOLLY_PP_DETAIL_FOR_EACH_1( fn, FOLLY_PP_DETAIL_NARGS(__VA_ARGS__), __VA_ARGS__)
#define EVP_MD_CTRL_XOF_LEN 0x3
#define S_IRGRP (S_IRUSR >> 3)
#define LN_hmacWithSHA512_256 "hmacWithSHA512-256"
#define SSL_TXT_EECDH "EECDH"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_011110 (0)(1)(1)(1)(1)(0),
#define BOOST_PP_SEQ_ELEM_230(_) BOOST_PP_SEQ_ELEM_229
#define CT_R_LOG_CONF_INVALID_KEY 110
#define BOOST_PP_LIST_FOLD_LEFT_220(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_221, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(221, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm512_cvtt_roundps_epu32(A,B) ((__m512i)__builtin_ia32_cvttps2udq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))
#define NID_dstu28147 1152
#define PF_PACKET 17
#define EVP_F_OK_NEW 200
#define BOOST_PP_DEC_11 10
#define LN_poly1305 "poly1305"
#define BOOST_PP_WHILE_163_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_164, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(164, s))
#define AT_EMPTY_PATH 0x1000
#define SYS_F_GETADDRINFO 12
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE 127
#define OBJ_selected_attribute_types OBJ_joint_iso_itu_t,5L,1L,5L
#define SSL_CTX_set_mode(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_MODE,(op),NULL)
#define BOOST_PP_REPEAT_3_170(m,d) BOOST_PP_REPEAT_3_169(m, d) m(4, 169, d)
#define BOOST_IS_FINAL(T) __is_final(T)
#define RAND_R_NOT_A_REGULAR_FILE 122
#define OBJ_setct_CapReqTBE OBJ_set_ctype,62L
#define F_SEAL_GROW 0x0004
#define SN_pSpecified "PSPECIFIED"
#define OBJ_netscape_cert_extension OBJ_netscape,1L
#define _CMP_TRUE_UQ 0x0f
#define _CMP_TRUE_US 0x1f
#define _GLIBCXX_CERRNO 1
#define __intptr_t_defined 
#define BOOST_PP_LIST_FOLD_LEFT_232(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_233, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(233, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_F_TLS_CONSTRUCT_STOC_USE_SRTP 462
#define BOOST_PP_LIST_FOLD_LEFT_233(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_234, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(234, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_SECOP_PEER 0x1000
#define BOOST_HAS_TRIVIAL_MOVE_ASSIGN(T) (__is_trivially_assignable(T&, T&&) && is_assignable<T&, T&&>::value && !::boost::is_volatile<T>::value)
#define FMT_CUDA_VERSION 0
#define RSA_FLAG_CACHE_PUBLIC 0x0002
#define SIGPOLL 29
#define BOOST_PP_LIST_FOLD_LEFT_235(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_236, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(236, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define CRYPTO_cleanup_all_ex_data() while(0) continue
#define BIO_F_SSL_NEW 118
#define BOOST_RESULT_OF_HPP 
#define EREMOTEIO 121
#define BOOST_PP_REPEAT_3_174(m,d) BOOST_PP_REPEAT_3_173(m, d) m(4, 173, d)
#define OBJ_wap OBJ_international_organizations,43L
#define TLS1_get_version(s) ((SSL_version(s) >> 8) == TLS1_VERSION_MAJOR ? SSL_version(s) : 0)
#define LN_shake128 "shake128"
#define AT_STATX_DONT_SYNC 0x4000
#define RSA_F_RSA_VERIFY_ASN1_OCTET_STRING 120
#define BN_F_BN_BLINDING_INVERT_EX 101
#define NID_pbeWithMD5AndCast5_CBC 112
#define _mm256_i64scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4df ((void *) (ADDR), (__mmask8)0xFF, (__v4di)(__m256i) (INDEX), (__v4df)(__m256d) (V1), (int) (SCALE))
#define OBJ_houseIdentifier OBJ_X509,51L
#define BOOST_PP_FOR_104(s,p,o,m) BOOST_PP_FOR_104_C(BOOST_PP_BOOL(p(105, s)), s, p, o, m)
#define POLLRDHUP 0x2000
#define RSA_R_PADDING_CHECK_FAILED 114
#define __USE_POSIX199309 1
#define EVP_PKEY_CTX_get_dh_kdf_outlen(ctx,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN, 0, (void *)(plen))
#define NID_camellia_192_cmac 968
#define DFATAL_LEVEL FATAL
#define BOOST_PP_REPEAT_3_177(m,d) BOOST_PP_REPEAT_3_176(m, d) m(4, 176, d)
#define OBJ_des_ecb OBJ_algorithm,6L
#define ASN1_F_C2I_ASN1_OBJECT 196
#define RAND_R_PARENT_STRENGTH_TOO_WEAK 131
#define SN_setct_PIData "setct-PIData"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_33(op,st,ss,sz) 0
#define BOOST_PP_REPEAT_3_106(m,d) BOOST_PP_REPEAT_3_105(m, d) m(4, 105, d)
#define FB_LOG_EVERY_MS(severity,milli_interval) for (decltype(milli_interval) FB_LEM_once = 1, FB_LEM_interval = (milli_interval); FB_LEM_once;) for (::std::chrono::milliseconds::rep FB_LEM_prev, FB_LEM_now = FB_LEM_interval <= 0 ? 0 : ::std::chrono::duration_cast<::std::chrono::milliseconds>( ::std::chrono::system_clock::now().time_since_epoch()) .count(); FB_LEM_once;) for (static ::std::atomic<::std::chrono::milliseconds::rep> FB_LEM_hist; FB_LEM_once; FB_LEM_once = 0) if (FB_LEM_interval > 0 && (FB_LEM_now - (FB_LEM_prev = FB_LEM_hist.load(std::memory_order_acquire)) < FB_LEM_interval || !FB_LEM_hist.compare_exchange_strong(FB_LEM_prev, FB_LEM_now))) { } else LOG(severity)
#define CONF_F_PROCESS_INCLUDE 116
#define OBJ_presentationAddress OBJ_X509,29L
#define NID_photo 464
#define BOOST_PP_SEQ_ELEM_121(_) BOOST_PP_SEQ_ELEM_120
#define _mm_maskz_ternarylogic_epi32(U,A,B,C,I) ((__m128i) __builtin_ia32_pternlogd128_maskz ((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (__v4si)(__m128i)(C), (int)(I), (__mmask8)(U)))
#define IPV6_ADDR_PREFERENCES 72
#define ASN1_F_PKCS5_PBKDF2_SET 219
#define _GLIBCXX_TYPE_TRAITS 1
#define TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x030000BA
#define NID_sha512_256WithRSAEncryption 1146
#define TCP_MAXWIN 65535
#define __ATOMIC_RELAXED 0
#define OPENSSL_RSA_SMALL_MODULUS_BITS 3072
#define PKCS7_R_DECRYPT_ERROR 119
#define NID_setct_CapResTBE 582
#define SA_ONESHOT SA_RESETHAND
#define _mm512_slli_epi32(X,C) ((__m512i) __builtin_ia32_pslldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_epi32 (), (__mmask16)-1))
#define NID_setct_CredReqTBS 550
#define SCT_MIN_RSA_BITS 2048
#define SO_PEERGROUPS 59
#define POSIX_FADV_DONTNEED __POSIX_FADV_DONTNEED
#define IO_URING_OP_SUPPORTED (1U << 0)
#define BIO_TYPE_COMP (23|BIO_TYPE_FILTER)
#define TLS1_RFC_DHE_PSK_WITH_ARIA_128_GCM_SHA256 "TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256"
#define TLS1_1_VERSION_MAJOR 0x03
#define _mm256_extractf64x2_pd(X,C) ((__m128d) __builtin_ia32_extractf64x2_256_mask ((__v4df)(__m256d) (X), (int) (C), (__v2df)(__m128d) _mm_setzero_pd(), (__mmask8)-1))
#define BOOST_MPL_CFG_COMPILER_DIR gcc
#define SMIME_NOATTR PKCS7_NOATTR
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_36(op,st,ss,sz) 0
#define EVP_PKEY_TLS1_PRF NID_tls1_prf
#define _mm_maskz_ternarylogic_epi64(U,A,B,C,I) ((__m128i) __builtin_ia32_pternlogq128_maskz ((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (__v2di)(__m128i)(C), (int)(I), (__mmask8)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001100 (1)(0)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010000 (0)(0)(0)(1)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010001 (0)(0)(0)(1)(0)(0)(0)(1),
#define LN_hmacWithSHA224 "hmacWithSHA224"
#define __INT_LEAST32_TYPE__ int
#define ECHRNG 44
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001111 (0)(0)(0)(1)(1)(1)(1),
#define SN_sm_scheme "sm-scheme"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0101111 (0)(1)(0)(1)(1)(1)(1),
#define BIO_R_NULL_PARAMETER 115
#define FPE_FLTOVF FPE_FLTOVF
#define NID_identified_organization 676
#define OBJ_setext_cv OBJ_set_msgExt,8L
#define FOLLY_HAS_EXCEPTIONS 1
#define _mm512_slli_epi64(X,C) ((__m512i) __builtin_ia32_psllqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_undefined_epi32 (), (__mmask8)-1))
#define NID_pkcs9_countersignature 53
#define ASN1_PKEY_DYNAMIC 0x2
#define get_rfc3526_prime_8192 BN_get_rfc3526_prime_8192
#define BOOST_PP_WHILE_134_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_135, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(135, s))
#define ENOLCK 37
#define BOOST_PP_LIST_FOLD_RIGHT_72(o,s,l) BOOST_PP_LIST_FOLD_LEFT_72(o, s, BOOST_PP_LIST_REVERSE_D(72, l))
#define ASN1_d2i_bio_of(type,xnew,d2i,in,x) ((type*)ASN1_d2i_bio( CHECKED_NEW_OF(type, xnew), CHECKED_D2I_OF(type, d2i), in, CHECKED_PPTR_OF(type, x)))
#define _STRING_CONVERSIONS_H 1
#define BOOST_PP_REPEAT_P(n) BOOST_PP_CAT(BOOST_PP_REPEAT_CHECK_, BOOST_PP_REPEAT_ ## n(1, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_3, BOOST_PP_NIL))
#define BOOST_PP_FOR_SR_M(r,s) BOOST_PP_NIL
#define BOOST_PP_FOR_SR_O(r,s) 0
#define BOOST_PP_FOR_SR_P(r,s) s
#define TLS1_TXT_RSA_PSK_WITH_3DES_EDE_CBC_SHA "RSA-PSK-3DES-EDE-CBC-SHA"
#define BOOST_INTRUSIVE_I ,
#define EC_F_EC_GFP_SIMPLE_FIELD_INV 298
#define X509_SIG_INFO_VALID 0x1
#define BIO_F_MEM_WRITE 117
#define OBJ_id_smime_ct_TSTInfo OBJ_id_smime_ct,4L
#define _mm512_cmp_pd_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)-1,_MM_FROUND_CUR_DIRECTION))
#define _STDDEF_H_ 
#define M_SQRT2f64 __f64 (1.414213562373095048801688724209698079)
#define SSL_F_TLS_CONSTRUCT_CERT_STATUS_BODY 494
#define SSL_F_OSSL_STATEM_SERVER_CONSTRUCT_MESSAGE 431
#define BOOST_PP_LIST_FOLD_RIGHT_75(o,s,l) BOOST_PP_LIST_FOLD_LEFT_75(o, s, BOOST_PP_LIST_REVERSE_D(75, l))
#define EC_F_EC_POINT_SET_AFFINE_COORDINATES 294
#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
#define NID_des_ede3_cbc 44
#define BOOST_PP_SEQ_FOLD_LEFT_I_16(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_17, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(17, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _SC_LOGIN_NAME_MAX _SC_LOGIN_NAME_MAX
#define _EXCEPTION_DEFINES_H 1
#define _mm256_mask_shldi_epi16(A,B,C,D,E) ((__m256i) __builtin_ia32_vpshld_v16hi_mask ((__v16hi)(__m256i)(C), (__v16hi)(__m256i)(D), (int)(E), (__v16hi)(__m256i)(A), (__mmask16)(B)))
#define KU_DIGITAL_SIGNATURE 0x0080
#define JEMALLOC_NOINLINE JEMALLOC_ATTR(noinline)
#define DH_R_CHECK_Q_NOT_PRIME 119
#define OBJ_pilotGroups OBJ_pilot,10L
#define SSL_F_FINAL_EC_PT_FORMATS 485
#define SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT 321
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS 67
#define OBJ_id_tc26_signwithdigest_gost3410_2012_256 OBJ_id_tc26_signwithdigest,2L
#define OBJ_dhSinglePass_stdDH_sha224kdf_scheme OBJ_secg_scheme,11L,0L
#define SN_id_aes128_wrap "id-aes128-wrap"
#define BOOST_PP_DEC_171 170
#define TCP_INFO 11
#define __COMO_VERSION___WORKAROUND_GUARD 1
#define PF_RDS 21
#define NID_setct_AuthRevReqTBS 541
#define _mm_mmask_i32gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128) __builtin_ia32_gather3siv4sf ((__v4sf)(__m128) (V1OLD), (void const *) (ADDR), (__v4si)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define __SI_ERRNO_THEN_CODE 1
#define BOOST_PP_DEC_172 171
#define V_ASN1_REAL 9
#define SSL_CTX_clear_cert_flags(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_CLEAR_CERT_FLAGS,(op),NULL)
#define BOOST_PP_WHILE_204_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_205, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(205, s))
#define NID_ipsecEndSystem 294
#define _mm256_mask_shldi_epi32(A,B,C,D,E) ((__m256i) __builtin_ia32_vpshld_v8si_mask ((__v8si)(__m256i)(C), (__v8si)(__m256i)(D), (int)(E), (__v8si)(__m256i)(A), (__mmask8)(B)))
#define EC_F_EC_GF2M_SIMPLE_POINT2OCT 161
#define BOOST_PP_SEQ_SIZE_1(_) BOOST_PP_SEQ_SIZE_2
#define BOOST_PP_SEQ_SIZE_2(_) BOOST_PP_SEQ_SIZE_3
#define BOOST_PP_SEQ_SIZE_3(_) BOOST_PP_SEQ_SIZE_4
#define TLS1_RFC_DHE_PSK_WITH_AES_256_GCM_SHA384 "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384"
#define BOOST_PP_SEQ_SIZE_6(_) BOOST_PP_SEQ_SIZE_7
#define BOOST_PP_SEQ_SIZE_7(_) BOOST_PP_SEQ_SIZE_8
#define BOOST_PP_SEQ_SIZE_8(_) BOOST_PP_SEQ_SIZE_9
#define BOOST_PP_SEQ_SIZE_9(_) BOOST_PP_SEQ_SIZE_10
#define NID_id_tc26_hmac_gost_3411_2012_512 989
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
#define BOOST_PP_DEC_90 89
#define _mm_insert_pi16(A,D,N) ((__m64) __builtin_ia32_vec_set_v4hi ((__v4hi)(__m64)(A), (int)(D), (int)(N)))
#define BOOST_PP_REPEAT_2_22(m,d) BOOST_PP_REPEAT_2_21(m, d) m(3, 21, d)
#define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))
#define EVBUFFER_INPUT(x) bufferevent_get_input(x)
#define IP_CHECKSUM 23
#define EVP_R_METHOD_NOT_SUPPORTED 144
#define SSL_CTX_set1_chain_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CHAIN_CERT_STORE,1,(char *)(st))
#define M_2_PIf32x __f32x (0.636619772367581343075535053490057448)
#define LN_aes_128_cfb8 "aes-128-cfb8"
#define FS_IOC_GET_ENCRYPTION_PWSALT _IOW('f', 20, __u8[16])
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
#define BOOST_MPL_APPLY_HPP_INCLUDED 
#define FOLLY_POP_WARNING _Pragma("GCC diagnostic pop")
#define SN_id_mod_cmc "id-mod-cmc"
#define __cpp_lib_chrono 201611
#define BOOST_DETAIL_CALL_TRAITS_HPP 
#define _FMAINTRIN_H_INCLUDED 
#define RSA_FLAG_BLINDING 0x0008
#define SYSLOG_ASSERT(condition) SYSLOG_IF(FATAL, !(condition)) << "Assert failed: " #condition
#define BOOST_PP_SEQ_ELEM_241(_) BOOST_PP_SEQ_ELEM_240
#define BOOST_PP_DEC_20 19
#define _mm256_mask_shldi_epi64(A,B,C,D,E) ((__m256i) __builtin_ia32_vpshld_v4di_mask ((__v4di)(__m256i)(C), (__v4di)(__m256i)(D), (int)(E), (__v4di)(__m256i)(A), (__mmask8)(B)))
#define _mm512_extracti32x8_epi32(X,C) ((__m256i) __builtin_ia32_extracti32x8_mask ((__v16si)(__m512i) (X), (int) (C), (__v8si)(__m256i) _mm256_setzero_si256 (), (__mmask8)-1))
#define _CMP_LE_OQ 0x12
#define X509_V_FLAG_CRL_CHECK_ALL 0x8
#define _CMP_LE_OS 0x02
#define CLD_DUMPED CLD_DUMPED
#define B_ASN1_IA5STRING 0x0010
#define OBJ_pilotAttributeType27 OBJ_pilotAttributeType,27L
#define WEXITSTATUS(status) __WEXITSTATUS (status)
#define RSA_R_UNKNOWN_ALGORITHM_TYPE 117
#define _GLIBCXX_BITS_UNIFORM_INT_DIST_H 
#define BIO_wpending(b) (int)BIO_ctrl(b,BIO_CTRL_WPENDING,0,NULL)
#define EVP_CTRL_SET_KEY_LENGTH 0x1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_116(p,o,s) 0
#define SSL_CTX_set_tlsext_status_cb(ssl,cb) SSL_CTX_callback_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB, (void (*)(void))cb)
#define _BITS_BYTESWAP_H 1
#define EVP_F_EVP_ENCRYPTDECRYPTUPDATE 219
#define TLS1_RFC_ECDHE_RSA_WITH_CHACHA20_POLY1305 "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
#define BOOST_PP_SEQ_ELEM_245(_) BOOST_PP_SEQ_ELEM_244
#define SN_RSA_SHA3_512 "id-rsassa-pkcs1-v1_5-with-sha3-512"
#define SSL_F_SSL_CLIENT_HELLO_GET1_EXTENSIONS_PRESENT 627
#define BOOST_PP_DEC_24 23
#define BOOST_PP_DETAIL_IS_EMPTY_IIF(bit) BOOST_PP_DETAIL_IS_EMPTY_PRIMITIVE_CAT(BOOST_PP_DETAIL_IS_EMPTY_IIF_,bit)
#define SSL3_CK_RSA_DES_40_CBC_SHA 0x03000008
#define SN_policy_mappings "policyMappings"
#define _mm512_maskz_sqrt_round_pd(U,A,C) (__m512d)__builtin_ia32_sqrtpd512_mask(A, (__v8df)_mm512_setzero_pd(), U, C)
#define OBJ_id_pkix_OCSP_basic OBJ_id_pkix_OCSP,1L
#define _POSIX_TRACE_EVENT_FILTER -1
#define _mm512_maskz_sqrt_round_ps(U,A,C) (__m512)__builtin_ia32_sqrtps512_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)
#define BOOST_PP_DEC_26 25
#define BOOST_PP_DEC_27 26
#define BOOST_PP_REPEAT_2_100(m,d) BOOST_PP_REPEAT_2_99(m, d) m(3, 99, d)
#define BOOST_PP_REPEAT_2_101(m,d) BOOST_PP_REPEAT_2_100(m, d) m(3, 100, d)
#define BOOST_PP_REPEAT_2_103(m,d) BOOST_PP_REPEAT_2_102(m, d) m(3, 102, d)
#define BOOST_PP_REPEAT_2_104(m,d) BOOST_PP_REPEAT_2_103(m, d) m(3, 103, d)
#define BOOST_PP_REPEAT_2_105(m,d) BOOST_PP_REPEAT_2_104(m, d) m(3, 104, d)
#define BOOST_PP_REPEAT_2_106(m,d) BOOST_PP_REPEAT_2_105(m, d) m(3, 105, d)
#define NID_id_smime_mod_cms 196
#define BOOST_PP_SEQ_ELEM_249(_) BOOST_PP_SEQ_ELEM_248
#define BIO_F_BIO_NREAD 123
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_93(o,s,l) 0
#define SSL_OP_TLSEXT_PADDING 0x00000010U
#define LN_aes_256_xts "aes-256-xts"
#define CRYPTO_get_dynlock_create_callback() (NULL)
#define SN_hmac_sha1 "HMAC-SHA1"
#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_SHA384 "ECDHE-RSA-AES256-SHA384"
#define __off_t_defined 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011001 (1)(0)(1)(1)(0)(0)(1),
#define EVENT__HAVE_UMASK 1
#define NS_SSL_SERVER 0x40
#define BOOST_PP_REPEAT_2_110(m,d) BOOST_PP_REPEAT_2_109(m, d) m(3, 109, d)
#define BOOST_PP_REPEAT_2_111(m,d) BOOST_PP_REPEAT_2_110(m, d) m(3, 110, d)
#define BOOST_PP_REPEAT_2_112(m,d) BOOST_PP_REPEAT_2_111(m, d) m(3, 111, d)
#define BOOST_PP_REPEAT_2_115(m,d) BOOST_PP_REPEAT_2_114(m, d) m(3, 114, d)
#define BOOST_PP_REPEAT_2_116(m,d) BOOST_PP_REPEAT_2_115(m, d) m(3, 115, d)
#define BOOST_PP_REPEAT_2_117(m,d) BOOST_PP_REPEAT_2_116(m, d) m(3, 116, d)
#define BOOST_PP_REPEAT_2_118(m,d) BOOST_PP_REPEAT_2_117(m, d) m(3, 117, d)
#define BOOST_MPL_BACK_FWD_HPP_INCLUDED 
#define BOOST_PP_LIST_FOLD_LEFT_247(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_248, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(248, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_TUPLE_REM_CTOR(...) BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_REM_CTOR_O_, __VA_ARGS__)(__VA_ARGS__)
#define BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED 
#define _mm_i32gather_epi32(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gathersiv4si ((__v4si) _mm_setzero_si128 (), (int const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4si)_mm_set1_epi32 (-1), (int) (SCALE))
#define __wchar_t__ 
#define BOOST_PP_SEQ_TRANSFORM_S(s,op,data,seq) BOOST_PP_SEQ_TAIL(BOOST_PP_TUPLE_ELEM(3, 2, BOOST_PP_SEQ_FOLD_LEFT_ ## s(BOOST_PP_SEQ_TRANSFORM_O, (op, data, (nil)), seq)))
#define OBJ_setct_AuthRevReqBaggage OBJ_set_ctype,9L
#define M_LN2f128 __f128 (0.693147180559945309417232121458176568)
#define _PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT (_MSC_VER >= 1900 || __cplusplus >= 201300L || __cpp_lib_robust_nonmodifying_seq_ops == 201304)
#define X509V3_R_INVALID_OBJECT_IDENTIFIER 110
#define BOOST_PP_REPEAT_2_120(m,d) BOOST_PP_REPEAT_2_119(m, d) m(3, 119, d)
#define BOOST_PP_REPEAT_2_121(m,d) BOOST_PP_REPEAT_2_120(m, d) m(3, 120, d)
#define PKCS5_SALT_LEN 8
#define BOOST_PP_REPEAT_2_123(m,d) BOOST_PP_REPEAT_2_122(m, d) m(3, 122, d)
#define BOOST_PP_REPEAT_2_124(m,d) BOOST_PP_REPEAT_2_123(m, d) m(3, 123, d)
#define BOOST_PP_REPEAT_2_125(m,d) BOOST_PP_REPEAT_2_124(m, d) m(3, 124, d)
#define BOOST_PP_REPEAT_2_126(m,d) BOOST_PP_REPEAT_2_125(m, d) m(3, 125, d)
#define BOOST_PP_REPEAT_2_128(m,d) BOOST_PP_REPEAT_2_127(m, d) m(3, 127, d)
#define OBJ_id_Gost28147_89_cc OBJ_cryptocom,1L,6L,1L
#define lh_new OPENSSL_LH_new
#define _GCC_SIZE_T 
#define X509_F_X509_PUBKEY_GET0 119
#define _POSIX_THREAD_PRIO_PROTECT 200809L
#define SSL_R_NOT_SERVER 284
#define __W_CONTINUED 0xffff
#define __FLT32_DIG__ 6
#define SSL_F_SSL3_CTX_CTRL 133
#define BOOST_MPL_AUX_INSERTER_ALGORITHM_HPP_INCLUDED 
#define BOOST_PP_REPEAT_2_130(m,d) BOOST_PP_REPEAT_2_129(m, d) m(3, 129, d)
#define SO_SNDTIMEO_OLD 21
#define BOOST_PP_REPEAT_2_134(m,d) BOOST_PP_REPEAT_2_133(m, d) m(3, 133, d)
#define BOOST_PP_REPEAT_2_135(m,d) BOOST_PP_REPEAT_2_134(m, d) m(3, 134, d)
#define LN_camellia_128_cfb128 "camellia-128-cfb"
#define BOOST_PP_REPEAT_2_137(m,d) BOOST_PP_REPEAT_2_136(m, d) m(3, 136, d)
#define BOOST_PP_REPEAT_2_138(m,d) BOOST_PP_REPEAT_2_137(m, d) m(3, 137, d)
#define RSA_3 0x3L
#define SSL_R_UNKNOWN_COMMAND 139
#define BASE_VLOG_IS_ON_H_ 
#define OBJ_ua_pki OBJ_ISO_UA,2L,1L,1L,1L
#define OBJ_aria_256_cfb128 OBJ_aria,13L
#define SSL_F_TLS_PARSE_CTOS_EMS 570
#define __INTMAX_MAX__ 0x7fffffffffffffffL
#define ULONG_WIDTH __WORDSIZE
#define _STL_ITERATOR_H 1
#define SN_ms_csp_name "CSPName"
#define BOOST_PP_REPEAT_2_140(m,d) BOOST_PP_REPEAT_2_139(m, d) m(3, 139, d)
#define BOOST_PP_REPEAT_2_141(m,d) BOOST_PP_REPEAT_2_140(m, d) m(3, 140, d)
#define BOOST_PP_REPEAT_2_142(m,d) BOOST_PP_REPEAT_2_141(m, d) m(3, 141, d)
#define BOOST_PP_REPEAT_2_143(m,d) BOOST_PP_REPEAT_2_142(m, d) m(3, 142, d)
#define BOOST_PP_REPEAT_2_148(m,d) BOOST_PP_REPEAT_2_147(m, d) m(3, 147, d)
#define _SC_INT_MAX _SC_INT_MAX
#define OBJ_dsa_with_SHA224 OBJ_dsa_with_sha2,1L
#define HEADER_OPENSSL_TYPES_H 
#define IMPLEMENT_OBJ_BSEARCH_GLOBAL_CMP_FN(type1,type2,nm) static int nm ##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_) { type1 const *a = a_; type2 const *b = b_; return nm ##_cmp(a,b); } type2 *OBJ_bsearch_ ##nm(type1 *key, type2 const *base, int num) { return (type2 *)OBJ_bsearch_(key, base, num, sizeof(type2), nm ##_cmp_BSEARCH_CMP_FN); } extern void dummy_prototype(void)
#define _mm_i32gather_epi64(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gathersiv2di ((__v2di) _mm_setzero_si128 (), (long long const *) (BASE), (__v4si)(__m128i) (INDEX), (__v2di)_mm_set1_epi64x (-1), (int) (SCALE))
#define _GLIBCXX20_CONSTEXPR constexpr
#define ASIdentifierChoice_asIdsOrRanges 1
#define LN_sha3_384 "sha3-384"
#define __TIME64_T_TYPE __TIME_T_TYPE
#define BOOST_PREPROCESSOR_STRINGIZE_HPP 
#define BOOST_PP_REPEAT_2_151(m,d) BOOST_PP_REPEAT_2_150(m, d) m(3, 150, d)
#define BOOST_PP_REPEAT_2_153(m,d) BOOST_PP_REPEAT_2_152(m, d) m(3, 152, d)
#define PKCS7_R_INVALID_NULL_POINTER 143
#define BOOST_PP_REPEAT_2_155(m,d) BOOST_PP_REPEAT_2_154(m, d) m(3, 154, d)
#define BOOST_PP_REPEAT_2_156(m,d) BOOST_PP_REPEAT_2_155(m, d) m(3, 155, d)
#define BOOST_PP_REPEAT_2_157(m,d) BOOST_PP_REPEAT_2_156(m, d) m(3, 156, d)
#define BOOST_PP_REPEAT_2_158(m,d) BOOST_PP_REPEAT_2_157(m, d) m(3, 157, d)
#define BOOST_PP_REPEAT_2_159(m,d) BOOST_PP_REPEAT_2_158(m, d) m(3, 158, d)
#define SN_sect283k1 "sect283k1"
#define BOOST_PP_FOR_192_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(193, s) BOOST_PP_IIF(c, BOOST_PP_FOR_193, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(193, s), p, o, m)
#define OBJ_countryName OBJ_X509,6L
#define SN_setAttr_TokICCsig "setAttr-TokICCsig"
#define BOOST_MPL_AUX_NA_SPEC2(i,j,name) BOOST_MPL_AUX_NA_SPEC_MAIN(i, name) BOOST_MPL_AUX_NA_SPEC_ETI(i, name) BOOST_MPL_AUX_NA_SPEC_LAMBDA(i, name) BOOST_MPL_AUX_NA_SPEC_ARITY(i, name) BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY(i, j, name)
#define OBJ_NAME_TYPE_PKEY_METH 0x03
#define SNANF32 (__builtin_nansf32 (""))
#define _SC_XOPEN_SHM _SC_XOPEN_SHM
#define __LONG_WIDTH__ 64
#define BOOST_PP_REPEAT_2_160(m,d) BOOST_PP_REPEAT_2_159(m, d) m(3, 159, d)
#define BOOST_PP_REPEAT_2_162(m,d) BOOST_PP_REPEAT_2_161(m, d) m(3, 161, d)
#define BOOST_PP_REPEAT_2_163(m,d) BOOST_PP_REPEAT_2_162(m, d) m(3, 162, d)
#define BOOST_PP_REPEAT_2_164(m,d) BOOST_PP_REPEAT_2_163(m, d) m(3, 163, d)
#define BOOST_PP_REPEAT_2_165(m,d) BOOST_PP_REPEAT_2_164(m, d) m(3, 164, d)
#define BOOST_PP_REPEAT_2_166(m,d) BOOST_PP_REPEAT_2_165(m, d) m(3, 165, d)
#define OBJ_id_hex_multipart_message OBJ_mime_mhs_headings,2L
#define BOOST_PP_REPEAT_2_168(m,d) BOOST_PP_REPEAT_2_167(m, d) m(3, 167, d)
#define BOOST_PP_REPEAT_2_169(m,d) BOOST_PP_REPEAT_2_168(m, d) m(3, 168, d)
#define IORING_OFF_SQ_RING 0ULL
#define SSL_F_SSL_SET_SESSION 195
#define LN_pilotPerson "pilotPerson"
#define BOOST_PP_SEQ_FOLD_LEFT_I_45(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_46, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(46, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_setct_AuthResBaggage 527
#define BOOST_PP_REPEAT_2_171(m,d) BOOST_PP_REPEAT_2_170(m, d) m(3, 170, d)
#define BOOST_PP_REPEAT_2_173(m,d) BOOST_PP_REPEAT_2_172(m, d) m(3, 172, d)
#define BOOST_PP_REPEAT_2_174(m,d) BOOST_PP_REPEAT_2_173(m, d) m(3, 173, d)
#define BOOST_PP_REPEAT_2_175(m,d) BOOST_PP_REPEAT_2_174(m, d) m(3, 174, d)
#define BOOST_PP_REPEAT_2_177(m,d) BOOST_PP_REPEAT_2_176(m, d) m(3, 176, d)
#define BOOST_PP_REPEAT_2_179(m,d) BOOST_PP_REPEAT_2_178(m, d) m(3, 178, d)
#define FPE_FLTRES FPE_FLTRES
#define EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS 0x22
#define _mm_mask_cmp_epu8_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_ucmpb128_mask ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(P), (__mmask16)(M)))
#define FS_KEY_DESC_PREFIX_SIZE FSCRYPT_KEY_DESC_PREFIX_SIZE
#define FS_COMPR_FL 0x00000004
#define BOOST_PP_SEQ_FOLD_LEFT_I_47(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_48, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(48, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_REPEAT_2_180(m,d) BOOST_PP_REPEAT_2_179(m, d) m(3, 179, d)
#define BOOST_PP_REPEAT_2_181(m,d) BOOST_PP_REPEAT_2_180(m, d) m(3, 180, d)
#define OPENSSL_INIT_ENGINE_DYNAMIC 0x00000400L
#define BOOST_PP_REPEAT_2_184(m,d) BOOST_PP_REPEAT_2_183(m, d) m(3, 183, d)
#define BOOST_PP_REPEAT_2_188(m,d) BOOST_PP_REPEAT_2_187(m, d) m(3, 187, d)
#define BOOST_PP_REPEAT_2_189(m,d) BOOST_PP_REPEAT_2_188(m, d) m(3, 188, d)
#define DEFINE_STACK_OF_CONST(t) SKM_DEFINE_STACK_OF(t, const t, t)
#define PEM_R_BAD_DECRYPT 101
#define SN_ns_sgc "nsSGC"
#define EC_F_D2I_ECPARAMETERS 144
#define NID_id_GostR3411_94_with_GostR3410_2001_cc 853
#define NID_rsaSignature 377
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_189(op,st,ss,sz) 0
#define SNANF64 (__builtin_nansf64 (""))
#define SSL_get_mode(ssl) SSL_ctrl((ssl),SSL_CTRL_MODE,0,NULL)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_107 107
#define BOOST_PP_REPEAT_2_191(m,d) BOOST_PP_REPEAT_2_190(m, d) m(3, 190, d)
#define BOOST_PP_REPEAT_2_192(m,d) BOOST_PP_REPEAT_2_191(m, d) m(3, 191, d)
#define BOOST_PP_REPEAT_2_193(m,d) BOOST_PP_REPEAT_2_192(m, d) m(3, 192, d)
#define BOOST_PP_REPEAT_2_194(m,d) BOOST_PP_REPEAT_2_193(m, d) m(3, 193, d)
#define BOOST_PP_REPEAT_2_195(m,d) BOOST_PP_REPEAT_2_194(m, d) m(3, 194, d)
#define BOOST_PP_REPEAT_2_196(m,d) BOOST_PP_REPEAT_2_195(m, d) m(3, 195, d)
#define BOOST_PP_REPEAT_2_197(m,d) BOOST_PP_REPEAT_2_196(m, d) m(3, 196, d)
#define BOOST_PP_REPEAT_2_199(m,d) BOOST_PP_REPEAT_2_198(m, d) m(3, 198, d)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_108 108
#define EVP_PKEY_CTX_set_ecdh_cofactor_mode(ctx,flag) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_ECDH_COFACTOR, flag, NULL)
#define LN_pkcs9_extCertAttributes "extendedCertificateAttributes"
#define SSL_F_SSL_SET_TLSEXT_MAX_FRAGMENT_LENGTH 550
#define ELOOP 40
#define SYS_F_GETSOCKOPT 15
#define RSA_F_PKEY_RSA_VERIFYRECOVER 141
#define FOLLY_FALLTHROUGH [[fallthrough]]
#define BOOST_PP_NODE_15(p) BOOST_PP_IIF(p(15), 15, 16)
#define RSA_F_SETUP_TBUF 167
#define IPPROTO_MH IPPROTO_MH
#define NID_ecdsa_with_Specified 792
#define BOOST_PP_FOR_49_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(50, s) BOOST_PP_IIF(c, BOOST_PP_FOR_50, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(50, s), p, o, m)
#define _GLIBCXX_HAVE_EXPF 1
#define TLS1_AD_RECORD_OVERFLOW 22
#define APACHE_THRIFT_ACCESSOR_serviceTraceMeta 
#define BOOST_PP_REPEAT_1_100(m,d) BOOST_PP_REPEAT_1_99(m, d) m(2, 99, d)
#define CT_F_I2O_SCT_LIST 108
#define BOOST_PP_SLOT_CC_4(a,b,c,d) BOOST_PP_SLOT_CC_4_D(a, b, c, d)
#define _GLIBCXX_HAVE_INT64_T 1
#define OBJ_mXRecord OBJ_pilotAttributeType,28L
#define OBJ_aes_128_cfb128 OBJ_aes,4L
#define NID_sha3_224 1096
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010101 (1)(0)(0)(1)(0)(1)(0)(1),
#define __FLT_MIN_10_EXP__ (-37)
#define NID_id_tc26_wrap 1179
#define RAND_R_FUNC_NOT_IMPLEMENTED 101
#define NID_des_ede_cfb64 60
#define SSL_F_SSL_PEEK_INTERNAL 522
#define SN_sect283r1 "sect283r1"
#define AT_EACCESS 0x200
#define SSL_set_current_cert(s,op) SSL_ctrl(s,SSL_CTRL_SET_CURRENT_CERT, op, NULL)
#define BOOST_OPTIONAL_DETAIL_USE_ATTRIBUTE_MAY_ALIAS 
#define OBJ_setCext_merchData OBJ_set_certExt,2L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10010110 (1)(0)(0)(1)(0)(1)(1)(0),
#define _GLIBCXX11_USE_C99_MATH 1
#define NID_chacha20_poly1305 1018
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0111000 (0)(1)(1)(1)(0)(0)(0),
#define X509V3_R_INVALID_NULL_ARGUMENT 107
#define TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 0x030000C1
#define _SHAINTRIN_H_INCLUDED 
#define __hpxstd98_WORKAROUND_GUARD 1
#define M_LN2 0.69314718055994530942
#define BOOST_PP_SEQ_FOLD_LEFT_I_189(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_190, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(190, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BIO_F_BIO_READ 111
#define NID_gost89_cbc 1009
#define BOOST_PP_TUPLE_REM_29(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28
#define S_ISREG(mode) __S_ISTYPE((mode), __S_IFREG)
#define SN_ipsec4 "Oakley-EC2N-4"
#define ENOMEM 12
#define X509V3_F_X509_PURPOSE_SET 141
#define _GLIBCXX_HAVE_ACOSF 1
#define NID_sha3_256 1097
#define _GLIBCXX_HAVE_ACOSL 1
#define _GLIBCXX_CSTRING 1
#define EC_FLAG_FIPS_CHECKED 0x2
#define SSL_CTRL_SET_SESS_CACHE_SIZE 42
#define CLONE_VFORK 0x00004000
#define EC_R_INVALID_PENTANOMIAL_BASIS 132
#define SN_X9_62_c2tnb239v2 "c2tnb239v2"
#define SO_TIMESTAMPING_NEW 65
#define SN_cast5_ecb "CAST5-ECB"
#define BOOST_PP_INTERCEPT_100 
#define BOOST_PP_INTERCEPT_103 
#define OBJ_id_tc26_gost_28147_constants OBJ_id_tc26_cipher_constants,1L
#define sigev_notify_function _sigev_un._sigev_thread._function
#define EVP_PKEY_OP_SIGNCTX (1<<6)
#define MS_POSIXACL (1<<16)
#define _SC_LEVEL1_ICACHE_LINESIZE _SC_LEVEL1_ICACHE_LINESIZE
#define LN_kx_dhe "kx-dhe"
#define SSL_F_TLS_GET_MESSAGE_HEADER 387
#define IOSQE_IO_DRAIN (1U << IOSQE_IO_DRAIN_BIT)
#define FS_KEY_DESC_PREFIX FSCRYPT_KEY_DESC_PREFIX
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000100 (0)(0)(0)(0)(0)(1)(0)(0),
#define BOOST_PP_REPEAT_2_144(m,d) BOOST_PP_REPEAT_2_143(m, d) m(3, 143, d)
#define X509_V_ERR_APPLICATION_VERIFICATION 50
#define BOOST_PP_INTERCEPT_110 
#define BOOST_PP_INTERCEPT_111 
#define BOOST_PP_INTERCEPT_112 
#define INTMAX_C(c) c ## L
#define BOOST_PP_INTERCEPT_114 
#define BOOST_PP_INTERCEPT_116 
#define OBJ_id_regCtrl OBJ_id_pkip,1L
#define APACHE_THRIFT_ACCESSOR_value 
#define EC_F_EC_GFP_NIST_FIELD_MUL 200
#define NID_uniqueMember 888
#define SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT 219
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_233 233
#define BOOST_PP_REPEAT_2_146(m,d) BOOST_PP_REPEAT_2_145(m, d) m(3, 145, d)
#define BOOST_PP_DEC_32 31
#define TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA256 "ADH-CAMELLIA256-SHA256"
#define _STDINT_H 1
#define BOOST_PP_INTERCEPT_121 
#define BOOST_PP_INTERCEPT_122 
#define BOOST_PP_INTERCEPT_123 
#define BOOST_PP_INTERCEPT_124 
#define __FILE_defined 1
#define BOOST_PP_INTERCEPT_129 
#define BOOST_PP_SEQ_ELEM_255(_) BOOST_PP_SEQ_ELEM_254
#define OBJ_dstu4145be OBJ_dstu4145le,1L,1L
#define BOOST_PP_FOR_124_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(125, s) BOOST_PP_IIF(c, BOOST_PP_FOR_125, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(125, s), p, o, m)
#define NID_id_smime_ct_TDTInfo 208
#define SSL_R_CIPHERSUITE_DIGEST_HAS_CHANGED 218
#define BOOST_PP_LIST_FOLD_LEFT_251(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_252, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(252, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_LIST_FOLD_LEFT_225(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_226, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(226, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_INTERCEPT_135 
#define BOOST_PP_INTERCEPT_136 
#define _mm_getexp_ss(A,B) ((__m128)__builtin_ia32_getexpss128_round((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), _MM_FROUND_CUR_DIRECTION))
#define SCM_TIMESTAMP SO_TIMESTAMP
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000111 (0)(1)(0)(0)(0)(1)(1)(1),
#define SN_cast5_ofb64 "CAST5-OFB"
#define ASN1_F_I2D_ASN1_BIO_STREAM 211
#define OBJ_id_tc26_agreement_gost_3410_2012_256 OBJ_id_tc26_agreement,1L
#define EVP_F_EVP_PKEY_CTX_MD 168
#define FOLLY_HAVE_SHADOW_LOCAL_WARNINGS 1
#define NID_X9_62_c2tnb239v1 694
#define NID_X9_62_c2tnb239v2 695
#define NID_X9_62_c2tnb239v3 696
#define timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)
#define _GETOPT_CORE_H 1
#define ERR_R_ECDSA_LIB ERR_LIB_ECDSA
#define BOOST_PP_WHILE_58_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_59, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(59, s))
#define X509_F_X509_REQ_PRINT_FP 122
#define BOOST_PP_INTERCEPT_142 
#define BOOST_PP_INTERCEPT_143 
#define BOOST_PP_INTERCEPT_144 
#define BOOST_PP_INTERCEPT_145 
#define BOOST_PP_INTERCEPT_146 
#define BOOST_PP_INTERCEPT_148 
#define BOOST_PP_INTERCEPT_149 
#define EVP_PKEY_CTRL_DH_KDF_TYPE (EVP_PKEY_ALG_CTRL + 6)
#define _POSIX_THREAD_SAFE_FUNCTIONS 200809L
#define OBJ_deltaRevocationList OBJ_X509,53L
#define X509_R_LOADING_DEFAULTS 104
#define BOOST_PP_FOR_233_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(234, s) BOOST_PP_IIF(c, BOOST_PP_FOR_234, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(234, s), p, o, m)
#define BOOST_PP_INTERCEPT_150 
#define _mm_clmulepi64_si128(X,Y,I) ((__m128i) __builtin_ia32_pclmulqdq128 ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(I)))
#define BOOST_PP_INTERCEPT_152 
#define BOOST_PP_INTERCEPT_153 
#define BOOST_PP_FOR_123(s,p,o,m) BOOST_PP_FOR_123_C(BOOST_PP_BOOL(p(124, s)), s, p, o, m)
#define BOOST_PP_INTERCEPT_155 
#define BOOST_PP_INTERCEPT_156 
#define BOOST_PP_INTERCEPT_157 
#define BOOST_PP_INTERCEPT_159 
#define USHRT_MAX (SHRT_MAX * 2 + 1)
#define BOOST_PP_FOR_124(s,p,o,m) BOOST_PP_FOR_124_C(BOOST_PP_BOOL(p(125, s)), s, p, o, m)
#define GLOG_0 GLOG_ERROR_MSG
#define NID_pilotObjectClass 440
#define BOOST_PP_FOR_125(s,p,o,m) BOOST_PP_FOR_125_C(BOOST_PP_BOOL(p(126, s)), s, p, o, m)
#define NID_id_smime_alg_CMSRC2wrap 247
#define _mm_maskz_alignr_epi32(U,X,Y,C) ((__m128i)__builtin_ia32_alignd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(C), (__v4si)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define _GLIBCXX_STOP_TOKEN 
#define _SC_HOST_NAME_MAX _SC_HOST_NAME_MAX
#define BOOST_PP_INTERCEPT_160 
#define BOOST_PP_INTERCEPT_161 
#define BOOST_PP_REPEAT_3_189(m,d) BOOST_PP_REPEAT_3_188(m, d) m(4, 188, d)
#define BOOST_PP_INTERCEPT_163 
#define BOOST_PP_INTERCEPT_164 
#define BOOST_PP_INTERCEPT_165 
#define BOOST_PP_INTERCEPT_166 
#define BOOST_PP_INTERCEPT_167 
#define BOOST_PP_INTERCEPT_168 
#define BOOST_PP_INTERCEPT_169 
#define DEFINE_bool(name,val,txt) namespace fLB { typedef ::fLB::CompileAssert FLAG_ ##name ##_value_is_not_a_bool[ (sizeof(::fLB::IsBoolFlag(val)) != sizeof(double))? 1: -1]; } DEFINE_VARIABLE(bool, B, name, val, txt)
#define SSL_F_SSL3_WRITE_BYTES 158
#define DTLSv1_handle_timeout(ssl) SSL_ctrl(ssl,DTLS_CTRL_HANDLE_TIMEOUT,0, NULL)
#define IPV6_MULTICAST_LOOP 19
#define __BORLANDC___WORKAROUND_GUARD 1
#define BOOST_PP_WHILE_197_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_198, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(198, s))
#define ASN1_F_ASN1_ITEM_DUP 191
#define X509_R_BAD_X509_FILETYPE 100
#define BOOST_PP_INTERCEPT_170 
#define SSL_ST_MASK 0x0FFF
#define BOOST_PP_INTERCEPT_174 
#define BOOST_PP_INTERCEPT_175 
#define BOOST_PP_INTERCEPT_178 
#define BOOST_PP_INTERCEPT_179 
#define BOOST_PP_LIST_FOLD_LEFT_229(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_230, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(230, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define LN_set_ctype "content types"
#define OBJ_setCext_TokenIdentifier OBJ_set_certExt,8L
#define SSL3_TXT_RSA_NULL_SHA "NULL-SHA"
#define BOOST_PP_INTERCEPT_183 
#define PRId16 "d"
#define BOOST_PP_INTERCEPT_187 
#define BOOST_PP_INTERCEPT_188 
#define BOOST_HAS_INTPTR_T 
#define NID_setct_PCertResTBS 557
#define BOOST_PP_FOR_139_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(140, s) BOOST_PP_IIF(c, BOOST_PP_FOR_140, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(140, s), p, o, m)
#define SSL_SECOP_TMP_DH (7 | SSL_SECOP_OTHER_PKEY)
#define __SIGEV_PAD_SIZE ((__SIGEV_MAX_SIZE / sizeof (int)) - 4)
#define SN_commonName "CN"
#define BOOST_PP_NODE_101(p) BOOST_PP_IIF(p(101), 101, 102)
#define _mm_maskz_alignr_epi64(U,X,Y,C) ((__m128i)__builtin_ia32_alignq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(C), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define BOOST_PP_NODE_103(p) BOOST_PP_IIF(p(103), 103, 104)
#define BOOST_PP_NODE_104(p) BOOST_PP_IIF(p(104), BOOST_PP_NODE_100, BOOST_PP_NODE_108)
#define BOOST_PP_NODE_106(p) BOOST_PP_IIF(p(106), BOOST_PP_NODE_105, BOOST_PP_NODE_107)
#define BOOST_PP_NODE_107(p) BOOST_PP_IIF(p(107), 107, 108)
#define BOOST_PP_NODE_108(p) BOOST_PP_IIF(p(108), BOOST_PP_NODE_106, BOOST_PP_NODE_110)
#define BOOST_PP_NODE_109(p) BOOST_PP_IIF(p(109), 109, 110)
#define BOOST_PP_INTERCEPT_191 
#define BOOST_PP_INTERCEPT_192 
#define BOOST_PP_INTERCEPT_194 
#define OBJ_set_brand_IATA_ATA OBJ_set_brand,1L
#define BOOST_PP_INTERCEPT_197 
#define TLS1_RFC_SRP_SHA_WITH_AES_128_CBC_SHA "TLS_SRP_SHA_WITH_AES_128_CBC_SHA"
#define PEM_STRING_X509_OLD "X509 CERTIFICATE"
#define BOOST_PP_INTERCEPT_23 
#define REG_EFL REG_EFL
#define IPV6_PMTUDISC_DONT 0
#define OBJ_server_auth OBJ_id_kp,1L
#define BOOST_PP_NODE_111(p) BOOST_PP_IIF(p(111), 111, 112)
#define SSL_R_DANE_TLSA_NULL_DATA 203
#define BOOST_PP_NODE_113(p) BOOST_PP_IIF(p(113), 113, 114)
#define BOOST_PP_NODE_115(p) BOOST_PP_IIF(p(115), 115, 116)
#define BOOST_PP_NODE_116(p) BOOST_PP_IIF(p(116), BOOST_PP_NODE_114, BOOST_PP_NODE_118)
#define BOOST_PP_FOR_84_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(85, s) BOOST_PP_IIF(c, BOOST_PP_FOR_85, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(85, s), p, o, m)
#define BOOST_PP_NODE_118(p) BOOST_PP_IIF(p(118), BOOST_PP_NODE_117, BOOST_PP_NODE_119)
#define BOOST_PP_NODE_119(p) BOOST_PP_IIF(p(119), 119, 120)
#define PRId32 "d"
#define BOOST_PP_LIST_FOLD_RIGHT_80(o,s,l) BOOST_PP_LIST_FOLD_LEFT_80(o, s, BOOST_PP_LIST_REVERSE_D(80, l))
#define BOOST_PP_WHILE_72_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_73, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(73, s))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_110 110
#define MAP_ANONYMOUS 0x20
#define __INT_FAST16_TYPE__ long int
#define PEM_R_NOT_PROC_TYPE 107
#define BOOST_TYPE_TRAITS_EXT_ADD_RVALUE_REFERENCE__HPP 
#define LOCK_UN 8
#define BOOST_PP_NODE_120(p) BOOST_PP_IIF(p(120), BOOST_PP_NODE_116, BOOST_PP_NODE_124)
#define BOOST_PP_NODE_121(p) BOOST_PP_IIF(p(121), 121, 122)
#define BOOST_PP_NODE_122(p) BOOST_PP_IIF(p(122), BOOST_PP_NODE_121, BOOST_PP_NODE_123)
#define BOOST_PP_NODE_123(p) BOOST_PP_IIF(p(123), 123, 124)
#define BOOST_PP_NODE_124(p) BOOST_PP_IIF(p(124), BOOST_PP_NODE_122, BOOST_PP_NODE_126)
#define BOOST_PP_NODE_125(p) BOOST_PP_IIF(p(125), 125, 126)
#define BOOST_PP_NODE_126(p) BOOST_PP_IIF(p(126), BOOST_PP_NODE_125, BOOST_PP_NODE_127)
#define BOOST_PP_NODE_127(p) BOOST_PP_IIF(p(127), 127, 128)
#define BOOST_PP_NODE_128(p) BOOST_PP_IIF(p(128), BOOST_PP_NODE_64, BOOST_PP_NODE_192)
#define BOOST_PP_NODE_129(p) BOOST_PP_IIF(p(129), 129, 130)
#define BOOST_ATTRIBUTE_UNUSED __attribute__((__unused__))
#define MAP_NONBLOCK 0x10000
#define X509_L_ADD_DIR 2
#define NID_gost89_cnt 814
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_114 114
#define STABLE_FLAGS_CLEAR STABLE_FLAGS_MALLOC
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_115 115
#define _mm256_mask_reduce_ps(W,U,A,B) ((__m256) __builtin_ia32_reduceps256_mask ((__v8sf)(__m256)(A), (int)(B), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define NID_id_smime_ct_DVCSResponseData 211
#define BOOST_PP_NODE_130(p) BOOST_PP_IIF(p(130), BOOST_PP_NODE_129, BOOST_PP_NODE_131)
#define BOOST_PP_NODE_131(p) BOOST_PP_IIF(p(131), 131, 132)
#define BOOST_PP_NODE_132(p) BOOST_PP_IIF(p(132), BOOST_PP_NODE_130, BOOST_PP_NODE_134)
#define BOOST_PP_NODE_133(p) BOOST_PP_IIF(p(133), 133, 134)
#define BOOST_PP_NODE_134(p) BOOST_PP_IIF(p(134), BOOST_PP_NODE_133, BOOST_PP_NODE_135)
#define BOOST_PP_NODE_135(p) BOOST_PP_IIF(p(135), 135, 136)
#define BOOST_PP_NODE_136(p) BOOST_PP_IIF(p(136), BOOST_PP_NODE_132, BOOST_PP_NODE_140)
#define BOOST_PP_NODE_139(p) BOOST_PP_IIF(p(139), 139, 140)
#define BOOST_PP_SEQ_ELEM_22(_) BOOST_PP_SEQ_ELEM_21
#define RSA_R_ALGORITHM_MISMATCH 100
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_117 117
#define SN_rc2_cfb64 "RC2-CFB"
#define NID_dhpublicnumber 920
#define OBJ_setCext_tunneling OBJ_set_certExt,4L
#define OBJ_dstu4145le OBJ_ua_pki,1L,3L,1L,1L
#define TLS1_RFC_DH_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_118 118
#define BOOST_PP_INTERCEPT_27 
#define EC_R_INVALID_PRIVATE_KEY 123
#define LN_dod "dod"
#define BOOST_PP_REPEAT_1_12(m,d) BOOST_PP_REPEAT_1_11(m, d) m(2, 11, d)
#define SSL3_CC_APPLICATION 0x100
#define BOOST_PP_LIST_FOLD_RIGHT_85(o,s,l) BOOST_PP_LIST_FOLD_LEFT_85(o, s, BOOST_PP_LIST_REVERSE_D(85, l))
#define SIGWINCH 28
#define BOOST_PP_WHILE_76_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_77, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(77, s))
#define BOOST_MPL_PP_REPEAT_IDENTITY_FUNC(unused1,unused2,x) x
#define BOOST_PP_NODE_140(p) BOOST_PP_IIF(p(140), BOOST_PP_NODE_138, BOOST_PP_NODE_142)
#define BOOST_PP_NODE_142(p) BOOST_PP_IIF(p(142), BOOST_PP_NODE_141, BOOST_PP_NODE_143)
#define BOOST_PP_NODE_143(p) BOOST_PP_IIF(p(143), 143, 144)
#define BOOST_PP_NODE_144(p) BOOST_PP_IIF(p(144), BOOST_PP_NODE_136, BOOST_PP_NODE_152)
#define BOOST_PP_NODE_145(p) BOOST_PP_IIF(p(145), 145, 146)
#define BOOST_PP_NODE_147(p) BOOST_PP_IIF(p(147), 147, 148)
#define BOOST_PP_NODE_148(p) BOOST_PP_IIF(p(148), BOOST_PP_NODE_146, BOOST_PP_NODE_150)
#define BOOST_PP_NODE_149(p) BOOST_PP_IIF(p(149), 149, 150)
#define PRId64 __PRI64_PREFIX "d"
#define BOOST_PREPROCESSOR_ARITHMETIC_ADD_HPP 
#define FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS _IOWR('f', 25, struct fscrypt_remove_key_arg)
#define SMIME_NOVERIFY PKCS7_NOVERIFY
#define _kxnor_mask16 _mm512_kxnor
#define BOOST_PP_SEQ_SIZE(seq) BOOST_PP_CAT(BOOST_PP_SEQ_SIZE_, BOOST_PP_SEQ_SIZE_0 seq)
#define BOOST_PP_REPEAT_1_16(m,d) BOOST_PP_REPEAT_1_15(m, d) m(2, 15, d)
#define NID_X9_62_ppBasis 683
#define SHA256_DIGEST_LENGTH 32
#define EVENT__HAVE___FUNCTION__ 1
#define TLS1_RFC_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384"
#define BOOST_PP_NODE_150(p) BOOST_PP_IIF(p(150), BOOST_PP_NODE_149, BOOST_PP_NODE_151)
#define BOOST_PP_NODE_151(p) BOOST_PP_IIF(p(151), 151, 152)
#define __ldiv_t_defined 1
#define BOOST_PP_NODE_153(p) BOOST_PP_IIF(p(153), 153, 154)
#define BOOST_PP_NODE_154(p) BOOST_PP_IIF(p(154), BOOST_PP_NODE_153, BOOST_PP_NODE_155)
#define BOOST_PP_NODE_155(p) BOOST_PP_IIF(p(155), 155, 156)
#define ___int_ptrdiff_t_h 
#define BOOST_PP_NODE_157(p) BOOST_PP_IIF(p(157), 157, 158)
#define BOOST_PP_NODE_158(p) BOOST_PP_IIF(p(158), BOOST_PP_NODE_157, BOOST_PP_NODE_159)
#define BOOST_PP_NODE_159(p) BOOST_PP_IIF(p(159), 159, 160)
#define M_LN2f64x __f64x (0.693147180559945309417232121458176568)
#define ASN1_R_MISSING_SECOND_NUMBER 138
#define _SC_MQ_OPEN_MAX _SC_MQ_OPEN_MAX
#define BOOST_PP_DEC_181 180
#define IP_PMTUDISC_INTERFACE 4
#define PF_VSOCK 40
#define BOOST_PP_NODE_160(p) BOOST_PP_IIF(p(160), BOOST_PP_NODE_144, BOOST_PP_NODE_176)
#define BOOST_PP_NODE_161(p) BOOST_PP_IIF(p(161), 161, 162)
#define BOOST_PP_NODE_162(p) BOOST_PP_IIF(p(162), BOOST_PP_NODE_161, BOOST_PP_NODE_163)
#define BOOST_PP_NODE_163(p) BOOST_PP_IIF(p(163), 163, 164)
#define BOOST_PP_NODE_164(p) BOOST_PP_IIF(p(164), BOOST_PP_NODE_162, BOOST_PP_NODE_166)
#define BOOST_PP_NODE_165(p) BOOST_PP_IIF(p(165), 165, 166)
#define BOOST_PP_NODE_168(p) BOOST_PP_IIF(p(168), BOOST_PP_NODE_164, BOOST_PP_NODE_172)
#define BOOST_PP_NODE_169(p) BOOST_PP_IIF(p(169), 169, 170)
#define BOOST_PP_NODE_69(p) BOOST_PP_IIF(p(69), 69, 70)
#define TLS1_2_VERSION_MINOR 0x03
#define BOOST_PP_FOR_40_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(41, s) BOOST_PP_IIF(c, BOOST_PP_FOR_41, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(41, s), p, o, m)
#define SSL_TXT_SEED "SEED"
#define SN_magma_mac "magma-mac"
#define _mm_mask_i32gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gathersiv4si ((__v4si)(__m128i) (SRC), (int const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4si)(__m128i) (MASK), (int) (SCALE))
#define BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS 133
#define SO_PRIORITY 12
#define BOOST_PP_NODE_170(p) BOOST_PP_IIF(p(170), BOOST_PP_NODE_169, BOOST_PP_NODE_171)
#define BOOST_PP_NODE_171(p) BOOST_PP_IIF(p(171), 171, 172)
#define BOOST_PP_NODE_172(p) BOOST_PP_IIF(p(172), BOOST_PP_NODE_170, BOOST_PP_NODE_174)
#define BOOST_PP_NODE_173(p) BOOST_PP_IIF(p(173), 173, 174)
#define BOOST_PP_NODE_174(p) BOOST_PP_IIF(p(174), BOOST_PP_NODE_173, BOOST_PP_NODE_175)
#define BOOST_PP_NODE_175(p) BOOST_PP_IIF(p(175), 175, 176)
#define BOOST_PP_NODE_176(p) BOOST_PP_IIF(p(176), BOOST_PP_NODE_168, BOOST_PP_NODE_184)
#define BOOST_PP_NODE_177(p) BOOST_PP_IIF(p(177), 177, 178)
#define BOOST_PP_NODE_179(p) BOOST_PP_IIF(p(179), 179, 180)
#define BOOST_PP_FOR BOOST_PP_CAT(BOOST_PP_FOR_, BOOST_PP_AUTO_REC(BOOST_PP_FOR_P, 256))
#define OBJ_id_cmc_lraPOPWitness OBJ_id_cmc,11L
#define SSL_TXT_SRP "SRP"
#define LN_set_msgExt "message extensions"
#define PF_LOCAL 1
#define BOOST_PP_SEQ_ELEM_28(_) BOOST_PP_SEQ_ELEM_27
#define _mm256_maskz_shuffle_f32x4(U,X,Y,C) ((__m256) __builtin_ia32_shuf_f32x4_256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(C), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)(U)))
#define BOOST_PP_NODE_183(p) BOOST_PP_IIF(p(183), 183, 184)
#define BOOST_PP_NODE_184(p) BOOST_PP_IIF(p(184), BOOST_PP_NODE_180, BOOST_PP_NODE_188)
#define BOOST_PP_NODE_185(p) BOOST_PP_IIF(p(185), 185, 186)
#define BOOST_PP_NODE_186(p) BOOST_PP_IIF(p(186), BOOST_PP_NODE_185, BOOST_PP_NODE_187)
#define BOOST_PP_NODE_187(p) BOOST_PP_IIF(p(187), 187, 188)
#define BOOST_PP_NODE_189(p) BOOST_PP_IIF(p(189), 189, 190)
#define _ALLOC_TRAITS_H 1
#define NID_gost89_ctr 1011
#define EMEDIUMTYPE 124
#define BIO_get_num_renegotiates(b) BIO_ctrl(b,BIO_C_GET_SSL_NUM_RENEGOTIATES,0,NULL)
#define BOOST_PP_SEQ_ELEM_29(_) BOOST_PP_SEQ_ELEM_28
#define V_ASN1_ANY -4
#define SN_sshClient "secureShellClient"
#define JEMALLOC_OVERRIDE_MEMALIGN 
#define SSL_SECOP_CIPHER_SUPPORTED (1 | SSL_SECOP_OTHER_CIPHER)
#define BOOST_PP_NODE_191(p) BOOST_PP_IIF(p(191), 191, 192)
#define BOOST_PP_NODE_192(p) BOOST_PP_IIF(p(192), BOOST_PP_NODE_160, BOOST_PP_NODE_224)
#define BOOST_PP_NODE_193(p) BOOST_PP_IIF(p(193), 193, 194)
#define SOL_LLC 268
#define BOOST_PP_NODE_195(p) BOOST_PP_IIF(p(195), 195, 196)
#define BOOST_PP_NODE_196(p) BOOST_PP_IIF(p(196), BOOST_PP_NODE_194, BOOST_PP_NODE_198)
#define BOOST_PP_NODE_197(p) BOOST_PP_IIF(p(197), 197, 198)
#define BOOST_PP_NODE_198(p) BOOST_PP_IIF(p(198), BOOST_PP_NODE_197, BOOST_PP_NODE_199)
#define BOOST_PP_NODE_199(p) BOOST_PP_IIF(p(199), 199, 200)
#define EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR32 1
#define OBJ_setct_AuthRevResTBS OBJ_set_ctype,25L
#define JEMALLOC_RESTRICT_RETURN 
#define NID_x121Address 868
#define EVENT__PACKAGE "libevent"
#define BOOST_PP_WHILE_93_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_94, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(94, s))
#define OBJ_pbe_WithSHA1And128BitRC2_CBC OBJ_pkcs12_pbeids,5L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101110 (1)(0)(1)(0)(1)(1)(1)(0),
#define SN_id_tc26_cipher_gostr3412_2015_kuznyechik "id-tc26-cipher-gostr3412-2015-kuznyechik"
#define BOOST_PP_WHILE_129_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_130, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(130, s))
#define X509_V_ERR_HOSTNAME_MISMATCH 62
#define PKCS7_R_CERTIFICATE_VERIFY_ERROR 117
#define EVP_F_EVP_PKEY_DERIVE 153
#define NID_bf_cfb64 93
#define _mm_mask_i32gather_epi64(SRC,BASE,INDEX,MASK,SCALE) (__m128i) __builtin_ia32_gathersiv2di ((__v2di)(__m128i) (SRC), (long long const *) (BASE), (__v4si)(__m128i) (INDEX), (__v2di)(__m128i) (MASK), (int) (SCALE))
#define LN_camellia_256_cbc "camellia-256-cbc"
#define NID_id_qt_unotice 165
#define RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1 152
#define X509_R_METHOD_NOT_SUPPORTED 124
#define X509_V_FLAG_CHECK_SS_SIGNATURE 0x4000
#define EMULTIHOP 72
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110101 (0)(1)(1)(0)(1)(0)(1),
#define ASN1err(f,r) ERR_PUT_error(ERR_LIB_ASN1,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define OBJ_policy_constraints OBJ_id_ce,36L
#define BOOST_MPL_AUX_MSVC_NEVER_TRUE_HPP_INCLUDED 
#define TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA 0x03000090
#define OBJ_whirlpool OBJ_iso,0L,10118L,3L,0L,55L
#define TLS1_RFC_RSA_WITH_AES_256_GCM_SHA384 "TLS_RSA_WITH_AES_256_GCM_SHA384"
#define _mm512_cvtt_roundps_epu64(A,B) ((__m512i)__builtin_ia32_cvttps2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define LN_camellia_256_ccm "camellia-256-ccm"
#define SSL_SECOP_OTHER_NONE 0
#define BOOST_MPL_AUX_CONFIG_GPU_HPP_INCLUDED 
#define __CFLOAT32 _Complex float
#define SSL_F_TLS13_SETUP_KEY_BLOCK 441
#define BOOST_MPL_AUX_NA_SPEC_HPP_INCLUDED 
#define EVP_F_EVP_PKEY_PARAMGEN_INIT 149
#define _mm_mask_fixupimm_round_sd(X,U,Y,Z,C,R) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))
#define EVP_CTRL_KEY_MESH 0x20
#define BOOST_MPL_PP_PARAMS(n,param) BOOST_PP_REPEAT( n , BOOST_MPL_PP_AUX_PARAM_FUNC , param )
#define FOLLY_HAS_CPP_ATTRIBUTE(x) __has_cpp_attribute(x)
#define TLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA 0x0300C022
#define _mm_mask_fixupimm_round_ss(X,U,Y,Z,C,R) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), (R)))
#define OBJ_subjectSignTool OBJ_member_body,643L,100L,111L
#define TLS1_RFC_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384"
#define BOOST_PP_FOR_16_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(17, s) BOOST_PP_IIF(c, BOOST_PP_FOR_17, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(17, s), p, o, m)
#define X509_V_ERR_EXCLUDED_VIOLATION 48
#define __cpp_lib_destroying_delete 201806L
#define _GFNIINTRIN_H_INCLUDED 
#define _SC_SPIN_LOCKS _SC_SPIN_LOCKS
#define BOOST_COPY_ASSIGN_REF_BEG const
#define _mm256_extracti64x2_epi64(X,C) ((__m128i) __builtin_ia32_extracti64x2_256_mask ((__v4di)(__m256i) (X), (int) (C), (__v2di)(__m128i) _mm_setzero_si128 (), (__mmask8)-1))
#define LN_policy_mappings "X509v3 Policy Mappings"
#define BN_one(a) (BN_set_word((a),1))
#define BIO_F_BIO_READ_INTERN 120
#define X509_V_ERR_CERT_CHAIN_TOO_LONG 22
#define STATX_ATIME 0x00000020U
#define TLS1_TXT_ADH_WITH_AES_128_GCM_SHA256 "ADH-AES128-GCM-SHA256"
#define TLS1_TXT_DHE_PSK_WITH_NULL_SHA "DHE-PSK-NULL-SHA"
#define SCNuMAX __PRI64_PREFIX "u"
#define SSL_F_SSL_USE_PRIVATEKEY_FILE 203
#define _ASM_GENERIC_IOCTL_H 
#define BN_num_bytes(a) ((BN_num_bits(a)+7)/8)
#define EC_R_PEER_KEY_ERROR 149
#define EVP_F_EVP_PKEY_GET0_DH 119
#define XN_FLAG_FN_MASK (0x3 << 21)
#define PF_IRDA 23
#define _mm256_mask_blend_epi64(__U,__A,__W) ((__m256i) __builtin_ia32_blendmq_256_mask ((__v4di) (__A), (__v4di) (__W), (__mmask8) (__U)))
#define BOOST_PP_IS_BINARY_CHECK(a,b) 1
#define THRIFT_SERVER_TSERVEROBSERVER_H_ 1
#define BOOST_PP_FOR_135(s,p,o,m) BOOST_PP_FOR_135_C(BOOST_PP_BOOL(p(136, s)), s, p, o, m)
#define BOOST_CURRENT_FUNCTION __PRETTY_FUNCTION__
#define SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED 1044
#define SSL_OP_SINGLE_DH_USE 0x0
#define __S64_TYPE long int
#define IP_TOS 1
#define LN_id_GostR3410_2012_256 "GOST R 34.10-2012 with 256 bit modulus"
#define _mm_cmp_round_sd_mask(X,Y,P,R) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1, R))
#define BOOST_TEMPLATED_STREAM_TEMPLATE(E,T) template < typename E , typename T >
#define FSPICK_SYMLINK_NOFOLLOW 0x00000002
#define APACHE_THRIFT_ACCESSOR_t_list 
#define BOOST_PP_FOR_139(s,p,o,m) BOOST_PP_FOR_139_C(BOOST_PP_BOOL(p(140, s)), s, p, o, m)
#define TLSEXT_ECPOINTFORMAT_uncompressed 0
#define _mm256_round_pd(V,M) ((__m256d) __builtin_ia32_roundpd256 ((__v4df)(__m256d)(V), (int)(M)))
#define _mm512_mask_fmadd_round_pd(A,U,B,C,R) (__m512d)__builtin_ia32_vfmaddpd512_mask(A, B, C, U, R)
#define DECLARE_ASN1_FUNCTIONS_name(type,name) DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) DECLARE_ASN1_ENCODE_FUNCTIONS(type, name, name)
#define _mm256_round_ps(V,M) ((__m256) __builtin_ia32_roundps256 ((__v8sf)(__m256)(V), (int)(M)))
#define _mm512_mask_fmadd_round_ps(A,U,B,C,R) (__m512)__builtin_ia32_vfmaddps512_mask(A, B, C, U, R)
#define SN_des_cfb64 "DES-CFB"
#define _SC_FILE_ATTRIBUTES _SC_FILE_ATTRIBUTES
#define EC_R_D2I_ECPKPARAMETERS_FAILURE 117
#define __LONG_DOUBLE_USES_FLOAT128 0
#define BOOST_OPTIONAL_OPTIONAL_FWD_FLC_19NOV2002_HPP 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101 (0)(1)(1)(0)(1),
#define __TIME_T_TYPE __SYSCALL_SLONG_TYPE
#define _mm_shuffle_pd(A,B,N) ((__m128d)__builtin_ia32_shufpd ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(N)))
#define _mm256_gf2p8affine_epi64_epi8(A,B,C) ((__m256i) __builtin_ia32_vgf2p8affineqb_v32qi ((__v32qi)(__m256i)(A), ( __v32qi)(__m256i)(B), (int)(C)))
#define NID_setAttr_SecDevSig 635
#define SN_seed_cbc "SEED-CBC"
#define _mm_shuffle_ps(A,B,MASK) ((__m128) __builtin_ia32_shufps ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(MASK)))
#define BOOST_PP_WHILE_18_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_19, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(19, s))
#define BOOST_PP_SEQ_FOLD_LEFT_I_53(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_54, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(54, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_id_mod_timestamp_protocol 281
#define SSL_F_D2I_SSL_SESSION 103
#define X509V3_F_S2I_ASN1_INTEGER 108
#define SN_aria_256_ecb "ARIA-256-ECB"
#define NID_aria_192_cfb128 1072
#define BIO_CTRL_GET 5
#define OBJ_tlsfeature OBJ_id_pe,24L
#define TLS1_TXT_ECDH_RSA_WITH_AES_256_SHA384 "ECDH-RSA-AES256-SHA384"
#define TLS1_3_RFC_AES_256_GCM_SHA384 "TLS_AES_256_GCM_SHA384"
#define _SC_LEVEL4_CACHE_ASSOC _SC_LEVEL4_CACHE_ASSOC
#define _SC_COLL_WEIGHTS_MAX _SC_COLL_WEIGHTS_MAX
#define M_1_PIf32x __f32x (0.318309886183790671537767526745028724)
#define SN_id_GostR3411_94_prf "prf-gostr3411-94"
#define EVP_PKEY_CTRL_EC_KDF_MD (EVP_PKEY_ALG_CTRL + 5)
#define BIO_TYPE_SSL ( 7|BIO_TYPE_FILTER)
#define EVP_R_OUTPUT_WOULD_OVERFLOW 184
#define SN_id_aca_encAttrs "id-aca-encAttrs"
#define V_ASN1_NEG_ENUMERATED (10 | V_ASN1_NEG)
#define LOG_TO_STRING_0 GLOG_ERROR_MSG
#define EC_F_PKEY_ECD_DIGESTSIGN 272
#define ERR_LIB_CMS 46
#define LN_favouriteDrink "favouriteDrink"
#define SSL_F_TLS_CONSTRUCT_HELLO_RETRY_REQUEST 510
#define FOLLY_LIBEVENT_DEF_ACCESSORS2(name) inline auto event_ref_ ##name(struct event* ev) ->decltype(std::ref(ev->FOLLY_LIBEVENT_COMPAT_PLUCK2(name))) { return std::ref(ev->FOLLY_LIBEVENT_COMPAT_PLUCK2(name)); } inline auto event_ref_ ##name(struct event const* ev) ->decltype(std::cref(ev->FOLLY_LIBEVENT_COMPAT_PLUCK2(name))) { return std::cref(ev->FOLLY_LIBEVENT_COMPAT_PLUCK2(name)); }
#define BOOST_PP_SEQ_FOLD_LEFT_I_131(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_132, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(132, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_id_tc26_wrap_gostr3412_2015_magma OBJ_id_tc26_wrap,1L
#define FS_IMMUTABLE_FL 0x00000010
#define BOOST_PP_NODE_22(p) BOOST_PP_IIF(p(22), BOOST_PP_NODE_21, BOOST_PP_NODE_23)
#define NID_preferredDeliveryMethod 872
#define BOOST_MPL_AUX_NA_SPEC_ARITY(i,name) 
#define PIPE_BUF 4096
#define X509_TRUST_DEFAULT 0
#define FS_ENCRYPTION_MODE_ADIANTUM FSCRYPT_MODE_ADIANTUM
#define __VAESINTRIN_H_INCLUDED 
#define NID_pkcs9_unstructuredAddress 55
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM "TLS_ECDHE_ECDSA_WITH_AES_256_CCM"
#define NID_ct_precert_signer 953
#define SHA256_CBLOCK (SHA_LBLOCK*4)
#define BOOST_INTRUSIVE_DETAIL_FUNCTION_DETECTOR_HPP 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_123 123
#define _SIDD_SBYTE_OPS 0x02
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_125 125
#define __MATHCALLX(function,suffix,args,attrib) __MATHDECLX (_Mdouble_,function,suffix, args, attrib)
#define SN_id_tc26_sign_constants "id-tc26-sign-constants"
#define _CS_POSIX_V7_LP64_OFF64_LINTFLAGS _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_126 126
#define TLS1_TXT_ECDH_anon_WITH_DES_192_CBC3_SHA "AECDH-DES-CBC3-SHA"
#define BOOST_PP_WHILE_25_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_26, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(26, s))
#define FOLLY_EXPORT __attribute__((__visibility__("default")))
#define _CS_XBS5_ILP32_OFF32_LIBS _CS_XBS5_ILP32_OFF32_LIBS
#define _mm_maskz_srli_epi64(U,A,B) ((__m128i) __builtin_ia32_psrlqi128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)_mm_setzero_si128 (), (__mmask8)(U)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_127 127
#define BN_F_BN_GF2M_MOD_SOLVE_QUAD 134
#define PRIiLEAST8 "i"
#define _mm512_mask_prefetch_i32scatter_pd(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdpd ((__mmask8) (MASK), (__v8si)(__m256i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define OBJ_X9_62_id_ecPublicKey OBJ_X9_62_id_publicKeyType,1L
#define TLSEXT_nid_unknown 0x1000000
#define _mm512_mask_prefetch_i32scatter_ps(ADDR,MASK,INDEX,SCALE,HINT) __builtin_ia32_scatterpfdps ((__mmask16) (MASK), (__v16si)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define NID_id_cmc_popLinkRandom 344
#define NID_pkcs8ShroudedKeyBag 151
#define BOOST_PP_FOR_200_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(201, s) BOOST_PP_IIF(c, BOOST_PP_FOR_201, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(201, s), p, o, m)
#define EVENT__HAVE_SYS_STAT_H 1
#define OBJ_id_mod_timestamp_protocol OBJ_id_pkix_mod,13L
#define BOOST_PP_REPEAT_1_24(m,d) BOOST_PP_REPEAT_1_23(m, d) m(2, 23, d)
#define BOOST_MPL_PP_AUX_PARAM_FUNC(unused,i,param) BOOST_PP_COMMA_IF(i) BOOST_PP_CAT(param, BOOST_PP_INC(i))
#define _GLIBCXX_HAVE_ECHILD 1
#define IORING_OFF_CQ_RING 0x8000000ULL
#define sigev_notify_attributes _sigev_un._sigev_thread._attribute
#define BOOST_PP_REPEAT_1_26(m,d) BOOST_PP_REPEAT_1_25(m, d) m(2, 25, d)
#define _mm512_setr4_pd(e0,e1,e2,e3) _mm512_set4_pd(e3,e2,e1,e0)
#define SN_ipsec_IKE "ipsecIKE"
#define BOOST_PP_REPEAT_1_27(m,d) BOOST_PP_REPEAT_1_26(m, d) m(2, 26, d)
#define _mm512_cvt_roundpd_epi32(A,B) ((__m256i)__builtin_ia32_cvtpd2dq512_mask(A, (__v8si)_mm256_undefined_si256(), -1, B))
#define NID_setCext_setQualf 614
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001000 (0)(0)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001001 (0)(0)(0)(1)(0)(0)(1),
#define X509_TRUST_EMAIL 4
#define _GLIBCXX_RANGES 1
#define LOG_TO_SINK(sink,severity) google::LogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, static_cast<google::LogSink*>(sink), true).stream()
#define M_E 2.7182818284590452354
#define BOOST_PP_REPEAT_1_113(m,d) BOOST_PP_REPEAT_1_112(m, d) m(2, 112, d)
#define RSA_F_RSA_PADDING_CHECK_X931 128
#define OBJ_id_smime_aa_ets_certValues OBJ_id_smime_aa,23L
#define SN_pkInitKDC "pkInitKDC"
#define BOOST_PREPROCESSOR_LIST_REVERSE_HPP 
#define BOOST_MPL_AUX_COUNT_IMPL_HPP_INCLUDED 
#define BOOST_PP_WHILE_164_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_165, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(165, s))
#define BOOST_TT_CXX11_IS_CONVERTIBLE 
#define d2i_DHparams_fp(fp,x) (DH *)ASN1_d2i_fp((char *(*)())DH_new, (char *(*)())d2i_DHparams, (fp), (unsigned char **)(x))
#define EXFLAG_NO_FINGERPRINT 0x100000
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111001 (1)(1)(1)(1)(0)(0)(1),
#define EVUTIL_EAI_SERVICE EAI_SERVICE
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001011 (0)(0)(0)(1)(0)(1)(1),
#define NID_dstu28147_ofb 1153
#define BOOST_PP_REPEAT_1_115(m,d) BOOST_PP_REPEAT_1_114(m, d) m(2, 114, d)
#define ASN1_R_ILLEGAL_CHARACTERS 124
#define __cpp_lib_transformation_trait_aliases 201304
#define TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA256 "RSA-PSK-AES128-CBC-SHA256"
#define OBJ_pkcs9_unstructuredAddress OBJ_pkcs9,8L
#define SN_secp160r1 "secp160r1"
#define SN_secp160r2 "secp160r2"
#define BOOST_PP_TUPLE_REM_39(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38) e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15, e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29, e30, e31, e32, e33, e34, e35, e36, e37, e38
#define RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1 112
#define RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2 113
#define ASN1_STRFLGS_DUMP_ALL 0x80
#define TCPI_OPT_TIMESTAMPS 1
#define SHRT_MIN (-SHRT_MAX - 1)
#define _IO_USER_LOCK 0x8000
#define __cpp_enumerator_attributes 201411L
#define _mm_cvt_roundsd_ss(A,B,C) (__m128)__builtin_ia32_cvtsd2ss_round(A, B, C)
#define NID_rc2_ofb64 40
#define LN_aria_256_cfb1 "aria-256-cfb1"
#define SN_setct_AuthTokenTBS "setct-AuthTokenTBS"
#define LN_aria_256_cfb8 "aria-256-cfb8"
#define FMT_TRY try
#define IPV6_PMTUDISC_PROBE 3
#define PEM_F_PEM_WRITE 113
#define _mm_mask_i64gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m128d) __builtin_ia32_gatherdiv2df ((__v2df)(__m128d) (SRC), (double const *) (BASE), (__v2di)(__m128i) (INDEX), (__v2df)(__m128d) (MASK), (int) (SCALE))
#define BOOST_TESTED_AT(value) != ((value)-(value))
#define SN_setAttr_IssCap_Sig "setAttr-IssCap-Sig"
#define SSL_OP_NO_ANTI_REPLAY 0x01000000U
#define M_PI_4f128 __f128 (0.785398163397448309615660845819875721)
#define BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC_IMPL(i,trait) 
#define _mm_mask_i64gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m128) __builtin_ia32_gatherdiv4sf ((__v4sf)(__m128) (SRC), (float const *) (BASE), (__v2di)(__m128i) (INDEX), (__v4sf)(__m128) (MASK), (int) (SCALE))
#define M_PI 3.14159265358979323846
#define BOOST_PP_FOR_51_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(52, s) BOOST_PP_IIF(c, BOOST_PP_FOR_52, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(52, s), p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000101 (0)(1)(0)(0)(0)(1)(0)(1),
#define X509V3_R_INVALID_ASNUMBER 162
#define SIG_ERR ((__sighandler_t) -1)
#define SSL_TXT_AECDH "AECDH"
#define SSL3_CHANGE_CIPHER_SERVER_READ (SSL3_CC_SERVER|SSL3_CC_READ)
#define TLS1_TXT_RSA_WITH_NULL_SHA256 "NULL-SHA256"
#define BOOST_TT_ADD_POINTER_HPP_INCLUDED 
#define OBJ_surname OBJ_X509,4L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110110 (0)(1)(1)(0)(1)(1)(0),
#define LN_camellia_256_ctr "camellia-256-ctr"
#define VLOG(verboselevel) LOG_IF(INFO, VLOG_IS_ON(verboselevel))
#define X509_VP_FLAG_DEFAULT 0x1
#define EVP_PKEY_CTX_set_mac_key(ctx,key,len) EVP_PKEY_CTX_ctrl(ctx, -1, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_SET_MAC_KEY, len, (void *)(key))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_244 244
#define IN6_ARE_ADDR_EQUAL(a,b) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); const struct in6_addr *__b = (const struct in6_addr *) (b); __a->__in6_u.__u6_addr32[0] == __b->__in6_u.__u6_addr32[0] && __a->__in6_u.__u6_addr32[1] == __b->__in6_u.__u6_addr32[1] && __a->__in6_u.__u6_addr32[2] == __b->__in6_u.__u6_addr32[2] && __a->__in6_u.__u6_addr32[3] == __b->__in6_u.__u6_addr32[3]; }))
#define SSL_AD_USER_CANCELLED TLS1_AD_USER_CANCELLED
#define BOOST_PP_DEC_232 231
#define __O_NOFOLLOW 0400000
#define BOOST_PP_WHILE_113_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_114, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(114, s))
#define ASN1_ITEM_ref(iptr) (&(iptr ##_it))
#define _mm512_shuffle_epi32(X,C) ((__m512i) __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_epi32 (), (__mmask16)-1))
#define LN_sm4_cfb128 "sm4-cfb"
#define SN_setct_BCIDistributionTBS "setct-BCIDistributionTBS"
#define CRYPTO_F_GET_AND_LOCK 113
#define BOOST_PP_WHILE_224_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_225, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(225, s))
#define BOOST_PP_DEC_54 53
#define THRIFT_PROTOCOL_TPROTOCOL_H_ 1
#define BOOST_PP_FOR_244_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(245, s) BOOST_PP_IIF(c, BOOST_PP_FOR_245, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(245, s), p, o, m)
#define _mm_fnmadd_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, -(B), C, R)
#define LN_shake256 "shake256"
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_31(o,s,l) 0
#define BN_ULONG unsigned long
#define BIO_F_BIO_CALLBACK_CTRL 131
#define _mm256_cmp_epu8_mask(X,Y,P) ((__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(P), (__mmask32)-1))
#define LN_dsa_2 "dsaEncryption-old"
#define _mm_fnmadd_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, -(B), C, R)
#define BOOST_IDENTITY_TYPE_HPP_ 
#define SSL_build_cert_chain(s,flags) SSL_ctrl(s,SSL_CTRL_BUILD_CERT_CHAIN, flags, NULL)
#define DTLS1_VERSION_MAJOR 0xFE
#define BIO_BIND_NORMAL 0
#define NID_setct_CredResData 552
#define BOOST_PP_DEC_56 55
#define PEM_F_PEM_WRITE_BIO_PRIVATEKEY_TRADITIONAL 147
#define BOOST_PP_LIST_FOLD_LEFT_113(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_114, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(114, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_DEC_57 56
#define __SIG_ATOMIC_TYPE__ int
#define TLS1_CK_DH_DSS_WITH_AES_256_SHA 0x03000036
#define BOOST_PP_DEC_58 57
#define OBJ_id_GostR3410_2001DH OBJ_cryptopro,98L
#define BOOST_PP_LIST_FOLD_LEFT_249(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_250, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(250, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm_sub_round_sd(A,B,C) (__m128d)__builtin_ia32_subsd_round(A, B, C)
#define BIO_F_BIO_NWRITE 125
#define BIO_F_FILE_CTRL 116
#define ASIdOrRange_range 1
#define BOOST_PP_REPEAT_3_197(m,d) BOOST_PP_REPEAT_3_196(m, d) m(4, 196, d)
#define _mm_sub_round_ss(A,B,C) (__m128)__builtin_ia32_subss_round(A, B, C)
#define _RTMINTRIN_H_INCLUDED 
#define TLS1_TXT_RSA_PSK_WITH_ARIA_128_GCM_SHA256 "RSA-PSK-ARIA128-GCM-SHA256"
#define _mm512_mask_range_pd(W,U,A,B,C) ((__m512d) __builtin_ia32_rangepd512_mask ((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(C), (__v8df)(__m512d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define PKCS7_F_PKCS7_DECRYPT 114
#define FOLLY_HAVE_LIBRT 0
#define BOOST_INTEGER_FWD_HPP 
#define _mm512_range_round_pd(A,B,C,R) ((__m512d) __builtin_ia32_rangepd512_mask ((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd (), (__mmask8)-1, (R)))
#define SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_VERSIONS 611
#define EVP_F_EVP_PKEY_PUBLIC_CHECK 190
#define _mm512_mask_range_ps(W,U,A,B,C) ((__m512) __builtin_ia32_rangeps512_mask ((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define SSL_R_X509_VERIFICATION_SETUP_PROBLEMS 269
#define _mm512_range_round_ps(A,B,C,R) ((__m512) __builtin_ia32_rangeps512_mask ((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps (), (__mmask16)-1, (R)))
#define BOOST_TT_HAS_CONFORMING_IS_CLASS_IMPLEMENTATION 1
#define _GLIBCXX_DEPRECATED_SUGGEST(ALT) __attribute__ ((__deprecated__ ("use '" ALT "' instead")))
#define BOOST_PP_FOR_142(s,p,o,m) BOOST_PP_FOR_142_C(BOOST_PP_BOOL(p(143, s)), s, p, o, m)
#define BOOST_DETAIL_FIRST_MACRO_PARAM(first_param,second_param) first_param
#define EC_F_ECDSA_VERIFY 253
#define BOOST_PP_FOR_143(s,p,o,m) BOOST_PP_FOR_143_C(BOOST_PP_BOOL(p(144, s)), s, p, o, m)
#define _mm512_mask_cmp_epu32_mask(M,X,Y,P) ((__mmask16) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(P), (__mmask16)(M)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010101 (0)(0)(0)(1)(0)(1)(0)(1),
#define BOOST_PP_DEC_237 236
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_193(op,st,ss,sz) 0
#define BOOST_INTRUSIVE_DETAIL_STD_FWD_HPP 
#define SN_id_smime_aa_contentHint "id-smime-aa-contentHint"
#define X509_FLAG_NO_PUBKEY (1L << 7)
#define _mm_mask_blend_epi8(__U,__A,__W) ((__m128i) __builtin_ia32_blendmb_128_mask ((__v16qi) (__A), (__v16qi) (__W), (__mmask16) (__U)))
#define __cpp_lib_chrono_udls 201304
#define CONFerr(f,r) ERR_PUT_error(ERR_LIB_CONF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 10)
#define EC_R_I2D_ECPKPARAMETERS_FAILURE 121
#define SSL_F_CREATE_TICKET_PREQUEL 638
#define TLS1_RFC_PSK_WITH_ARIA_128_GCM_SHA256 "TLS_PSK_WITH_ARIA_128_GCM_SHA256"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010110 (0)(0)(0)(1)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00010111 (0)(0)(0)(1)(0)(1)(1)(1),
#define _mm256_maskz_insertf64x2(U,X,Y,C) ((__m256d) __builtin_ia32_insertf64x2_256_mask ((__v4df)(__m256d) (X), (__v2df)(__m128d) (Y), (int) (C), (__v4df)(__m256d)_mm256_setzero_pd(), (__mmask8)(U)))
#define RWH_WRITE_LIFE_LONG 4
#define EVP_camellia_256_cfb EVP_camellia_256_cfb128
#define OBJ_mobileTelephoneNumber OBJ_pilotAttributeType,41L
#define NID_certificateRevocationList 883
#define BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT 127
#define BOOST_PP_FOR_158_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(159, s) BOOST_PP_IIF(c, BOOST_PP_FOR_159, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(159, s), p, o, m)
#define TLS1_3_CK_AES_256_GCM_SHA384 0x03001302
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_196(op,st,ss,sz) 0
#define MSG_NOSIGNAL MSG_NOSIGNAL
#define __LEAF , __leaf__
#define BIO_C_SET_BUF_MEM_EOF_RETURN 130
#define _MM_TRANSPOSE4_PS(row0,row1,row2,row3) do { __v4sf __r0 = (row0), __r1 = (row1), __r2 = (row2), __r3 = (row3); __v4sf __t0 = __builtin_ia32_unpcklps (__r0, __r1); __v4sf __t1 = __builtin_ia32_unpcklps (__r2, __r3); __v4sf __t2 = __builtin_ia32_unpckhps (__r0, __r1); __v4sf __t3 = __builtin_ia32_unpckhps (__r2, __r3); (row0) = __builtin_ia32_movlhps (__t0, __t1); (row1) = __builtin_ia32_movhlps (__t1, __t0); (row2) = __builtin_ia32_movlhps (__t2, __t3); (row3) = __builtin_ia32_movhlps (__t3, __t2); } while (0)
#define SSL_R_BAD_EARLY_DATA 233
#define LN_ISO_CN "ISO CN Member Body"
#define BOOST_PP_WHILE_60_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_61, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(61, s))
#define CONF_F_NCONF_LOAD_BIO 110
#define EC_R_WRONG_ORDER 130
#define OBJ_id_camellia192_wrap 1L,2L,392L,200011L,61L,1L,1L,3L,3L
#define SSL_F_SSL_CTRL 232
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_SHA384 "ECDHE-ECDSA-AES256-SHA384"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_76(p,o,s) 0
#define BOOST_PP_WHILE_22_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_23, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(23, s))
#define SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG 363
#define APACHE_THRIFT_ACCESSOR_keyType 
#define _SYS_TIME_H 1
#define SN_setct_MeAqCInitResTBS "setct-MeAqCInitResTBS"
#define INADDR_MAX_LOCAL_GROUP ((in_addr_t) 0xe00000ff)
#define _BITS_SOCKADDR_H 1
#define OBJ_id_tc26_constants OBJ_id_tc26,2L
#define BOOST_PP_LIST_FOLD_RIGHT_92(o,s,l) BOOST_PP_LIST_FOLD_LEFT_92(o, s, BOOST_PP_LIST_REVERSE_D(92, l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001000 (0)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001001 (0)(0)(1)(0)(0)(1),
#define OPENSSL_INIT_ATFORK 0x00020000L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_130 130
#define h_addr h_addr_list[0]
#define SN_setct_PANData "setct-PANData"
#define DSA_F_DSA_DO_VERIFY 113
#define APACHE_THRIFT_ACCESSOR_dscpToReflect 
#define SSL_CTX_sess_number(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_NUMBER,0,NULL)
#define APACHE_THRIFT_ACCESSOR_markToReflect 
#define BIO_F_BIO_LOOKUP_EX 143
#define LN_Directory "Directory"
#define M_Ef128 __f128 (2.718281828459045235360287471352662498)
#define _mm256_maskz_inserti64x2(U,X,Y,C) ((__m256i) __builtin_ia32_inserti64x2_256_mask ((__v4di)(__m256i) (X), (__v2di)(__m128i) (Y), (int) (C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define DH_R_CHECK_P_NOT_PRIME 117
#define BOOST_PP_WHILE_205_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_206, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(206, s))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001010 (0)(0)(1)(0)(1)(0),
#define _SC_PII_OSI_M _SC_PII_OSI_M
#define OBJ_id_GostR3411_2012_512 OBJ_id_tc26_digest,3L
#define LN_hmacWithSHA384 "hmacWithSHA384"
#define BOOST_PP_WHILE_228_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_229, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(229, s))
#define BOOST_PP_REPEAT_1_66(m,d) BOOST_PP_REPEAT_1_65(m, d) m(2, 65, d)
#define BOOST_PP_LIST_FOLD_RIGHT_95(o,s,l) BOOST_PP_LIST_FOLD_LEFT_95(o, s, BOOST_PP_LIST_REVERSE_D(95, l))
#define FALLOC_FL_UNSHARE_RANGE 0x40
#define NID_des_ofb64 45
#define SSL_SESSION_CACHE_MAX_SIZE_DEFAULT (1024*20)
#define OBJ_certificateRevocationList OBJ_X509,39L
#define randombytes_BYTES_MAX SODIUM_MIN(SODIUM_SIZE_MAX, 0xffffffffUL)
#define BIO_F_BIO_LOOKUP 135
#define EVP_PKEY_CTX_get0_dh_kdf_oid(ctx,poid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_OID, 0, (void *)(poid))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_137 137
#define BOOST_PP_LIST_FOLD_RIGHT_96(o,s,l) BOOST_PP_LIST_FOLD_LEFT_96(o, s, BOOST_PP_LIST_REVERSE_D(96, l))
#define OBJ_id_smime_alg_ESDH OBJ_id_smime_alg,5L
#define S_IXOTH (S_IXGRP >> 3)
#define CRYPTO_F_CRYPTO_FREE_EX_DATA 111
#define TLS1_RT_CRYPTO_CLIENT_RANDOM (TLS1_RT_CRYPTO | 0x2)
#define BOOST_PP_LIST_FOLD_RIGHT_97(o,s,l) BOOST_PP_LIST_FOLD_LEFT_97(o, s, BOOST_PP_LIST_REVERSE_D(97, l))
#define SSL_CTX_set_read_ahead(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_READ_AHEAD,m,NULL)
#define BOOST_VERSION_HPP 
#define NID_id_pda_countryOfCitizenship 352
#define BOOST_PP_SEQ_FOLD_LEFT_67(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_67(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __cpp_lib_is_final 201402L
#define BOOST_PP_REPEAT_1_35(m,d) BOOST_PP_REPEAT_1_34(m, d) m(2, 34, d)
#define BOOST_VARIANT_DETAIL_FORCED_RETURN_HPP 
#define _PSTL_CPP11_STD_ROTATE_BROKEN ((__GLIBCXX__ && __GLIBCXX__ < 20150716) || (_MSC_VER && _MSC_VER < 1800))
#define __GNUC_PATCHLEVEL___WORKAROUND_GUARD 0
#define SN_netscape_cert_type "nsCertType"
#define NID_member_body 182
#define SN_grasshopper_cbc "grasshopper-cbc"
#define BOOST_PP_REPEAT_1_37(m,d) BOOST_PP_REPEAT_1_36(m, d) m(2, 36, d)
#define _mm_mask_fpclass_sd_mask(X,C,U) ((__mmask8) __builtin_ia32_fpclasssd_mask ((__v2df) (__m128d) (X), (int) (C), (__mmask8) (U)))
#define COMP_R_ZLIB_NOT_SUPPORTED 101
#define _xabort(N) __builtin_ia32_xabort (N)
#define SN_setct_BatchAdminResTBE "setct-BatchAdminResTBE"
#define SSL_AD_UNKNOWN_PSK_IDENTITY TLS1_AD_UNKNOWN_PSK_IDENTITY
#define _mm_maskz_gf2p8affineinv_epi64_epi8(A,B,C,D) ((__m128i) __builtin_ia32_vgf2p8affineinvqb_v16qi_mask( (__v16qi)(__m128i)(B), (__v16qi)(__m128i)(C), (int)(D), (__v16qi)(__m128i) _mm_setzero_si128 (), (__mmask16)(A)))
#define EVENT__HAVE_PIPE 1
#define SSL_get_peer_tmp_key(s,pk) SSL_ctrl(s,SSL_CTRL_GET_PEER_TMP_KEY,0,pk)
#define CRL_REASON_CA_COMPROMISE 2
#define SSL_F_SSL3_WRITE_PENDING 159
#define SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet "id-GostR3410-2001-CryptoPro-XchA-ParamSet"
#define SSL_F_CHECK_SUITEB_CIPHER_LIST 331
#define BOOST_PP_ASSIGN_SLOT_4 <boost/preprocessor/slot/detail/slot4.hpp>
#define FMT_INLINE_NAMESPACE inline namespace
#define EC_R_INVALID_DIGEST 151
#define SOCK_DCCP SOCK_DCCP
#define NAME_MAX 255
#define NID_ns_sgc 139
#define SCHAR_MAX __SCHAR_MAX__
#define CPU_CLR(cpu,cpusetp) __CPU_CLR_S (cpu, sizeof (cpu_set_t), cpusetp)
#define BOOST_PP_LIST_FOLD_LEFT_42(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_43, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(43, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100100 (1)(1)(0)(0)(1)(0)(0),
#define SN_ffdhe6144 "ffdhe6144"
#define BOOST_MPL_AUX778076_ADVANCE_BACKWARD_HPP_INCLUDED 
#define IPV6_2292DSTOPTS 4
#define SSL_CB_ALERT 0x4000
#define BIO_TYPE_BASE64 (11|BIO_TYPE_FILTER)
#define FS_IOC32_GETVERSION _IOR('v', 1, int)
#define _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
#define TLS1_RFC_RSA_PSK_WITH_CHACHA20_POLY1305 "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256"
#define BOOST_PP_FOR_248_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(249, s) BOOST_PP_IIF(c, BOOST_PP_FOR_249, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(249, s), p, o, m)
#define _SIDD_CMP_EQUAL_ANY 0x00
#define TCP_REPAIR 19
#define BOOST_PP_REPEAT_2_203(m,d) BOOST_PP_REPEAT_2_202(m, d) m(3, 202, d)
#define BOOST_PP_REPEAT_2_204(m,d) BOOST_PP_REPEAT_2_203(m, d) m(3, 203, d)
#define BOOST_PP_REPEAT_2_205(m,d) BOOST_PP_REPEAT_2_204(m, d) m(3, 204, d)
#define BOOST_PP_REPEAT_2_206(m,d) BOOST_PP_REPEAT_2_205(m, d) m(3, 205, d)
#define BOOST_PP_REPEAT_2_207(m,d) BOOST_PP_REPEAT_2_206(m, d) m(3, 206, d)
#define BOOST_PP_REPEAT_2_208(m,d) BOOST_PP_REPEAT_2_207(m, d) m(3, 207, d)
#define BOOST_PP_REPEAT_2_209(m,d) BOOST_PP_REPEAT_2_208(m, d) m(3, 208, d)
#define OBJ_id_GostR3410_94_cc OBJ_cryptocom,1L,5L,3L
#define X509_V_ERR_EMAIL_MISMATCH 63
#define _X86INTRIN_H_INCLUDED 
#define BOOST_PREPROCESSOR_CONTROL_EXPR_IIF_HPP 
#define SSL_TXT_IDEA "IDEA"
#define BOOST_PP_REPEAT_2_210(m,d) BOOST_PP_REPEAT_2_209(m, d) m(3, 209, d)
#define BOOST_PP_REPEAT_2_212(m,d) BOOST_PP_REPEAT_2_211(m, d) m(3, 211, d)
#define _SC_THREAD_PRIO_PROTECT _SC_THREAD_PRIO_PROTECT
#define BOOST_PP_REPEAT_2_215(m,d) BOOST_PP_REPEAT_2_214(m, d) m(3, 214, d)
#define TLS1_RFC_SRP_SHA_RSA_WITH_AES_128_CBC_SHA "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA"
#define TH_RST 0x04
#define BOOST_PP_REPEAT_2_218(m,d) BOOST_PP_REPEAT_2_217(m, d) m(3, 217, d)
#define BOOST_PP_REPEAT_2_219(m,d) BOOST_PP_REPEAT_2_218(m, d) m(3, 218, d)
#define NID_sendProxiedOwner 1030
#define _CMP_NEQ_OQ 0x0c
#define _CMP_NEQ_OS 0x1c
#define NID_setAttr_IssCap_T2 629
#define si_int _sifields._rt.si_sigval.sival_int
#define _GLIBCXX_HAVE_LIBINTL_H 1
#define _OSTREAM_INSERT_H 1
#define ASN1_i2d_fp_of_const(type,i2d,out,x) (ASN1_i2d_fp(CHECKED_I2D_OF(const type, i2d), out, CHECKED_PTR_OF(const type, x)))
#define TLSEXT_max_fragment_length_DISABLED 0
#define LN_friendlyName "friendlyName"
#define BOOST_PP_REPEAT_2_220(m,d) BOOST_PP_REPEAT_2_219(m, d) m(3, 219, d)
#define BOOST_PP_REPEAT_2_221(m,d) BOOST_PP_REPEAT_2_220(m, d) m(3, 220, d)
#define BOOST_PP_REPEAT_2_222(m,d) BOOST_PP_REPEAT_2_221(m, d) m(3, 221, d)
#define X509V3_F_SXNET_ADD_ID_ULONG 127
#define BOOST_PP_REPEAT_2_224(m,d) BOOST_PP_REPEAT_2_223(m, d) m(3, 223, d)
#define BOOST_PP_REPEAT_2_225(m,d) BOOST_PP_REPEAT_2_224(m, d) m(3, 224, d)
#define BOOST_PP_REPEAT_2_227(m,d) BOOST_PP_REPEAT_2_226(m, d) m(3, 226, d)
#define BOOST_PP_REPEAT_2_229(m,d) BOOST_PP_REPEAT_2_228(m, d) m(3, 228, d)
#define SSL_R_UNEXPECTED_CCS_MESSAGE 262
#define NID_sha512_224WithRSAEncryption 1145
#define _STL_LIST_H 1
#define JEMALLOC_ALLOCATOR 
#define XKU_SMIME 0x4
#define X509V3_F_SXNET_ADD_ID_INTEGER 126
#define SN_international_organizations "international-organizations"
#define BOOST_PP_REPEAT_2_233(m,d) BOOST_PP_REPEAT_2_232(m, d) m(3, 232, d)
#define BOOST_PP_REPEAT_2_234(m,d) BOOST_PP_REPEAT_2_233(m, d) m(3, 233, d)
#define BOOST_PP_REPEAT_2_235(m,d) BOOST_PP_REPEAT_2_234(m, d) m(3, 234, d)
#define BOOST_PP_REPEAT_2_236(m,d) BOOST_PP_REPEAT_2_235(m, d) m(3, 235, d)
#define BOOST_PP_REPEAT_2_237(m,d) BOOST_PP_REPEAT_2_236(m, d) m(3, 236, d)
#define _GLIBCXX_FULLY_DYNAMIC_STRING 0
#define LN_sendProxiedRouter "Send Proxied Router"
#define BOOST_PP_DEC_61 60
#define RLIMIT_DATA RLIMIT_DATA
#define SN_camellia_192_ofb128 "CAMELLIA-192-OFB"
#define TLS1_RFC_SRP_SHA_DSS_WITH_AES_256_CBC_SHA "TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA"
#define PF_SNA 22
#define BOOST_PP_DEC_63 62
#define SSL_F_SSL_GET_SERVER_CERT_INDEX 322
#define BOOST_PP_REPEAT_2_240(m,d) BOOST_PP_REPEAT_2_239(m, d) m(3, 239, d)
#define PEM_F_PEM_WRITE_PRIVATEKEY 139
#define BOOST_PP_REPEAT_2_243(m,d) BOOST_PP_REPEAT_2_242(m, d) m(3, 242, d)
#define BOOST_PP_REPEAT_2_244(m,d) BOOST_PP_REPEAT_2_243(m, d) m(3, 243, d)
#define BOOST_PP_REPEAT_2_246(m,d) BOOST_PP_REPEAT_2_245(m, d) m(3, 245, d)
#define BOOST_PP_REPEAT_2_248(m,d) BOOST_PP_REPEAT_2_247(m, d) m(3, 247, d)
#define BOOST_PP_REPEAT_2_249(m,d) BOOST_PP_REPEAT_2_248(m, d) m(3, 248, d)
#define X509_PCY_TREE_FAILURE -2
#define NID_ipsec4 750
#define _GLIBCXX_HAVE_READLINK 1
#define SN_brainpoolP512r1 "brainpoolP512r1"
#define F_EXLCK 4
#define NID_id_tc26_gost_3410_2012_512_constants 996
#define NID_setct_AuthRevResBaggage 529
#define NID_pilotAttributeSyntax 439
#define UINT_FAST64_WIDTH 64
#define THRIFT_IGNORE_ISSET_USE_WARNING_END 
#define SSL_F_SSL_SESSION_SET1_ID 423
#define BOOST_PP_REPEAT_2_251(m,d) BOOST_PP_REPEAT_2_250(m, d) m(3, 250, d)
#define BOOST_PP_REPEAT_2_252(m,d) BOOST_PP_REPEAT_2_251(m, d) m(3, 251, d)
#define BOOST_PP_REPEAT_2_253(m,d) BOOST_PP_REPEAT_2_252(m, d) m(3, 252, d)
#define BOOST_PP_REPEAT_2_254(m,d) BOOST_PP_REPEAT_2_253(m, d) m(3, 253, d)
#define BOOST_PP_REPEAT_2_255(m,d) BOOST_PP_REPEAT_2_254(m, d) m(3, 254, d)
#define BOOST_PP_REPEAT_2_256(m,d) BOOST_PP_REPEAT_2_255(m, d) m(3, 255, d)
#define __lwpval32(D2,D1,F) (__builtin_ia32_lwpval32 ((unsigned int) (D2), (unsigned int) (D1), (unsigned int) (F)))
#define SSL_KEY_UPDATE_NONE -1
#define NID_setct_CapTokenSeq 530
#define EVP_SignUpdate(a,b,c) EVP_DigestUpdate(a,b,c)
#define BOOST_PP_FOR_193_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(194, s) BOOST_PP_IIF(c, BOOST_PP_FOR_194, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(194, s), p, o, m)
#define NZERO 20
#define SSL3_CK_DHE_DSS_DES_192_CBC3_SHA 0x03000013
#define TLS1_3_CK_AES_128_CCM_SHA256 0x03001304
#define OPENSSL_INIT_LOAD_CRYPTO_STRINGS 0x00000002L
#define BOOST_MPL_VECTOR_AUX_CLEAR_HPP_INCLUDED 
#define BOOST_PP_REPEAT_1(c,m,d) BOOST_PP_REPEAT_1_I(c, m, d)
#define MS_NOSEC (1<<28)
#define EC_R_NOT_A_NIST_PRIME 135
#define _PSTL_PRAGMA(x) _Pragma(#x)
#define X509_V_ERR_INVALID_POLICY_EXTENSION 42
#define BIO_C_SET_MD_CTX 148
#define OBJ_setAttr_PGWYcap OBJ_set_attr,1L
#define BOOST_PP_FOR_151(s,p,o,m) BOOST_PP_FOR_151_C(BOOST_PP_BOOL(p(152, s)), s, p, o, m)
#define SN_brainpoolP512t1 "brainpoolP512t1"
#define OBJ_pbe_WithSHA1And40BitRC2_CBC OBJ_pkcs12_pbeids,6L
#define X509_VP_FLAG_RESET_FLAGS 0x4
#define BOOST_PP_INTERCEPT_117 
#define BOOST_PP_WHILE_131_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_132, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(132, s))
#define NID_setct_CertInqReqTBS 566
#define SCHAR_MIN (-SCHAR_MAX - 1)
#define EVP_R_EXPECTING_A_SIPHASH_KEY 175
#define ENOMSG 42
#define NID_hmac_sha3_384 1104
#define BOOST_PP_INTERCEPT_99 
#define _CMP_NEQ_UQ 0x04
#define _CMP_NEQ_US 0x14
#define SN_id_smime_alg_ESDHwithRC2 "id-smime-alg-ESDHwithRC2"
#define BOOST_PP_FOR_155(s,p,o,m) BOOST_PP_FOR_155_C(BOOST_PP_BOOL(p(156, s)), s, p, o, m)
#define SSL_R_INVALID_SESSION_ID 999
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110001 (0)(0)(1)(1)(0)(0)(0)(1),
#define EVENT__HAVE_GETNAMEINFO 1
#define BOOST_PP_LIST_FOLD_RIGHT_176(o,s,l) BOOST_PP_LIST_FOLD_LEFT_176(o, s, BOOST_PP_LIST_REVERSE_D(176, l))
#define BOOST_PP_FOR_156(s,p,o,m) BOOST_PP_FOR_156_C(BOOST_PP_BOOL(p(157, s)), s, p, o, m)
#define OBJ_setct_CredRevResData OBJ_set_ctype,37L
#define TLS1_FINISH_MAC_LENGTH 12
#define IMPLEMENT_PEM_read(name,type,str,asn1) IMPLEMENT_PEM_read_bio(name, type, str, asn1) IMPLEMENT_PEM_read_fp(name, type, str, asn1)
#define BOOST_PP_FOR_157(s,p,o,m) BOOST_PP_FOR_157_C(BOOST_PP_BOOL(p(158, s)), s, p, o, m)
#define _mm_fnmsub_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, -(B), -(C), R)
#define TLSEXT_max_fragment_length_4096 4
#define NID_X9_62_c2pnb163v1 684
#define NID_X9_62_c2pnb163v2 685
#define NID_X9_62_c2pnb163v3 686
#define ASN1_R_NO_SIG_CONTENT_TYPE 212
#define BOOST_PREPROCESSOR_SEQ_SIZE_HPP 
#define LN_camellia_128_gcm "camellia-128-gcm"
#define SN_id_tc26_gost_3410_2012_256_paramSetA "id-tc26-gost-3410-2012-256-paramSetA"
#define BOOST_PP_WHILE_240_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_241, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(241, s))
#define BIO_should_retry(a) BIO_test_flags(a, BIO_FLAGS_SHOULD_RETRY)
#define TCPOPT_TSTAMP_HDR (TCPOPT_NOP<<24|TCPOPT_NOP<<16|TCPOPT_TIMESTAMP<<8|TCPOLEN_TIMESTAMP)
#define OBJ_pkcs9_challengePassword OBJ_pkcs9,7L
#define BOOST_PP_SEQ_FOLD_LEFT_212(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_212(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __DBL_DIG__ 15
#define EVP_CTRL_CCM_SET_TAG EVP_CTRL_AEAD_SET_TAG
#define NID_caseIgnoreIA5StringSyntax 443
#define TCP_REPAIR_OFF 0
#define BOOST_CONTEXT_CALLDECL 
#define BOOST_PP_REPEAT_3_48(m,d) BOOST_PP_REPEAT_3_47(m, d) m(4, 47, d)
#define BOOST_PP_INTERCEPT_199 
#define LN_ISO_US "ISO US Member Body"
#define _mm256_permutex_pd(X,M) ((__m256d) __builtin_ia32_permdf256_mask ((__v4df)(__m256d)(X), (int)(M), (__v4df)(__m256d) _mm256_undefined_pd (), (__mmask8)-1))
#define RSA_FLAG_NO_BLINDING 0x0080
#define CRYPTOerr(f,r) ERR_PUT_error(ERR_LIB_CRYPTO,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define FMT_CONSTEXPR_DECL constexpr
#define BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED 
#define SO_SECURITY_ENCRYPTION_TRANSPORT 23
#define EC_F_PKEY_ECX_DERIVE 269
#define BOOST_MPL_VECTOR_AUX_FRONT_HPP_INCLUDED 
#define BOOST_PP_INTERCEPT_35 
#define SSL_F_DTLS1_BUFFER_RECORD 247
#define NID_id_smime_aa_ets_signerAttr 229
#define DH_CHECK_P_NOT_SAFE_PRIME 0x02
#define RSA_R_DATA_TOO_LARGE 109
#define BOOST_PP_SEQ_ELEM_31(_) BOOST_PP_SEQ_ELEM_30
#define FOLLY_ERASE_TRYCATCH FOLLY_ERASE
#define CRYPTO_MEM_CHECK_ENABLE 0x2
#define BOOST_PP_SEQ_FOLD_LEFT_I_11(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_12, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(12, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BIO_get_close(b) (int)BIO_ctrl(b,BIO_CTRL_GET_CLOSE,0,NULL)
#define BOOST_PP_SEQ_FOLD_LEFT_I_68(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_69, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(69, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_rc2_cbc "rc2-cbc"
#define BOOST_PP_SLOT_OFFSET_2(x) BOOST_PP_SLOT_OFFSET_3(x) % 10UL
#define BOOST_PP_SLOT_OFFSET_3(x) BOOST_PP_SLOT_OFFSET_4(x) % 100UL
#define BOOST_PP_SLOT_OFFSET_4(x) BOOST_PP_SLOT_OFFSET_5(x) % 1000UL
#define BOOST_PP_SLOT_OFFSET_5(x) BOOST_PP_SLOT_OFFSET_6(x) % 10000UL
#define _mm_mask_shrdi_epi16(A,B,C,D,E) ((__m128i) __builtin_ia32_vpshrd_v8hi_mask ((__v8hi)(__m128i)(C), (__v8hi)(__m128i)(D), (int)(E), (__v8hi)(__m128i)(A), (__mmask8)(B)))
#define NID_setCext_tunneling 612
#define _POSIX_SOURCE 1
#define BOOST_PP_INTERCEPT_37 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_141 141
#define OBJ_id_GostR3411_94_CryptoProParamSet OBJ_cryptopro,30L,1L
#define _mm256_inserti64x2(X,Y,C) ((__m256i) __builtin_ia32_inserti64x2_256_mask ((__v4di)(__m256i) (X), (__v2di)(__m128i) (Y), (int) (C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000011 (0)(0)(0)(0)(0)(0)(1)(1),
#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB 75
#define ASN1_F_ASN1_TYPE_GET_OCTETSTRING 135
#define LN_secretBag "secretBag"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_144 144
#define BOOST_PP_FOR_200(s,p,o,m) BOOST_PP_FOR_200_C(BOOST_PP_BOOL(p(201, s)), s, p, o, m)
#define SN_netscape_ca_policy_url "nsCaPolicyUrl"
#define BOOST_PP_REPEAT_1_40(m,d) BOOST_PP_REPEAT_1_39(m, d) m(2, 39, d)
#define NID_id_tc26_sign_constants 995
#define _mm_mask_shrdi_epi32(A,B,C,D,E) ((__m128i) __builtin_ia32_vpshrd_v4si_mask ((__v4si)(__m128i)(C), (__v4si)(__m128i)(D), (int)(E), (__v4si)(__m128i)(A), (__mmask8)(B)))
#define BOOST_MPL_AUX_CONFIG_CTPS_HPP_INCLUDED 
#define SO_LOCK_FILTER 44
#define ASN1_R_ILLEGAL_BOOLEAN 176
#define PRIxMAX __PRI64_PREFIX "x"
#define OBJ_caseIgnoreIA5StringSyntax OBJ_pilotAttributeSyntax,5L
#define SSL_CTRL_CLEAR_CERT_FLAGS 100
#define _mm_mask_i32scatter_pd(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv2df ((void *) (ADDR), (__mmask8) (MASK), (__v4si)(__m128i) (INDEX), (__v2df)(__m128d) (V1), (int) (SCALE))
#define BOOST_PP_LIST_FOLD_LEFT_230(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_231, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(231, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_INTERCEPT_201 
#define BOOST_PP_INTERCEPT_202 
#define _mm_mask_i32scatter_ps(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv4sf ((void *) (ADDR), (__mmask8) (MASK), (__v4si)(__m128i) (INDEX), (__v4sf)(__m128) (V1), (int) (SCALE))
#define BOOST_PP_INTERCEPT_204 
#define BOOST_PP_INTERCEPT_205 
#define NID_seed_ofb128 778
#define BOOST_PP_INTERCEPT_207 
#define BOOST_PP_INTERCEPT_208 
#define BOOST_PP_INTERCEPT_209 
#define SN_subject_key_identifier "subjectKeyIdentifier"
#define LN_rc4_40 "rc4-40"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_100(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_101(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_104(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_107(p,o,s) 0
#define _mm_mask_fnmadd_round_sd(A,U,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_mask (A, -(B), C, U, R)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_109(p,o,s) 0
#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 1
#define BOOST_PP_REPEAT_1_46(m,d) BOOST_PP_REPEAT_1_45(m, d) m(2, 45, d)
#define _mm_mask_fnmadd_round_ss(A,U,B,C,R) (__m128) __builtin_ia32_vfmaddss3_mask (A, -(B), C, U, R)
#define SSL_ST_READ_BODY 0xF1
#define SOME_KIND_OF_PLOG_EVERY_N(severity,n,what_to_do) static int LOG_OCCURRENCES = 0, LOG_OCCURRENCES_MOD_N = 0; ++LOG_OCCURRENCES; if (++LOG_OCCURRENCES_MOD_N > n) LOG_OCCURRENCES_MOD_N -= n; if (LOG_OCCURRENCES_MOD_N == 1) google::ErrnoLogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, LOG_OCCURRENCES, &what_to_do).stream()
#define BOOST_PP_REPEAT_1_47(m,d) BOOST_PP_REPEAT_1_46(m, d) m(2, 46, d)
#define BOOST_PP_INTERCEPT_210 
#define BOOST_PP_INTERCEPT_211 
#define BOOST_PP_INTERCEPT_214 
#define BOOST_PP_INTERCEPT_215 
#define BOOST_PP_INTERCEPT_217 
#define BOOST_PP_INTERCEPT_218 
#define BOOST_PP_INTERCEPT_219 
#define BOOST_PP_REPEAT_1_48(m,d) BOOST_PP_REPEAT_1_47(m, d) m(2, 47, d)
#define BOOST_PP_LIST_FOR_EACH(macro,data,list) BOOST_PP_LIST_FOR_EACH_I(BOOST_PP_LIST_FOR_EACH_O, (macro, data), list)
#define PTHREAD_CANCEL_DEFERRED PTHREAD_CANCEL_DEFERRED
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_110(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_113(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_115(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_117(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_118(p,o,s) 0
#define DH_F_PKEY_DH_CTRL_STR 120
#define NID_md5WithRSAEncryption 8
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 "ECDHE-ECDSA-AES128-GCM-SHA256"
#define _mm_mask_gf2p8affineinv_epi64_epi8(A,B,C,D,E) ((__m128i) __builtin_ia32_vgf2p8affineinvqb_v16qi_mask( (__v16qi)(__m128i)(C), (__v16qi)(__m128i)(D), (int)(E), (__v16qi)(__m128i)(A), (__mmask16)(B)))
#define _kshiftri_mask16(X,Y) ((__mmask16) __builtin_ia32_kshiftrihi ((__mmask16)(X), (__mmask8)(Y)))
#define UINT_LEAST8_WIDTH 8
#define _MKNOD_VER_LINUX 0
#define BOOST_PP_INTERCEPT_223 
#define BOOST_PP_INTERCEPT_224 
#define BOOST_PP_INTERCEPT_225 
#define BOOST_PP_INTERCEPT_226 
#define BOOST_PP_INTERCEPT_227 
#define BOOST_PP_INTERCEPT_228 
#define BOOST_PP_INTERCEPT_229 
#define _mm_mask_shrdi_epi64(A,B,C,D,E) ((__m128i) __builtin_ia32_vpshrd_v2di_mask ((__v2di)(__m128i)(C), (__v2di)(__m128i)(D), (int)(E), (__v2di)(__m128i)(A), (__mmask8)(B)))
#define SN_id_pkix_mod "id-pkix-mod"
#define BIO_C_SET_FILE_PTR 106
#define NID_sha3_384 1098
#define _IOC_TYPECHECK(t) (sizeof(t))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_120(p,o,s) 0
#define BOOST_PP_FOR_125_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(126, s) BOOST_PP_IIF(c, BOOST_PP_FOR_126, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(126, s), p, o, m)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_123(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_124(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_125(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_126(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_127(p,o,s) 0
#define BOOST_PP_REPEAT_1_127(m,d) BOOST_PP_REPEAT_1_126(m, d) m(2, 126, d)
#define BOOST_MPL_JOINT_VIEW_HPP_INCLUDED 
#define NAN (__builtin_nanf (""))
#define _LARGEFILE64_SOURCE 1
#define FOLLY_HAVE_MALLOC_USABLE_SIZE 1
#define OPENSSL_assert(e) (void)((e) ? 0 : (OPENSSL_die("assertion failed: " #e, OPENSSL_FILE, OPENSSL_LINE), 1))
#define SSL_NOTHING 1
#define BOOST_PREPROCESSOR_DETAIL_IS_EMPTY_HPP 
#define SN_INN "INN"
#define NID_id_smime_aa_ets_CertificateRefs 232
#define BOOST_PP_INTERCEPT_231 
#define BOOST_PP_INTERCEPT_232 
#define BOOST_PP_INTERCEPT_233 
#define BOOST_PP_INTERCEPT_234 
#define BOOST_PP_INTERCEPT_235 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_250 250
#define BOOST_PP_INTERCEPT_237 
#define SN_id_it_origPKIMessage "id-it-origPKIMessage"
#define _GLIBCXX_DEBUG_ASSERTIONS_H 1
#define _mm_mask_cmp_sd_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), M,_MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_130(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_131(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_134(p,o,s) 0
#define X509_TRUST_REJECTED 2
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_136(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_137(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_138(p,o,s) 0
#define BOOST_EXCEPTION_274DA366004E11DCB1DDFE2E56D89593 
#define BOOST_PP_WHILE_59_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_60, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(60, s))
#define SSL_get_extms_support(s) SSL_ctrl((s),SSL_CTRL_GET_EXTMS_SUPPORT,0,NULL)
#define BOOST_PP_INTERCEPT_243 
#define DH_R_CHECK_INVALID_Q_VALUE 116
#define __cpp_lib_span 202002L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_252 252
#define ASN1_F_D2I_PRIVATEKEY 154
#define BOOST_GCC_VERSION_WORKAROUND_GUARD 0
#define SKM_DEFINE_STACK_OF(t1,t2,t3) STACK_OF(t1); typedef int (*sk_ ##t1 ##_compfunc)(const t3 * const *a, const t3 *const *b); typedef void (*sk_ ##t1 ##_freefunc)(t3 *a); typedef t3 * (*sk_ ##t1 ##_copyfunc)(const t3 *a); static ossl_unused ossl_inline int sk_ ##t1 ##_num(const STACK_OF(t1) *sk) { return OPENSSL_sk_num((const OPENSSL_STACK *)sk); } static ossl_unused ossl_inline t2 *sk_ ##t1 ##_value(const STACK_OF(t1) *sk, int idx) { return (t2 *)OPENSSL_sk_value((const OPENSSL_STACK *)sk, idx); } static ossl_unused ossl_inline STACK_OF(t1) *sk_ ##t1 ##_new(sk_ ##t1 ##_compfunc compare) { return (STACK_OF(t1) *)OPENSSL_sk_new((OPENSSL_sk_compfunc)compare); } static ossl_unused ossl_inline STACK_OF(t1) *sk_ ##t1 ##_new_null(void) { return (STACK_OF(t1) *)OPENSSL_sk_new_null(); } static ossl_unused ossl_inline STACK_OF(t1) *sk_ ##t1 ##_new_reserve(sk_ ##t1 ##_compfunc compare, int n) { return (STACK_OF(t1) *)OPENSSL_sk_new_reserve((OPENSSL_sk_compfunc)compare, n); } static ossl_unused ossl_inline int sk_ ##t1 ##_reserve(STACK_OF(t1) *sk, int n) { return OPENSSL_sk_reserve((OPENSSL_STACK *)sk, n); } static ossl_unused ossl_inline void sk_ ##t1 ##_free(STACK_OF(t1) *sk) { OPENSSL_sk_free((OPENSSL_STACK *)sk); } static ossl_unused ossl_inline void sk_ ##t1 ##_zero(STACK_OF(t1) *sk) { OPENSSL_sk_zero((OPENSSL_STACK *)sk); } static ossl_unused ossl_inline t2 *sk_ ##t1 ##_delete(STACK_OF(t1) *sk, int i) { return (t2 *)OPENSSL_sk_delete((OPENSSL_STACK *)sk, i); } static ossl_unused ossl_inline t2 *sk_ ##t1 ##_delete_ptr(STACK_OF(t1) *sk, t2 *ptr) { return (t2 *)OPENSSL_sk_delete_ptr((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_unused ossl_inline int sk_ ##t1 ##_push(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_push((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_unused ossl_inline int sk_ ##t1 ##_unshift(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_unshift((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_unused ossl_inline t2 *sk_ ##t1 ##_pop(STACK_OF(t1) *sk) { return (t2 *)OPENSSL_sk_pop((OPENSSL_STACK *)sk); } static ossl_unused ossl_inline t2 *sk_ ##t1 ##_shift(STACK_OF(t1) *sk) { return (t2 *)OPENSSL_sk_shift((OPENSSL_STACK *)sk); } static ossl_unused ossl_inline void sk_ ##t1 ##_pop_free(STACK_OF(t1) *sk, sk_ ##t1 ##_freefunc freefunc) { OPENSSL_sk_pop_free((OPENSSL_STACK *)sk, (OPENSSL_sk_freefunc)freefunc); } static ossl_unused ossl_inline int sk_ ##t1 ##_insert(STACK_OF(t1) *sk, t2 *ptr, int idx) { return OPENSSL_sk_insert((OPENSSL_STACK *)sk, (const void *)ptr, idx); } static ossl_unused ossl_inline t2 *sk_ ##t1 ##_set(STACK_OF(t1) *sk, int idx, t2 *ptr) { return (t2 *)OPENSSL_sk_set((OPENSSL_STACK *)sk, idx, (const void *)ptr); } static ossl_unused ossl_inline int sk_ ##t1 ##_find(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_find((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_unused ossl_inline int sk_ ##t1 ##_find_ex(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_find_ex((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_unused ossl_inline void sk_ ##t1 ##_sort(STACK_OF(t1) *sk) { OPENSSL_sk_sort((OPENSSL_STACK *)sk); } static ossl_unused ossl_inline int sk_ ##t1 ##_is_sorted(const STACK_OF(t1) *sk) { return OPENSSL_sk_is_sorted((const OPENSSL_STACK *)sk); } static ossl_unused ossl_inline STACK_OF(t1) * sk_ ##t1 ##_dup(const STACK_OF(t1) *sk) { return (STACK_OF(t1) *)OPENSSL_sk_dup((const OPENSSL_STACK *)sk); } static ossl_unused ossl_inline STACK_OF(t1) *sk_ ##t1 ##_deep_copy(const STACK_OF(t1) *sk, sk_ ##t1 ##_copyfunc copyfunc, sk_ ##t1 ##_freefunc freefunc) { return (STACK_OF(t1) *)OPENSSL_sk_deep_copy((const OPENSSL_STACK *)sk, (OPENSSL_sk_copyfunc)copyfunc, (OPENSSL_sk_freefunc)freefunc); } static ossl_unused ossl_inline sk_ ##t1 ##_compfunc sk_ ##t1 ##_set_cmp_func(STACK_OF(t1) *sk, sk_ ##t1 ##_compfunc compare) { return (sk_ ##t1 ##_compfunc)OPENSSL_sk_set_cmp_func((OPENSSL_STACK *)sk, (OPENSSL_sk_compfunc)compare); }
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_140(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_141(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_142(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_144(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_146(p,o,s) 0
#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 "DHE-DSS-CAMELLIA128-SHA256"
#define UINT64_MAX (__UINT64_C(18446744073709551615))
#define TMP_MAX 238328
#define BOOST_PP_FOR_234_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(235, s) BOOST_PP_IIF(c, BOOST_PP_FOR_235, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(235, s), p, o, m)
#define OPENSSL_VERSION_TEXT "OpenSSL 1.1.1k  25 Mar 2021"
#define SO_EE_ORIGIN_ZEROCOPY 5
#define BOOST_PP_INTERCEPT_250 
#define BOOST_PP_INTERCEPT_251 
#define BOOST_PP_INTERCEPT_253 
#define LN_uacurve0 "DSTU curve 0"
#define LN_uacurve1 "DSTU curve 1"
#define LN_uacurve2 "DSTU curve 2"
#define LN_uacurve3 "DSTU curve 3"
#define LN_uacurve4 "DSTU curve 4"
#define LN_uacurve5 "DSTU curve 5"
#define LN_uacurve6 "DSTU curve 6"
#define LN_uacurve7 "DSTU curve 7"
#define LN_uacurve8 "DSTU curve 8"
#define LN_uacurve9 "DSTU curve 9"
#define OBJ_sect113r1 OBJ_secg_ellipticCurve,4L
#define OBJ_sect113r2 OBJ_secg_ellipticCurve,5L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_150(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_151(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_152(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_153(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_154(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_155(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_157(p,o,s) 0
#define SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG 279
#define FS_IOC32_SETVERSION _IOW('v', 2, int)
#define NID_wap_wsg_idm_ecid_wtls10 743
#define NID_wap_wsg_idm_ecid_wtls11 744
#define NID_wap_wsg_idm_ecid_wtls12 745
#define DSA_F_DSA_BUILTIN_PARAMGEN2 126
#define __EXTENSIONS__ 1
#define PEM_R_PROBLEMS_GETTING_PASSWORD 109
#define _SC_TRACE_EVENT_FILTER _SC_TRACE_EVENT_FILTER
#define FOLLY_HAVE_LIBUNWIND 1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_160(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_161(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_164(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_165(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_166(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_167(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_168(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_169(p,o,s) 0
#define SO_TIMESTAMPING_OLD 37
#define _SYS_RESOURCE_H 1
#define OBJ_X9_62_characteristic_two_field OBJ_X9_62_id_fieldType,2L
#define BOOST_PP_WHILE_198_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_199, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(199, s))
#define FSCRYPT_KEY_DESCRIPTOR_SIZE 8
#define BOOST_PP_DEC_73 72
#define PF_UNIX PF_LOCAL
#define SN_dsaWithSHA1 "DSA-SHA1"
#define NID_id_qcs_pkixQCSyntax_v1 359
#define BIO_F_BIO_LISTEN 139
#define BOOST_PP_REPEAT_2_89(m,d) BOOST_PP_REPEAT_2_88(m, d) m(3, 88, d)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_172(p,o,s) 0
#define TLS1_TXT_DHE_PSK_WITH_AES_256_CCM "DHE-PSK-AES256-CCM"
#define EVENT2_EVENT_CONFIG_H_INCLUDED_ 
#define LN_id_GostR3411_94_prf "GOST R 34.11-94 PRF"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_178(p,o,s) 0
#define EVP_PKEY_CTX_get_rsa_padding(ctx,ppad) RSA_pkey_ctx_ctrl(ctx, -1, EVP_PKEY_CTRL_GET_RSA_PADDING, 0, ppad)
#define __DEC64_MIN__ 1E-383DD
#define SN_id_smime_ct_contentCollection "id-smime-ct-contentCollection"
#define NID_grasshopper_ecb 1012
#define BOOST_PP_SEQ_ELEM_141(_) BOOST_PP_SEQ_ELEM_140
#define EVP_CTRL_COPY 0x8
#define SSL_F_TLS_PROCESS_CERT_STATUS 362
#define OBJ_id_regCtrl_pkiArchiveOptions OBJ_id_regCtrl,4L
#define FOLLY_ASYNC_STACK_FRAME_POINTER() __builtin_frame_address(0)
#define TLS_CT_RSA_SIGN 1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_180(p,o,s) 0
#define BOOST_PP_LIST_FIRST_D(list) BOOST_PP_LIST_FIRST_I list
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_182(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_185(p,o,s) 0
#define BOOST_PP_LIST_FIRST_I(head,tail) head
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_187(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_188(p,o,s) 0
#define _mm512_mask_cvt_roundepu64_pd(W,U,A,B) ((__m512d)__builtin_ia32_cvtuqq2pd512_mask ((__v8di)(A), (W), (U), (B)))
#define BIO_C_GET_BUF_MEM_PTR 115
#define EVP_CCM_TLS_FIXED_IV_LEN 4
#define _mm_prefetch(P,I) __builtin_prefetch ((P), ((I & 0x4) >> 2), (I & 0x3))
#define BOOST_PP_NODE_200(p) BOOST_PP_IIF(p(200), BOOST_PP_NODE_196, BOOST_PP_NODE_204)
#define BOOST_PP_NODE_201(p) BOOST_PP_IIF(p(201), 201, 202)
#define BOOST_PP_NODE_202(p) BOOST_PP_IIF(p(202), BOOST_PP_NODE_201, BOOST_PP_NODE_203)
#define BOOST_PP_NODE_203(p) BOOST_PP_IIF(p(203), 203, 204)
#define BOOST_PP_NODE_204(p) BOOST_PP_IIF(p(204), BOOST_PP_NODE_202, BOOST_PP_NODE_206)
#define BOOST_PP_NODE_205(p) BOOST_PP_IIF(p(205), 205, 206)
#define BOOST_PP_NODE_206(p) BOOST_PP_IIF(p(206), BOOST_PP_NODE_205, BOOST_PP_NODE_207)
#define BOOST_PP_NODE_208(p) BOOST_PP_IIF(p(208), BOOST_PP_NODE_200, BOOST_PP_NODE_216)
#define _GLIBCXX_REFWRAP_H 1
#define SSL_F_TLS1_CHANGE_CIPHER_STATE 209
#define LN_postalCode "postalCode"
#define __GTHREADS_CXX0X 1
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_193(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_194(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_195(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_196(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_197(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_198(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_199(p,o,s) 0
#define SN_id_tc26_cipher_gostr3412_2015_magma "id-tc26-cipher-gostr3412-2015-magma"
#define GOOGLE_STRIP_LOG 0
#define BOOST_PP_NODE_210(p) BOOST_PP_IIF(p(210), BOOST_PP_NODE_209, BOOST_PP_NODE_211)
#define BOOST_PP_NODE_211(p) BOOST_PP_IIF(p(211), 211, 212)
#define BOOST_PP_NODE_212(p) BOOST_PP_IIF(p(212), BOOST_PP_NODE_210, BOOST_PP_NODE_214)
#define BOOST_PP_NODE_213(p) BOOST_PP_IIF(p(213), 213, 214)
#define BOOST_PP_NODE_214(p) BOOST_PP_IIF(p(214), BOOST_PP_NODE_213, BOOST_PP_NODE_215)
#define BOOST_PP_NODE_215(p) BOOST_PP_IIF(p(215), 215, 216)
#define BOOST_PP_FOR_85_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(86, s) BOOST_PP_IIF(c, BOOST_PP_FOR_86, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(86, s), p, o, m)
#define BOOST_PP_NODE_219(p) BOOST_PP_IIF(p(219), 219, 220)
#define __DEC32_MAX__ 9.999999E96DF
#define __GLIBC_USE_IEC_60559_BFP_EXT 1
#define BOOST_PP_WHILE_180_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_181, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(181, s))
#define BN_F_BN_GF2M_MOD 131
#define BOOST_PP_FOR_164(s,p,o,m) BOOST_PP_FOR_164_C(BOOST_PP_BOOL(p(165, s)), s, p, o, m)
#define SSL_R_TOO_MANY_KEY_UPDATES 132
#define CPU_SETSIZE __CPU_SETSIZE
#define BOOST_PP_SEQ_FOLD_LEFT_I_30(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_31, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(31, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _POSIX_NAME_MAX 14
#define EVP_PKEY_CTRL_DH_PARAMGEN_TYPE (EVP_PKEY_ALG_CTRL + 5)
#define _GLIBCXX_USE_CHAR8_T 1
#define SSL_F_SSL_CREATE_CIPHER_LIST 166
#define BOOST_PP_NODE_220(p) BOOST_PP_IIF(p(220), BOOST_PP_NODE_218, BOOST_PP_NODE_222)
#define BOOST_PP_NODE_221(p) BOOST_PP_IIF(p(221), 221, 222)
#define BOOST_PP_NODE_222(p) BOOST_PP_IIF(p(222), BOOST_PP_NODE_221, BOOST_PP_NODE_223)
#define BOOST_PP_NODE_223(p) BOOST_PP_IIF(p(223), 223, 224)
#define BOOST_PP_NODE_224(p) BOOST_PP_IIF(p(224), BOOST_PP_NODE_208, BOOST_PP_NODE_240)
#define BOOST_PP_NODE_225(p) BOOST_PP_IIF(p(225), 225, 226)
#define BOOST_PP_NODE_226(p) BOOST_PP_IIF(p(226), BOOST_PP_NODE_225, BOOST_PP_NODE_227)
#define BOOST_PP_NODE_227(p) BOOST_PP_IIF(p(227), 227, 228)
#define BOOST_PP_NODE_228(p) BOOST_PP_IIF(p(228), BOOST_PP_NODE_226, BOOST_PP_NODE_230)
#define BOOST_PP_NODE_229(p) BOOST_PP_IIF(p(229), 229, 230)
#define NID_setct_AuthRevResData 542
#define SSL_R_SSL_NEGATIVE_LENGTH 372
#define BOOST_PP_LIST_FOLD_LEFT_10(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_11, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(11, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_FOLD_LEFT_I_31(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_32, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(32, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SSL_R_COOKIE_GEN_CALLBACK_FAILURE 400
#define BOOST_IS_BASE_OF(T,U) (__is_base_of(T,U) && !is_same<T,U>::value)
#define SN_id_smime_cd_ldap "id-smime-cd-ldap"
#define RSA_DEFAULT_PRIME_NUM 2
#define BIO_R_UNAVAILABLE_IP_FAMILY 145
#define BOOST_MPL_ADVANCE_FWD_HPP_INCLUDED 
#define BOOST_PP_NODE_230(p) BOOST_PP_IIF(p(230), BOOST_PP_NODE_229, BOOST_PP_NODE_231)
#define BOOST_PP_NODE_231(p) BOOST_PP_IIF(p(231), 231, 232)
#define BOOST_PP_NODE_232(p) BOOST_PP_IIF(p(232), BOOST_PP_NODE_228, BOOST_PP_NODE_236)
#define BOOST_PP_NODE_233(p) BOOST_PP_IIF(p(233), 233, 234)
#define BOOST_PP_NODE_234(p) BOOST_PP_IIF(p(234), BOOST_PP_NODE_233, BOOST_PP_NODE_235)
#define BOOST_PP_NODE_235(p) BOOST_PP_IIF(p(235), 235, 236)
#define BOOST_PP_NODE_236(p) BOOST_PP_IIF(p(236), BOOST_PP_NODE_234, BOOST_PP_NODE_238)
#define BOOST_PP_NODE_237(p) BOOST_PP_IIF(p(237), 237, 238)
#define BOOST_PP_NODE_238(p) BOOST_PP_IIF(p(238), BOOST_PP_NODE_237, BOOST_PP_NODE_239)
#define BOOST_PP_NODE_239(p) BOOST_PP_IIF(p(239), 239, 240)
#define BOOST_INTRUSIVE_PERFECT_FORWARDING 
#define _mm512_maskz_roundscale_round_pd(A,B,C,R) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd(), (__mmask8)(A), R))
#define BOOST_PP_WHILE_200_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_201, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(201, s))
#define OBJ_ms_smartcard_login 1L,3L,6L,1L,4L,1L,311L,20L,2L,2L
#define BOOST_PP_LIST_FOLD_LEFT_15(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_16, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(16, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define __FLT32X_HAS_INFINITY__ 1
#define UINT32_WIDTH 32
#define X509_V_FLAG_EXTENDED_CRL_SUPPORT 0x1000
#define __INT32_MAX__ 0x7fffffff
#define BOOST_PP_NODE_240(p) BOOST_PP_IIF(p(240), BOOST_PP_NODE_232, BOOST_PP_NODE_248)
#define BOOST_PP_NODE_242(p) BOOST_PP_IIF(p(242), BOOST_PP_NODE_241, BOOST_PP_NODE_243)
#define BOOST_PP_NODE_243(p) BOOST_PP_IIF(p(243), 243, 244)
#define BOOST_PP_NODE_244(p) BOOST_PP_IIF(p(244), BOOST_PP_NODE_242, BOOST_PP_NODE_246)
#define BOOST_PP_NODE_245(p) BOOST_PP_IIF(p(245), 245, 246)
#define BOOST_PP_NODE_246(p) BOOST_PP_IIF(p(246), BOOST_PP_NODE_245, BOOST_PP_NODE_247)
#define BOOST_PP_NODE_248(p) BOOST_PP_IIF(p(248), BOOST_PP_NODE_244, BOOST_PP_NODE_252)
#define BOOST_PP_NODE_249(p) BOOST_PP_IIF(p(249), 249, 250)
#define ASN1_F_A2I_ASN1_INTEGER 102
#define BN_F_BN_LSHIFT 145
#define BOOST_PP_LIST_FOLD_LEFT_17(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_18, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(18, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm512_permutex_pd(X,M) ((__m512d) __builtin_ia32_permdf512_mask ((__v8df)(__m512d)(X), (int)(M), (__v8df)(__m512d)_mm512_undefined_pd(), (__mmask8)-1))
#define SSL_R_INVALID_SRP_USERNAME 357
#define BOOST_PP_FOR_237_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(238, s) BOOST_PP_IIF(c, BOOST_PP_FOR_238, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(238, s), p, o, m)
#define X509_PCY_TREE_EXPLICIT 4
#define BOOST_PP_SEQ_ELEM_100(_) BOOST_PP_SEQ_ELEM_99
#define BOOST_PP_SEQ_ELEM_101(_) BOOST_PP_SEQ_ELEM_100
#define BOOST_PP_SEQ_ELEM_103(_) BOOST_PP_SEQ_ELEM_102
#define BOOST_PP_SEQ_ELEM_104(_) BOOST_PP_SEQ_ELEM_103
#define BOOST_PP_LIST_FOLD_LEFT_19(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_20, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(20, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_ELEM_106(_) BOOST_PP_SEQ_ELEM_105
#define BOOST_PP_SEQ_ELEM_107(_) BOOST_PP_SEQ_ELEM_106
#define BOOST_PP_SEQ_ELEM_109(_) BOOST_PP_SEQ_ELEM_108
#define SSL_F_TLS_PARSE_STOC_KEY_SHARE 445
#define OBJ_roomNumber OBJ_pilotAttributeType,6L
#define BOOST_PP_NODE_250(p) BOOST_PP_IIF(p(250), BOOST_PP_NODE_249, BOOST_PP_NODE_251)
#define BOOST_PP_NODE_251(p) BOOST_PP_IIF(p(251), 251, 252)
#define BOOST_PP_NODE_252(p) BOOST_PP_IIF(p(252), BOOST_PP_NODE_250, BOOST_PP_NODE_254)
#define BOOST_PP_NODE_253(p) BOOST_PP_IIF(p(253), 253, 254)
#define BOOST_PP_NODE_254(p) BOOST_PP_IIF(p(254), BOOST_PP_NODE_253, BOOST_PP_NODE_255)
#define BOOST_PP_NODE_255(p) BOOST_PP_IIF(p(255), 255, 256)
#define PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE 104
#define CTX_TEST 0x1
#define SN_sect571r1 "sect571r1"
#define BOOST_PP_REPEAT_2_154(m,d) BOOST_PP_REPEAT_2_153(m, d) m(3, 153, d)
#define SYS_F_STAT 22
#define _GLIBCXX_SYMVER_GNU 1
#define TLS1_TXT_RSA_WITH_SEED_SHA "SEED-SHA"
#define BOOST_TT_IS_CONVERTIBLE_HPP_INCLUDED 
#define BOOST_PP_SEQ_ELEM_112(_) BOOST_PP_SEQ_ELEM_111
#define BOOST_PP_SEQ_ELEM_115(_) BOOST_PP_SEQ_ELEM_114
#define BOOST_PP_WHILE_196_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_197, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(197, s))
#define BOOST_PP_SEQ_ELEM_118(_) BOOST_PP_SEQ_ELEM_117
#define BOOST_PP_SEQ_ELEM_119(_) BOOST_PP_SEQ_ELEM_118
#define BOOST_PREPROCESSOR_TUPLE_EAT_HPP 
#define OBJ_id_camellia128_wrap 1L,2L,392L,200011L,61L,1L,1L,3L,2L
#define DECLARE_bool(name) DECLARE_VARIABLE(bool, B, name)
#define SN_id_scrypt "id-scrypt"
#define BOOST_MPL_SIZE_FWD_HPP_INCLUDED 
#define SSL_R_BAD_SSL_FILETYPE 124
#define _GLIBCXX_HAVE_MODFF 1
#define _GLIBCXX_HAVE_MODFL 1
#define BOOST_PP_SEQ_ELEM_122(_) BOOST_PP_SEQ_ELEM_121
#define OBJ_setCext_IssuerCapabilities OBJ_set_certExt,11L
#define BOOST_PP_SEQ_ELEM_124(_) BOOST_PP_SEQ_ELEM_123
#define BOOST_PP_SEQ_ELEM_127(_) BOOST_PP_SEQ_ELEM_126
#define BOOST_PP_SEQ_ELEM_128(_) BOOST_PP_SEQ_ELEM_127
#define BOOST_PP_SEQ_ELEM_129(_) BOOST_PP_SEQ_ELEM_128
#define SN_ucl "ucl"
#define OBJ_X9_62_c2tnb191v1 OBJ_X9_62_c_TwoCurve,5L
#define OBJ_X9_62_c2tnb191v2 OBJ_X9_62_c_TwoCurve,6L
#define OBJ_X9_62_c2tnb191v3 OBJ_X9_62_c_TwoCurve,7L
#define SSL_R_MISSING_RSA_ENCRYPTING_CERT 169
#define MOVE_MOUNT_F_AUTOMOUNTS 0x00000002
#define TLS1_TXT_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 "ECDHE-ARIA256-GCM-SHA384"
#define THRIFT_CONCURRENCY_POSIXTHREADFACTORY_H_ 1
#define BOOST_PP_SEQ_ELEM_130(_) BOOST_PP_SEQ_ELEM_129
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_155 155
#define BOOST_PP_SEQ_ELEM_132(_) BOOST_PP_SEQ_ELEM_131
#define BOOST_PP_SEQ_ELEM_134(_) BOOST_PP_SEQ_ELEM_133
#define BOOST_PP_SEQ_ELEM_135(_) BOOST_PP_SEQ_ELEM_134
#define BOOST_PP_FOR_160_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(161, s) BOOST_PP_IIF(c, BOOST_PP_FOR_161, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(161, s), p, o, m)
#define SN_setct_AuthReqTBE "setct-AuthReqTBE"
#define _SC_T_IOV_MAX _SC_T_IOV_MAX
#define BIO_F_DGRAM_SCTP_NEW 149
#define NS_SSL_CLIENT 0x80
#define SN_setct_AuthReqTBS "setct-AuthReqTBS"
#define _SC_GETGR_R_SIZE_MAX _SC_GETGR_R_SIZE_MAX
#define __glibcxx_requires_heap(_First,_Last) 
#define SN_id_GostR3410_2001_CryptoPro_B_ParamSet "id-GostR3410-2001-CryptoPro-B-ParamSet"
#define EVP_PKEY_CTRL_GET_EC_KDF_MD (EVP_PKEY_ALG_CTRL + 6)
#define BOOST_PP_SEQ_ELEM_144(_) BOOST_PP_SEQ_ELEM_143
#define BOOST_PP_SEQ_ELEM_145(_) BOOST_PP_SEQ_ELEM_144
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_159 159
#define BOOST_PP_SEQ_ELEM_147(_) BOOST_PP_SEQ_ELEM_146
#define BOOST_PP_SEQ_ELEM_149(_) BOOST_PP_SEQ_ELEM_148
#define IPV6_FREEBIND 78
#define BOOST_PP_REPEAT_1_53(m,d) BOOST_PP_REPEAT_1_52(m, d) m(2, 52, d)
#define BOOST_PP_SEQ_FOLD_LEFT_104(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_104(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __cpp_lib_is_constant_evaluated 201811L
#define BOOST_PP_REPEAT_1_54(m,d) BOOST_PP_REPEAT_1_53(m, d) m(2, 53, d)
#define _POSIX_LOGIN_NAME_MAX 9
#define RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD 116
#define BOOST_PP_SEQ_ELEM_153(_) BOOST_PP_SEQ_ELEM_152
#define BOOST_PP_SEQ_ELEM_154(_) BOOST_PP_SEQ_ELEM_153
#define BOOST_PP_SEQ_ELEM_156(_) BOOST_PP_SEQ_ELEM_155
#define BOOST_PP_SEQ_ELEM_159(_) BOOST_PP_SEQ_ELEM_158
#define BOOST_RV_REF_BEG_IF_CXX11 BOOST_RV_REF_BEG
#define _NEW_ALLOCATOR_H 1
#define LINUX_IO_URING_H 
#define BOOST_MOVE_PERFECT_FORWARDING 
#define BUF_memdup(data,size) OPENSSL_memdup(data, size)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000100 (0)(1)(0)(0)(0)(1)(0)(0),
#define BOOST_PP_SEQ_FOLD_LEFT_1(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_1(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define FOLLY_OPENSSL_HAS_CHACHA 1
#define NID_grasshopper_cbc 1015
#define BOOST_PP_SEQ_ELEM_164(_) BOOST_PP_SEQ_ELEM_163
#define BOOST_PP_SEQ_ELEM_165(_) BOOST_PP_SEQ_ELEM_164
#define BOOST_PP_SEQ_ELEM_166(_) BOOST_PP_SEQ_ELEM_165
#define BOOST_PP_SEQ_ELEM_167(_) BOOST_PP_SEQ_ELEM_166
#define BOOST_PP_SEQ_ELEM_168(_) BOOST_PP_SEQ_ELEM_167
#define BOOST_PP_SEQ_FOLD_LEFT_2(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_2(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_HAVE_VFWSCANF 1
#define TLS1_RFC_DHE_DSS_WITH_AES_128_SHA256 "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"
#define HEADER_RAND_H 
#define EVP_PKEY_CTX_set_ec_param_enc(ctx,flag) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_PARAMGEN|EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_EC_PARAM_ENC, flag, NULL)
#define _GLIBCXX_STDEXCEPT 1
#define OBJ_setct_CapRevResData OBJ_set_ctype,31L
#define _mm512_srai_epi16(A,B) ((__m512i) __builtin_ia32_psrawi512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)_mm512_setzero_si512 (), (__mmask32)-1))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_181(p,o,s) 0
#define BOOST_PP_SEQ_ELEM_173(_) BOOST_PP_SEQ_ELEM_172
#define BOOST_PP_SEQ_ELEM_176(_) BOOST_PP_SEQ_ELEM_175
#define BOOST_PP_SEQ_ELEM_177(_) BOOST_PP_SEQ_ELEM_176
#define BOOST_PP_SEQ_ELEM_178(_) BOOST_PP_SEQ_ELEM_177
#define BOOST_PP_SEQ_ELEM_179(_) BOOST_PP_SEQ_ELEM_178
#define SOL_PNPIPE 275
#define SN_rc2_40_cbc "RC2-40-CBC"
#define _GLIBCXX_HAVE_POWF 1
#define _GLIBCXX_HAVE_POWL 1
#define OBJ_sOARecord OBJ_pilotAttributeType,30L
#define __USE_GNU_GETTEXT 1
#define BOOST_PP_SEQ_FOLD_LEFT_5(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_5(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100000 (1)(1)(0)(0)(0)(0)(0),
#define TLS1_TXT_DHE_RSA_WITH_AES_256_CCM "DHE-RSA-AES256-CCM"
#define EXFLAG_FRESHEST 0x1000
#define BOOST_PP_SEQ_ELEM_180(_) BOOST_PP_SEQ_ELEM_179
#define BOOST_PP_SEQ_ELEM_181(_) BOOST_PP_SEQ_ELEM_180
#define BOOST_PP_SEQ_ELEM_182(_) BOOST_PP_SEQ_ELEM_181
#define BOOST_PP_SEQ_ELEM_183(_) BOOST_PP_SEQ_ELEM_182
#define BOOST_PP_SEQ_ELEM_184(_) BOOST_PP_SEQ_ELEM_183
#define BOOST_PP_FOR_17_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(18, s) BOOST_PP_IIF(c, BOOST_PP_FOR_18, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(18, s), p, o, m)
#define NID_netscape_revocation_url 73
#define BOOST_PP_SEQ_ELEM_189(_) BOOST_PP_SEQ_ELEM_188
#define APACHE_THRIFT_ACCESSOR_blame 
#define ERR_LIB_ASYNC 51
#define NID_setct_CapTokenTBE 574
#define ___int_wchar_t_h 
#define INT_MIN (-INT_MAX - 1)
#define NID_setct_CapTokenTBS 539
#define NID_seeAlso 878
#define _mm512_srai_epi32(X,C) ((__m512i) __builtin_ia32_psradi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_undefined_epi32 (), (__mmask16)-1))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100011 (1)(1)(0)(0)(0)(1)(1),
#define DTLS1_TMO_WRITE_COUNT 2
#define BOOST_PP_SEQ_ELEM_190(_) BOOST_PP_SEQ_ELEM_189
#define BOOST_PP_SEQ_ELEM_191(_) BOOST_PP_SEQ_ELEM_190
#define BOOST_PP_SEQ_ELEM_192(_) BOOST_PP_SEQ_ELEM_191
#define _rdtscp(a) __rdtscp(a)
#define BOOST_PP_SEQ_ELEM_194(_) BOOST_PP_SEQ_ELEM_193
#define BOOST_PP_SEQ_ELEM_195(_) BOOST_PP_SEQ_ELEM_194
#define BOOST_PP_SEQ_ELEM_196(_) BOOST_PP_SEQ_ELEM_195
#define BOOST_PP_SEQ_ELEM_197(_) BOOST_PP_SEQ_ELEM_196
#define BOOST_PP_SEQ_ELEM_199(_) BOOST_PP_SEQ_ELEM_198
#define FOLLY_REQUIRES_IMPL(...) bool FOLLY_EXPECTED_ID(Requires) = false, typename std::enable_if< (FOLLY_EXPECTED_ID(Requires) || static_cast<bool>(__VA_ARGS__)), int>::type = 0
#define LN_camellia_192_gcm "camellia-192-gcm"
#define _mm256_cmp_ps_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpps256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(P), (__mmask8)-1))
#define TLS1_TXT_DH_RSA_WITH_ARIA_256_GCM_SHA384 "DH-RSA-ARIA256-GCM-SHA384"
#define ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED 120
#define CRYPTO_THREADID_hash(id) (0UL)
#define BOOST_IS_POLYMORPHIC(T) __is_polymorphic(T)
#define ATOMIC_LLONG_LOCK_FREE __GCC_ATOMIC_LLONG_LOCK_FREE
#define NID_rc5_cbc 120
#define TLS1_CK_DHE_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C053
#define PF_ISDN 34
#define DTLS1_CCS_HEADER_LENGTH 1
#define SN_set_attr "set-attr"
#define EC_R_FIELD_TOO_LARGE 143
#define SSL_TXT_kDHE "kDHE"
#define NID_X9_62_onBasis 681
#define IN6_IS_ADDR_MC_ORGLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x8))
#define BOOST_PP_REPEAT_3_104(m,d) BOOST_PP_REPEAT_3_103(m, d) m(4, 103, d)
#define OBJ_userClass OBJ_pilotAttributeType,8L
#define SSL_TXT_kDHd "kDHd"
#define DH_R_MISSING_PUBKEY 125
#define EVP_PKEY_CTRL_GET_DH_KDF_UKM (EVP_PKEY_ALG_CTRL + 12)
#define LN_Private "Private"
#define SSL_TXT_kDHr "kDHr"
#define SN_algorithm "algorithm"
#define INT8_WIDTH 8
#define CT_F_O2I_SCT 110
#define NID_org 379
#define NID_id_it_suppLangTags 784
#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA 0x0300C005
#define OBJ_dhSinglePass_stdDH_sha384kdf_scheme OBJ_secg_scheme,11L,2L
#define BOOST_INTRUSIVE_DETAIL_WORKAROUND_HPP 
#define TLS1_TXT_DH_RSA_WITH_SEED_SHA "DH-RSA-SEED-SHA"
#define EVP_F_AES_INIT_KEY 133
#define NID_sha256WithRSAEncryption 668
#define MSG_CTRUNC MSG_CTRUNC
#define _mm512_srai_epi64(X,C) ((__m512i) __builtin_ia32_psraqi512_mask ((__v8di)(__m512i)(X), (int)(C), (__v8di)(__m512i)_mm512_undefined_epi32 (), (__mmask8)-1))
#define PRIdLEAST16 "d"
#define BOOST_ITERATOR_CATEGORY iterator_category
#define BOOST_PP_DEC_71 70
#define BOOST_PP_DEC_247 246
#define _mm_round_pd(V,M) ((__m128d) __builtin_ia32_roundpd ((__v2df)(__m128d)(V), (int)(M)))
#define EVP_MD_FLAG_DIGALGID_NULL 0x0000
#define LN_ansi_X9_62 "ANSI X9.62"
#define BN_R_NO_SOLUTION 116
#define _mm256_mask_range_pd(W,U,A,B,C) ((__m256d) __builtin_ia32_rangepd256_mask ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define randombytes_H 
#define _mm_round_ps(V,M) ((__m128) __builtin_ia32_roundps ((__v4sf)(__m128)(V), (int)(M)))
#define _mm256_permute_pd(X,C) ((__m256d) __builtin_ia32_vpermilpd256 ((__v4df)(__m256d)(X), (int)(C)))
#define lh_doall_arg OPENSSL_LH_doall_arg
#define BOOST_PP_WHILE_130_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_131, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(131, s))
#define SN_setct_ErrorTBS "setct-ErrorTBS"
#define BOOST_PP_DEC_89 88
#define OBJ_mime_mhs_bodies OBJ_mime_mhs,2L
#define SN_id_cmc_dataReturn "id-cmc-dataReturn"
#define OBJ_camellia_256_ccm OBJ_camellia,47L
#define BOOST_PP_FOR_171(s,p,o,m) BOOST_PP_FOR_171_C(BOOST_PP_BOOL(p(172, s)), s, p, o, m)
#define LN_pbes2 "PBES2"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01110001 (0)(1)(1)(1)(0)(0)(0)(1),
#define __sigevent_t_defined 1
#define _rotwl(a,b) __rolw((a), (b))
#define LN_kx_gost "kx-gost"
#define _rotwr(a,b) __rorw((a), (b))
#define BOOST_PP_SEQ_FOLD_LEFT_I_71(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_72, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(72, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_magma_ofb 1189
#define OBJ_camellia_256_cmac OBJ_camellia,50L
#define BIO_FLAGS_SHOULD_RETRY 0x08
#define M_ASN1_free_of(x,type) ASN1_item_free(CHECKED_PTR_OF(type, x), ASN1_ITEM_rptr(type))
#define signal_del(ev) event_del(ev)
#define AF_SECURITY PF_SECURITY
#define STA_PPSTIME 0x0004
#define SSL_CTRL_SET_TMP_ECDH 4
#define _mm_round_sd(D,V,M) ((__m128d) __builtin_ia32_roundsd ((__v2df)(__m128d)(D), (__v2df)(__m128d)(V), (int)(M)))
#define SN_setct_RegFormReqTBE "setct-RegFormReqTBE"
#define _RANGES_ALGOBASE_H 1
#define SO_DETACH_BPF SO_DETACH_FILTER
#define _SC_LEVEL1_ICACHE_SIZE _SC_LEVEL1_ICACHE_SIZE
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001011 (0)(0)(1)(0)(1)(1),
#define _DEQUE_TCC 1
#define BOOST_PP_LIST_FOLD_LEFT_21(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_22, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(22, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define UINTMAX_WIDTH 64
#define _GLIBCXX_HAVE_GETS 1
#define _GLIBCXX_HAVE_LINUX_TYPES_H 1
#define EVENT__HAVE_STRUCT_SOCKADDR_UN 1
#define __INT_FAST32_MAX__ 0x7fffffffffffffffL
#define CONF_F_NCONF_DUMP_BIO 105
#define BOOST_PP_WHILE_26_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_27, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(27, s))
#define BOOST_PP_LIST_FOLD_LEFT_23(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_24, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(24, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define NID_id_alg_des40 323
#define __SIZEOF_PTHREAD_MUTEX_T 40
#define BOOST_MPL_PP_AUX_DEFAULT_PARAM_FUNC(unused,i,pv) BOOST_PP_COMMA_IF(i) BOOST_PP_CAT( BOOST_PP_TUPLE_ELEM(2,0,pv), BOOST_PP_INC(i) ) = BOOST_PP_TUPLE_ELEM(2,1,pv)
#define NID_ua_pki 1151
#define IP_MTU_DISCOVER 10
#define CT_R_SCT_INVALID 104
#define IP_MINTTL 21
#define SN_id_smime_aa_ets_otherSigCert "id-smime-aa-ets-otherSigCert"
#define SN_ms_ext_req "msExtReq"
#define AF_RXRPC PF_RXRPC
#define BOOST_DETAIL_TRIPLE_TO_OCTAL_011 3
#define BOOST_PP_LIST_FOLD_LEFT_26(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_27, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(27, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define ERR_LIB_PKCS7 33
#define __cpp_deduction_guides 201907L
#define SSL_ERROR_WANT_ACCEPT 8
#define _GLIBCXX_END_NAMESPACE_ALGO 
#define SSL_AD_ACCESS_DENIED TLS1_AD_ACCESS_DENIED
#define M_SQRT2f64x __f64x (1.414213562373095048801688724209698079)
#define CLONE_NEWNS 0x00020000
#define __USE_XOPEN2K 1
#define _PSTL_UDR_PRESENT 1
#define SSL_MODE_ENABLE_PARTIAL_WRITE 0x00000001U
#define _mm256_maskz_extracti64x2_epi64(U,X,C) ((__m128i) __builtin_ia32_extracti64x2_256_mask ((__v4di)(__m256i) (X), (int) (C), (__v2di)(__m128i) _mm_setzero_si128 (), (__mmask8) (U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0001100 (0)(0)(0)(1)(1)(0)(0),
#define LN_associatedName "associatedName"
#define X509_EXT_PACK_UNKNOWN 1
#define X509V3_F_S2I_SKEY_ID 115
#define EVP_aes_256_cfb EVP_aes_256_cfb128
#define TLS1_TXT_ECDH_RSA_WITH_AES_128_GCM_SHA256 "ECDH-RSA-AES128-GCM-SHA256"
#define GEN_EMAIL 1
#define SSL3_CHANGE_CIPHER_CLIENT_WRITE (SSL3_CC_CLIENT|SSL3_CC_WRITE)
#define SSL_OP_NO_TICKET 0x00004000U
#define BOOST_PP_WHILE_177_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_178, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(178, s))
#define __DECL_SIMD_powf16 
#define IPV6_UNICAST_IF 76
#define _GLIBCXX_HAVE_EPROTO 1
#define _mm512_mask_cvt_roundps_epu64(W,U,A,B) ((__m512i)__builtin_ia32_cvtps2uqq512_mask ((A), (__v8di)(W), (U), (B)))
#define X509V3_R_UNSUPPORTED_OPTION 117
#define _SC_SYSTEM_DATABASE_R _SC_SYSTEM_DATABASE_R
#define EC_R_INVALID_ARGUMENT 112
#define TCP_MSS 512
#define OBJ_subject_key_identifier OBJ_id_ce,14L
#define SSL_CTX_get0_chain_certs(ctx,px509) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_CHAIN_CERTS,0,px509)
#define BOOST_PP_NODE_46(p) BOOST_PP_IIF(p(46), BOOST_PP_NODE_45, BOOST_PP_NODE_47)
#define ERR_LIB_DSA 10
#define _mm_cmp_epi64_mask(X,Y,P) ((__mmask8) __builtin_ia32_cmpq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(P), (__mmask8)-1))
#define SSL_CTX_set_max_proto_version(ctx,version) SSL_CTX_ctrl(ctx, SSL_CTRL_SET_MAX_PROTO_VERSION, version, NULL)
#define ERR_LIB_DSO 37
#define __CPU_ISSET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? ((((const __cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] & __CPUMASK (__cpu))) != 0 : 0; }))
#define FPE_CONDTRAP FPE_CONDTRAP
#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP 125
#define BOOST_PP_FOR_211(s,p,o,m) BOOST_PP_FOR_211_C(BOOST_PP_BOOL(p(212, s)), s, p, o, m)
#define SYS_F_IOCTLSOCKET 5
#define BIO_set_retry_write(b) BIO_set_flags(b, (BIO_FLAGS_WRITE|BIO_FLAGS_SHOULD_RETRY))
#define FALLOC_FL_INSERT_RANGE 0x20
#define RAND_R_PREDICTION_RESISTANCE_NOT_SUPPORTED 133
#define ESTRPIPE 86
#define SN_id_aca_authenticationInfo "id-aca-authenticationInfo"
#define X509_F_X509_STORE_CTX_GET1_ISSUER 146
#define EVENT__HAVE_STDLIB_H 1
#define BOOST_PP_REPEAT_1_132(m,d) BOOST_PP_REPEAT_1_131(m, d) m(2, 131, d)
#define SSL_R_NO_RENEGOTIATION 339
#define BOOST_UNLIKELY(x) __builtin_expect(x, 0)
#define X509V3_R_ERROR_CREATING_EXTENSION 144
#define h_errno (*__h_errno_location ())
#define __DECL_SIMD_powf32 
#define BOOST_PP_FOR_213(s,p,o,m) BOOST_PP_FOR_213_C(BOOST_PP_BOOL(p(214, s)), s, p, o, m)
#define NID_cast5_cbc 108
#define LN_hmac_md5 "hmac-md5"
#define TCP_CC_INFO 26
#define BOOST_PP_FOR_52_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(53, s) BOOST_PP_IIF(c, BOOST_PP_FOR_53, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(53, s), p, o, m)
#define LN_camellia_192_ofb128 "camellia-192-ofb"
#define SSL_AD_UNSUPPORTED_EXTENSION TLS1_AD_UNSUPPORTED_EXTENSION
#define EVP_PBE_TYPE_PRF 0x1
#define SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM 130
#define BOOST_LIB_VERSION "1_74"
#define EBADMSG 74
#define LN_postOfficeBox "postOfficeBox"
#define BOOST_MPL_HAS_MEMBER_ACCEPT(args,member_macro) BOOST_PP_REPEAT( BOOST_PP_ARRAY_ELEM(2, args) , BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT , args )
#define TLS1_RFC_ECDH_anon_WITH_RC4_128_SHA "TLS_ECDH_anon_WITH_RC4_128_SHA"
#define __USE_POSIX199506 1
#define NID_aria_256_ofb128 1078
#define I2D_OF_const(type) int (*)(const type *,unsigned char **)
#define APACHE_THRIFT_ACCESSOR_t_union 
#define EVP_F_AES_GCM_CTRL 196
#define BOOST_PP_REPEAT_1_69(m,d) BOOST_PP_REPEAT_1_68(m, d) m(2, 68, d)
#define EVBUFFER_TIMEOUT BEV_EVENT_TIMEOUT
#define _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK 1
#define INT_LEAST8_MAX (127)
#define OBJ_id_smime_aa_ets_certCRLTimestamp OBJ_id_smime_aa,26L
#define __cplusplus 201709L
#define SIGSTKFLT 16
#define TLS1_RFC_RSA_WITH_AES_128_CCM "TLS_RSA_WITH_AES_128_CCM"
#define FOLLY_SEMICOLON(...) ;
#define X509_F_DANE_I2D 107
#define ERR_LIB_OCSP 39
#define __DECL_SIMD_powf64 
#define BOOST_PP_SLOT_CC_10(a,b,c,d,e,f,g,h,i,j) BOOST_PP_SLOT_CC_10_D(a, b, c, d, e, f, g, h, i, j)
#define SSL_CTX_set_cert_flags(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_CERT_FLAGS,(op),NULL)
#define BOOST_MPL_FOLD_HPP_INCLUDED 
#define __DEC32_MIN__ 1E-95DF
#define _SC_XOPEN_CRYPT _SC_XOPEN_CRYPT
#define EVP_R_COPY_ERROR 173
#define _mm_alignr_epi32(X,Y,C) ((__m128i)__builtin_ia32_alignd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(C), (__v4si)(__m128i)(X), (__mmask8)-1))
#define _mm256_range_pd(A,B,C) ((__m256d) __builtin_ia32_rangepd256_mask ((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)_mm256_setzero_pd(), (__mmask8)-1))
#define _mm256_range_ps(A,B,C) ((__m256) __builtin_ia32_rangeps256_mask ((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1))
#define LN_sxnet "Strong Extranet ID"
#define SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD 256
#define CPU_ALLOC(count) __CPU_ALLOC (count)
#define _PSTL_STRING_AUX(x) #x
#define LN_aes_256_cbc_hmac_sha1 "aes-256-cbc-hmac-sha1"
#define _CMP_NGT_US 0x0a
#define SN_id_Gost28147_89_MAC "gost-mac"
#define BOOST_PP_WHILE_114_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_115, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(115, s))
#define _BITS_WCHAR_H 1
#define IP_RECVERR 11
#define SSL_R_PSK_NO_SERVER_CB 225
#define FS_HUGE_FILE_FL 0x00040000
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define SN_id_smime_aa_ets_RevocationRefs "id-smime-aa-ets-RevocationRefs"
#define THRIFT_ASYNC_REQUESTCHANNEL_H_ 1
#define OPENSSL_NO_ASAN 
#define X509V3_F_POLICY_SECTION 131
#define TLS1_TXT_DHE_RSA_WITH_CHACHA20_POLY1305 "DHE-RSA-CHACHA20-POLY1305"
#define NID_postalAddress 861
#define BIO_TYPE_BUFFER ( 9|BIO_TYPE_FILTER)
#define __SSE2_MATH__ 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_31(op,st,ss,sz) 0
#define NID_setct_CRLNotificationTBS 598
#define X509_F_NETSCAPE_SPKI_B64_ENCODE 130
#define UDP_ENCAP_GTP0 4
#define SSL_F_TLS_PARSE_STOC_SERVER_NAME 583
#define _SC_OPEN_MAX _SC_OPEN_MAX
#define CLONE_PIDFD 0x00001000
#define int_implement_lhash_doall(type,argtype,cbargtype) static ossl_unused ossl_inline void lh_ ##type ##_doall_ ##argtype(LHASH_OF(type) *lh, void (*fn)(cbargtype *, argtype *), argtype *arg) { OPENSSL_LH_doall_arg((OPENSSL_LHASH *)lh, (OPENSSL_LH_DOALL_FUNCARG)fn, (void *)arg); } LHASH_OF(type)
#define BOOST_PP_REPEAT_3_52(m,d) BOOST_PP_REPEAT_3_51(m, d) m(4, 51, d)
#define ETOOMANYREFS 109
#define SSL3_CK_EDH_RSA_DES_192_CBC3_SHA SSL3_CK_DHE_RSA_DES_192_CBC3_SHA
#define BOOST_PP_FOR_185_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(186, s) BOOST_PP_IIF(c, BOOST_PP_FOR_186, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(186, s), p, o, m)
#define _POSIX_TZNAME_MAX 6
#define SIGILL 4
#define BOOST_MOVE_TT_CXX11_IS_COPY_CONSTRUCTIBLE 
#define SN_id_alg_PWRI_KEK "id-alg-PWRI-KEK"
#define SA_RESTART 0x10000000
#define PKCS9STRING_TYPE (DIRSTRING_TYPE|B_ASN1_IA5STRING)
#define APACHE_THRIFT_ACCESSOR_zstdConfig 
#define _mm_maskz_roundscale_pd(U,A,B) ((__m128d) __builtin_ia32_rndscalepd_128_mask ((__v2df)(__m128d)(A), (int)(B), (__v2df)(__m128d)_mm_setzero_pd (), (__mmask8)(U)))
#define BOOST_PP_FOR_159_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(160, s) BOOST_PP_IIF(c, BOOST_PP_FOR_160, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(160, s), p, o, m)
#define DTLS_ANY_VERSION 0x1FFFF
#define DCHECK_IS_ON() 1
#define SCNdFAST16 __PRIPTR_PREFIX "d"
#define IPV6_UNICAST_HOPS 16
#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256"
#define SN_pss "pss"
#define IOSQE_IO_LINK (1U << IOSQE_IO_LINK_BIT)
#define CRYPTO_thread_id() (0UL)
#define FS_ENCRYPTION_MODE_AES_128_CBC FSCRYPT_MODE_AES_128_CBC
#define BOOST_PP_WHILE_61_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_62, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(62, s))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101010 (0)(0)(1)(0)(1)(0)(1)(0),
#define __OFF_T_TYPE __SYSCALL_SLONG_TYPE
#define BOOST_PP_DEC_98 97
#define NID_setct_AuthResTBEX 572
#define BIO_SOCK_REUSEADDR 0x01
#define LN_teletexTerminalIdentifier "teletexTerminalIdentifier"
#define __cpp_lib_has_unique_object_representations 201606
#define ENONET 64
#define HEADER_SYMHACKS_H 
#define EXFULL 54
#define EC_F_ECDSA_DO_SIGN_EX 251
#define _mm256_i32scatter_pd(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv4df ((void *) (ADDR), (__mmask8)0xFF, (__v4si)(__m128i) (INDEX), (__v4df)(__m256d) (V1), (int) (SCALE))
#define SCNdFAST32 __PRIPTR_PREFIX "d"
#define EC_F_OSSL_ECDSA_VERIFY_SIG 250
#define _mm256_i32scatter_ps(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv8sf ((void *) (ADDR), (__mmask8)0xFF, (__v8si)(__m256i) (INDEX), (__v8sf)(__m256) (V1), (int) (SCALE))
#define _T_WCHAR 
#define HEADER_CRYPTO_H 
#define FS_ENCRYPTION_MODE_AES_256_CTS FSCRYPT_MODE_AES_256_CTS
#define SN_des_ede3_cfb8 "DES-EDE3-CFB8"
#define NID_des_ede3_ecb 33
#define NID_enhancedSearchGuide 885
#define TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDHE-RSA-CAMELLIA128-SHA256"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001100 (0)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001101 (0)(0)(1)(1)(0)(1),
#define _mm_maskz_roundscale_sd(U,A,B,I) ((__m128d) __builtin_ia32_rndscalesd_mask_round ((__v2df) (__m128d) (A), (__v2df) (__m128d) (B), (int) (I), (__v2df) _mm_setzero_pd (), (__mmask8) (U), _MM_FROUND_CUR_DIRECTION))
#define ev_int64_t int64_t
#define BOOST_PP_BITAND_I(x,y) BOOST_PP_BITAND_ ## x ## y
#define BOOST_MOVE_MOVE_UTILITY_CORE_HPP 
#define _mm_maskz_roundscale_ss(U,A,B,I) ((__m128) __builtin_ia32_rndscaless_mask_round ((__v4sf) (__m128) (A), (__v4sf) (__m128) (B), (int) (I), (__v4sf) _mm_setzero_ps (), (__mmask8) (U), _MM_FROUND_CUR_DIRECTION))
#define SN_id_aca_chargingIdentity "id-aca-chargingIdentity"
#define TLS1_TXT_SRP_SHA_WITH_3DES_EDE_CBC_SHA "SRP-3DES-EDE-CBC-SHA"
#define OBJ_id_alg OBJ_id_pkix,6L
#define FOLLY_COLD __attribute__((__cold__))
#define BOOST_PP_WHILE_206_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_207, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(207, s))
#define BOOST_MOVE_IS_POD_IMPL(T) (::boost::move_detail::is_scalar<T>::value || ::boost::move_detail::is_void<T>::value || BOOST_MOVE_IS_POD(T))
#define BOOST_PP_FOR_187(s,p,o,m) BOOST_PP_FOR_187_C(BOOST_PP_BOOL(p(188, s)), s, p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_001110 (0)(0)(1)(1)(1)(0),
#define EVP_PKEY_CTX_set_dsa_paramgen_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DSA_PARAMGEN_MD, 0, (void *)(md))
#define BOOST_PP_REPEAT_3_208(m,d) BOOST_PP_REPEAT_3_207(m, d) m(4, 207, d)
#define BOOST_PP_LIST_FOLD_LEFT_30(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_31, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(31, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define PTHREAD_CREATE_DETACHED PTHREAD_CREATE_DETACHED
#define SSL3_ALIGN_PAYLOAD 8
#define BOOST_PP_FOR_97(s,p,o,m) BOOST_PP_FOR_97_C(BOOST_PP_BOOL(p(98, s)), s, p, o, m)
#define SSL_TXT_SSLV3 "SSLv3"
#define BIO_set_write_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,1)
#define __DECL_SIMD_cosf 
#define __DECL_SIMD_cosl 
#define BOOST_PP_LIST_FOLD_LEFT_33(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_34, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(34, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _STL_RELOPS_H 1
#define NID_camellia_192_cfb128 758
#define SNANF (__builtin_nansf (""))
#define SNANL (__builtin_nansl (""))
#define _GLIBCXX_LIST 1
#define SCNdFAST64 __PRI64_PREFIX "d"
#define SN_dstu28147_wrap "dstu28147-wrap"
#define OBJ_id_camellia256_wrap 1L,2L,392L,200011L,61L,1L,1L,3L,4L
#define BOOST_PP_SEQ_ELEM_10(_) BOOST_PP_SEQ_ELEM_9
#define _mm512_mask_div_round_pd(W,U,A,B,C) (__m512d)__builtin_ia32_divpd512_mask(A, B, W, U, C)
#define OBJ_aes_128_cbc OBJ_aes,2L
#define _SHARED_PTR_H 1
#define MAP_NORESERVE 0x04000
#define BOOST_PP_LIST_FOLD_LEFT_37(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_38, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(38, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SMIME_CRLFEOL 0x800
#define V_ASN1_UTF8STRING 12
#define NID_aes_192_cfb1 651
#define OpenSSLDie(f,l,a) OPENSSL_die((a),(f),(l))
#define BOOST_PREPROCESSOR_REPETITION_DETAIL_FOR_HPP 
#define DECLARE_PEM_rw(name,type) DECLARE_PEM_read(name, type) DECLARE_PEM_write(name, type)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0010 (0)(0)(1)(0),
#define NID_subtreeMaximumQuality 498
#define BIO_seek(b,ofs) (int)BIO_ctrl(b,BIO_C_FILE_SEEK,ofs,NULL)
#define SSL3_CT_DSS_SIGN 2
#define WINT_MAX (4294967295u)
#define NID_pbeWithMD2AndRC2_CBC 168
#define BOOST_TT_IS_ABSTRACT_CLASS_HPP 
#define _BITS_POSIX2_LIM_H 1
#define TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA "TLS_DHE_PSK_WITH_AES_128_CBC_SHA"
#define X509_V_ERR_CERT_NOT_YET_VALID 9
#define NID_sha1WithRSAEncryption 65
#define NID_generationQualifier 509
#define TLS1_RFC_DHE_PSK_WITH_NULL_SHA384 "TLS_DHE_PSK_WITH_NULL_SHA384"
#define EVENT__HAVE_ARPA_INET_H 1
#define SSL_R_SSL_SESSION_ID_CONFLICT 302
#define SSL_CTX_set1_client_sigalgs_list(ctx,s) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CLIENT_SIGALGS_LIST,0,(char *)(s))
#define SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD 165
#define OBJ_crossCertificatePair OBJ_X509,40L
#define BOOST_PP_SEQ_FOLD_LEFT_I_199(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_200, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(200, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_172 172
#define FOLLY_DETAIL_FORWARD_BODY(e) noexcept(noexcept(e))->decltype(e) { return e; }
#define _mm_mask_i32scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv4si ((void *) (ADDR), (__mmask8) (MASK), (__v4si)(__m128i) (INDEX), (__v4si)(__m128i) (V1), (int) (SCALE))
#define EVP_PKEY_CTX_set_dh_kdf_outlen(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_OUTLEN, len, NULL)
#define LC_MONETARY __LC_MONETARY
#define X509_V_FLAG_NO_ALT_CHAINS 0x100000
#define _RPC_NETDB_H 1
#define _mm_mask_rol_epi32(W,U,A,B) ((__m128i)__builtin_ia32_prold128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define OBJ_id_Gost28147_89_TestParamSet OBJ_cryptopro,31L,0L
#define s6_addr32 __in6_u.__u6_addr32
#define BOOST_INTRUSIVE_FWD_HPP 
#define __FLT_MIN_EXP__ (-125)
#define BOOST_PP_INTERCEPT_10 
#define BOOST_PP_INTERCEPT_11 
#define BOOST_PP_INTERCEPT_14 
#define BOOST_PP_INTERCEPT_15 
#define BOOST_PP_INTERCEPT_18 
#define BOOST_PP_INTERCEPT_19 
#define SSL_R_INVALID_TICKET_KEYS_LENGTH 325
#define NID_setct_PCertReqData 556
#define WEXITED 4
#define ATOMIC_VAR_INIT(_VI) { _VI }
#define TLS1_CK_ECDHE_PSK_WITH_NULL_SHA 0x0300C039
#define IPV6_V6ONLY 26
#define _IOC_WRITE 1U
#define __CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) (__builtin_memcmp (cpusetp1, cpusetp2, setsize) == 0)
#define SSL_RT_MAX_CIPHER_BLOCK_SIZE 16
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011000 (0)(1)(0)(1)(1)(0)(0)(0),
#define SN_target_information "targetInformation"
#define BOOST_PP_INTERCEPT_20 
#define BOOST_PP_INTERCEPT_21 
#define BOOST_PP_INTERCEPT_22 
#define BOOST_PP_INTERCEPT_24 
#define BOOST_PP_INTERCEPT_25 
#define EVP_PKEY_CTRL_SET_MAC_KEY 6
#define BOOST_PP_INTERCEPT_28 
#define X509V3_EXT_DUMP_UNKNOWN (3L << 16)
#define NID_pbe_WithSHA1And40BitRC4 145
#define TCP_FASTOPEN_CONNECT 30
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011011 (0)(0)(0)(1)(1)(0)(1)(1),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011001 (0)(1)(0)(1)(1)(0)(0)(1),
#define BOOST_PP_REPEAT_1_75(m,d) BOOST_PP_REPEAT_1_74(m, d) m(2, 74, d)
#define IPV6_RECVRTHDR 56
#define BOOST_PP_CONFIG_MSVC() 0x0004
#define OPENSSL_DSA_FIPS_MIN_MODULUS_BITS 1024
#define BOOST_IS_ENUM(T) __is_enum(T)
#define FIZZ_UNION_COPY_CTORS(X,NAME) NAME(const X& x) : type_(Type::X ##_E) { new (&X ##_) X(x); }
#define RWF_HIPRI ((__kernel_rwf_t)0x00000001)
#define BIO_get_retry_flags(b) BIO_test_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY))
#define BOOST_PP_REPEAT_1_77(m,d) BOOST_PP_REPEAT_1_76(m, d) m(2, 76, d)
#define BOOST_PP_INTERCEPT_32 
#define BOOST_PP_INTERCEPT_33 
#define M_LN2f32x __f32x (0.693147180559945309417232121458176568)
#define BOOST_PP_INTERCEPT_36 
#define BOOST_PP_INTERCEPT_38 
#define __attribute_copy__(arg) __attribute__ ((__copy__ (arg)))
#define SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT 365
#define OPENSSL_zalloc(num) CRYPTO_zalloc(num, OPENSSL_FILE, OPENSSL_LINE)
#define BOOST_PP_REPEAT_1_78(m,d) BOOST_PP_REPEAT_1_77(m, d) m(2, 77, d)
#define _STL_UNINITIALIZED_H 1
#define MOVE_MOUNT_F_SYMLINKS 0x00000001
#define BOOST_PP_DEC_200 199
#define _POSIX_PTHREAD_SEMANTICS 1
#define BOOST_PP_REPEAT_1_79(m,d) BOOST_PP_REPEAT_1_78(m, d) m(2, 78, d)
#define __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16
#define EVENT__HAVE_SYS_UN_H 1
#define _mm_mask_rol_epi64(W,U,A,B) ((__m128i)__builtin_ia32_prolq128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)(W), (__mmask8)(U)))
#define BOOST_PP_ASSIGN_SLOT_1 <boost/preprocessor/slot/detail/slot1.hpp>
#define PKCS7_F_PKCS7_SET_CONTENT 109
#define SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT 311
#define BOOST_PP_WHILE_16(p,o,s) BOOST_PP_WHILE_16_C(BOOST_PP_BOOL(p(17, s)), p, o, s)
#define NID_id_ad 176
#define BOOST_PP_INTERCEPT_42 
#define BOOST_PP_INTERCEPT_43 
#define BOOST_PP_INTERCEPT_45 
#define BOOST_PP_INTERCEPT_46 
#define BOOST_PP_INTERCEPT_47 
#define BOOST_PP_INTERCEPT_48 
#define BOOST_PP_INTERCEPT_49 
#define SCM_WIFI_STATUS SO_WIFI_STATUS
#define _GLIBCXX_HAVE_SINHL 1
#define _LOCALE_H 1
#define SSL_R_NO_CIPHERS_SPECIFIED 183
#define BOOST_PP_DEC_202 201
#define TLSEXT_TYPE_ec_point_formats 11
#define NID_id_ppl_inheritAll 665
#define V_ASN1_SEQUENCE 16
#define TLS1_CK_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 0x0300C05D
#define BOOST_PP_DEC_203 202
#define BOOST_PP_INTERCEPT_51 
#define OBJ_friendlyName OBJ_pkcs9,20L
#define BOOST_PP_INTERCEPT_54 
#define PKCS7_is_detached(p7) (PKCS7_type_is_signed(p7) && PKCS7_get_detached(p7))
#define BOOST_PP_INTERCEPT_57 
#define BOOST_PP_INTERCEPT_58 
#define BOOST_PP_DETAIL_IBP_CAT(a,...) BOOST_PP_DETAIL_IBP_PRIMITIVE_CAT(a,__VA_ARGS__)
#define _mm512_dbsad_epu8(X,Y,C) ((__m512i) __builtin_ia32_dbpsadbw512_mask ((__v64qi)(__m512i) (X), (__v64qi)(__m512i) (Y), (int) (C), (__v32hi)(__m512i) _mm512_setzero_si512 (), (__mmask32)-1))
#define __HAVE_DISTINCT_FLOAT32 0
#define LN_id_GostR3411_94_with_GostR3410_94 "GOST R 34.11-94 with GOST R 34.10-94"
#define BOOST_PP_WHILE_19(p,o,s) BOOST_PP_WHILE_19_C(BOOST_PP_BOOL(p(20, s)), p, o, s)
#define SSL_CTX_clear_mode(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_CLEAR_MODE,(op),NULL)
#define NID_Directory 382
#define BOOST_PP_FOR_194_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(195, s) BOOST_PP_IIF(c, BOOST_PP_FOR_195, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(195, s), p, o, m)
#define APACHE_THRIFT_ACCESSOR_cv_struct 
#define _GLIBCXX_USE_DEV_RANDOM 1
#define PEM_BUFSIZE 1024
#define NID_id_cct_PKIResponse 362
#define BOOST_PP_INTERCEPT_63 
#define SSL_F_NSS_KEYLOG_INT 500
#define WINT_MIN (0u)
#define BOOST_PP_INTERCEPT_67 
#define BOOST_PP_INTERCEPT_68 
#define BOOST_PP_INTERCEPT_69 
#define PTHREAD_CANCEL_DISABLE PTHREAD_CANCEL_DISABLE
#define NID_id_smime_mod_ess 197
#define OBJ_id_it_caProtEncCert OBJ_id_it,1L
#define NID_setct_AuthResTBSX 536
#define EVP_PKEY_CTRL_GET_EC_KDF_UKM (EVP_PKEY_ALG_CTRL + 10)
#define BOOST_PP_WHILE_132_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_133, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(133, s))
#define BOOST_PP_INTERCEPT_70 
#define BOOST_PP_INTERCEPT_72 
#define BOOST_PP_INTERCEPT_73 
#define BOOST_PP_INTERCEPT_74 
#define BOOST_PP_INTERCEPT_76 
#define DECLARE_OBJ_BSEARCH_GLOBAL_CMP_FN(type1,type2,nm) type2 * OBJ_bsearch_ ##nm(type1 *key, type2 const *base, int num)
#define BOOST_MPL_AUX_FILTER_ITER_HPP_INCLUDED 
#define TH_SYN 0x02
#define _mm_maskz_cvtps_ph(U,A,I) ((__m128i) __builtin_ia32_vcvtps2ph_mask ((__v4sf)(__m128) (A), (int) (I), (__v8hi)(__m128i) _mm_setzero_si128 (), (__mmask8) (U)))
#define BOOST_PP_SEQ_ELEM_150(_) BOOST_PP_SEQ_ELEM_149
#define IPV6_MTU 24
#define LN_INN "INN"
#define SIG_ATOMIC_WIDTH 32
#define BOOST_MOVE_IS_NOTHROW_DEFAULT_CONSTRUCTIBLE(T) BOOST_MOVE_HAS_NOTHROW_CONSTRUCTOR(T)
#define XN_FLAG_MULTILINE (ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | XN_FLAG_SEP_MULTILINE | XN_FLAG_SPC_EQ | XN_FLAG_FN_LN | XN_FLAG_FN_ALIGN)
#define BOOST_PP_INTERCEPT_80 
#define BOOST_PP_INTERCEPT_81 
#define SN_rc5_cfb64 "RC5-CFB"
#define BOOST_PP_INTERCEPT_83 
#define BOOST_PP_INTERCEPT_84 
#define BOOST_VARIANT_DETAIL_STD_HASH_HPP 
#define BOOST_PP_INTERCEPT_88 
#define OBJ_setct_CredResTBE OBJ_set_ctype,70L
#define _XOPEN_LEGACY 1
#define __HAVE_DISTINCT_FLOAT64 0
#define _GLIBCXX_ALGORITHM 1
#define PEM_F_PEM_READ_DHPARAMS 142
#define SN_X9_62_characteristic_two_field "characteristic-two-field"
#define SSL_F_TLS_CONSTRUCT_STOC_DONE 375
#define BOOST_PP_INTERCEPT_90 
#define BOOST_PP_INTERCEPT_91 
#define BOOST_PP_INTERCEPT_93 
#define BOOST_PP_INTERCEPT_94 
#define BOOST_PP_INTERCEPT_95 
#define BOOST_PP_INTERCEPT_96 
#define SSL_R_NO_SUITABLE_SIGNATURE_ALGORITHM 118
#define BOOST_PP_INTERCEPT_98 
#define NID_oscca 1141
#define _mm512_mask_cvt_roundepi32_ps(W,U,A,B) (__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(A), W, U, B)
#define BOOST_PP_WHILE_241_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_242, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(242, s))
#define SN_id_PasswordBasedMAC "id-PasswordBasedMAC"
#define BOOST_DETAIL_TERNARY_TRIPLE_TO_OCTAL(bit2,bit1,bit0) BOOST_DETAIL_TRIPLE_TO_OCTAL_ ## bit2 ## bit1 ## bit0
#define SSL_R_PRIVATE_KEY_MISMATCH 288
#define OBJ_audio OBJ_pilotAttributeType,55L
#define __USE_UNIX98 1
#define TLS1_TXT_RSA_WITH_AES_256_GCM_SHA384 "AES256-GCM-SHA384"
#define BOOST_SYMBOL_IMPORT 
#define WINT_WIDTH 32
#define SSL_F_DTLS_CONSTRUCT_CHANGE_CIPHER_SPEC 371
#define ASN1_F_ASN1_ITEM_I2D_BIO 192
#define TRAP_UNK TRAP_UNK
#define BOOST_MPL_FILTER_VIEW_HPP_INCLUDED 
#define evutil_timercmp(tvp,uvp,cmp) (((tvp)->tv_sec == (uvp)->tv_sec) ? ((tvp)->tv_usec cmp (uvp)->tv_usec) : ((tvp)->tv_sec cmp (uvp)->tv_sec))
#define F_SEAL_SEAL 0x0001
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_107(s,p,o,m) 0
#define BOOST_TT_REMOVE_CONST_HPP_INCLUDED 
#define BIO_R_UNINITIALIZED 120
#define SSL_R_LIBRARY_HAS_NO_CIPHERS 161
#define BOOST_PP_SEQ_FOLD_LEFT_I_81(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_82, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(82, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define FS_PROJINHERIT_FL 0x20000000
#define ev_uint8_t uint8_t
#define IPV6_RECVERR 25
#define TLS1_RFC_ECDH_anon_WITH_DES_192_CBC3_SHA "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"
#define _mm_test_mix_ones_zeros(M,V) _mm_testnzc_si128 ((M), (V))
#define ASN1_R_INVALID_BMPSTRING_LENGTH 129
#define CHAR_MAX SCHAR_MAX
#define SSL_F_TLS13_GENERATE_SECRET 591
#define ERR_R_OPERATION_FAIL (8|ERR_R_FATAL)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100010 (0)(1)(0)(0)(0)(1)(0),
#define OBJ_secp384r1 OBJ_secg_ellipticCurve,34L
#define _mm512_mask_extracti32x8_epi32(W,U,X,C) ((__m256i) __builtin_ia32_extracti32x8_mask ((__v16si)(__m512i) (X), (int) (C), (__v8si)(__m256i) (W), (__mmask8) (U)))
#define NID_id_it 260
#define ASN1_F_D2I_ASN1_UINTEGER 150
#define EV_ET 0x20
#define BIO_TYPE_DESCRIPTOR 0x0100
#define BOOST_PP_SEQ_FOLD_LEFT_I_20(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_21, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(21, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_mdc2WithRSA 96
#define SOL_DECNET 261
#define EVP_PKEY_CTRL_CIPHER 12
#define LN_businessCategory "businessCategory"
#define SIZE_WIDTH __WORDSIZE
#define _GLIBCXX_PACKAGE_URL ""
#define X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE 51
#define _BITS_SIGNUM_H 1
#define RSA_R_BLOCK_TYPE_IS_NOT_01 106
#define BOOST_PP_LIST_FOLD_LEFT_40(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_41, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(41, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_FOR_198(s,p,o,m) BOOST_PP_FOR_198_C(BOOST_PP_BOOL(p(199, s)), s, p, o, m)
#define BIO_F_SLG_WRITE 155
#define POSIX_FADV_NORMAL 0
#define TLSEXT_TYPE_server_authz 8
#define X509V3_F_SET_DIST_POINT_NAME 158
#define CLONE_PARENT_SETTID 0x00100000
#define TLSEXT_MAXLEN_host_name 255
#define NID_id_kp 128
#define SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST 151
#define OBJ_setAttr_TokICCsig OBJ_setAttr_IssCap_Sig,1L
#define SN_id_cmc_regInfo "id-cmc-regInfo"
#define BOOST_MPL_SIZE_T_FWD_HPP_INCLUDED 
#define BOOST_PP_DEC_23 22
#define OBJ_organizationalStatus OBJ_pilotAttributeType,45L
#define BOOST_PP_LIST_FOLD_LEFT_45(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_46, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(46, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_NODE_52(p) BOOST_PP_IIF(p(52), BOOST_PP_NODE_50, BOOST_PP_NODE_54)
#define FS_XFLAG_COWEXTSIZE 0x00010000
#define _GLIBCXX_ATOMIC_BUILTINS 1
#define FOLLY_HAVE_LIBLZ4 1
#define __REGISTER_PREFIX__ 
#define NID_gost89_ecb 1010
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_200(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_201(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_202(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_203(p,o,s) 0
#define SN_aes_256_gcm "id-aes256-GCM"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_205(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_208(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_209(p,o,s) 0
#define BOOST_PP_LIST_FOLD_LEFT_49(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_50, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(50, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define OBJ_certTypes OBJ_pkcs9,22L
#define BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED 
#define CLD_STOPPED CLD_STOPPED
#define OBJ_blake2b512 1L,3L,6L,1L,4L,1L,1722L,12L,2L,1L,16L
#define DECLARE_PEM_read_fp(name,type) type *PEM_read_ ##name(FILE *fp, type **x, pem_password_cb *cb, void *u);
#define OBJ_id_smime_mod_ess OBJ_id_smime_mod,2L
#define MS_UNBINDABLE (1<<17)
#define NID_ecdsa_with_SHA224 793
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_210(p,o,s) 0
#define _PC_MAX_CANON _PC_MAX_CANON
#define BIO_get_peer_name(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,2))
#define ERR_LIB_OSSL_STORE 44
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_214(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_215(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_216(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_217(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_218(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_219(p,o,s) 0
#define FOLLY_PRINTF_FORMAT 
#define LN_pilotOrganization "pilotOrganization"
#define ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE 167
#define EVP_F_AESNI_XTS_INIT_KEY 207
#define CLONE_CHILD_SETTID 0x01000000
#define __USE_POSIX2 1
#define _EXT_ALLOC_TRAITS_H 1
#define IP_TRANSPARENT 19
#define SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM 257
#define X509_F_X509_NAME_ADD_ENTRY 113
#define BOOST_PP_FOR_126_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(127, s) BOOST_PP_IIF(c, BOOST_PP_FOR_127, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(127, s), p, o, m)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_222(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_223(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_224(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_227(p,o,s) 0
#define _mm_maskz_mul_round_sd(U,A,B,C) (__m128d)__builtin_ia32_mulsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_229(p,o,s) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_49(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_50, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(50, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_MPL_AUX_CONFIG_ETI_HPP_INCLUDED 
#define SSL_CTRL_SET_SIGALGS 97
#define TLS1_CK_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C063
#define BOOST_MPL_AUX_CONFIG_NTTP_HPP_INCLUDED 
#define BOOST_HAS_TRIVIAL_MOVE_CONSTRUCTOR(T) (__is_trivially_constructible(T, T&&) && is_constructible<T, T&&>::value && !::boost::is_volatile<T>::value)
#define ULONG_MAX (LONG_MAX * 2UL + 1UL)
#define NID_id_on 264
#define LN_ct_cert_scts "CT Certificate SCTs"
#define NID_auth_ecdsa 1047
#define SSL_F_SSL3_SETUP_KEY_BLOCK 157
#define MOVE_MOUNT_T_SYMLINKS 0x00000010
#define EVP_PKEY_OP_UNDEFINED 0
#define NID_id_GostR3411_94_with_GostR3410_94_cc 852
#define BOOST_VARIANT_HAS_DECLTYPE_APPLY_VISITOR_RETURN_TYPE 
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_230(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_232(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_233(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_234(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_235(p,o,s) 0
#define TCP_MSS_DEFAULT 536U
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_238(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_239(p,o,s) 0
#define TIMEVAL_TO_TIMESPEC(tv,ts) { (ts)->tv_sec = (tv)->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; }
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_185 185
#define ASN1_STRFLGS_DUMP_UNKNOWN 0x100
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_186 186
#define BOOST_PP_REPEAT_1_144(m,d) BOOST_PP_REPEAT_1_143(m, d) m(2, 143, d)
#define _GLIBCXX_HAVE_ALIGNED_ALLOC 1
#define DSA_R_SEED_LEN_SMALL 110
#define NID_pbeWithMD5AndDES_CBC 10
#define OBJ_sha3_224 OBJ_nist_hashalgs,7L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101001 (1)(0)(1)(0)(1)(0)(0)(1),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000110 (0)(1)(0)(0)(0)(1)(1)(0),
#define NID_ecdsa_with_SHA256 794
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_243(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_244(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_246(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_247(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_248(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_249(p,o,s) 0
#define SOME_KIND_OF_LOG_IF_EVERY_N(severity,condition,n,what_to_do) static int LOG_OCCURRENCES = 0, LOG_OCCURRENCES_MOD_N = 0; ++LOG_OCCURRENCES; if (condition && ((LOG_OCCURRENCES_MOD_N=(LOG_OCCURRENCES_MOD_N + 1) % n) == (1 % n))) google::LogMessage( __FILE__, __LINE__, google::GLOG_ ## severity, LOG_OCCURRENCES, &what_to_do).stream()
#define MALLOCX_ZERO ((int)0x40)
#define CHAR_MIN SCHAR_MIN
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_189 189
#define _IOC(dir,type,nr,size) (((dir) << _IOC_DIRSHIFT) | ((type) << _IOC_TYPESHIFT) | ((nr) << _IOC_NRSHIFT) | ((size) << _IOC_SIZESHIFT))
#define TLS1_RFC_ECDHE_RSA_WITH_AES_256_CBC_SHA "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
#define _POSIX_FD_SETSIZE _POSIX_OPEN_MAX
#define NID_id_qt 259
#define BIO_R_AMBIGUOUS_HOST_OR_SERVICE 129
#define SCNoLEAST8 "hho"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_250(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_252(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_253(p,o,s) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_254(p,o,s) 0
#define FP_LLOGB0 (-__FP_LONG_MAX - 1)
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_256(p,o,s) 0
#define FOLLY_GCC_DISABLE_NEW_SHADOW_WARNINGS FOLLY_GNU_DISABLE_WARNING("-Wshadow-compatible-local") FOLLY_GNU_DISABLE_WARNING("-Wshadow-local") FOLLY_GNU_DISABLE_WARNING("-Wshadow")
#define BOOST_PP_REPEAT_1_86(m,d) BOOST_PP_REPEAT_1_85(m, d) m(2, 85, d)
#define TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA256 "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256"
#define BOOST_PP_DEC_250 249
#define APACHE_THRIFT_ACCESSOR_key 
#define BOOST_PP_FOR_228(s,p,o,m) BOOST_PP_FOR_228_C(BOOST_PP_BOOL(p(229, s)), s, p, o, m)
#define BN_GF2m_sub(r,a,b) BN_GF2m_add(r, a, b)
#define BOOST_IDENTITY_TYPE(parenthesized_type) boost::function_traits< void parenthesized_type >::arg1_type
#define _mm256_maskz_inserti32x4(U,X,Y,C) ((__m256i) __builtin_ia32_inserti32x4_256_mask ((__v8si)(__m256i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define SSL_CTX_sess_accept_renegotiate(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_ACCEPT_RENEGOTIATE,0,NULL)
#define SSL_OP_TLS_ROLLBACK_BUG 0x00800000U
#define EVP_MD_FLAG_DIGALGID_MASK 0x0018
#define BOOST_PP_REPEAT_1_88(m,d) BOOST_PP_REPEAT_1_87(m, d) m(2, 87, d)
#define BOOST_PP_REPEAT_2_183(m,d) BOOST_PP_REPEAT_2_182(m, d) m(3, 182, d)
#define _IOW_BAD(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),sizeof(size))
#define BOOST_PP_FOR_229(s,p,o,m) BOOST_PP_FOR_229_C(BOOST_PP_BOOL(p(230, s)), s, p, o, m)
#define SN_sendProxiedRouter "sendProxiedRouter"
#define BOOST_PP_DEC_251 250
#define BOOST_PP_WHILE_199_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_200, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(200, s))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_6 6
#define DTLS1_AL_HEADER_LENGTH 2
#define RENAME_WHITEOUT (1 << 2)
#define DCHECK_GE(val1,val2) CHECK_GE(val1, val2)
#define BOOST_DEFAULTED_FUNCTION(fun,body) fun = default;
#define __CPU_OP_S(setsize,destset,srcset1,srcset2,op) (__extension__ ({ cpu_set_t *__dest = (destset); const __cpu_mask *__arr1 = (srcset1)->__bits; const __cpu_mask *__arr2 = (srcset2)->__bits; size_t __imax = (setsize) / sizeof (__cpu_mask); size_t __i; for (__i = 0; __i < __imax; ++__i) ((__cpu_mask *) __dest->__bits)[__i] = __arr1[__i] op __arr2[__i]; __dest; }))
#define _mm_i32scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv4si ((void *) (ADDR), (__mmask8)0xFF, (__v4si)(__m128i) (INDEX), (__v4si)(__m128i) (V1), (int) (SCALE))
#define ASN1_F_ASN1_GET_INT64 224
#define NID_mobileTelephoneNumber 488
#define SO_ATTACH_BPF 50
#define _POSIX_VERSION 200809L
#define BOOST_MPL_VECTOR_AUX_BACK_HPP_INCLUDED 
#define ASN1_F_A2I_ASN1_STRING 103
#define BLOCK_SIZE (1<<BLOCK_SIZE_BITS)
#define _GLIBCXX_PACKAGE_BUGREPORT ""
#define CRYPTO_get_locking_callback() (NULL)
#define NID_setct_CapReqTBE 580
#define NID_undef 0
#define ATOMIC_CHAR32_T_LOCK_FREE __GCC_ATOMIC_CHAR32_T_LOCK_FREE
#define NID_id_it_subscriptionResponse 306
#define X509V3_R_SECTION_NOT_FOUND 150
#define EC_F_ECX_PUB_ENCODE 268
#define BEV_EVENT_EOF 0x10
#define _mm512_i32gather_pd(INDEX,ADDR,SCALE) (__m512d) __builtin_ia32_gathersiv8df ((__v8df)_mm512_undefined_pd(), (void const *) (ADDR), (__v8si)(__m256i) (INDEX), (__mmask8)0xFF, (int) (SCALE))
#define SSL_TXT_CMPALL "COMPLEMENTOFALL"
#define TLS1_RFC_RSA_PSK_WITH_AES_128_GCM_SHA256 "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256"
#define BOOST_PP_FOR_86_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(87, s) BOOST_PP_IIF(c, BOOST_PP_FOR_87, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(87, s), p, o, m)
#define X509V3_R_ISSUER_DECODE_ERROR 126
#define SN_hmac_sha3_256 "id-hmacWithSHA3-256"
#define JEMALLOC_OVERRIDE_VALLOC 
#define X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS 0x10
#define OBJ_setct_CertReqTBE OBJ_set_ctype,77L
#define _mm_i32scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scattersiv2di ((void *) (ADDR), (__mmask8)0xFF, (__v4si)(__m128i) (INDEX), (__v2di)(__m128i) (V1), (int) (SCALE))
#define SSL_F_OPENSSL_INIT_SSL 342
#define PKCS7_F_PKCS7_SIGNATUREVERIFY 113
#define OBJ_setct_CertReqTBS OBJ_set_ctype,46L
#define OBJ_aes_192_cbc OBJ_aes,22L
#define GFLAGS_DLL_DEFINE_FLAG 
#define AF_ECONET PF_ECONET
#define SSL_CTX_sess_connect_renegotiate(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CONNECT_RENEGOTIATE,0,NULL)
#define NID_cryptopro 805
#define __owur 
#define OBJ_id_smime_aa_smimeEncryptCerts OBJ_id_smime_aa,13L
#define SSL_TXT_CAMELLIA "CAMELLIA"
#define _mm_maskz_sqrt_round_ss(U,A,B,C) (__m128)__builtin_ia32_sqrtss_mask_round (B, A, (__v4sf) _mm_setzero_ps (), U, C)
#define NID_dsa_with_SHA3_384 1110
#define _mm256_mask_fpclass_pd_mask(u,X,C) ((__mmask8) __builtin_ia32_fpclasspd256_mask ((__v4df) (__m256d) (X), (int) (C),(__mmask8)(u)))
#define OBJ_mgf1 OBJ_pkcs1,8L
#define BOOST_PP_SUB_O_I(x,y) (BOOST_PP_DEC(x), BOOST_PP_DEC(y))
#define OBJ_safeContentsBag OBJ_pkcs12_BagIds,6L
#define EVP_PKEY_CTRL_RSA_KEYGEN_BITS (EVP_PKEY_ALG_CTRL + 3)
#define BOOST_PP_SEQ_FOLD_LEFT_I_103(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_104, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(104, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_aes_192_cbc_hmac_sha256 "aes-192-cbc-hmac-sha256"
#define BOOST_MPL_LIMITS_VECTOR_HPP_INCLUDED 
#define NID_brainpoolP512r1 933
#define OBJ_aes_192_ccm OBJ_aes,27L
#define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER 
#define SOL_NFC 280
#define NID_id_GostR3411_2012_512 983
#define OBJ_id_GostR3410_2001_cc OBJ_cryptocom,1L,5L,4L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11000001 (1)(1)(0)(0)(0)(0)(0)(1),
#define evutil_socket_t int
#define ASN1_dup_of_const(type,i2d,d2i,x) ((type*)ASN1_dup(CHECKED_I2D_OF(const type, i2d), CHECKED_D2I_OF(type, d2i), CHECKED_PTR_OF(const type, x)))
#define SSL_R_SSLV3_ALERT_BAD_RECORD_MAC 1020
#define OBJ_ac_targeting OBJ_id_pe,5L
#define SCHED_ISO 4
#define NID_id_smime_ct_contentInfo 209
#define NID_X9_62_prime239v3 414
#define __INTMAX_C(c) c ## L
#define IPV6_RXDSTOPTS IPV6_DSTOPTS
#define LN_blake2s256 "blake2s256"
#define OBJ_physicalDeliveryOfficeName OBJ_X509,19L
#define _GLIBCXX_UTILITY 1
#define EVUTIL_EAI_AGAIN EAI_AGAIN
#define EVP_CIPH_FLAG_AEAD_CIPHER 0x200000
#define _mm_mask_fpclass_ss_mask(X,C,U) ((__mmask8) __builtin_ia32_fpclassss_mask ((__v4sf) (__m128) (X), (int) (C), (__mmask8) (U)))
#define timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))
#define RSA_F_RSA_NULL_PUBLIC_ENCRYPT 135
#define DOUBLE_CONVERSION_DOUBLE_CONVERSION_H_ 
#define OPENSSL_SYS_UNIX 
#define TLS1_TXT_DHE_PSK_WITH_AES_128_CCM "DHE-PSK-AES128-CCM"
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_CBC_SHA "ECDH-ECDSA-AES128-SHA"
#define __enclv_generic(leaf,b,c,d,retval) __asm__ __volatile__("enclv\n\t" : "=a" (retval), "=b" (b), "=c" (b), "=d" (d) : "a" (leaf), "b" (b), "c" (c), "d" (d) : "cc")
#define BOOST_PP_SEQ_ELEM_202(_) BOOST_PP_SEQ_ELEM_201
#define BOOST_PP_SEQ_ELEM_203(_) BOOST_PP_SEQ_ELEM_202
#define TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA "ECDHE-PSK-AES128-CBC-SHA"
#define LN_Mail "Mail"
#define SSL_F_SSL_CERT_SET0_CHAIN 340
#define _STL_HEAP_H 1
#define JEMALLOC_SECTION(s) JEMALLOC_ATTR(section(s))
#define OBJ_documentIdentifier OBJ_pilotAttributeType,11L
#define TCP_S_DATA_OUT (1 << 3)
#define SHRT_WIDTH 16
#define BOOST_PP_REPEAT_3_216(m,d) BOOST_PP_REPEAT_3_215(m, d) m(4, 215, d)
#define EVP_CTRL_AEAD_SET_IV_FIXED 0x12
#define BOOST_RV_REF_3_TEMPL_ARGS(TYPE,ARG1,ARG2,ARG3) TYPE<ARG1, ARG2, ARG3> &&
#define lh_node_usage_stats OPENSSL_LH_node_usage_stats
#define _mm512_mask_cmp_round_ps_mask(M,X,Y,P,R) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)(M), R))
#define OBJ_camellia_128_cfb128 OBJ_camellia,4L
#define BOOST_PREPROCESSOR_LIST_DETAIL_FOLD_RIGHT_HPP 
#define BOOST_PP_SEQ_ELEM_210(_) BOOST_PP_SEQ_ELEM_209
#define __cpp_lib_generic_associative_lookup 201304
#define BOOST_PP_SEQ_ELEM_212(_) BOOST_PP_SEQ_ELEM_211
#define BOOST_PP_SEQ_ELEM_213(_) BOOST_PP_SEQ_ELEM_212
#define BOOST_PP_SEQ_ELEM_214(_) BOOST_PP_SEQ_ELEM_213
#define BOOST_PP_SEQ_ELEM_216(_) BOOST_PP_SEQ_ELEM_215
#define BOOST_PP_SEQ_ELEM_217(_) BOOST_PP_SEQ_ELEM_216
#define __HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)
#define CT_F_SCT_SET1_SIGNATURE 116
#define FMT_TYPE_CONSTANT(Type,constant) template <typename Char> struct type_constant<Type, Char> : std::integral_constant<type, type::constant> {}
#define DSA_F_DSA_PRINT_FP 105
#define OBJ_x509Certificate OBJ_certTypes,1L
#define __SIZE_T__ 
#define EVP_PKEY_CTRL_EC_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 7)
#define LN_netscape_ca_revocation_url "Netscape CA Revocation Url"
#define BOOST_PP_SEQ_ELEM_220(_) BOOST_PP_SEQ_ELEM_219
#define BOOST_PP_SEQ_ELEM_221(_) BOOST_PP_SEQ_ELEM_220
#define BOOST_PP_SEQ_ELEM_222(_) BOOST_PP_SEQ_ELEM_221
#define NID_rc5_ofb64 123
#define JEMALLOC_HAVE_ATTR_ALLOC_SIZE 
#define EFAULT 14
#define BOOST_PP_SEQ_ELEM_228(_) BOOST_PP_SEQ_ELEM_227
#define BOOST_PP_SEQ_ELEM_229(_) BOOST_PP_SEQ_ELEM_228
#define BOOST_PP_REPEAT_2_200(m,d) BOOST_PP_REPEAT_2_199(m, d) m(3, 199, d)
#define HEADER_STACK_H 
#define RSA_R_DMQ1_NOT_CONGRUENT_TO_D 125
#define SSL_F_TLS_PSK_DO_BINDER 506
#define EVP_CCM8_TLS_TAG_LEN 8
#define BOOST_PP_REPEAT_2_202(m,d) BOOST_PP_REPEAT_2_201(m, d) m(3, 201, d)
#define BOOST_PP_LIST_FOLD_LEFT_51(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_52, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(52, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_ELEM_233(_) BOOST_PP_SEQ_ELEM_232
#define BOOST_PP_SEQ_ELEM_234(_) BOOST_PP_SEQ_ELEM_233
#define BOOST_PP_SEQ_ELEM_235(_) BOOST_PP_SEQ_ELEM_234
#define BOOST_PP_SEQ_ELEM_236(_) BOOST_PP_SEQ_ELEM_235
#define BOOST_PP_FOR_161_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(162, s) BOOST_PP_IIF(c, BOOST_PP_FOR_162, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(162, s), p, o, m)
#define FOLLY_DEMANGLE_MAX_SYMBOL_SIZE 1024
#define BOOST_PP_SEQ_ELEM_239(_) BOOST_PP_SEQ_ELEM_238
#define BOOST_PP_WHILE_84_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_85, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(85, s))
#define _mm256_mask_blend_epi32(__U,__A,__W) ((__m256i) __builtin_ia32_blendmd_256_mask ((__v8si) (__A), (__v8si) (__W), (__mmask8) (__U)))
#define EVP_PKEY_CTRL_RSA_OAEP_MD (EVP_PKEY_ALG_CTRL + 9)
#define LN_auth_null "auth-null"
#define AI_ALL 0x0010
#define SN_id_ad "id-ad"
#define evtimer_assign(ev,b,cb,arg) event_assign((ev), (b), -1, 0, (cb), (arg))
#define _mm256_mask_ternarylogic_epi32(A,U,B,C,I) ((__m256i) __builtin_ia32_pternlogd256_mask ((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (__v8si)(__m256i)(C), (int)(I), (__mmask8)(U)))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_99(p,o,s) 0
#define BOOST_TT_IS_FUNCTION_CXX_11_HPP_INCLUDED 
#define SSL_R_TLSV13_ALERT_MISSING_EXTENSION 1109
#define BOOST_PP_SEQ_ELEM_240(_) BOOST_PP_SEQ_ELEM_239
#define BOOST_PP_SEQ_ELEM_242(_) BOOST_PP_SEQ_ELEM_241
#define BOOST_PP_SEQ_ELEM_243(_) BOOST_PP_SEQ_ELEM_242
#define BOOST_PP_SEQ_ELEM_244(_) BOOST_PP_SEQ_ELEM_243
#define BOOST_PP_SEQ_ELEM_246(_) BOOST_PP_SEQ_ELEM_245
#define BOOST_PP_SEQ_ELEM_247(_) BOOST_PP_SEQ_ELEM_246
#define BOOST_PP_SEQ_ELEM_248(_) BOOST_PP_SEQ_ELEM_247
#define V_ASN1_VISIBLESTRING 26
#define DH_R_CHECK_INVALID_J_VALUE 115
#define _mm_sqrt_round_ss(A,B,C) (__m128)__builtin_ia32_sqrtss_mask_round (B, A, (__v4sf) _mm_setzero_ps (), -1, C)
#define BOOST_PP_FOR_252(s,p,o,m) BOOST_PP_FOR_252_C(BOOST_PP_BOOL(p(253, s)), s, p, o, m)
#define _SIDD_MOST_SIGNIFICANT 0x40
#define MS_BORN (1<<29)
#define BOOST_PP_LIST_FOLD_LEFT_57(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_58, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(58, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_WHILE_95_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_96, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(96, s))
#define SN_aria_128_ofb128 "ARIA-128-OFB"
#define SSL3_AD_BAD_CERTIFICATE 42
#define BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE_SPEC(t) 
#define OBJ_netscape_revocation_url OBJ_netscape_cert_extension,3L
#define TLS1_TXT_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA "SRP-DSS-3DES-EDE-CBC-SHA"
#define BOOST_PP_SEQ_FOLD_LEFT_226(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_226(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PTHREAD_CANCELED ((void *) -1)
#define NID_mgf1 911
#define BOOST_PP_SEQ_ELEM_250(_) BOOST_PP_SEQ_ELEM_249
#define SSL3_VERSION_MAJOR 0x03
#define BOOST_PP_SEQ_ELEM_253(_) BOOST_PP_SEQ_ELEM_252
#define BOOST_PP_SEQ_ELEM_254(_) BOOST_PP_SEQ_ELEM_253
#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP { { __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_RECURSIVE_NP) } }
#define CPU_COUNT_S(setsize,cpusetp) __CPU_COUNT_S (setsize, cpusetp)
#define __FLT128_HAS_DENORM__ 1
#define LN_pilotGroups "pilotGroups"
#define X509_TRUST_OBJECT_SIGN 5
#define F_SETFD 2
#define F_SETFL 4
#define OBJ_set_brand_Visa OBJ_set_brand,4L
#define SN_id_ce "id-ce"
#define SN_id_GostR3410_2001 "gost2001"
#define ASN1_R_BUFFER_TOO_SMALL 107
#define _mm_fixupimm_ps(X,Y,Z,C) ((__m128)__builtin_ia32_fixupimmps128_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(-1)))
#define SSL_F_SSL_SET_ALPN_PROTOS 344
#define LN_camellia_256_ecb "camellia-256-ecb"
#define NID_aes_128_cfb1 650
#define __F_GETSIG 11
#define NID_aes_128_cfb8 653
#define SSL_want_read(s) (SSL_want(s) == SSL_READING)
#define SSL_TXT_kEDH "kEDH"
#define SN_mime_mhs "mime-mhs"
#define TLS1_TXT_PSK_WITH_AES_256_CCM "PSK-AES256-CCM"
#define PKCS7_R_SIGNING_CTRL_FAILURE 147
#define LN_des_ecb "des-ecb"
#define _mm256_mask_ternarylogic_epi64(A,U,B,C,I) ((__m256i) __builtin_ia32_pternlogq256_mask ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (__v4di)(__m256i)(C), (int)(I), (__mmask8)(U)))
#define BOOST_MOVE_IMPDEF(TYPE) TYPE
#define SSL_R_MISSING_SUPPORTED_GROUPS_EXTENSION 209
#define SSL_CTRL_SET_CURRENT_CERT 117
#define EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN 180
#define SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm "id-tc26-cipher-gostr3412-2015-magma-ctracpkm"
#define EVP_CIPH_ECB_MODE 0x1
#define SN_email_protect "emailProtection"
#define __cpp_constinit 201907L
#define SN_id_smime_spq "id-smime-spq"
#define BOOST_PP_FOR_18_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(19, s) BOOST_PP_IIF(c, BOOST_PP_FOR_19, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(19, s), p, o, m)
#define BOOST_PP_REPEAT_2(c,m,d) BOOST_PP_REPEAT_2_I(c, m, d)
#define BOOST_PP_REPEAT_3(c,m,d) BOOST_PP_REPEAT_3_I(c, m, d)
#define BOOST_PP_REPEAT_4(c,m,d) BOOST_PP_ERROR(0x0003)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_196 196
#define PF_ROUTE PF_NETLINK
#define SSL_CTRL_GET_SESS_CACHE_MODE 45
#define SSL_F_TLS_CONSTRUCT_STOC_ALPN 451
#define _GLIBCXX_HAVE_LIMIT_DATA 1
#define SN_id_aca "id-aca"
#define _mm_fixupimm_sd(X,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))
#define NID_documentAuthor 471
#define X509V3_F_V2I_GENERAL_NAMES 118
#define T_ERROR(format_string,...) { COMPUTE_TIME fprintf( stderr, "[%s,%d] [%s, %d ms] ERROR: " format_string " \n", __FILE__, __LINE__, dbgtime, ms, ##__VA_ARGS__); }
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1100111 (1)(1)(0)(0)(1)(1)(1),
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_198 198
#define _mm_fixupimm_ss(X,Y,Z,C) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(-1), _MM_FROUND_CUR_DIRECTION))
#define FMT_FUNC 
#define TCP_LINGER2 8
#define SN_oscca "oscca"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_199 199
#define TLS1_AD_UNRECOGNIZED_NAME 112
#define BOOST_PP_REPEAT_1_93(m,d) BOOST_PP_REPEAT_1_92(m, d) m(2, 92, d)
#define _GLIBCXX_CTIME 1
#define LN_pbe_WithSHA1And128BitRC4 "pbeWithSHA1And128BitRC4"
#define EVENT__HAVE_SYS_UIO_H 1
#define BOOST_MPL_VECTOR_VECTOR20_HPP_INCLUDED 
#define ERR_NUM_ERRORS 16
#define PKCS7_F_PKCS7_DATAVERIFY 107
#define BOOST_PP_REPEAT_1_94(m,d) BOOST_PP_REPEAT_1_93(m, d) m(2, 93, d)
#define __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
#define OPENSSL_EC_EXPLICIT_CURVE 0x000
#define _ANSI_STDARG_H_ 
#define SSL_MODE_AUTO_RETRY 0x00000004U
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111000 (1)(1)(1)(1)(0)(0)(0),
#define BOOST_PP_WHILE_251_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_252, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(252, s))
#define SSL_F_SSL_CTX_SET_SSL_VERSION 170
#define SSL_OP_NO_TLSv1_1 0x10000000U
#define SSL_OP_NO_TLSv1_2 0x08000000U
#define SSL_OP_NO_TLSv1_3 0x20000000U
#define TLS1_RFC_DHE_PSK_WITH_NULL_SHA256 "TLS_DHE_PSK_WITH_NULL_SHA256"
#define SN_id_cmc_getCert "id-cmc-getCert"
#define EVENT__HAVE_INET_NTOP 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000101 (0)(0)(0)(0)(0)(1)(0)(1),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111010 (1)(1)(1)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111011 (1)(1)(1)(1)(0)(1)(1),
#define SSL_CERT_SET_FIRST 1
#define SSL_F_SSL_SET_SESSION_TICKET_EXT 294
#define F_SETLK 6
#define BOOST_PP_SEQ_FOLD_LEFT_I_1(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_2, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(2, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SN_setct_CapResData "setct-CapResData"
#define X509_V_FLAG_PARTIAL_CHAIN 0x80000
#define BOOST_PP_WHILE_29(p,o,s) BOOST_PP_WHILE_29_C(BOOST_PP_BOOL(p(30, s)), p, o, s)
#define DH_R_CHECK_PUBKEY_TOO_LARGE 123
#define SN_id_it "id-it"
#define BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED 
#define M_2_SQRTPI 1.12837916709551257390
#define __S_TYPEISSEM(buf) ((buf)->st_mode - (buf)->st_mode)
#define LN_dsaWithSHA "dsaWithSHA"
#define NID_id_pkix_OCSP_archiveCutoff 370
#define NID_pss 435
#define SN_wap_wsg_idm_ecid_wtls1 "wap-wsg-idm-ecid-wtls1"
#define SN_setct_CredRevReqTBSX "setct-CredRevReqTBSX"
#define SN_wap_wsg_idm_ecid_wtls3 "wap-wsg-idm-ecid-wtls3"
#define SN_wap_wsg_idm_ecid_wtls4 "wap-wsg-idm-ecid-wtls4"
#define SN_wap_wsg_idm_ecid_wtls5 "wap-wsg-idm-ecid-wtls5"
#define SN_wap_wsg_idm_ecid_wtls6 "wap-wsg-idm-ecid-wtls6"
#define SN_wap_wsg_idm_ecid_wtls7 "wap-wsg-idm-ecid-wtls7"
#define SN_wap_wsg_idm_ecid_wtls8 "wap-wsg-idm-ecid-wtls8"
#define SN_wap_wsg_idm_ecid_wtls9 "wap-wsg-idm-ecid-wtls9"
#define BOOST_PP_FOR_112_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(113, s) BOOST_PP_IIF(c, BOOST_PP_FOR_113, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(113, s), p, o, m)
#define IN_CLASSA(a) ((((in_addr_t)(a)) & 0x80000000) == 0)
#define IN_CLASSB(a) ((((in_addr_t)(a)) & 0xc0000000) == 0x80000000)
#define IN_CLASSC(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xc0000000)
#define IN_CLASSD(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xe0000000)
#define INADDR_ALLHOSTS_GROUP ((in_addr_t) 0xe0000001)
#define NID_X9_62_prime239v1 412
#define NID_X9_62_prime239v2 413
#define SN_aria_256_gcm "ARIA-256-GCM"
#define EC_F_ECDSA_DO_VERIFY 252
#define _mm_alignr_epi64(X,Y,C) ((__m128i)__builtin_ia32_alignq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(C), (__v2di)(__m128i)(X), (__mmask8)-1))
#define TLS_CT_GOST12_SIGN 238
#define NI_NUMERICSERV 2
#define SN_seed_ecb "SEED-ECB"
#define EVP_PKEY_CTX_set_rsa_pss_saltlen(ctx,len) RSA_pkey_ctx_ctrl(ctx, (EVP_PKEY_OP_SIGN|EVP_PKEY_OP_VERIFY), EVP_PKEY_CTRL_RSA_PSS_SALTLEN, len, NULL)
#define SN_id_kp "id-kp"
#define NID_sbgp_ipAddrBlock 290
#define _mm_sha1rnds4_epu32(A,B,I) ((__m128i) __builtin_ia32_sha1rnds4 ((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (int)(I)))
#define SO_RCVBUFFORCE 33
#define TLS1_AD_INTERNAL_ERROR 80
#define RSA_F_RSA_METH_SET1_NAME 163
#define TLS1_RFC_RSA_PSK_WITH_NULL_SHA "TLS_RSA_PSK_WITH_NULL_SHA"
#define __HAVE_DISTINCT_FLOAT128 1
#define TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA "ECDHE-PSK-NULL-SHA"
#define PKCS7_NOSMIMECAP 0x200
#define __S_TYPEISSHM(buf) ((buf)->st_mode - (buf)->st_mode)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_114(s,p,o,m) 0
#define BOOST_TT_ADD_REFERENCE_HPP_INCLUDED 
#define X509_F_X509_ATTRIBUTE_GET0_DATA 139
#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP { { __PTHREAD_MUTEX_INITIALIZER (PTHREAD_MUTEX_ERRORCHECK_NP) } }
#define EVENT__HAVE_STDDEF_H 1
#define BOOST_PP_WHILE_9_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_10, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(10, s))
#define sk_pop_free OPENSSL_sk_pop_free
#define NID_aes_128_ocb 958
#define BOOST_PP_WHILE_27_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_28, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(28, s))
#define SN_rc5_cbc "RC5-CBC"
#define __warnattr(msg) __attribute__((__warning__ (msg)))
#define AF_SMC PF_SMC
#define _WBNOINVDINTRIN_H_INCLUDED 
#define _LZCNTINTRIN_H_INCLUDED 
#define CONF_F_MODULE_INIT 115
#define BOOST_PREPROCESSOR_SLOT_SLOT_HPP 
#define NID_id_smime_ct_publishCert 206
#define BOOST_PP_FOR_202_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(203, s) BOOST_PP_IIF(c, BOOST_PP_FOR_203, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(203, s), p, o, m)
#define OBJ_id_tc26_gost_28147_param_Z OBJ_id_tc26_gost_28147_constants,1L
#define SN_id_alg "id-alg"
#define SN_id_on "id-on"
#define __UINTMAX_C(c) c ## UL
#define BOOST_PP_SEQ_FOLD_LEFT_16(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_16(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define APACHE_THRIFT_ACCESSOR_name 
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define BOOST_INTRUSIVE_DETAIL_ARRAY_INITIALIZER_HPP 
#define IP_DROP_MEMBERSHIP 36
#define NID_sdsiCertificate 159
#define SN_id_pe "id-pe"
#define SSL_OP_ALLOW_NO_DHE_KEX 0x00000400U
#define PTHREAD_STACK_MIN 16384
#define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS
#define BOOST_PP_WHILE_166_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_167, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(167, s))
#define NID_camellia_256_gcm 969
#define PKCS7_F_PKCS7_DATAFINAL 128
#define AF_XDP PF_XDP
#define _EXT_CMATH 1
#define SN_id_regCtrl_protocolEncrKey "id-regCtrl-protocolEncrKey"
#define BOOST_COMPILER "GNU C++ version " __VERSION__
#define SN_id_qt "id-qt"
#define NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet 828
#define lh_node_stats_bio OPENSSL_LH_node_stats_bio
#define SSL_R_BAD_SRTP_MKI_VALUE 352
#define BOOST_TT_IS_ARITHMETIC_HPP_INCLUDED 
#define BOOST_PP_SEQ_ELEM_52(_) BOOST_PP_SEQ_ELEM_51
#define ASN1_R_ILLEGAL_HEX 178
#define BOOST_PP_LIST_FOLD_LEFT_61(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_62, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(62, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_REPEAT_2_213(m,d) BOOST_PP_REPEAT_2_212(m, d) m(3, 212, d)
#define SN_dstu28147_ofb "dstu28147-ofb"
#define SSL_TXT_NULL "NULL"
#define OBJ_setAttr_T2cleartxt OBJ_setAttr_IssCap_T2,2L
#define BIO_CB_RETURN 0x80
#define SN_dhSinglePass_stdDH_sha256kdf_scheme "dhSinglePass-stdDH-sha256kdf-scheme"
#define TLS1_RFC_DHE_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384"
#define SSL_SECOP_OTHER_DH (3 << 16)
#define BOOST_PP_SEQ_FOLD_LEFT_I_99(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_100, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(100, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_LIST_FOLD_LEFT_64(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_65, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(65, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB 72
#define BOOST_PP_REPEAT_2_217(m,d) BOOST_PP_REPEAT_2_216(m, d) m(3, 216, d)
#define SSL_CTRL_SESS_NUMBER 20
#define LN_dstu28147_cfb "DSTU Gost 28147-2009 CFB mode"
#define BOOST_PP_FOR_53_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(54, s) BOOST_PP_IIF(c, BOOST_PP_FOR_54, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(54, s), p, o, m)
#define DTLS_CTRL_GET_LINK_MIN_MTU 121
#define BOOST_PP_LIST_FOLD_LEFT_67(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_68, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(68, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_NODE_65(p) BOOST_PP_IIF(p(65), 65, 66)
#define __WCHAR_MAX __WCHAR_MAX__
#define BN_F_BN_GF2M_MOD_MUL 133
#define B_ASN1_OCTET_STRING 0x0200
#define SN_undef "UNDEF"
#define BOOST_MPL_AUX_SIZE_IMPL_HPP_INCLUDED 
#define BOOST_CORE_NO_EXCEPTIONS_SUPPORT_HPP 
#define i2d_DHxparams_bio(bp,x) ASN1_i2d_bio_of_const(DH, i2d_DHxparams, bp, x)
#define IP_PMTUDISC_WANT 1
#define ERR_LIB_EVP 6
#define NID_secp192k1 711
#define SSL_R_SIGNATURE_ALGORITHMS_ERROR 360
#define __iovec_defined 1
#define SYS_F_FOPEN 1
#define BOOST_PP_FOR_232(s,p,o,m) BOOST_PP_FOR_232_C(BOOST_PP_BOOL(p(233, s)), s, p, o, m)
#define OBJ_sshServer OBJ_id_kp,22L
#define EVP_CTRL_INIT 0x0
#define TLS_CT_RSA_FIXED_DH 3
#define EVP_F_EVP_ENCRYPTFINAL_EX 127
#define TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"
#define BOOST_PP_CHECK_RESULT_1 1, BOOST_PP_NIL
#define FS_IOC_GET_ENCRYPTION_POLICY_EX _IOWR('f', 22, __u8[9])
#define HEADER_SHA_H 
#define _GLIBCXX_END_NAMESPACE_VERSION 
#define BOOST_PP_SEQ_FOLD_LEFT_12(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_12(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_R_UNSUPPORTED_ELLIPTIC_CURVE 315
#define EVP_PKEY_CTRL_DH_KDF_UKM (EVP_PKEY_ALG_CTRL + 11)
#define EC_F_NISTP521_PRE_COMP_NEW 237
#define NID_rc4_40 97
#define LN_id_scrypt "scrypt"
#define CONF_R_NO_SUCH_FILE 114
#define BOOST_PP_CONFIG_IDEAL() 0x0002
#define TLS1_TXT_ADH_WITH_AES_256_SHA256 "ADH-AES256-SHA256"
#define OBJ_pilotDSA OBJ_pilotObjectClass,21L
#define NID_netscape_ca_policy_url 76
#define BOOST_INTEGER_STATIC_LOG2_HPP 
#define BOOST_PP_REPEAT_1_156(m,d) BOOST_PP_REPEAT_1_155(m, d) m(2, 155, d)
#define __USE_MISC 1
#define SSL_R_UNKNOWN_STATE 255
#define _mm256_maskz_shuffle_epi32(U,X,C) ((__m256i) __builtin_ia32_pshufd256_mask ((__v8si)(__m256i)(X), (int)(C), (__v8si)(__m256i) _mm256_setzero_si256 (), (__mmask8)(U)))
#define NID_facsimileTelephoneNumber 867
#define SYS_F_GETHOSTBYNAME 17
#define BOOST_MPL_AUX_PUSH_FRONT_IMPL_HPP_INCLUDED 
#define IN6_IS_ADDR_LOOPBACK(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == htonl (1); }))
#define BOOST_PP_CONFIG_FLAGS() (BOOST_PP_CONFIG_STRICT())
#define CT_F_SCT_CTX_NEW 126
#define _mm_insert_epi16(A,D,N) ((__m128i) __builtin_ia32_vec_set_v8hi ((__v8hi)(__m128i)(A), (int)(D), (int)(N)))
#define _mm_range_pd(A,B,C) ((__m128d) __builtin_ia32_rangepd128_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)_mm_setzero_pd(), (__mmask8)-1))
#define ASN1_i2d_fp_of(type,i2d,out,x) (ASN1_i2d_fp(CHECKED_I2D_OF(type, i2d), out, CHECKED_PTR_OF(type, x)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10100011 (1)(0)(1)(0)(0)(0)(1)(1),
#define _mm_range_ps(A,B,C) ((__m128) __builtin_ia32_rangeps128_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)_mm_setzero_ps(), (__mmask8)-1))
#define X509_F_ADD_CERT_DIR 100
#define EC_PKEY_NO_PARAMETERS 0x001
#define TLS1_TXT_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "DHE-PSK-CAMELLIA256-SHA384"
#define LN_id_PasswordBasedMAC "password based MAC"
#define _mm_mask_alignr_epi64(W,U,X,Y,C) ((__m128i)__builtin_ia32_alignq128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)(C), (__v2di)(__m128i)(X), (__mmask8)-1))
#define LN_pkcs9_signingTime "signingTime"
#define OBJ_id_tc26_signwithdigest_gost3410_2012_512 OBJ_id_tc26_signwithdigest,3L
#define CPU_ZERO_S(setsize,cpusetp) __CPU_ZERO_S (setsize, cpusetp)
#define EVP_get_digestbynid(a) EVP_get_digestbyname(OBJ_nid2sn(a))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00 (0)(0),
#define OBJ_id_aes128_wrap OBJ_aes,5L
#define ASSERT(condition) assert(condition);
#define _mm_range_round_sd(A,B,C,R) ((__m128d) __builtin_ia32_rangesd128_mask_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (), (__mmask8) -1, (R)))
#define BOOST_PP_TUPLE_TO_LIST(...) BOOST_PP_OVERLOAD(BOOST_PP_TUPLE_TO_LIST_O_, __VA_ARGS__)(__VA_ARGS__)
#define TCP_CM_INQ TCP_INQ
#define OBJ_sha224WithRSAEncryption OBJ_pkcs1,14L
#define OBJ_brainpoolP320r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,9L
#define _STL_TEMPBUF_H 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01 (0)(1),
#define X509V3_F_V2I_BASIC_CONSTRAINTS 102
#define SSL3_MT_FINISHED 20
#define NID_id_tc26_gost_3410_2012_512_paramSetA 998
#define NID_id_tc26_gost_3410_2012_512_paramSetB 999
#define NID_id_tc26_gost_3410_2012_512_paramSetC 1149
#define _GLIBCXX_OSTREAM 1
#define _mm_range_sd(A,B,C) ((__m128d) __builtin_ia32_rangesd128_mask_round ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (), (__mmask8) -1, _MM_FROUND_CUR_DIRECTION))
#define OBJ_sha3_384 OBJ_nist_hashalgs,9L
#define SSL_TXT_AES_CCM "AESCCM"
#define _mm_range_ss(A,B,C) ((__m128) __builtin_ia32_rangess128_mask_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (), (__mmask8) -1, _MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_WHILE_62_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_63, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(63, s))
#define __CPU_ALLOC_SIZE(count) ((((count) + __NCPUBITS - 1) / __NCPUBITS) * sizeof (__cpu_mask))
#define X509_STORE_get1_certs X509_STORE_CTX_get1_certs
#define ADJ_FREQUENCY 0x0002
#define CONF_R_UNKNOWN_MODULE_NAME 113
#define DH_F_DH_PUB_DECODE 108
#define HEADER_RSA_H 
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS 68
#define EC_F_ECKEY_PRIV_DECODE 213
#define BOOST_NO_MS_INT64_NUMERIC_LIMITS 
#define EVLIST_ACTIVE 0x08
#define FP_ZERO 2
#define POSIX_FADV_NOREUSE __POSIX_FADV_NOREUSE
#define SN_id_tc26_gost_3410_2012_512_constants "id-tc26-gost-3410-2012-512-constants"
#define _mm_insert_epi64(D,S,N) ((__m128i) __builtin_ia32_vec_set_v2di ((__v2di)(__m128i)(D), (long long)(S), (int)(N)))
#define _GLIBCXX_CWCTYPE 1
#define IPV6_PKTINFO 50
#define SSL_R_NO_CIPHERS_AVAILABLE 181
#define _rdtsc() __rdtsc()
#define BOOST_PP_WHILE_207_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_208, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(208, s))
#define SN_setct_CapRevReqTBSX "setct-CapRevReqTBSX"
#define X509_PURPOSE_MAX 9
#define SSLEAY_PLATFORM OPENSSL_PLATFORM
#define SN_desx_cbc "DESX-CBC"
#define EVP_F_EVP_PKEY_SIGN 140
#define BOOST_PP_WHILE_74_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_75, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(75, s))
#define M_Ef32x __f32x (2.718281828459045235360287471352662498)
#define IPV6_TCLASS 67
#define NID_capwapWTP 1024
#define NID_kx_ecdhe_psk 1040
#define NID_id_smime_mod_msg_v3 199
#define __UINT_FAST16_TYPE__ long unsigned int
#define OBJ_rc2_cbc OBJ_rsadsi,3L,2L
#define SN_id_tc26_sign "id-tc26-sign"
#define BIO_C_SET_BUFF_READ_DATA 122
#define BN_F_BN_RECP_CTX_NEW 150
#define SN_id_smime_cd "id-smime-cd"
#define BOOST_PP_SEQ_FOLD_LEFT_25(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_25(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_GUARD_TEST(x) (*(char *) (x) != 0)
#define BOOST_PP_SEQ_FOLD_LEFT_102(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_102(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_103(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_103(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVENT__LT_OBJDIR ".libs/"
#define BOOST_PP_SEQ_FOLD_LEFT_105(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_105(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_106(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_106(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BIO_eof(b) (int)BIO_ctrl(b,BIO_CTRL_EOF,0,NULL)
#define BOOST_PP_SEQ_FOLD_LEFT_109(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_109(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_MPL_AUX_PREPROCESSOR_REPEAT_HPP_INCLUDED 
#define __glibcxx_signed_b(T,B) ((T)(-1) < 0)
#define POLLRDNORM 0x040
#define LN_sha256 "sha256"
#define LN_server_auth "TLS Web Server Authentication"
#define THRIFT_CPP2_H_ 
#define OBJ_pkcs OBJ_rsadsi,1L
#define EVP_PKEY_CTRL_PKCS7_ENCRYPT 3
#define TLS1_CK_RSA_WITH_SEED_SHA 0x03000096
#define BOOST_MPL_AUX_CLEAR_IMPL_HPP_INCLUDED 
#define BOOST_PP_SEQ_FOLD_LEFT_110(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_110(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_111(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_111(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_112(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_112(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_id_smime_cti_ets_proofOfApproval "id-smime-cti-ets-proofOfApproval"
#define PF_ECONET 19
#define TLS1_TXT_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA "ECDHE-PSK-3DES-EDE-CBC-SHA"
#define _mm_mask_fmadd_round_sd(A,U,B,C,R) (__m128d) __builtin_ia32_vfmaddsd3_mask (A, B, C, U, R)
#define pthread_cleanup_pop(execute) __clframe.__setdoit (execute); } while (0)
#define _mm_mask_fmadd_round_ss(A,U,B,C,R) (__m128) __builtin_ia32_vfmaddss3_mask (A, B, C, U, R)
#define CT_F_SCT_SET_VERSION 104
#define RAND_R_SELFTEST_FAILURE 119
#define BOOST_PP_SEQ_FOLD_LEFT_120(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_120(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_121(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_121(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_122(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_122(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_123(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_123(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _FORWARD_LIST_TCC 1
#define BOOST_PP_SEQ_FOLD_LEFT_125(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_125(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_126(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_126(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_127(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_127(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_VARIANT_STATIC_VISITOR_HPP 
#define M_2_PIf64x __f64x (0.636619772367581343075535053490057448)
#define BOOST_IS_ABSTRACT(T) __is_abstract(T)
#define BOOST_UTILITY_DECLVAL_HPP 
#define CT_F_SCT_SET_SIGNATURE_NID 103
#define TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA 0x03000042
#define CONF_F_DEF_LOAD_BIO 121
#define SN_id_cct_crs "id-cct-crs"
#define DEFINE_SPECIAL_STACK_OF(t1,t2) SKM_DEFINE_STACK_OF(t1, t2, t2)
#define BIO_set_nbio_accept(b,n) BIO_ctrl(b,BIO_C_SET_ACCEPT,2,(n)?(void *)"a":NULL)
#define TLS1_CK_DH_RSA_WITH_AES_128_SHA256 0x0300003F
#define _SC_THREAD_KEYS_MAX _SC_THREAD_KEYS_MAX
#define BOOST_PP_SEQ_FOLD_LEFT_131(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_131(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_132(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_132(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_133(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_133(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define EVP_F_ARIA_INIT_KEY 185
#define BOOST_PP_SEQ_FOLD_LEFT_135(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_135(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_139(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_139(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_UTILITY_BASE_FROM_MEMBER_HPP 
#define SSL_TICKET_FATAL_ERR_MALLOC 0
#define BOOST_PP_LIST_FOLD_LEFT_71(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_72, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(72, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BIO_C_GET_SSL_NUM_RENEGOTIATES 126
#define SN_id_smime_aa_equivalentLabels "id-smime-aa-equivalentLabels"
#define TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA "RSA-PSK-AES256-CBC-SHA"
#define BOOST_PP_LIST_FOLD_LEFT_72(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_73, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(73, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define TLS1_CK_DHE_PSK_WITH_ARIA_128_GCM_SHA256 0x0300C06C
#define SSL3_CT_RSA_EPHEMERAL_DH 5
#define SSL_CTRL_GET_PEER_TMP_KEY 109
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_128 128
#define BOOST_PP_SEQ_FOLD_LEFT_140(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_140(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_141(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_141(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define IMPLEMENT_PEM_read_bio(name,type,str,asn1) type *PEM_read_bio_ ##name(BIO *bp, type **x, pem_password_cb *cb, void *u){ return PEM_ASN1_read_bio((d2i_of_void *)d2i_ ##asn1, str,bp,(void **)x,cb,u); }
#define BOOST_PP_SEQ_FOLD_LEFT_144(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_144(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_146(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_146(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_148(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_148(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define DSA_F_DSAPARAMS_PRINT_FP 101
#define NID_aaControls 289
#define BOOST_PP_WHILE_46_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_47, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(47, s))
#define FOLLY_CREATE_STATIC_MEMBER_INVOKER_SUITE(membername) FOLLY_CREATE_STATIC_MEMBER_INVOKER(membername ##_fn, membername); template <typename T> FOLLY_MAYBE_UNUSED FOLLY_INLINE_VARIABLE constexpr membername ##_fn<T> membername {}
#define SN_X9_62_c2tnb359v1 "c2tnb359v1"
#define BOOST_PP_REPEAT_2_228(m,d) BOOST_PP_REPEAT_2_227(m, d) m(3, 227, d)
#define TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA "ADH-CAMELLIA128-SHA"
#define BOOST_PP_SEQ_FOLD_LEFT_150(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_150(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_152(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_152(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_154(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_154(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_156(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_156(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_158(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_158(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_des_cfb1 "des-cfb1"
#define EVP_R_COMMAND_NOT_SUPPORTED 147
#define EC_F_ECDH_COMPUTE_KEY 246
#define BOOST_MPL_AUX_FIND_IF_PRED_HPP_INCLUDED 
#define OBJ_dsa_with_SHA512 OBJ_sigAlgs,4L
#define BOOST_PP_SEQ_FOLD_LEFT_165(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_165(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_166(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_166(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_167(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_167(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_168(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_168(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __iscanonicalf128(x) ((void) (__typeof (x)) (x), 1)
#define SIGSYS 31
#define EV_TIMEOUT 0x01
#define __GNUC___WORKAROUND_GUARD 0
#define linux 1
#define CONF_R_SSL_COMMAND_SECTION_NOT_FOUND 118
#define LN_aria_128_ofb128 "aria-128-ofb"
#define ENXIO 6
#define PEM_STRING_X509 "CERTIFICATE"
#define SN_kisa "KISA"
#define BOOST_PP_SEQ_FOLD_LEFT_173(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_173(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_176(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_176(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define FOLLY_HAVE_STD__IS_TRIVIALLY_COPYABLE 1
#define TLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256 0x030000A0
#define __cpp_range_based_for 201603L
#define OBJ_set_brand_Novus OBJ_set_brand,6011L
#define CT_F_SCT_NEW_FROM_BASE64 127
#define BOOST_PP_WHILE_32(p,o,s) BOOST_PP_WHILE_32_C(BOOST_PP_BOOL(p(33, s)), p, o, s)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1000 (1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001 (1)(0)(0)(1),
#define OBJ_setAttr_T2Enc OBJ_setAttr_IssCap_T2,1L
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM_8 "ECDHE-ECDSA-AES128-CCM8"
#define BOOST_HAS_CLOCK_GETTIME 
#define SSL_F_OSSL_STATEM_SERVER13_READ_TRANSITION 437
#define LN_serialNumber "serialNumber"
#define BOOST_PP_SEQ_FOLD_LEFT_184(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_184(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_186(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_186(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_187(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_187(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_188(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_188(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define NID_pkcs 2
#define X509_R_NO_CERTIFICATE_OR_CRL_FOUND 136
#define BOOST_PP_FOR_195_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(196, s) BOOST_PP_IIF(c, BOOST_PP_FOR_196, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(196, s), p, o, m)
#define EC_F_EC_GROUP_NEW_FROM_DATA 175
#define SSL_R_VERSION_TOO_HIGH 166
#define SSL_R_SSL3_EXT_INVALID_SERVERNAME 319
#define SSL_R_PATH_TOO_LONG 270
#define LN_ms_sgc "Microsoft Server Gated Crypto"
#define BOOST_PP_SEQ_FOLD_LEFT_170(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_170(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define LN_rsaEncryption "rsaEncryption"
#define BIO_CTRL_DGRAM_CONNECT 31
#define NID_camellia_256_ofb128 768
#define BOOST_PP_SEQ_FOLD_LEFT_191(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_191(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_INC_0 1
#define BOOST_PP_INC_1 2
#define BOOST_PP_INC_3 4
#define BOOST_PP_INC_4 5
#define BOOST_PP_INC_5 6
#define BOOST_PP_INC_7 8
#define BOOST_PP_INC_8 9
#define BOOST_PP_INC_9 10
#define BOOST_HAS_LOG1P 
#define SSL_F_TLS_CONSTRUCT_CTOS_RENEGOTIATE 473
#define TLSEXT_TYPE_certificate_authorities 47
#define BOOST_MPL_LIST_AUX_BEGIN_END_HPP_INCLUDED 
#define SSL_F_SSL_CTX_ENABLE_CT 398
#define BOOST_PP_INC_I(x) BOOST_PP_INC_ ## x
#define BOOST_PP_WHILE_36(p,o,s) BOOST_PP_WHILE_36_C(BOOST_PP_BOOL(p(37, s)), p, o, s)
#define BOOST_PP_WHILE_133_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_134, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(134, s))
#define NID_setct_OIData 522
#define OBJ_setext_pinSecure OBJ_set_msgExt,4L
#define FOLLY_CLANG_DISABLE_WARNING(warningName) 
#define MCAST_MSFILTER 48
#define TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA 0x0300C003
#define T_GLOBAL_LOGGING_LEVEL 1
#define NID_code_sign 131
#define OBJ_wap_wsg_idm_ecid_wtls1 OBJ_wap_wsg_idm_ecid,1L
#define _VA_LIST_ 
#define OBJ_wap_wsg_idm_ecid_wtls4 OBJ_wap_wsg_idm_ecid,4L
#define OBJ_wap_wsg_idm_ecid_wtls5 OBJ_wap_wsg_idm_ecid,5L
#define OBJ_wap_wsg_idm_ecid_wtls6 OBJ_wap_wsg_idm_ecid,6L
#define OBJ_wap_wsg_idm_ecid_wtls7 OBJ_wap_wsg_idm_ecid,7L
#define OBJ_wap_wsg_idm_ecid_wtls8 OBJ_wap_wsg_idm_ecid,8L
#define OBJ_wap_wsg_idm_ecid_wtls9 OBJ_wap_wsg_idm_ecid,9L
#define _GLIBCXX_CONCEPTS 1
#define EC_F_EC_GROUP_SET_SEED 286
#define EVP_PKEY_CTRL_CMS_SIGN 11
#define BOOST_PP_REPEAT_1_3(m,d) BOOST_PP_REPEAT_1_2(m, d) m(2, 2, d)
#define BOOST_MOVE_HAS_TRIVIAL_DESTRUCTOR(T) (__has_trivial_destructor(T) BOOST_MOVE_INTEL_TT_OPTS)
#define FOLLY_CREATE_FREE_INVOKER_SUITE(funcname,...) FOLLY_CREATE_FREE_INVOKER(funcname ##_fn, funcname, __VA_ARGS__); FOLLY_MAYBE_UNUSED FOLLY_INLINE_VARIABLE constexpr funcname ##_fn funcname {}
#define SN_id_smime_aa_signatureType "id-smime-aa-signatureType"
#define INT64_MIN (-__INT64_C(9223372036854775807)-1)
#define BOOST_CONFIG_SUFFIX_HPP 
#define SSL_ST_ACCEPT 0x2000
#define X509_R_UNKNOWN_TRUST_ID 120
#define SSL_R_PEM_NAME_TOO_SHORT 392
#define ERR_LIB_ECDH 43
#define LC_TELEPHONE __LC_TELEPHONE
#define _GLIBCXX_NUMERIC_LIMITS 1
#define BIO_C_FILE_SEEK 128
#define DH_R_NO_PARAMETERS_SET 107
#define BOOST_PP_WHILE_242_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_243, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(243, s))
#define BOOST_PP_ASSIGN_SLOT_3 <boost/preprocessor/slot/detail/slot3.hpp>
#define _SC_FILE_SYSTEM _SC_FILE_SYSTEM
#define BOOST_PP_FOR_20_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(21, s) BOOST_PP_IIF(c, BOOST_PP_FOR_21, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(21, s), p, o, m)
#define _CMP_NLT_UQ 0x15
#define _CMP_NLT_US 0x05
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110010 (0)(1)(1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0110011 (0)(1)(1)(0)(0)(1)(1),
#define NID_sha3_512 1099
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100000 (0)(0)(1)(0)(0)(0)(0)(0),
#define SA_STACK SA_ONSTACK
#define BOOST_PP_REPEAT_1_8(m,d) BOOST_PP_REPEAT_1_7(m, d) m(2, 7, d)
#define BUS_ADRERR BUS_ADRERR
#define RSA_R_INVALID_DIGEST 157
#define EVENT__HAVE_ACCEPT4 1
#define BOOST_PP_DEC_229 228
#define _mm512_mask3_fmaddsub_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmaddsubpd512_mask3(A, B, C, U, R)
#define BOOST_PP_SEQ_FOLD_LEFT_I_228(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_229, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(229, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
#define COMP_R_ZLIB_INFLATE_ERROR 100
#define _mm512_mask3_fmaddsub_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmaddsubps512_mask3(A, B, C, U, R)
#define EV_FINALIZE 0x40
#define ASN1_R_ENCODE_ERROR 112
#define evsignal_set(ev,x,cb,arg) event_set((ev), (x), EV_SIGNAL|EV_PERSIST, (cb), (arg))
#define BOOST_PREPROCESSOR_CAT_HPP 
#define BOOST_BLANK_FWD_HPP 
#define _SC_NL_TEXTMAX _SC_NL_TEXTMAX
#define SSL_CONF_FLAG_SHOW_ERRORS 0x10
#define BOOST_TT_REMOVE_POINTER_HPP_INCLUDED 
#define LG_SIZEOF_PTR 3
#define NID_id_GostR3410_94DH 818
#define _mm_mask_cmp_epu32_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_ucmpd128_mask ((__v4si)(__m128i)(X), (__v4si)(__m128i)(Y), (int)(P), (__mmask8)(M)))
#define NID_id_regInfo_certReq 322
#define TLS1_RT_CRYPTO_KEY (TLS1_RT_CRYPTO | 0x6)
#define NID_Enterprises 389
#define TLS1_CK_DHE_RSA_WITH_AES_128_SHA 0x03000033
#define RANDerr(f,r) ERR_PUT_error(ERR_LIB_RAND,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define SN_rc2_cbc "RC2-CBC"
#define SSL_clear_chain_certs(s) SSL_set0_chain(s,NULL)
#define BOOST_VARIANT_DETAIL_VARIANT_IO_HPP 
#define __SLONGWORD_TYPE long int
#define TLS1_CK_RSA_PSK_WITH_RC4_128_SHA 0x03000092
#define FS_IOC32_SETFLAGS _IOW('f', 2, int)
#define _mm512_maskz_extractf32x4_ps(U,X,C) ((__m128) __builtin_ia32_extractf32x4_mask ((__v16sf)(__m512) (X), (int) (C), (__v4sf)(__m128)_mm_setzero_ps(), (__mmask8)(U)))
#define BOOST_PREPROCESSOR_LIST_DETAIL_FOLD_LEFT_HPP 
#define EVUTIL_EAI_FAIL EAI_FAIL
#define SSL_R_CALLBACK_FAILED 234
#define SN_X509 "X509"
#define EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE 137
#define S_ISBLK(mode) __S_ISTYPE((mode), __S_IFBLK)
#define BIO_F_BIO_CTRL 103
#define CONF_F_CONF_LOAD 100
#define OBJ_id_tc26_agreement_gost_3410_2012_512 OBJ_id_tc26_agreement,2L
#define TCPI_OPT_WSCALE 4
#define _GLIBCXX_IOSFWD 1
#define X509_F_X509_VERIFY_CERT 127
#define BOOST_MOVE_IS_NOTHROW_COPY_ASSIGNABLE(T) BOOST_MOVE_HAS_NOTHROW_ASSIGN(T)
#define TLS1_CK_ADH_WITH_SEED_SHA 0x0300009B
#define _GLIBCXX_CHRONO 1
#define BOOST_PP_WHILE_11_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_12, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(12, s))
#define IORING_UNREGISTER_BUFFERS 1
#define SSL_F_DTLS1_READ_BYTES 258
#define TCPOLEN_MAXSEG 4
#define DTLS1_BAD_VER 0x0100
#define CLONE_NEWIPC 0x08000000
#define FICLONE _IOW(0x94, 9, int)
#define SN_name_constraints "nameConstraints"
#define SN_sm4_cfb8 "SM4-CFB8"
#define TLS1_CK_DHE_RSA_WITH_AES_128_SHA256 0x03000067
#define OPENSSL_NO_MDC2 
#define BOOST_PP_FOR_127_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(128, s) BOOST_PP_IIF(c, BOOST_PP_FOR_128, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(128, s), p, o, m)
#define _OSTREAM_TCC 1
#define MAP_SYNC 0x80000
#define NID_ac_auditEntity 287
#define si_addr_lsb _sifields._sigfault.si_addr_lsb
#define BIO_get_ssl(b,sslp) BIO_ctrl(b,BIO_C_GET_SSL,0,(char *)(sslp))
#define BOOST_PP_FOR_221_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(222, s) BOOST_PP_IIF(c, BOOST_PP_FOR_222, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(222, s), p, o, m)
#define BOOST_INTRUSIVE_SLIST_NODE_HPP 
#define BOOST_PP_REPEAT_2_232(m,d) BOOST_PP_REPEAT_2_231(m, d) m(3, 231, d)
#define CONF_MFLAGS_IGNORE_RETURN_CODES 0x2
#define PF_XDP 44
#define SSL_X509_LOOKUP 4
#define BOOST_PP_LIST_FOLD_LEFT_82(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_83, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(83, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _GCC_PTRDIFF_T 
#define EC_KEY_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_EC_KEY, l, p, newf, dupf, freef)
#define M_PI_4 0.78539816339744830962
#define __glibcxx_requires_partitioned_upper_pred(_First,_Last,_Value,_Pred) 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101011 (1)(1)(0)(1)(0)(1)(1),
#define SN_dhSinglePass_stdDH_sha1kdf_scheme "dhSinglePass-stdDH-sha1kdf-scheme"
#define BOOST_PP_SEQ_FOLD_LEFT_I_35(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_36, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(36, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define AI_PASSIVE 0x0001
#define BOOST_PP_NODE_76(p) BOOST_PP_IIF(p(76), BOOST_PP_NODE_74, BOOST_PP_NODE_78)
#define BOOST_PP_FOR_236_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(237, s) BOOST_PP_IIF(c, BOOST_PP_FOR_237, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(237, s), p, o, m)
#define BOOST_PP_REPEAT_2_238(m,d) BOOST_PP_REPEAT_2_237(m, d) m(3, 237, d)
#define OBJ_proxyCertInfo OBJ_id_pe,14L
#define LN_sm4_cfb1 "sm4-cfb1"
#define LN_sm4_cfb8 "sm4-cfb8"
#define NID_id_tc26_digest_constants 1000
#define BOOST_PP_NODE_77(p) BOOST_PP_IIF(p(77), 77, 78)
#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
#define ev_int32_t int32_t
#define EPROTONOSUPPORT 93
#define OBJ_sha512_224 OBJ_nist_hashalgs,5L
#define EFBIG 27
#define BOOST_MPL_QUOTE_HPP_INCLUDED 
#define BOOST_ASSERT(expr) assert(expr)
#define _mm256_permute2f128_pd(X,Y,C) ((__m256d) __builtin_ia32_vperm2f128_pd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(C)))
#define OBJ_ct_cert_scts 1L,3L,6L,1L,4L,1L,11129L,2L,4L,5L
#define SSL_get_max_cert_list(ssl) SSL_ctrl(ssl,SSL_CTRL_GET_MAX_CERT_LIST,0,NULL)
#define SN_ac_proxying "ac-proxying"
#define SSL_TXT_aDSS "aDSS"
#define _POSIX_THREAD_ROBUST_PRIO_INHERIT 200809L
#define BN_R_TOO_MANY_TEMPORARY_VARIABLES 109
#define IN_CLASSC_NET 0xffffff00
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101011 (1)(0)(1)(0)(1)(0)(1)(1),
#define EVP_PKEY_CTRL_EC_KDF_UKM (EVP_PKEY_ALG_CTRL + 9)
#define __SIGRTMAX 64
#define OBJ_R_UNKNOWN_NID 101
#define BOOST_PP_DEC_38 37
#define NID_id_tc26_cipher 990
#define LN_auth_any "auth-any"
#define NID_id_regCtrl_pkiPublicationInfo 317
#define _SIDD_LEAST_SIGNIFICANT 0x00
#define OBJ_iA5StringSyntax OBJ_pilotAttributeSyntax,4L
#define IP_RECVORIGDSTADDR IP_ORIGDSTADDR
#define NID_ecdsa_with_SHA384 795
#define EVP_PKEY_OP_TYPE_NOGEN (EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT | EVP_PKEY_OP_DERIVE)
#define _GLIBCXX_HAVE_STRXFRM_L 1
#define MS_RELATIME (1<<21)
#define EVP_R_INPUT_NOT_INITIALIZED 111
#define BOOST_OPERATORS_CONSTEXPR BOOST_CONSTEXPR
#define _mm256_mask_extractf32x4_ps(W,U,X,C) ((__m128) __builtin_ia32_extractf32x4_256_mask ((__v8sf)(__m256) (X), (int) (C), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define LC_GLOBAL_LOCALE ((locale_t) -1L)
#define IN_LOOPBACKNET 127
#define TLS1_RFC_SRP_SHA_WITH_AES_256_CBC_SHA "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"
#define NID_gost_mac_12 976
#define LN_md2WithRSAEncryption "md2WithRSAEncryption"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110000 (1)(1)(0)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110001 (1)(1)(0)(0)(0)(1),
#define APACHE_THRIFT_ACCESSOR_priority 
#define BOOST_MPL_AUX_NA_PARAM(param) param = na
#define _GLIBCXX_HAVE_STDINT_H 1
#define __aligned_le64 __le64 __attribute__((aligned(8)))
#define SSL_SECOP_CURVE_CHECK (6 | SSL_SECOP_OTHER_CURVE)
#define NID_client_auth 130
#define RSA_R_DATA_TOO_LARGE_FOR_MODULUS 132
#define ASN1_F_ASN1_PRIMITIVE_NEW 119
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110010 (1)(1)(0)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110011 (1)(1)(0)(0)(1)(1),
#define NID_id_regInfo_utf8Pairs 321
#define _POSIX_PIPE_BUF 512
#define _POSIX_SEM_VALUE_MAX 32767
#define _AVX512BF16INTRIN_H_INCLUDED 
#define BOOST_PP_FOR_87_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(88, s) BOOST_PP_IIF(c, BOOST_PP_FOR_88, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(88, s), p, o, m)
#define OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik OBJ_id_tc26_cipher,2L
#define TLS1_RFC_DH_DSS_WITH_ARIA_256_GCM_SHA384 "TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384"
#define SIGRTMIN (__libc_current_sigrtmin ())
#define LN_dhKeyAgreement "dhKeyAgreement"
#define BOOST_PP_IDENTITY_N(item,n) item BOOST_PP_TUPLE_EAT_N(n)
#define ASN1_PKEY_CTRL_CMS_ENVELOPE 0x7
#define EVP_PKEY_FLAG_SIGCTX_CUSTOM 4
#define NID_mailPreferenceOption 493
#define RAND_F_RAND_DRBG_GET_NONCE 123
#define SSL_TXT_SHA1 "SHA1"
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
#define X509_TRUST_DYNAMIC_NAME (1U << 1)
#define _mm_fmsub_round_sd(A,B,C,R) (__m128d)__builtin_ia32_vfmaddsd3_round(A, B, -(C), R)
#define _mm_fmsub_round_ss(A,B,C,R) (__m128)__builtin_ia32_vfmaddss3_round(A, B, -(C), R)
#define _GLIBCXX_HAVE_EXPL 1
#define _POSIX_VDISABLE '\0'
#define RAND_R_RANDOM_POOL_OVERFLOW 125
#define _mm_maskz_sub_round_sd(U,A,B,C) (__m128d)__builtin_ia32_subsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define OBJ_id_smime_aa_mlExpandHistory OBJ_id_smime_aa,3L
#define JEMALLOC_VERSION_MAJOR 5
#define PEM_TYPE_MIC_CLEAR 30
#define _mm_maskz_sub_round_ss(U,A,B,C) (__m128)__builtin_ia32_subss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define NID_id_aca 266
#define IP_OPTIONS 4
#define __swahw32(x) (__builtin_constant_p((__u32)(x)) ? ___constant_swahw32(x) : __fswahw32(x))
#define _mm512_mask_extractf64x2_pd(W,U,X,C) ((__m128d) __builtin_ia32_extractf64x2_512_mask ((__v8df)(__m512d) (X), (int) (C), (__v2df)(__m128d) (W), (__mmask8) (U)))
#define TLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA 0x0300C01C
#define LN_aes_128_cbc_hmac_sha256 "aes-128-cbc-hmac-sha256"
#define RSA_R_UNSUPPORTED_MASK_ALGORITHM 153
#define OBJ_sha256WithRSAEncryption OBJ_pkcs1,11L
#define SSL_F_TLS_PROCESS_AS_HELLO_RETRY_REQUEST 610
#define X509V3_F_V2I_SUBJECT_ALT 154
#define SN_ffdhe3072 "ffdhe3072"
#define B_ASN1_UTCTIME 0x4000
#define SN_wap "wap"
#define SSL_R_MISSING_RSA_CERTIFICATE 168
#define _BITS_OPT_RANDOM_H 1
#define SSL_F_TLS_PARSE_STOC_USE_SRTP 446
#define SN_id_pkix_OCSP_basic "basicOCSPResponse"
#define _mm_cmp_epi8_mask(X,Y,P) ((__mmask16) __builtin_ia32_cmpb128_mask ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(P), (__mmask16)(-1)))
#define PKCS7_F_PKCS7_SET_DIGEST 126
#define SN_ad_timeStamping "ad_timestamping"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_206(op,st,ss,sz) 0
#define RAND_F_DRBG_SETUP 117
#define BOOST_PP_INC(x) BOOST_PP_INC_I(x)
#define OBJ_BSEARCH_VALUE_ON_NOMATCH 0x01
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_4(op,st,ss,sz) 0
#define BOOST_PREPROCESSOR_CONTROL_WHILE_HPP 
#define SN_joint_iso_itu_t "JOINT-ISO-ITU-T"
#define TLS1_CK_PSK_WITH_AES_128_CBC_SHA 0x0300008C
#define BOOST_PP_REPEAT_3_76(m,d) BOOST_PP_REPEAT_3_75(m, d) m(4, 75, d)
#define NID_id_alg_dh_pop 326
#define BOOST_PREPROCESSOR_LOGICAL_COMPL_HPP 
#define SSL_R_DANE_TLSA_BAD_DATA_LENGTH 189
#define RSA_F_RSA_NULL_PRIVATE_ENCRYPT 133
#define BOOST_PP_INTERCEPT_62 
#define V_ASN1_GRAPHICSTRING 25
#define DSA_F_DSA_METH_DUP 127
#define FOLLY_MOBILE 0
#define BOOST_PP_REPEAT_2_172(m,d) BOOST_PP_REPEAT_2_171(m, d) m(3, 171, d)
#define __glibcxx_requires_irreflexive_pred2(_First,_Last,_Pred) 
#define SSL_F_TLS_PARSE_STOC_COOKIE 534
#define OPENSSL_EXPORT extern
#define BOOST_PP_FOR_162_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(163, s) BOOST_PP_IIF(c, BOOST_PP_FOR_163, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(163, s), p, o, m)
#define SN_id_Gost28147_89_cc "id-Gost28147-89-cc"
#define NID_id_GostR3410_2001_TestParamSet 839
#define BOOST_PP_BOOL_101 1
#define SSL_R_BAD_ECPOINT 306
#define __UINT32_C(c) c ## U
#define SN_cast5_cfb64 "CAST5-CFB"
#define BOOST_UTILITY_BINARY_HPP 
#define __UINT8_C(c) c
#define SSL_F_TLS_CONSTRUCT_CKE_GOST 406
#define RAND_F_RAND_PSEUDO_BYTES 126
#define MOD_MAXERROR ADJ_MAXERROR
#define TLS1_HB_RESPONSE 2
#define ASN1_R_NESTED_TOO_DEEP 201
#define SN_id_GostR3410_2001DH "id-GostR3410-2001DH"
#define _GLIBCXX_NUMERIC 1
#define APACHE_THRIFT_ACCESSOR_t_struct 
#define BOOST_PP_WHILE_100_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_101, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(101, s))
#define BOOST_PP_SEQ_FOLD_LEFT_44(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_44(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_REPEAT_3_238(m,d) BOOST_PP_REPEAT_3_237(m, d) m(4, 237, d)
#define SN_seeAlso "seeAlso"
#define timeout_pending(ev,tv) event_pending((ev), EV_TIMEOUT, (tv))
#define TLS1_TXT_PSK_WITH_AES_128_CCM_8 "PSK-AES128-CCM8"
#define TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA 0x03000091
#define EVP_CIPH_ALWAYS_CALL_INIT 0x20
#define OPENSSL_NO_SSL3 
#define __cpp_lib_is_aggregate 201703
#define SO_RXQ_OVFL 40
#define TLS1_CK_RSA_WITH_AES_128_SHA 0x0300002F
#define SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST 354
#define BOOST_MPL_CFG_GCC ((__GNUC__ << 8) | __GNUC_MINOR__)
#define BOOST_MPL_BIND_HPP_INCLUDED 
#define BOOST_PP_SEQ_ELEM_62(_) BOOST_PP_SEQ_ELEM_61
#define SO_RCVTIMEO_NEW 66
#define BOOST_PP_BOOL_109 1
#define TCP_REPAIR_OPTIONS 22
#define MS_SHARED (1<<20)
#define _PSTL_EXECUTION_POLICY_DEFS_H 
#define SN_secp128r1 "secp128r1"
#define _mm_cvt_roundsd_u64(A,B) ((unsigned long long)__builtin_ia32_vcvtsd2usi64(A, B))
#define AI_V4MAPPED 0x0008
#define __REDIRECT_NTH(name,proto,alias) name proto __THROW __asm__ (__ASMNAME (#alias))
#define BOOST_MOVE_IS_UNION(T) __is_union(T)
#define HUGE_VAL_F64 (__builtin_huge_valf64 ())
#define __cpp_template_template_args 201611L
#define BOOST_PP_REPEAT_1_197(m,d) BOOST_PP_REPEAT_1_196(m, d) m(2, 196, d)
#define LN_id_GostR3410_2012_512 "GOST R 34.10-2012 with 512 bit modulus"
#define RSA_F_RSA_CMS_DECRYPT 159
#define BOOST_PP_SEQ_FOLD_LEFT_I_181(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_182, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(182, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_id_Gost28147_89_CryptoPro_KeyMeshing OBJ_cryptopro,14L,1L
#define BN_BYTES 8
#define SCNiFAST8 "hhi"
#define SSL_F_DANE_CTX_ENABLE 347
#define BOOST_IS_POD(T) __is_pod(T)
#define __cpp_lib_to_array 201907L
#define CRYPTO_set_id_callback(func) 
#define _mm_cvt_roundu32_ss(A,B,C) (__m128)__builtin_ia32_cvtusi2ss32(A, B, C)
#define BOOST_MPL_VECTOR_VECTOR0_HPP_INCLUDED 
#define BOOST_PP_CONFIG_EXTENDED_LINE_INFO 0
#define EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP 116
#define BOOST_PP_LIST_FOLD_LEFT_90(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_91, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(91, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm_floor_pd(V) _mm_round_pd((V), _MM_FROUND_FLOOR)
#define SIGXCPU 24
#define __FLT128_HAS_QUIET_NAN__ 1
#define BOOST_PP_LIST_FOLD_LEFT_91(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_92, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(92, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define _mm512_shuffle_i64x2(X,Y,C) ((__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)_mm512_undefined_epi32 (), (__mmask8)-1))
#define NID_id_alg 262
#define SSL_R_UNKNOWN_CMD_NAME 386
#define BOOST_PP_FOR_19_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(20, s) BOOST_PP_IIF(c, BOOST_PP_FOR_20, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(20, s), p, o, m)
#define __iscanonicalf(x) ((void) (__typeof (x)) (x), 1)
#define IPPROTO_IGMP IPPROTO_IGMP
#define NID_id_smime_ct_authData 205
#define NID_hmac_sha1 781
#define NID_SNMPv2 387
#define BOOST_PP_LIST_FOLD_LEFT_94(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_95, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(95, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_REPEAT_2_247(m,d) BOOST_PP_REPEAT_2_246(m, d) m(3, 246, d)
#define PF_IUCV 32
#define BN_RAND_TOP_TWO 1
#define BOOST_PP_LIST_FOLD_LEFT_96(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_97, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(97, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define OBJ_X448 1L,3L,101L,111L
#define TLSEXT_TYPE_server_name 0
#define OBJ_setct_PANData OBJ_set_ctype,0L
#define BOOST_VARIANT_CLASS_OR_TYPENAME_TO_VARIADIC_class class...
#define EC_F_EC_GROUP_NEW_BY_CURVE_NAME 174
#define TLS1_RFC_RSA_WITH_AES_256_CCM_8 "TLS_RSA_WITH_AES_256_CCM_8"
#define BOOST_PP_SEQ_SIZE_101(_) BOOST_PP_SEQ_SIZE_102
#define BOOST_PP_SEQ_SIZE_102(_) BOOST_PP_SEQ_SIZE_103
#define BOOST_PP_SEQ_SIZE_104(_) BOOST_PP_SEQ_SIZE_105
#define BOOST_PP_SEQ_SIZE_107(_) BOOST_PP_SEQ_SIZE_108
#define BOOST_PP_SEQ_SIZE_108(_) BOOST_PP_SEQ_SIZE_109
#define BOOST_PP_SEQ_SIZE_109(_) BOOST_PP_SEQ_SIZE_110
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111100 (1)(1)(1)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1111101 (1)(1)(1)(1)(1)(0)(1),
#define _mm512_maskz_getmant_ps(U,X,B,C) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION))
#define FMT_HAS_CPP_ATTRIBUTE(x) __has_cpp_attribute(x)
#define FOLLY_HAS_BUILTIN(...) __has_builtin(__VA_ARGS__)
#define NID_pSpecified 935
#define X509_FLAG_NO_IDS (1L << 12)
#define SN_id_smime_aa_dvcs_dvc "id-smime-aa-dvcs-dvc"
#define NID_id_GostR3410_94_b 847
#define _mm256_mask_i32gather_epi32(SRC,BASE,INDEX,MASK,SCALE) (__m256i) __builtin_ia32_gathersiv8si ((__v8si)(__m256i) (SRC), (int const *) (BASE), (__v8si)(__m256i) (INDEX), (__v8si)(__m256i) (MASK), (int) (SCALE))
#define LN_netscape_cert_type "Netscape Cert Type"
#define NID_rc5_ecb 121
#define BOOST_PP_SEQ_SIZE_110(_) BOOST_PP_SEQ_SIZE_111
#define BOOST_PP_SEQ_SIZE_111(_) BOOST_PP_SEQ_SIZE_112
#define BOOST_PP_SEQ_SIZE_112(_) BOOST_PP_SEQ_SIZE_113
#define BOOST_PREPROCESSOR_CONFIG_CONFIG_HPP 
#define BOOST_PP_SEQ_SIZE_117(_) BOOST_PP_SEQ_SIZE_118
#define BOOST_PP_SEQ_SIZE_118(_) BOOST_PP_SEQ_SIZE_119
#define BOOST_PP_SEQ_SIZE_119(_) BOOST_PP_SEQ_SIZE_120
#define _mm512_maskz_exp2a23_round_pd(U,A,C) __builtin_ia32_exp2pd_mask(A, (__v8df)_mm512_setzero_pd(), U, C)
#define __FLT64_HAS_DENORM__ 1
#define FMT_EXTERN_TEMPLATE_API 
#define SYSerr(f,r) ERR_PUT_error(ERR_LIB_SYS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define _mm512_maskz_exp2a23_round_ps(U,A,C) __builtin_ia32_exp2ps_mask(A, (__v16sf)_mm512_setzero_ps(), U, C)
#define POLLERR 0x008
#define BOOST_PP_SEQ_SIZE_120(_) BOOST_PP_SEQ_SIZE_121
#define BOOST_PP_SEQ_SIZE_121(_) BOOST_PP_SEQ_SIZE_122
#define ASN1_F_ASN1_DUP 111
#define BOOST_PP_SEQ_SIZE_124(_) BOOST_PP_SEQ_SIZE_125
#define BOOST_PP_SEQ_SIZE_126(_) BOOST_PP_SEQ_SIZE_127
#define BOOST_PP_SEQ_SIZE_127(_) BOOST_PP_SEQ_SIZE_128
#define BOOST_PP_SEQ_SIZE_128(_) BOOST_PP_SEQ_SIZE_129
#define BOOST_PP_SEQ_SIZE_129(_) BOOST_PP_SEQ_SIZE_130
#define SN_jurisdictionCountryName "jurisdictionC"
#define _mm512_maskz_getmant_round_pd(U,X,B,C,R) ((__m512d)__builtin_ia32_getmantpd512_mask ((__v8df)(__m512d)(X), (int)(((C)<<2) | (B)), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U), (R)))
#define APACHE_THRIFT_ACCESSOR_responseMetadata 
#define OBJ_id_smime_ct_DVCSResponseData OBJ_id_smime_ct,8L
#define _mm512_maskz_getmant_round_ps(U,X,B,C,R) ((__m512)__builtin_ia32_getmantps512_mask ((__v16sf)(__m512)(X), (int)(((C)<<2) | (B)), (__v16sf)(__m512)_mm512_setzero_ps(), (__mmask16)(U), (R)))
#define X509V3_R_INVALID_INHERITANCE 165
#define NID_X9_62_c2onb239v4 697
#define NID_X9_62_c2onb239v5 698
#define EVP_F_UPDATE 173
#define _GLIBCXX_CINTTYPES 1
#define BOOST_PP_SEQ_SIZE_130(_) BOOST_PP_SEQ_SIZE_131
#define BOOST_PP_SEQ_SIZE_132(_) BOOST_PP_SEQ_SIZE_133
#define _PSTL_PRAGMA_DECLARE_REDUCTION(NAME,OP) _PSTL_PRAGMA(omp declare reduction(NAME:OP : omp_out(omp_in)) initializer(omp_priv = omp_orig))
#define _POSIX_MQ_PRIO_MAX 32
#define BOOST_PP_SEQ_SIZE_136(_) BOOST_PP_SEQ_SIZE_137
#define NID_sect283k1 729
#define BOOST_PP_SEQ_SIZE_138(_) BOOST_PP_SEQ_SIZE_139
#define BOOST_PP_SEQ_SIZE_139(_) BOOST_PP_SEQ_SIZE_140
#define TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"
#define ASN1_STRFLGS_DUMP_DER 0x200
#define SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED 338
#define X509_FLAG_NO_SUBJECT (1L << 6)
#define INT_LEAST64_WIDTH 64
#define SN_id_pda_countryOfCitizenship "id-pda-countryOfCitizenship"
#define NID_id_alg_dh_sig_hmac_sha1 325
#define BOOST_PP_SEQ_SIZE_140(_) BOOST_PP_SEQ_SIZE_141
#define SSL_get_peer_signature_nid(s,pn) SSL_ctrl(s,SSL_CTRL_GET_PEER_SIGNATURE_NID,0,pn)
#define _AVX512BWINTRIN_H_INCLUDED 
#define BOOST_PP_SEQ_SIZE_144(_) BOOST_PP_SEQ_SIZE_145
#define BOOST_PP_SEQ_SIZE_145(_) BOOST_PP_SEQ_SIZE_146
#define FP_INT_DOWNWARD 1
#define NID_ext_key_usage 126
#define BOOST_PP_SEQ_SIZE_149(_) BOOST_PP_SEQ_SIZE_150
#define __gnu_linux__ 1
#define TLSEXT_TYPE_supported_versions 43
#define _BACKWARD_BINDERS_H 1
#define BOOST_PP_ENUM BOOST_PP_CAT(BOOST_PP_ENUM_, BOOST_PP_AUTO_REC(BOOST_PP_REPEAT_P, 4))
#define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE 0x0400
#define FOLLY_AARCH64 0
#define _mm_srai_epi64(A,B) ((__m128i) __builtin_ia32_psraqi128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)_mm_setzero_si128 (), (__mmask8)-1))
#define TLS1_CK_ADH_WITH_AES_128_SHA256 0x0300006C
#define TLS1_TXT_ECDH_anon_WITH_AES_128_CBC_SHA "AECDH-AES128-SHA"
#define BOOST_PP_WHILE_49(p,o,s) BOOST_PP_WHILE_49_C(BOOST_PP_BOOL(p(50, s)), p, o, s)
#define EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE 0x1c
#define ASN1_R_INTEGER_NOT_ASCII_FORMAT 185
#define BOOST_PP_SEQ_SIZE_150(_) BOOST_PP_SEQ_SIZE_151
#define BOOST_PP_SEQ_SIZE_153(_) BOOST_PP_SEQ_SIZE_154
#define BOOST_PP_SEQ_SIZE_155(_) BOOST_PP_SEQ_SIZE_156
#define BOOST_PP_SEQ_SIZE_156(_) BOOST_PP_SEQ_SIZE_157
#define BOOST_PP_SEQ_SIZE_157(_) BOOST_PP_SEQ_SIZE_158
#define BOOST_PP_TUPLE_REM(size) BOOST_PP_REM
#define BOOST_PP_SEQ_SIZE_159(_) BOOST_PP_SEQ_SIZE_160
#define BOOST_PREPROCESSOR_FACILITIES_INTERCEPT_HPP 
#define __W_STOPCODE(sig) ((sig) << 8 | 0x7f)
#define _mm_maskz_range_ps(U,A,B,C) ((__m128) __builtin_ia32_rangeps128_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)_mm_setzero_ps(), (__mmask8)(U)))
#define BOOST_USER_CONFIG <boost/config/user.hpp>
#define EVLIST_INTERNAL 0x10
#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 0x0300C02E
#define LN_aes_128_cbc_hmac_sha1 "aes-128-cbc-hmac-sha1"
#define NID_sha224 675
#define BOOST_PP_SEQ_SIZE_161(_) BOOST_PP_SEQ_SIZE_162
#define BOOST_PP_SEQ_SIZE_163(_) BOOST_PP_SEQ_SIZE_164
#define BOOST_PP_SEQ_SIZE_166(_) BOOST_PP_SEQ_SIZE_167
#define FALLOC_FL_NO_HIDE_STALE 0x04
#define BOOST_PP_SEQ_SIZE_168(_) BOOST_PP_SEQ_SIZE_169
#define BOOST_PP_SEQ_SIZE_169(_) BOOST_PP_SEQ_SIZE_170
#define _mm_rcp28_round_sd(A,B,R) __builtin_ia32_rcp28sd_round(A, B, R)
#define BOOST_PP_WHILE_28_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_29, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(29, s))
#define TLS1_get_client_version(s) ((SSL_client_version(s) >> 8) == TLS1_VERSION_MAJOR ? SSL_client_version(s) : 0)
#define _mm_rcp28_round_ss(A,B,R) __builtin_ia32_rcp28ss_round(A, B, R)
#define PRIdFAST16 __PRIPTR_PREFIX "d"
#define SSL_CTRL_SESS_ACCEPT_RENEGOTIATE 26
#define _STRUCT_TIMESPEC 1
#define RSA_set_app_data(s,arg) RSA_set_ex_data(s,0,arg)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100010 (0)(0)(1)(0)(0)(0)(1)(0),
#define SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT 298
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_131(s,p,o,m) 0
#define d2i_ECPKParameters_bio(bp,x) ASN1_d2i_bio_of(EC_GROUP,NULL,d2i_ECPKParameters,bp,x)
#define NID_X448 1035
#define OBJ_x500UniqueIdentifier OBJ_X509,45L
#define BOOST_PP_SEQ_SIZE_172(_) BOOST_PP_SEQ_SIZE_173
#define _mm_mask_cvtps_ph(W,U,A,I) ((__m128i) __builtin_ia32_vcvtps2ph_mask ((__v4sf)(__m128) (A), (int) (I), (__v8hi)(__m128i) (W), (__mmask8) (U)))
#define BOOST_PP_SEQ_SIZE_174(_) BOOST_PP_SEQ_SIZE_175
#define RAND_F_RAND_BYTES 100
#define __mode_t_defined 
#define _GLIBCXX_ATOMIC_BASE_H 1
#define F_OFD_SETLKW 38
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384 0x0300C024
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00100011 (0)(0)(1)(0)(0)(0)(1)(1),
#define TLS1_CK_DHE_PSK_WITH_AES_256_GCM_SHA384 0x030000AB
#define MSG_FIN MSG_FIN
#define SN_dhSinglePass_cofactorDH_sha384kdf_scheme "dhSinglePass-cofactorDH-sha384kdf-scheme"
#define BOOST_COPY_ASSIGN_REF_END &
#define EVP_CTRL_SSL3_MASTER_SECRET 0x1d
#define ASN1_F_ASN1_DO_ADB 110
#define _CODECVT_H 1
#define BOOST_PP_SEQ_SIZE_180(_) BOOST_PP_SEQ_SIZE_181
#define BOOST_PP_SEQ_SIZE_181(_) BOOST_PP_SEQ_SIZE_182
#define BOOST_PP_SEQ_SIZE_183(_) BOOST_PP_SEQ_SIZE_184
#define BOOST_PP_SEQ_SIZE_184(_) BOOST_PP_SEQ_SIZE_185
#define BOOST_PP_SEQ_SIZE_185(_) BOOST_PP_SEQ_SIZE_186
#define BOOST_PP_SEQ_SIZE_186(_) BOOST_PP_SEQ_SIZE_187
#define BOOST_PP_SEQ_SIZE_187(_) BOOST_PP_SEQ_SIZE_188
#define BOOST_PP_SEQ_SIZE_188(_) BOOST_PP_SEQ_SIZE_189
#define BOOST_STATIC_ASSERT_MSG(...) static_assert(__VA_ARGS__)
#define _IOC_SIZEBITS 14
#define X509_extract_key(x) X509_get_pubkey(x)
#define PRIdFAST32 __PRIPTR_PREFIX "d"
#define BOOST_MPL_CFG_GPU 0
#define __cpp_alias_templates 200704L
#define AI_CANONIDN 0x0080
#define SO_NO_CHECK 11
#define BIO_retry_type(a) BIO_test_flags(a, BIO_FLAGS_RWS)
#define DEFINE_LHASH_OF(type) LHASH_OF(type) { union lh_ ##type ##_dummy { void* d1; unsigned long d2; int d3; } dummy; }; static ossl_unused ossl_inline LHASH_OF(type) *lh_ ##type ##_new(unsigned long (*hfn)(const type *), int (*cfn)(const type *, const type *)) { return (LHASH_OF(type) *) OPENSSL_LH_new((OPENSSL_LH_HASHFUNC)hfn, (OPENSSL_LH_COMPFUNC)cfn); } static ossl_unused ossl_inline void lh_ ##type ##_free(LHASH_OF(type) *lh) { OPENSSL_LH_free((OPENSSL_LHASH *)lh); } static ossl_unused ossl_inline type *lh_ ##type ##_insert(LHASH_OF(type) *lh, type *d) { return (type *)OPENSSL_LH_insert((OPENSSL_LHASH *)lh, d); } static ossl_unused ossl_inline type *lh_ ##type ##_delete(LHASH_OF(type) *lh, const type *d) { return (type *)OPENSSL_LH_delete((OPENSSL_LHASH *)lh, d); } static ossl_unused ossl_inline type *lh_ ##type ##_retrieve(LHASH_OF(type) *lh, const type *d) { return (type *)OPENSSL_LH_retrieve((OPENSSL_LHASH *)lh, d); } static ossl_unused ossl_inline int lh_ ##type ##_error(LHASH_OF(type) *lh) { return OPENSSL_LH_error((OPENSSL_LHASH *)lh); } static ossl_unused ossl_inline unsigned long lh_ ##type ##_num_items(LHASH_OF(type) *lh) { return OPENSSL_LH_num_items((OPENSSL_LHASH *)lh); } static ossl_unused ossl_inline void lh_ ##type ##_node_stats_bio(const LHASH_OF(type) *lh, BIO *out) { OPENSSL_LH_node_stats_bio((const OPENSSL_LHASH *)lh, out); } static ossl_unused ossl_inline void lh_ ##type ##_node_usage_stats_bio(const LHASH_OF(type) *lh, BIO *out) { OPENSSL_LH_node_usage_stats_bio((const OPENSSL_LHASH *)lh, out); } static ossl_unused ossl_inline void lh_ ##type ##_stats_bio(const LHASH_OF(type) *lh, BIO *out) { OPENSSL_LH_stats_bio((const OPENSSL_LHASH *)lh, out); } static ossl_unused ossl_inline unsigned long lh_ ##type ##_get_down_load(LHASH_OF(type) *lh) { return OPENSSL_LH_get_down_load((OPENSSL_LHASH *)lh); } static ossl_unused ossl_inline void lh_ ##type ##_set_down_load(LHASH_OF(type) *lh, unsigned long dl) { OPENSSL_LH_set_down_load((OPENSSL_LHASH *)lh, dl); } static ossl_unused ossl_inline void lh_ ##type ##_doall(LHASH_OF(type) *lh, void (*doall)(type *)) { OPENSSL_LH_doall((OPENSSL_LHASH *)lh, (OPENSSL_LH_DOALL_FUNC)doall); } LHASH_OF(type)
#define __cpp_constexpr_dynamic_alloc 201907L
#define BOOST_PP_SEQ_SIZE_191(_) BOOST_PP_SEQ_SIZE_192
#define BOOST_PP_SEQ_SIZE_192(_) BOOST_PP_SEQ_SIZE_193
#define BOOST_PP_SEQ_SIZE_194(_) BOOST_PP_SEQ_SIZE_195
#define BOOST_PP_SEQ_SIZE_195(_) BOOST_PP_SEQ_SIZE_196
#define BOOST_PP_SEQ_SIZE_196(_) BOOST_PP_SEQ_SIZE_197
#define SN_sha512_224WithRSAEncryption "RSA-SHA512/224"
#define BOOST_PP_WHILE_167_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_168, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(168, s))
#define BOOST_PP_SEQ_SIZE_199(_) BOOST_PP_SEQ_SIZE_200
#define BOOST_PP_ENUM_M_2_IM(z,n,im) BOOST_PP_ENUM_M_2_I(z, n, im)
#define OBJ_id_mod_qualified_cert_88 OBJ_id_pkix_mod,10L
#define IMPLEMENT_PEM_write_cb_bio(name,type,str,asn1) int PEM_write_bio_ ##name(BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ##asn1,str,bp,x,enc,kstr,klen,cb,u); }
#define _GLIBCXX_THREAD 1
#define SO_SET_NAMESPACE 41
#define OBJ_id_GostR3411_94_prf OBJ_cryptopro,23L
#define ERR_LIB_USER 128
#define AF_UNIX PF_UNIX
#define DECLARE_LHASH_HASH_FN(name,o_type) unsigned long name ##_LHASH_HASH(const void *);
#define _mm_cvt_roundsd_u32(A,B) ((unsigned)__builtin_ia32_vcvtsd2usi32(A, B))
#define _mm_roundscale_pd(A,B) ((__m128d) __builtin_ia32_rndscalepd_128_mask ((__v2df)(__m128d)(A), (int)(B), (__v2df)(__m128d)_mm_setzero_pd (), (__mmask8)-1))
#define IP_RECVRETOPTS IP_RETOPTS
#define OBJ_id_mod_qualified_cert_93 OBJ_id_pkix_mod,11L
#define TCPOPT_SACK_PERMITTED 4
#define SSL_R_RECORD_LENGTH_MISMATCH 213
#define _mm_roundscale_ps(A,B) ((__m128) __builtin_ia32_rndscaleps_128_mask ((__v4sf)(__m128)(A), (int)(B), (__v4sf)(__m128)_mm_setzero_ps (), (__mmask8)-1))
#define OBJ_ms_ctl_sign 1L,3L,6L,1L,4L,1L,311L,10L,3L,1L
#define SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS 11
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_139(s,p,o,m) 0
#define TLS1_CK_RSA_WITH_AES_128_GCM_SHA256 0x0300009C
#define BOOST_PP_ENUM_BINARY_PARAMS_M_IM(z,n,im) BOOST_PP_ENUM_BINARY_PARAMS_M_I(z, n, im)
#define LN_crlBag "crlBag"
#define SSL_want_async_job(s) (SSL_want(s) == SSL_ASYNC_NO_JOBS)
#define OBJ_givenName OBJ_X509,42L
#define __UINT_FAST32_TYPE__ long unsigned int
#define DEFINE_validator(name,validator) static const bool name ##_validator_registered = GFLAGS_NAMESPACE::RegisterFlagValidator(&FLAGS_ ##name, validator)
#define _SC_PAGE_SIZE _SC_PAGESIZE
#define _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 1
#define BLKTRACESTOP _IO(0x12,117)
#define _mm256_maskz_reduce_pd(U,A,B) ((__m256d) __builtin_ia32_reducepd256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)_mm256_setzero_pd(), (__mmask8)(U)))
#define TLS1_CK_RSA_PSK_WITH_ARIA_256_GCM_SHA384 0x0300C06F
#define _mm256_maskz_reduce_ps(U,A,B) ((__m256) __builtin_ia32_reduceps256_mask ((__v8sf)(__m256)(A), (int)(B), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U)))
#define OBJ_id_cmc_dataReturn OBJ_id_cmc,4L
#define _mm_maskz_alignr_epi8(U,X,Y,N) ((__m128i) __builtin_ia32_palignr128_mask ((__v2di)(__m128i)(X), (__v2di)(__m128i)(Y), (int)((N) * 8), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask16)(U)))
#define TLS1_CK_DHE_PSK_WITH_RC4_128_SHA 0x0300008E
#define BOOST_PP_BOOL_115 1
#define BOOST_PP_FOR_54_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(55, s) BOOST_PP_IIF(c, BOOST_PP_FOR_55, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(55, s), p, o, m)
#define BOOST_PP_SEQ_FOLD_LEFT_54(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_54(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define PEM_F_PEM_ASN1_WRITE_BIO 105
#define LC_NAME __LC_NAME
#define NID_cast5_ecb 109
#define _THRIFT_PROTOCOL_TBASE64UTILS_H_ 
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
#define SSL_R_UNKNOWN_PKEY_TYPE 251
#define BOOST_PP_SEQ_FOLD_LEFT_56(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_56(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define RAND_F_RAND_POOL_NEW 116
#define _mm512_i64gather_epi32(INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gatherdiv16si ((__v8si)_mm256_undefined_si256(), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8)0xFF, (int) (SCALE))
#define BOOST_PP_BOOL_118 1
#define BOOST_TYPE_TRAITS_INTEGRAL_CONSTANT_HPP 
#define __cpp_lib_math_special_functions 201603L
#define V_ASN1_OBJECT_DESCRIPTOR 7
#define _mm_roundscale_ss(A,B,I) ((__m128) __builtin_ia32_rndscaless_mask_round ((__v4sf) (__m128) (A), (__v4sf) (__m128) (B), (int) (I), (__v4sf) _mm_setzero_ps (), (__mmask8) (-1), _MM_FROUND_CUR_DIRECTION))
#define EVENT__HAVE_NETDB_H 1
#define SN_brainpoolP256r1 "brainpoolP256r1"
#define _mm512_mask_getexp_round_pd(W,U,A,R) ((__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(W), (__mmask8)(U), R))
#define IOCSIZE_MASK (_IOC_SIZEMASK << _IOC_SIZESHIFT)
#define _mm512_mask_getexp_round_ps(W,U,A,R) ((__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(W), (__mmask16)(U), R))
#define X509_F_LOOKUP_CERTS_SK 152
#define OBJ_id_cct OBJ_id_pkix,12L
#define NID_id_GostR3411_94_with_GostR3410_2001 807
#define APACHE_THRIFT_ACCESSOR_t_enum 
#define SN_set_brand_IATA_ATA "set-brand-IATA-ATA"
#define BOOST_PP_REPEAT_2_250(m,d) BOOST_PP_REPEAT_2_249(m, d) m(3, 249, d)
#define _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
#define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
#define TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA256 "DHE-PSK-AES128-CBC-SHA256"
#define TLS_CT_DSS_SIGN 2
#define _MM_FROUND_TRUNC (_MM_FROUND_TO_ZERO | _MM_FROUND_RAISE_EXC)
#define SN_set_msgExt "set-msgExt"
#define EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT 145
#define SN_setct_CredRevReqTBE "setct-CredRevReqTBE"
#define DN_MULTISHOT 0x80000000
#define _mm512_i64gather_epi64(INDEX,ADDR,SCALE) (__m512i) __builtin_ia32_gatherdiv8di ((__v8di)_mm512_undefined_epi32 (), (void const *) (ADDR), (__v8di)(__m512i) (INDEX), (__mmask8)0xFF, (int) (SCALE))
#define EC_F_EC_KEY_PRIV2OCT 256
#define _mm512_mask_shufflehi_epi16(W,U,A,B) ((__m512i) __builtin_ia32_pshufhw512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i)(W), (__mmask32)(U)))
#define DANE_FLAG_NO_DANE_EE_NAMECHECKS (1L << 0)
#define PEM_FLAG_SECURE 0x1
#define _GLIBCXX_CLOCALE 1
#define X509_PURPOSE_ANY 7
#define __cpp_exceptions 199711L
#define BOOST_PP_FOR_251(s,p,o,m) BOOST_PP_FOR_251_C(BOOST_PP_BOOL(p(252, s)), s, p, o, m)
#define SSL_AD_EXPORT_RESTRICTION TLS1_AD_EXPORT_RESTRICTION
#define NID_id_mod_cmc 274
#define IPV6_PMTUDISC_WANT 1
#define NID_X500algorithms 378
#define FIBMAP _IO(0x00,1)
#define EC_F_ECKEY_PARAM_DECODE 212
#define BOOST_PP_NODE_88(p) BOOST_PP_IIF(p(88), BOOST_PP_NODE_84, BOOST_PP_NODE_92)
#define BOOST_PP_SEQ_FOLD_LEFT_22(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_22(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_REPEAT_1_172(m,d) BOOST_PP_REPEAT_1_171(m, d) m(2, 171, d)
#define __SWORD_TYPE long int
#define MCL_CURRENT 1
#define BOOST_MPL_LIST_AUX_TAG_HPP_INCLUDED 
#define EL3HLT 46
#define BOOST_PP_FOR_253(s,p,o,m) BOOST_PP_FOR_253_C(BOOST_PP_BOOL(p(254, s)), s, p, o, m)
#define SSL_OP_TLS_D5_BUG 0x0
#define X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ 137
#define NID_sm4_cfb1 1136
#define LN_ms_code_ind "Microsoft Individual Code Signing"
#define BOOST_PP_FOR_254(s,p,o,m) BOOST_PP_FOR_254_C(BOOST_PP_BOOL(p(255, s)), s, p, o, m)
#define _mm512_mask_shuffle_f32x4(W,U,X,Y,C) ((__m512) __builtin_ia32_shuf_f32x4_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(C), (__v16sf)(__m512)(W), (__mmask16)(U)))
#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1
#define UINT8_C(c) c
#define LN_rsaesOaep "rsaesOaep"
#define LN_hmac_sha3_224 "hmac-sha3-224"
#define BOOST_TT_REMOVE_REFERENCE_HPP_INCLUDED 
#define NID_id_GostR3410_94_CryptoPro_XchB_ParamSet 837
#define X509_STORE_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_X509_STORE, l, p, newf, dupf, freef)
#define BOOST_PP_FOR_256(s,p,o,m) BOOST_PP_FOR_256_C(BOOST_PP_BOOL(p(257, s)), s, p, o, m)
#define EVP_R_MISSING_PARAMETERS 103
#define X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION 34
#define BOOST_PP_REPEAT_1_176(m,d) BOOST_PP_REPEAT_1_175(m, d) m(2, 175, d)
#define __GTHREAD_ONCE_INIT PTHREAD_ONCE_INIT
#define TLS1_TXT_RSA_WITH_AES_128_SHA "AES128-SHA"
#define BOOST_PP_REPEAT_FROM_TO_M_1_IM(z,n,im) BOOST_PP_REPEAT_FROM_TO_M_1_I(z, n, im)
#define BOOST_PP_DEDUCE_D() BOOST_PP_AUTO_REC(BOOST_PP_WHILE_P, 256)
#define BOOST_PP_SEQ_FOLD_LEFT_I_232(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_233, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(233, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_2(o,s,l) 0
#define OBJ_setAttr_IssCap_T2 OBJ_setAttr_IssCap,4L
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_4(o,s,l) 0
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_5(o,s,l) 0
#define SSLv23_client_method TLS_client_method
#define BOOST_PP_LIST_FOLD_LEFT_CHECK_BOOST_PP_LIST_FOLD_LEFT_9(o,s,l) 0
#define BOOST_PP_SEQ_FOLD_LEFT_I_26(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_27, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(27, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_WHILE_63_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_64, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(64, s))
#define BOOST_PP_REPEAT_1_105(m,d) BOOST_PP_REPEAT_1_104(m, d) m(2, 104, d)
#define TLS1_RFC_ECDH_anon_WITH_AES_128_CBC_SHA "TLS_ECDH_anon_WITH_AES_128_CBC_SHA"
#define BOOST_PP_REPEAT_1_179(m,d) BOOST_PP_REPEAT_1_178(m, d) m(2, 178, d)
#define OBJ_id_Gost28147_89_CryptoPro_D_ParamSet OBJ_cryptopro,31L,4L
#define X509v3_KU_KEY_CERT_SIGN 0x0004
#define ASN1_R_AUX_ERROR 100
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_149(p,o,s) 0
#define LN_personalTitle "personalTitle"
#define SN_clearance "clearance"
#define OBJ_id_pkix_OCSP_Nonce OBJ_id_pkix_OCSP,2L
#define BIO_dgram_send_timedout(b) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP, 0, NULL)
#define DCHECK_STRCASEEQ(str1,str2) CHECK_STRCASEEQ(str1, str2)
#define FS_POLICY_FLAGS_PAD_32 FSCRYPT_POLICY_FLAGS_PAD_32
#define BOOST_PP_REPEAT_1_109(m,d) BOOST_PP_REPEAT_1_108(m, d) m(2, 108, d)
#define LN_hmac_sha3_256 "hmac-sha3-256"
#define CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX 100
#define RSA_R_UNSUPPORTED_MASK_PARAMETER 154
#define TIMESPEC_TO_TIMEVAL(tv,ts) { (tv)->tv_sec = (ts)->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; }
#define _mm256_blend_pd(X,Y,M) ((__m256d) __builtin_ia32_blendpd256 ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(M)))
#define _AVX512VBMIVLINTRIN_H_INCLUDED 
#define PF_MPLS 28
#define NID_supportedApplicationContext 874
#define LN_authorityRevocationList "authorityRevocationList"
#define BOOST_PP_WHILE_127_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_128, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(128, s))
#define X509_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_X509, l, p, newf, dupf, freef)
#define SSL_AD_INSUFFICIENT_SECURITY TLS1_AD_INSUFFICIENT_SECURITY
#define EVP_R_PBKDF2_ERROR 181
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS _CS_XBS5_ILP32_OFF32_LINTFLAGS
#define __INT16_C(c) c
#define TCP_SAVED_SYN 28
#define ASN1_R_HEADER_TOO_LONG 123
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 0x0300C02C
#define BOOST_PP_WHILE_208_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_209, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(209, s))
#define BOOST_PREPROCESSOR_ARITHMETIC_INC_HPP 
#define ASN1_R_ERROR_LOADING_SECTION 172
#define SSL_CTX_sess_connect_good(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CONNECT_GOOD,0,NULL)
#define _SC_THREADS _SC_THREADS
#define CONF_R_MISSING_EQUAL_SIGN 101
#define _mm512_extractf64x4_pd(X,C) ((__m256d) __builtin_ia32_extractf64x4_mask ((__v8df)(__m512d) (X), (int) (C), (__v4df)(__m256d)_mm256_undefined_pd(), (__mmask8)-1))
#define OBJ_id_cmc OBJ_id_pkix,7L
#define OBJ_id_it_origPKIMessage OBJ_id_it,15L
#define ERR_R_INTERNAL_ERROR (4|ERR_R_FATAL)
#define TLS1_TXT_ECDHE_RSA_WITH_CHACHA20_POLY1305 "ECDHE-RSA-CHACHA20-POLY1305"
#define CLONE_SYSVSEM 0x00040000
#define NID_jurisdictionStateOrProvinceName 956
#define TLS1_TXT_ECDHE_RSA_WITH_RC4_128_SHA "ECDHE-RSA-RC4-SHA"
#define THRIFT_ASYNC_CPP2CONNCONTEXT_H_ 1
#define X509V3_R_DUPLICATE_ZONE_ID 133
#define errno (*__errno_location ())
#define __LC_IDENTIFICATION 12
#define EL2NSYNC 45
#define _CMP_ORD_Q 0x07
#define _CMP_ORD_S 0x17
#define F_SETLKW64 7
#define BOOST_PP_SEQ_FOLD_LEFT_201(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_201(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_203(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_203(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_204(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_204(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_205(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_205(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_NOEXCEPT_IF(...) noexcept(__VA_ARGS__)
#define ERR_LIB_ASN1 13
#define __attribute_noinline__ __attribute__ ((__noinline__))
#define LN_camellia_192_cmac "camellia-192-cmac"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_77(op,st,ss,sz) 0
#define TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA256 "ECDHE-PSK-NULL-SHA256"
#define OBJ_aes_128_ecb OBJ_aes,1L
#define BOOST_PP_REPEAT_3_242(m,d) BOOST_PP_REPEAT_3_241(m, d) m(4, 241, d)
#define ERR_TXT_MALLOCED 0x01
#define BOOST_PP_SEQ_FOLD_LEFT_210(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_210(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_211(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_211(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define ASN1_R_NOT_ASCII_FORMAT 190
#define BOOST_PP_SEQ_FOLD_LEFT_215(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_215(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_216(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_216(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm512_cvtps_ph(A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I), (__v16hi)_mm256_undefined_si256 (), -1))
#define BOOST_PP_SEQ_FOLD_LEFT_218(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_218(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_219(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_219(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OBJ_camellia_128_ctr OBJ_camellia,9L
#define _MM_SHUFFLE2(fp1,fp0) (((fp1) << 1) | (fp0))
#define ENOPKG 65
#define TLS1_RFC_DHE_PSK_WITH_AES_256_CCM "TLS_DHE_PSK_WITH_AES_256_CCM"
#define __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
#define FS_IOC_GETFLAGS _IOR('f', 1, long)
#define X509_F_X509_REQ_TO_X509 123
#define BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_3(bit) bit ) ) BOOST_DETAIL_CONVERT_BIT_SEQUENCE_TO_PARENTHETIC_TUPLE_1
#define __throw_exception_again throw
#define BOOST_PP_SEQ_FOLD_LEFT_220(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_220(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_221(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_221(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define DSA_is_prime(n,callback,cb_arg) BN_is_prime(n, DSS_prime_checks, callback, NULL, cb_arg)
#define BOOST_PP_SEQ_FOLD_LEFT_223(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_223(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_HAS_VARIADIC_TMPL 
#define OBJ_OGRN OBJ_member_body,643L,100L,1L
#define BOOST_INTRUSIVE_POINTER_REBIND_HPP 
#define FS_POLICY_FLAGS_PAD_MASK FSCRYPT_POLICY_FLAGS_PAD_MASK
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_79(op,st,ss,sz) 0
#define EVUTIL_AI_NUMERICSERV AI_NUMERICSERV
#define BOOST_PP_SEQ_SIZE_5(_) BOOST_PP_SEQ_SIZE_6
#define SN_countryCode3c "c3"
#define __LDBL_DIG__ 18
#define EVP_F_PKCS5_PBE_KEYIVGEN 117
#define SSL_F_TLS_PROCESS_CLIENT_CERTIFICATE 380
#define EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN (EVP_PKEY_ALG_CTRL + 7)
#define BOOST_PP_REPEAT_CHECK_BOOST_PP_REPEAT_1(c,m,d) 0
#define BOOST_PP_REPEAT_CHECK_BOOST_PP_REPEAT_2(c,m,d) 0
#define BOOST_PP_REPEAT_CHECK_BOOST_PP_REPEAT_3(c,m,d) 0
#define TH_URG 0x20
#define _GLIBCXX_INLINE_VERSION 0
#define CLD_KILLED CLD_KILLED
#define BOOST_PP_SEQ_FOLD_LEFT_230(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_230(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_232(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_232(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_233(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_233(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_234(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_234(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_235(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_235(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_236(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_236(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_237(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_237(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_238(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_238(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_ASSERT_MSG(expr,msg) assert((expr)&&(msg))
#define LN_sha384 "sha384"
#define EFD_CLOEXEC EFD_CLOEXEC
#define LN_joint_iso_itu_t "joint-iso-itu-t"
#define BOOST_PP_SEQ_FOLD_LEFT_60(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_60(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define __INT8_C(c) c
#define BOOST_STDLIB "GNU libstdc++ version " BOOST_STRINGIZE(__GLIBCXX__)
#define BOOST_PP_REPEAT_3_248(m,d) BOOST_PP_REPEAT_3_247(m, d) m(4, 247, d)
#define __cpp_generic_lambdas 201707L
#define BOOST_PP_SEQ_FOLD_LEFT_240(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_240(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_241(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_241(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_MODE_DTLS_SCTP_LABEL_LENGTH_BUG 0x00000400U
#define BOOST_PP_SEQ_FOLD_LEFT_244(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_244(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_245(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_245(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_246(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_246(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_248(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_248(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_249(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_249(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL_CTRL_SET_MIN_PROTO_VERSION 123
#define IN6_IS_ADDR_V4MAPPED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == htonl (0xffff); }))
#define V_ASN1_PRINTABLESTRING 19
#define OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet OBJ_cryptopro,33L,2L
#define DCHECK_STRCASENE(str1,str2) CHECK_STRCASENE(str1, str2)
#define BOOST_PP_SEQ_FOLD_LEFT_64(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_64(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BIO_R_ACCEPT_ERROR 100
#define NID_sshClient 1025
#define BN_FLG_EXP_CONSTTIME BN_FLG_CONSTTIME
#define BOOST_PP_SEQ_FOLD_LEFT_251(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_251(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_252(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_252(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_253(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_253(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_254(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_254(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_256(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_256(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define BOOST_PP_SEQ_FOLD_LEFT_257(op,st,ss) BOOST_PP_ERROR(0x0005)
#define EVP_CIPH_VARIABLE_LENGTH 0x8
#define SSL_get_cipher(s) SSL_CIPHER_get_name(SSL_get_current_cipher(s))
#define SN_setct_CertReqData "setct-CertReqData"
#define OBJ_id_on_personalData OBJ_id_on,1L
#define EVP_CTRL_SET_PIPELINE_INPUT_BUFS 0x23
#define TLS1_CK_DH_anon_WITH_ARIA_128_GCM_SHA256 0x0300C05A
#define NID_dsa_with_SHA3_224 1108
#define AF_IPX PF_IPX
#define PF_CAN 29
#define BOOST_MPL_HAS_XXX_TRAIT_DEF(name) BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF(BOOST_PP_CAT(has_,name), name, false)
#define BIO_C_GET_CIPHER_STATUS 113
#define PEM_STRING_X509_REQ_OLD "NEW CERTIFICATE REQUEST"
#define _SC_DEVICE_IO _SC_DEVICE_IO
#define _AVX512BF16VLINTRIN_H_INCLUDED 
#define LN_id_pkix_OCSP_acceptableResponses "Acceptable OCSP Responses"
#define THRIFT_FLAG_DECLARE_bool(_name) THRIFT_FLAG_DECLARE(_name, bool)
#define PEM_F_DO_PVK_BODY 135
#define BUF_strnlen(str,maxlen) OPENSSL_strnlen(str, maxlen)
#define BIO_F_LINEBUFFER_NEW 151
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define SSL_MAX_SSL_SESSION_ID_LENGTH 32
#define X509v3_KU_CRL_SIGN 0x0002
#define _mm_roti_epi8(A,N) ((__m128i) __builtin_ia32_vprotbi ((__v16qi)(__m128i)(A), (int)(N)))
#define SN_setAttr_PGWYcap "setAttr-PGWYcap"
#define SN_iana "IANA"
#define SSL_R_BAD_DH_VALUE 102
#define EVP_F_EVP_DECRYPTFINAL_EX 101
#define NID_id_cmc_decryptedPOP 336
#define BOOST_PP_ITERATE_3 <boost/preprocessor/iteration/detail/iter/forward3.hpp>
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1101 (1)(1)(0)(1),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001000 (0)(1)(0)(0)(1)(0)(0)(0),
#define SSL_F_TLS_PARSE_CTOS_SESSION_TICKET 574
#define SSL_R_INVALID_SERVERINFO_DATA 388
#define _mm512_mask3_fmsub_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmsubpd512_mask3(A, B, C, U, R)
#define SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES (512/8)
#define NID_dhSinglePass_stdDH_sha512kdf_scheme 940
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00001011 (0)(0)(0)(0)(1)(0)(1)(1),
#define EVENT__HAVE_NETINET_IN_H 1
#define BOOST_PP_FOR_196_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(197, s) BOOST_PP_IIF(c, BOOST_PP_FOR_197, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(197, s), p, o, m)
#define ASN1_F_COLLECT_DATA 140
#define NID_id_pkix_OCSP_serviceLocator 371
#define BIO_append_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_APPEND,name)
#define X509_V_ERR_UNNESTED_RESOURCE 46
#define BOOST_VARIANT_HPP 
#define BOOST_PP_ITERATE_5 <boost/preprocessor/iteration/detail/iter/forward5.hpp>
#define _mm_shldi_epi16(A,B,C) ((__m128i) __builtin_ia32_vpshld_v8hi ((__v8hi)(__m128i)(A), (__v8hi)(__m128i)(B),(int)(C)))
#define BOOST_PP_FOR_100(s,p,o,m) BOOST_PP_FOR_100_C(BOOST_PP_BOOL(p(101, s)), s, p, o, m)
#define BOOST_PP_FOR_101(s,p,o,m) BOOST_PP_FOR_101_C(BOOST_PP_BOOL(p(102, s)), s, p, o, m)
#define BOOST_PP_FOR_102(s,p,o,m) BOOST_PP_FOR_102_C(BOOST_PP_BOOL(p(103, s)), s, p, o, m)
#define BOOST_PP_FOR_103(s,p,o,m) BOOST_PP_FOR_103_C(BOOST_PP_BOOL(p(104, s)), s, p, o, m)
#define BOOST_PP_FOR_105(s,p,o,m) BOOST_PP_FOR_105_C(BOOST_PP_BOOL(p(106, s)), s, p, o, m)
#define BOOST_PP_FOR_106(s,p,o,m) BOOST_PP_FOR_106_C(BOOST_PP_BOOL(p(107, s)), s, p, o, m)
#define OBJ_id_smime_aa_ets_sigPolicyId OBJ_id_smime_aa,15L
#define BOOST_PP_FOR_109(s,p,o,m) BOOST_PP_FOR_109_C(BOOST_PP_BOOL(p(110, s)), s, p, o, m)
#define X509_R_INVALID_TRUST 123
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0100111 (0)(1)(0)(0)(1)(1)(1),
#define EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION 124
#define PRIoLEAST8 "o"
#define NID_OGRN 1005
#define V_ASN1_PRIMITIVE_TAG 0x1f
#define __glibc_likely(cond) __builtin_expect ((cond), 1)
#define _CS_POSIX_V6_ILP32_OFF32_LIBS _CS_POSIX_V6_ILP32_OFF32_LIBS
#define X509V3_F_V2I_NAME_CONSTRAINTS 147
#define _GNU_SOURCE 1
#define OPENSSL_NO_UBSAN 
#define SSL_R_SSL_COMMAND_SECTION_EMPTY 117
#define SO_RCVTIMEO SO_RCVTIMEO_OLD
#define SN_id_GostR3411_94_with_GostR3410_94_cc "id-GostR3411-94-with-GostR3410-94-cc"
#define BOOST_PP_FOR_111(s,p,o,m) BOOST_PP_FOR_111_C(BOOST_PP_BOOL(p(112, s)), s, p, o, m)
#define BOOST_PP_FOR_112(s,p,o,m) BOOST_PP_FOR_112_C(BOOST_PP_BOOL(p(113, s)), s, p, o, m)
#define BOOST_PP_FOR_113(s,p,o,m) BOOST_PP_FOR_113_C(BOOST_PP_BOOL(p(114, s)), s, p, o, m)
#define BOOST_PP_FOR_115(s,p,o,m) BOOST_PP_FOR_115_C(BOOST_PP_BOOL(p(116, s)), s, p, o, m)
#define BOOST_PP_FOR_116(s,p,o,m) BOOST_PP_FOR_116_C(BOOST_PP_BOOL(p(117, s)), s, p, o, m)
#define BOOST_PP_FOR_117(s,p,o,m) BOOST_PP_FOR_117_C(BOOST_PP_BOOL(p(118, s)), s, p, o, m)
#define BOOST_PP_FOR_118(s,p,o,m) BOOST_PP_FOR_118_C(BOOST_PP_BOOL(p(119, s)), s, p, o, m)
#define BOOST_PP_FOR_119(s,p,o,m) BOOST_PP_FOR_119_C(BOOST_PP_BOOL(p(120, s)), s, p, o, m)
#define si_upper _sifields._sigfault._bounds._addr_bnd._upper
#define __POSIX_FADV_DONTNEED 4
#define BOOST_RV_REF(TYPE) TYPE &&
#define CONF_R_LIST_CANNOT_BE_NULL 115
#define SN_setct_CapRevReqTBEX "setct-CapRevReqTBEX"
#define _mm_dbsad_epu8(X,Y,C) ((__m128i) __builtin_ia32_dbpsadbw128_mask ((__v16qi)(__m128i) (X), (__v16qi)(__m128i) (Y), (int) (C), (__v8hi)(__m128i)_mm_setzero_si128(), (__mmask8)-1))
#define _mm_shldi_epi32(A,B,C) ((__m128i) __builtin_ia32_vpshld_v4si ((__v4si)(__m128i)(A), (__v4si)(__m128i)(B),(int)(C)))
#define OBJ_serialNumber OBJ_X509,5L
#define SN_id_smime_ct_receipt "id-smime-ct-receipt"
#define BOOST_PP_WHILE_53(p,o,s) BOOST_PP_WHILE_53_C(BOOST_PP_BOOL(p(54, s)), p, o, s)
#define _GLIBCXX17_CONSTEXPR constexpr
#define _mm512_cvt_roundph_ps(A,B) (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)_mm512_undefined_ps(), -1, B)
#define _GLIBCXX_HAVE_EXECINFO_H 1
#define BOOST_PP_FOR_121(s,p,o,m) BOOST_PP_FOR_121_C(BOOST_PP_BOOL(p(122, s)), s, p, o, m)
#define BOOST_PP_FOR_122(s,p,o,m) BOOST_PP_FOR_122_C(BOOST_PP_BOOL(p(123, s)), s, p, o, m)
#define OBJ_hmacWithSHA256 OBJ_rsadsi,2L,9L
#define BOOST_PP_FOR_126(s,p,o,m) BOOST_PP_FOR_126_C(BOOST_PP_BOOL(p(127, s)), s, p, o, m)
#define BOOST_PP_FOR_127(s,p,o,m) BOOST_PP_FOR_127_C(BOOST_PP_BOOL(p(128, s)), s, p, o, m)
#define BOOST_PP_FOR_128(s,p,o,m) BOOST_PP_FOR_128_C(BOOST_PP_BOOL(p(129, s)), s, p, o, m)
#define BOOST_PP_FOR_129(s,p,o,m) BOOST_PP_FOR_129_C(BOOST_PP_BOOL(p(130, s)), s, p, o, m)
#define BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP 37
#define BOOST_INTRUSIVE_IMPDEF(TYPE) TYPE
#define SSL_set_timeout(a,b) SSL_SESSION_set_timeout((a),(b))
#define BIO_set_accept_port(b,port) BIO_ctrl(b,BIO_C_SET_ACCEPT,1, (char *)(port))
#define SN_sm4_cfb128 "SM4-CFB"
#define _STDLIB_H 1
#define BOOST_PP_REPEAT_1_110(m,d) BOOST_PP_REPEAT_1_109(m, d) m(2, 109, d)
#define BIO_C_MAKE_BIO_PAIR 138
#define OBJ_camellia_192_cbc 1L,2L,392L,200011L,61L,1L,1L,1L,3L
#define LN_rFC822localPart "rFC822localPart"
#define TLS1_RFC_DH_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384"
#define BOOST_MPL_AUX_PUSH_BACK_IMPL_HPP_INCLUDED 
#define OBJ_issuing_distribution_point OBJ_id_ce,28L
#define BOOST_PP_REPEAT_1_111(m,d) BOOST_PP_REPEAT_1_110(m, d) m(2, 110, d)
#define BOOST_PP_WHILE_243_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_244, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(244, s))
#define XKU_SSL_CLIENT 0x2
#define EVP_PKEY_OP_TYPE_SIG (EVP_PKEY_OP_SIGN | EVP_PKEY_OP_VERIFY | EVP_PKEY_OP_VERIFYRECOVER | EVP_PKEY_OP_SIGNCTX | EVP_PKEY_OP_VERIFYCTX)
#define BOOST_PP_FOR_132(s,p,o,m) BOOST_PP_FOR_132_C(BOOST_PP_BOOL(p(133, s)), s, p, o, m)
#define SSL_R_UNSUPPORTED_PROTOCOL 258
#define BOOST_PP_FOR_134(s,p,o,m) BOOST_PP_FOR_134_C(BOOST_PP_BOOL(p(135, s)), s, p, o, m)
#define NID_des_cfb64 30
#define BOOST_PP_FOR_136(s,p,o,m) BOOST_PP_FOR_136_C(BOOST_PP_BOOL(p(137, s)), s, p, o, m)
#define BOOST_PP_FOR_137(s,p,o,m) BOOST_PP_FOR_137_C(BOOST_PP_BOOL(p(138, s)), s, p, o, m)
#define EC_F_ECDH_SIMPLE_COMPUTE_KEY 257
#define _BITS_FLOATN_COMMON_H 
#define SSL3_RFC_RSA_NULL_MD5 "TLS_RSA_WITH_NULL_MD5"
#define _BITS_SIGINFO_CONSTS_H 1
#define EVP_PKEY_CTRL_RSA_MGF1_MD (EVP_PKEY_ALG_CTRL + 5)
#define SN_id_tc26_agreement "id-tc26-agreement"
#define SSL_TXT_kECDH "kECDH"
#define S_ISCHR(mode) __S_ISTYPE((mode), __S_IFCHR)
#define BOOST_PP_REPEAT_1_114(m,d) BOOST_PP_REPEAT_1_113(m, d) m(2, 113, d)
#define BOOST_PP_FOR_21_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(22, s) BOOST_PP_IIF(c, BOOST_PP_FOR_22, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(22, s), p, o, m)
#define NID_favouriteDrink 462
#define BOOST_NONCOPYABLE_BASE_TOKEN_DEFINED 
#define OBJ_camellia_192_ccm OBJ_camellia,27L
#define OBJ_camellia_192_ofb128 OBJ_camellia,23L
#define LN_telephoneNumber "telephoneNumber"
#define EC_R_SLOT_FULL 108
#define BOOST_PP_FOR_140(s,p,o,m) BOOST_PP_FOR_140_C(BOOST_PP_BOOL(p(141, s)), s, p, o, m)
#define BOOST_PP_FOR_141(s,p,o,m) BOOST_PP_FOR_141_C(BOOST_PP_BOOL(p(142, s)), s, p, o, m)
#define BOOST_PP_FOR_144(s,p,o,m) BOOST_PP_FOR_144_C(BOOST_PP_BOOL(p(145, s)), s, p, o, m)
#define BOOST_PP_FOR_145(s,p,o,m) BOOST_PP_FOR_145_C(BOOST_PP_BOOL(p(146, s)), s, p, o, m)
#define BOOST_PP_FOR_146(s,p,o,m) BOOST_PP_FOR_146_C(BOOST_PP_BOOL(p(147, s)), s, p, o, m)
#define BOOST_PP_FOR_147(s,p,o,m) BOOST_PP_FOR_147_C(BOOST_PP_BOOL(p(148, s)), s, p, o, m)
#define BOOST_PP_FOR_148(s,p,o,m) BOOST_PP_FOR_148_C(BOOST_PP_BOOL(p(149, s)), s, p, o, m)
#define BOOST_PP_FOR_149(s,p,o,m) BOOST_PP_FOR_149_C(BOOST_PP_BOOL(p(150, s)), s, p, o, m)
#define BIO_FLAGS_IN_EOF 0x800
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS _CS_POSIX_V6_ILP32_OFFBIG_LIBS
#define EV_SIZE_MAX EV_UINT64_MAX
#define M_SQRT1_2 0.70710678118654752440
#define _mm_shldi_epi64(A,B,C) ((__m128i) __builtin_ia32_vpshld_v2di ((__v2di)(__m128i)(A), (__v2di)(__m128i)(B),(int)(C)))
#define OBJ_zlib_compression OBJ_id_smime_alg,8L
#define CRYPTO_F_OPENSSL_HEXSTR2BUF 118
#define BOOST_PP_SEQ_FOLD_LEFT_183(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_183(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_id_smime_aa_timeStampToken "id-smime-aa-timeStampToken"
#define EC_F_EC_KEY_OCT2PRIV 255
#define NID_secp160k1 708
#define AIO_PRIO_DELTA_MAX 20
#define SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES 362
#define BOOST_PP_REPEAT_1_119(m,d) BOOST_PP_REPEAT_1_118(m, d) m(2, 118, d)
#define BOOST_PP_FOR_150(s,p,o,m) BOOST_PP_FOR_150_C(BOOST_PP_BOOL(p(151, s)), s, p, o, m)
#define BOOST_PP_FOR_152(s,p,o,m) BOOST_PP_FOR_152_C(BOOST_PP_BOOL(p(153, s)), s, p, o, m)
#define BOOST_PP_FOR_153(s,p,o,m) BOOST_PP_FOR_153_C(BOOST_PP_BOOL(p(154, s)), s, p, o, m)
#define BOOST_PP_FOR_154(s,p,o,m) BOOST_PP_FOR_154_C(BOOST_PP_BOOL(p(155, s)), s, p, o, m)
#define BOOST_PP_FOR_158(s,p,o,m) BOOST_PP_FOR_158_C(BOOST_PP_BOOL(p(159, s)), s, p, o, m)
#define BOOST_PP_FOR_159(s,p,o,m) BOOST_PP_FOR_159_C(BOOST_PP_BOOL(p(160, s)), s, p, o, m)
#define LN_id_GostR3410_2001_ParamSet_cc "GOST R 3410-2001 Parameter Set Cryptocom"
#define X509_F_X509_STORE_ADD_CERT 124
#define SN_X500 "X500"
#define _mm512_maskz_fnmadd_round_ps(U,A,B,C,R) (__m512)__builtin_ia32_vfnmaddps512_maskz(A, B, C, U, R)
#define BOOST_PP_REPEAT_3_188(m,d) BOOST_PP_REPEAT_3_187(m, d) m(4, 187, d)
#define LN_siphash "siphash"
#define __ATOMIC_ACQUIRE 2
#define __glibcxx_requires_valid_range(_First,_Last) 
#define TCPI_OPT_SYN_DATA 32
#define _mm_maskz_fixupimm_pd(U,X,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmpd128_maskz ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U)))
#define BOOST_PP_FOR_160(s,p,o,m) BOOST_PP_FOR_160_C(BOOST_PP_BOOL(p(161, s)), s, p, o, m)
#define BOOST_PP_FOR_161(s,p,o,m) BOOST_PP_FOR_161_C(BOOST_PP_BOOL(p(162, s)), s, p, o, m)
#define BOOST_PP_FOR_162(s,p,o,m) BOOST_PP_FOR_162_C(BOOST_PP_BOOL(p(163, s)), s, p, o, m)
#define GAI_WAIT 0
#define BOOST_PP_FOR_165(s,p,o,m) BOOST_PP_FOR_165_C(BOOST_PP_BOOL(p(166, s)), s, p, o, m)
#define BOOST_PP_FOR_166(s,p,o,m) BOOST_PP_FOR_166_C(BOOST_PP_BOOL(p(167, s)), s, p, o, m)
#define BOOST_PP_FOR_167(s,p,o,m) BOOST_PP_FOR_167_C(BOOST_PP_BOOL(p(168, s)), s, p, o, m)
#define BOOST_PP_FOR_168(s,p,o,m) BOOST_PP_FOR_168_C(BOOST_PP_BOOL(p(169, s)), s, p, o, m)
#define BOOST_PP_FOR_169(s,p,o,m) BOOST_PP_FOR_169_C(BOOST_PP_BOOL(p(170, s)), s, p, o, m)
#define FP_LLOGBNAN (-__FP_LONG_MAX - 1)
#define OBJ_info OBJ_pilotAttributeType,4L
#define MOUNT_ATTR_NODIRATIME 0x00000080
#define EVP_PKEY_CTX_get1_id(ctx,id) EVP_PKEY_CTX_ctrl(ctx, -1, -1, EVP_PKEY_CTRL_GET1_ID, 0, (void*)(id))
#define BOOST_PP_REPEAT_3_83(m,d) BOOST_PP_REPEAT_3_82(m, d) m(4, 82, d)
#define LN_buildingName "buildingName"
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
#define __GCC_IEC_559_COMPLEX 2
#define _GLIBCXX_RANDOM 1
#define SN_id_qt_unotice "id-qt-unotice"
#define _GLIBCXX98_USE_C99_MATH 1
#define BOOST_PP_FOR_170(s,p,o,m) BOOST_PP_FOR_170_C(BOOST_PP_BOOL(p(171, s)), s, p, o, m)
#define IN6ADDR_LOOPBACK_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }
#define BOOST_PP_FOR_172(s,p,o,m) BOOST_PP_FOR_172_C(BOOST_PP_BOOL(p(173, s)), s, p, o, m)
#define BOOST_PP_FOR_173(s,p,o,m) BOOST_PP_FOR_173_C(BOOST_PP_BOOL(p(174, s)), s, p, o, m)
#define BOOST_PP_FOR_175(s,p,o,m) BOOST_PP_FOR_175_C(BOOST_PP_BOOL(p(176, s)), s, p, o, m)
#define BOOST_PP_FOR_176(s,p,o,m) BOOST_PP_FOR_176_C(BOOST_PP_BOOL(p(177, s)), s, p, o, m)
#define BOOST_PP_FOR_177(s,p,o,m) BOOST_PP_FOR_177_C(BOOST_PP_BOOL(p(178, s)), s, p, o, m)
#define BOOST_PP_FOR_178(s,p,o,m) BOOST_PP_FOR_178_C(BOOST_PP_BOOL(p(179, s)), s, p, o, m)
#define BOOST_PP_FOR_179(s,p,o,m) BOOST_PP_FOR_179_C(BOOST_PP_BOOL(p(180, s)), s, p, o, m)
#define EVP_PKEY_CTX_get0_rsa_oaep_label(ctx,l) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL, 0, (void *)(l))
#define OBJ_cmcCA OBJ_id_kp,27L
#define LN_sendRouter "Send Router"
#define _SC_TIMEOUTS _SC_TIMEOUTS
#define SIGBUS 7
#define BOOST_PP_REPEAT_3_127(m,d) BOOST_PP_REPEAT_3_126(m, d) m(4, 126, d)
#define LN_ieee_siswg "IEEE Security in Storage Working Group"
#define BOOST_PP_SLOT_TEMP_1 6
#define EUNATCH 49
#define BOOST_PP_ASSIGN_SLOT_2 <boost/preprocessor/slot/detail/slot2.hpp>
#define NID_commonName 13
#define BOOST_PP_FOR_180(s,p,o,m) BOOST_PP_FOR_180_C(BOOST_PP_BOOL(p(181, s)), s, p, o, m)
#define BOOST_PP_FOR_181(s,p,o,m) BOOST_PP_FOR_181_C(BOOST_PP_BOOL(p(182, s)), s, p, o, m)
#define BOOST_PP_FOR_182(s,p,o,m) BOOST_PP_FOR_182_C(BOOST_PP_BOOL(p(183, s)), s, p, o, m)
#define BOOST_PP_FOR_183(s,p,o,m) BOOST_PP_FOR_183_C(BOOST_PP_BOOL(p(184, s)), s, p, o, m)
#define BOOST_PP_FOR_184(s,p,o,m) BOOST_PP_FOR_184_C(BOOST_PP_BOOL(p(185, s)), s, p, o, m)
#define BOOST_PP_FOR_185(s,p,o,m) BOOST_PP_FOR_185_C(BOOST_PP_BOOL(p(186, s)), s, p, o, m)
#define BOOST_PP_FOR_186(s,p,o,m) BOOST_PP_FOR_186_C(BOOST_PP_BOOL(p(187, s)), s, p, o, m)
#define BOOST_PP_FOR_188(s,p,o,m) BOOST_PP_FOR_188_C(BOOST_PP_BOOL(p(189, s)), s, p, o, m)
#define BOOST_PP_FOR_189(s,p,o,m) BOOST_PP_FOR_189_C(BOOST_PP_BOOL(p(190, s)), s, p, o, m)
#define SSL_F_TLS_PROCESS_NEW_SESSION_TICKET 366
#define TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA 0x0300C006
#define M_Ef64x __f64x (2.718281828459045235360287471352662498)
#define SSL_CTX_set1_chain(ctx,sk) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN,1,(char *)(sk))
#define NID_aes_128_cbc_hmac_sha256 948
#define __flexarr []
#define TLS1_RFC_RSA_WITH_AES_256_SHA256 "TLS_RSA_WITH_AES_256_CBC_SHA256"
#define _mm_cvt_roundsi64_sd(A,B,C) (__m128d)__builtin_ia32_cvtsi2sd64(A, B, C)
#define DH_R_KEYS_NOT_SET 108
#define BOOST_PP_SEQ_TRANSFORM_O(s,state,elem) BOOST_PP_SEQ_TRANSFORM_O_IM(s, BOOST_PP_TUPLE_REM_3 state, elem)
#define _mm_cvt_roundsi64_ss(A,B,C) (__m128)__builtin_ia32_cvtsi2ss64(A, B, C)
#define BOOST_PP_FOR_190(s,p,o,m) BOOST_PP_FOR_190_C(BOOST_PP_BOOL(p(191, s)), s, p, o, m)
#define BOOST_PP_FOR_191(s,p,o,m) BOOST_PP_FOR_191_C(BOOST_PP_BOOL(p(192, s)), s, p, o, m)
#define BOOST_PP_FOR_192(s,p,o,m) BOOST_PP_FOR_192_C(BOOST_PP_BOOL(p(193, s)), s, p, o, m)
#define BOOST_PP_FOR_193(s,p,o,m) BOOST_PP_FOR_193_C(BOOST_PP_BOOL(p(194, s)), s, p, o, m)
#define BOOST_PP_FOR_194(s,p,o,m) BOOST_PP_FOR_194_C(BOOST_PP_BOOL(p(195, s)), s, p, o, m)
#define BOOST_PP_FOR_195(s,p,o,m) BOOST_PP_FOR_195_C(BOOST_PP_BOOL(p(196, s)), s, p, o, m)
#define BOOST_PP_FOR_196(s,p,o,m) BOOST_PP_FOR_196_C(BOOST_PP_BOOL(p(197, s)), s, p, o, m)
#define BOOST_PP_FOR_197(s,p,o,m) BOOST_PP_FOR_197_C(BOOST_PP_BOOL(p(198, s)), s, p, o, m)
#define OBJ_id_smime_aa_ets_otherSigCert OBJ_id_smime_aa,19L
#define BOOST_PP_FOR_199(s,p,o,m) BOOST_PP_FOR_199_C(BOOST_PP_BOOL(p(200, s)), s, p, o, m)
#define TLS1_TXT_DHE_DSS_WITH_RC4_128_SHA "DHE-DSS-RC4-SHA"
#define IMPLEMENT_PEM_rw(name,type,str,asn1) IMPLEMENT_PEM_read(name, type, str, asn1) IMPLEMENT_PEM_write(name, type, str, asn1)
#define EVP_CIPH_FLAG_CUSTOM_CIPHER 0x100000
#define SN_id_tc26_gost_28147_constants "id-tc26-gost-28147-constants"
#define BOOST_VARIANT_MAKE_VARIADIC_I(argscount,x) BOOST_VARIANT_MAKE_VARIADIC_II(argscount, x)
#define NID_ipsec_IKE 1022
#define PEM_STRING_CMS "CMS"
#define LN_aria_128_cbc "aria-128-cbc"
#define OBJ_id_aca_accessIdentity OBJ_id_aca,2L
#define _mm_sqrt_round_sd(A,B,C) (__m128d)__builtin_ia32_sqrtsd_mask_round (B, A, (__v2df) _mm_setzero_pd (), -1, C)
#define PTHREAD_SCOPE_PROCESS PTHREAD_SCOPE_PROCESS
#define BOOST_PP_ASSIGN_SLOT_5 <boost/preprocessor/slot/detail/slot5.hpp>
#define NID_dstu28147_wrap 1155
#define SYNCHRONIZED_VAR(var) FB_CONCATENATE(SYNCHRONIZED_ ##var ##_, __LINE__)
#define _BITS_TIME_H 1
#define M_LN10l 2.302585092994045684017991454684364208L
#define OBJ_x509Crl OBJ_crlTypes,1L
#define __socklen_t_defined 
#define NID_sOARecord 482
#define NID_pkInitKDC 1033
#define SO_EE_ORIGIN_TXSTATUS 4
#define EVENT__HAVE_ERRNO_H 1
#define BOOST_PP_FOR_128_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(129, s) BOOST_PP_IIF(c, BOOST_PP_FOR_129, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(129, s), p, o, m)
#define BOOST_MPL_AUX_CONFIG_HAS_APPLY_HPP_INCLUDED 
#define LN_aria_128_ccm "aria-128-ccm"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_149(s,p,o,m) 0
#define APACHE_THRIFT_ACCESSOR_initialResponseType 
#define __WCHAR_MAX__ 0x7fffffff
#define SN_aes_256_cfb8 "AES-256-CFB8"
#define SN_textNotice "textNotice"
#define FOLLY_COMPRESSION_HAS_CONTEXT_POOL_SINGLETONS 
#define EVP_F_ARIA_GCM_INIT_KEY 176
#define BOOST_PP_SLOT_TEMP_9 0
#define IP_HDRINCL 3
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1001111 (1)(0)(0)(1)(1)(1)(1),
#define NID_secp160r1 709
#define NID_secp160r2 710
#define BOOST_PP_WHILE_30_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_31, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(31, s))
#define PKCS7_F_PKCS7_SET_CIPHER 108
#define _mm512_maskz_cvt_roundpd_ps(U,A,B) (__m256)__builtin_ia32_cvtpd2ps512_mask(A, (__v8sf)_mm256_setzero_ps(), U, B)
#define NID_setCext_certType 609
#define _POSIX_TYPED_MEMORY_OBJECTS -1
#define _CS_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS
#define _mm_maskz_shufflehi_epi16(U,A,B) ((__m128i) __builtin_ia32_pshufhw128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define _STAT_VER_LINUX 1
#define TLS1_TXT_PSK_WITH_AES_256_CCM_8 "PSK-AES256-CCM8"
#define BOOST_PP_BOOL_132 1
#define _IOS_BASE_H 1
#define SSL_F_TLS13_RESTORE_HANDSHAKE_DIGEST_FOR_PHA 617
#define BN_BITS (BN_BITS2 * 2)
#define _mm_maskz_getexp_round_sd(U,A,B,C) (__m128d)__builtin_ia32_getexpsd_mask_round(A, B, (__v2df)_mm_setzero_pd(), U, C)
#define OBJ_aes_128_gcm OBJ_aes,6L
#define INT16_C(c) c
#define _mm_maskz_getexp_round_ss(U,A,B,C) (__m128)__builtin_ia32_getexpss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, C)
#define BN_F_BN_MOD_EXP_MONT_CONSTTIME 124
#define BOOST_PP_FOR_5(s,p,o,m) BOOST_PP_FOR_5_C(BOOST_PP_BOOL(p(6, s)), s, p, o, m)
#define SN_setct_CertResTBE "setct-CertResTBE"
#define BOOST_INTRUSIVE_LINEAR_SLIST_ALGORITHMS_HPP 
#define __SIZEOF_PTHREAD_ATTR_T 56
#define NID_info 461
#define TLS1_CK_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C096
#define BOOST_PP_INTERCEPT_78 
#define BOOST_PP_SEQ_FOLD_LEFT_75(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_75(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define IORING_REGISTER_FILES 2
#define _mm512_setr_pd(e0,e1,e2,e3,e4,e5,e6,e7) _mm512_set_pd(e7,e6,e5,e4,e3,e2,e1,e0)
#define DEPRECATEDIN_0_9_8(f) DECLARE_DEPRECATED(f)
#define _PSTL_PRAGMA_MESSAGE_POLICIES(x) 
#define _mm512_setr_ps(e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15) _mm512_set_ps(e15,e14,e13,e12,e11,e10,e9,e8,e7,e6,e5,e4,e3,e2,e1,e0)
#define LN_hmacWithDstu34311 "HMAC DSTU Gost 34311-95"
#define NID_friendlyName 156
#define pthread_cleanup_pop_restore_np(execute) __clframe.__restore (); __clframe.__setdoit (execute); } while (0)
#define UINT_LEAST64_MAX (__UINT64_C(18446744073709551615))
#define OBJ_X9_62_id_characteristic_two_basis OBJ_X9_62_characteristic_two_field,3L
#define BOOST_PP_INTERCEPT_79 
#define DSA_R_MISSING_PRIVATE_KEY 111
#define SSL_CTX_sess_set_cache_size(ctx,t) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SESS_CACHE_SIZE,t,NULL)
#define SSL_AD_CLOSE_NOTIFY SSL3_AD_CLOSE_NOTIFY
#define FS_POLICY_FLAGS_VALID 0x07
#define M_ASN1_new_of(type) (type *)ASN1_item_new(ASN1_ITEM_rptr(type))
#define SSL_F_TLS_PARSE_CTOS_EARLY_DATA 568
#define BIO_get_peer_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,3))
#define BOOST_HASH_HAS_VARIANT 1
#define EC_F_EC_POINT_DBL 115
#define BOOST_PP_REPEAT_FROM_TO_M_1_II(z,n,m,dt) m(z, n, dt)
#define TLS1_RFC_DHE_PSK_WITH_AES_128_GCM_SHA256 "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256"
#define DH_R_KDF_PARAMETER_ERROR 112
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110100 (1)(1)(0)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110101 (1)(1)(0)(1)(0)(1),
#define PRIdMAX __PRI64_PREFIX "d"
#define TLSEXT_max_fragment_length_512 1
#define _CXXABI_FORCED_H 1
#define NID_rc4 5
#define _GLIBCXX_USE_LONG_LONG 1
#define WIFEXITED(status) __WIFEXITED (status)
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define BOOST_PP_LIST_FOLD_LEFT_254(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_255, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(255, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define DEFINE_int32(name,val,txt) DEFINE_VARIABLE(GFLAGS_NAMESPACE::int32, I, name, val, txt)
#define OBJ_sha1WithRSAEncryption OBJ_pkcs1,5L
#define RAND_R_UNSUPPORTED_DRBG_FLAGS 132
#define BOOST_VARIANT_DETAIL_HAS_RESULT_TYPE_HPP 
#define BOOST_PP_FOR_88_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(89, s) BOOST_PP_IIF(c, BOOST_PP_FOR_89, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(89, s), p, o, m)
#define FS_ENCRYPTION_MODE_AES_256_CBC 3
#define BOOST_PP_IDENTITY(item) item BOOST_PP_EMPTY
#define LN_chacha20_poly1305 "chacha20-poly1305"
#define BOOST_PP_SEQ_FOLD_LEFT BOOST_PP_CAT(BOOST_PP_SEQ_FOLD_LEFT_, BOOST_PP_AUTO_REC(BOOST_PP_SEQ_FOLD_LEFT_P, 256))
#define _mm512_mask_fpclass_ps_mask(u,x,c) ((__mmask16) __builtin_ia32_fpclassps512_mask ((__v16sf) (__m512) (x), (int) (c),(__mmask8)(u)))
#define NID_hmac 855
#define LHASH_DOALL_ARG_FN(name) name ##_LHASH_DOALL_ARG
#define BOOST_PP_REPEAT_1_187(m,d) BOOST_PP_REPEAT_1_186(m, d) m(2, 186, d)
#define OBJ_aes_192_ecb OBJ_aes,21L
#define _SC_NPROCESSORS_ONLN _SC_NPROCESSORS_ONLN
#define BOOST_PP_BOOL_11 1
#define BOOST_PP_BOOL_13 1
#define BOOST_PP_BOOL_15 1
#define BOOST_PP_BOOL_16 1
#define BOOST_PP_BOOL_17 1
#define BOOST_PP_BOOL_18 1
#define BOOST_PP_BOOL_19 1
#define SSL_get0_ec_point_formats(s,plst) SSL_ctrl(s,SSL_CTRL_GET_EC_POINT_FORMATS,0,plst)
#define TLSEXT_TYPE_client_certificate_url 2
#define _mm512_mask_rcp28_pd(W,U,A) _mm512_mask_rcp28_round_pd(W, U, A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000101 (1)(0)(0)(0)(0)(1)(0)(1),
#define SN_id_GostR3411_2012_512 "md_gost12_512"
#define F_GETPIPE_SZ 1032
#define TLSEXT_max_fragment_length_1024 2
#define _mm512_mask_rcp28_ps(W,U,A) _mm512_mask_rcp28_round_ps(W, U, A, _MM_FROUND_CUR_DIRECTION)
#define DEFINE_int64(name,val,txt) DEFINE_VARIABLE(GFLAGS_NAMESPACE::int64, I64, name, val, txt)
#define TLSEXT_ECPOINTFORMAT_ansiX962_compressed_prime 1
#define PKCS7_F_PKCS7_ADD_CRL 101
#define OBJ_bf_cbc 1L,3L,6L,1L,4L,1L,3029L,1L,2L
#define __stub_setlogin 
#define BOOST_PP_BOOL_20 1
#define NI_MAXHOST 1025
#define EC_R_POINT_ARITHMETIC_FAILURE 155
#define BOOST_PP_BOOL_23 1
#define BOOST_PP_BOOL_24 1
#define BOOST_PP_BOOL_25 1
#define BOOST_PP_BOOL_26 1
#define BOOST_PP_BOOL_27 1
#define BOOST_PP_BOOL_28 1
#define BOOST_PP_REPEAT_1_123(m,d) BOOST_PP_REPEAT_1_122(m, d) m(2, 122, d)
#define LN_freshest_crl "X509v3 Freshest CRL"
#define ASN1_R_MSTRING_WRONG_TAG 140
#define BOOST_PP_REPEAT_1_124(m,d) BOOST_PP_REPEAT_1_123(m, d) m(2, 123, d)
#define _MM_FLUSH_ZERO_OFF 0x0000
#define BOOST_PP_DIV_BASE_O_IM(d,im) BOOST_PP_DIV_BASE_O_I(d, im)
#define SSL3_AD_BAD_RECORD_MAC 20
#define SN_setct_PIUnsignedTBE "setct-PIUnsignedTBE"
#define BOOST_PP_BOOL_30 1
#define OBJ_cmcRA OBJ_id_kp,28L
#define XATTR_SIZE_MAX 65536
#define BOOST_PP_BOOL_34 1
#define BOOST_PP_BOOL_35 1
#define BOOST_PP_BOOL_36 1
#define BOOST_PP_BOOL_38 1
#define BOOST_PP_BOOL_39 1
#define RAND_R_ERROR_INITIALISING_DRBG 107
#define _lrotl(a,b) __rolq((a), (b))
#define SSL_BUILD_CHAIN_FLAG_UNTRUSTED 0x1
#define _mm512_mask_cmp_pd_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(P), (__mmask8)(M), _MM_FROUND_CUR_DIRECTION))
#define _mm256_mpsadbw_epu8(X,Y,M) ((__m256i) __builtin_ia32_mpsadbw256 ((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(M)))
#define _SC_TRACE_USER_EVENT_MAX _SC_TRACE_USER_EVENT_MAX
#define BOOST_PP_REPEAT_1_129(m,d) BOOST_PP_REPEAT_1_128(m, d) m(2, 128, d)
#define BOOST_PP_LIST_FOLD_RIGHT_18(o,s,l) BOOST_PP_LIST_FOLD_LEFT_18(o, s, BOOST_PP_LIST_REVERSE_D(18, l))
#define NID_id_smime_aa_macValue 219
#define BOOST_PP_BOOL_40 1
#define _SYS_UN_H 1
#define BOOST_PP_BOOL_42 1
#define BOOST_PP_BOOL_43 1
#define BOOST_PP_BOOL_45 1
#define BOOST_PP_BOOL_46 1
#define BOOST_PP_BOOL_47 1
#define SCHED_DEADLINE 6
#define BOOST_PP_BOOL_49 1
#define SSL_F_TLS_PROCESS_CKE_PSK_PREAMBLE 414
#define TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256 "DHE-RSA-AES128-GCM-SHA256"
#define NID_id_it_currentCRL 303
#define X509_V_FLAG_CRL_CHECK 0x4
#define OBJ_sendProxiedRouter OBJ_id_kp,24L
#define OBJ_sendProxiedOwner OBJ_id_kp,26L
#define NID_aes_192_cfb128 425
#define MS_SILENT 32768
#define EV_CLOSED 0x80
#define NID_aes_128_ofb128 420
#define __cpp_lib_constexpr_numeric 201911L
#define BOOST_CONTEXT_DECL BOOST_SYMBOL_IMPORT
#define FS_XFLAG_PREALLOC 0x00000002
#define BOOST_PP_SEQ_FOLD_LEFT_I_123(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_124, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(124, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define CT_R_SCT_INVALID_SIGNATURE 107
#define BOOST_PP_BOOL_50 1
#define BOOST_PP_BOOL_51 1
#define BOOST_PP_BOOL_54 1
#define BOOST_PP_BOOL_55 1
#define BOOST_PP_BOOL_56 1
#define BOOST_PP_BOOL_57 1
#define BOOST_PP_BOOL_58 1
#define BOOST_PP_BOOL_59 1
#define _mm_maskz_range_ss(U,A,B,C) ((__m128) __builtin_ia32_rangess128_mask_round ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define __COMPAR_FN_T 
#define LN_pkcs7_enveloped "pkcs7-envelopedData"
#define BOOST_PP_SEQ_SIZE_13(_) BOOST_PP_SEQ_SIZE_14
#define NID_setAttr_TokICCsig 634
#define LOG_TO_STRING_ERROR(message) google::LogMessage( __FILE__, __LINE__, google::GLOG_ERROR, message)
#define BOOST_PP_FOR_155_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(156, s) BOOST_PP_IIF(c, BOOST_PP_FOR_156, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(156, s), p, o, m)
#define TLS1_RFC_PSK_WITH_NULL_SHA256 "TLS_PSK_WITH_NULL_SHA256"
#define BOOST_PP_BOOL_60 1
#define BOOST_PP_BOOL_62 1
#define BOOST_PP_BOOL_64 1
#define BOOST_PP_BOOL_66 1
#define BOOST_PP_BOOL_67 1
#define BOOST_PP_BOOL_68 1
#define BOOST_PP_BOOL_69 1
#define evuser_pending(ev,tv) event_pending((ev), 0, (tv))
#define SSL_CTX_set0_verify_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_VERIFY_CERT_STORE,0,(char *)(st))
#define SN_setext_cv "setext-cv"
#define __id_t_defined 
#define DH_F_DH_METH_DUP 117
#define __cpp_lib_integral_constant_callable 201304
#define SSL_R_BAD_KEY_SHARE 108
#define BOOST_PP_REPEAT_2_216(m,d) BOOST_PP_REPEAT_2_215(m, d) m(3, 215, d)
#define _mm512_cmp_ps_mask(X,Y,P) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)-1,_MM_FROUND_CUR_DIRECTION))
#define BOOST_PP_BOOL_70 1
#define BOOST_PP_BOOL_71 1
#define BOOST_PP_BOOL_73 1
#define BOOST_PP_BOOL_74 1
#define BOOST_PP_BOOL_76 1
#define BOOST_PP_BOOL_77 1
#define BOOST_PP_BOOL_78 1
#define BOOST_PP_BOOL_79 1
#define SSL_CTX_sess_cb_hits(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CB_HIT,0,NULL)
#define SN_dh_cofactor_kdf "dh-cofactor-kdf"
#define JEMALLOC_VERSION_NREV 0
#define EBADE 52
#define _SC_XBS5_ILP32_OFFBIG _SC_XBS5_ILP32_OFFBIG
#define SSL_F_OSSL_STATEM_SERVER_PRE_WORK 640
#define BOOST_PP_WHILE_97_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_98, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(98, s))
#define V_ASN1_EOC 0
#define TLS1_TXT_PSK_WITH_CAMELLIA_256_CBC_SHA384 "PSK-CAMELLIA256-SHA384"
#define BOOST_TT_IS_RVALUE_REFERENCE_HPP_INCLUDED 
#define DLOG_IF_EVERY_N(severity,condition,n) LOG_IF_EVERY_N(severity, condition, n)
#define BOOST_PP_BOOL_80 1
#define BOOST_PP_BOOL_81 1
#define BOOST_PP_BOOL_82 1
#define BOOST_PP_BOOL_83 1
#define BOOST_PP_BOOL_84 1
#define BOOST_PP_BOOL_85 1
#define BOOST_PP_BOOL_87 1
#define BOOST_PP_BOOL_88 1
#define BOOST_PP_BOOL_89 1
#define BOOST_PP_SEQ_ELEM_186(_) BOOST_PP_SEQ_ELEM_185
#define SSL_F_TLS_PARSE_STOC_NPN 582
#define _PATH_HEQUIV "/etc/hosts.equiv"
#define OBJ_X509 OBJ_X500,4L
#define OBJ_netscape_comment OBJ_netscape_cert_extension,13L
#define _GLIBCXX_BEGIN_NAMESPACE_VERSION 
#define LN_aria_128_ctr "aria-128-ctr"
#define BOOST_PP_BOOL_90 1
#define BOOST_PP_BOOL_91 1
#define BOOST_PP_BOOL_92 1
#define BOOST_PP_BOOL_93 1
#define BOOST_PP_BOOL_94 1
#define BOOST_PP_BOOL_95 1
#define BOOST_PP_BOOL_96 1
#define BOOST_PP_BOOL_97 1
#define BOOST_PP_BOOL_98 1
#define BOOST_PP_BOOL_99 1
#define LN_camellia_256_gcm "camellia-256-gcm"
#define SCM_SRCRT IPV6_RXSRCRT
#define _mm512_alignr_epi8(X,Y,N) ((__m512i) __builtin_ia32_palignr512 ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)((N) * 8)))
#define LN_camellia_128_cmac "camellia-128-cmac"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01101000 (0)(1)(1)(0)(1)(0)(0)(0),
#define TLS1_RFC_PSK_WITH_AES_128_CBC_SHA256 "TLS_PSK_WITH_AES_128_CBC_SHA256"
#define BOOST_MPL_NUMERIC_CAST_HPP_INCLUDED 
#define _THREAD_MUTEX_INTERNAL_H 1
#define BOOST_PP_WHILE_210_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_211, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(211, s))
#define THRIFT_TCONNECTIONCONTEXT_H_ 1
#define EVP_R_PARTIALLY_OVERLAPPING 162
#define BOOST_PP_SEQ_FOLD_LEFT_I_74(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_75, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(75, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define PEM_F_B2I_PVK_BIO 128
#define DH_R_NOT_SUITABLE_GENERATOR 120
#define BOOST_PP_WHILE_214_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_215, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(215, s))
#define NID_ffdhe6144 1129
#define EVP_CTRL_CCM_SET_MSGLEN 0x15
#define BOOST_PP_SEQ_SIZE_137(_) BOOST_PP_SEQ_SIZE_138
#define OBJ_id_smime_mod_ets_eSigPolicy_88 OBJ_id_smime_mod,7L
#define __ino64_t_defined 
#define LN_idea_cfb64 "idea-cfb"
#define OBJ_aria_192_ctr OBJ_aria,10L
#define BOOST_PP_BOOL_140 1
#define _MM_MASK_DIV_ZERO 0x0200
#define ASN1_F_ASN1_ITEM_PACK 198
#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA "DHE-RSA-CAMELLIA128-SHA"
#define LN_authority_key_identifier "X509v3 Authority Key Identifier"
#define OBJ_ms_code_ind 1L,3L,6L,1L,4L,1L,311L,2L,1L,21L
#define BOOST_PP_BOOL_141 1
#define BOOST_PP_SEQ_SIZE_242(_) BOOST_PP_SEQ_SIZE_243
#define BOOST_PP_ENUM_M_1_I(z,n,m,d) BOOST_PP_COMMA_IF(n) m(z, n, d)
#define TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA384 "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384"
#define LN_aes_128_cbc "aes-128-cbc"
#define OBJ_X9_62_ellipticCurve OBJ_ansi_X9_62,3L
#define _PSTL_PRAGMA_SIMD _PSTL_PRAGMA(omp simd)
#define BOOST_PP_SEQ_FOLD_LEFT_I_76(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_77, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(77, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_userId OBJ_pilotAttributeType,1L
#define BOOST_PP_SEQ_FOLD_LEFT_81(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_81(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_HAVE_COSHF 1
#define OBJ_id_smime_mod_ets_eSigPolicy_97 OBJ_id_smime_mod,8L
#define F_OK 0
#define _GLIBCXX_HAVE_COSHL 1
#define SN_id_cct "id-cct"
#define ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG 192
#define NID_pkInitClientAuth 1032
#define BOOST_CORE_SWAP_HPP 
#define OBJ_setct_ErrorTBS OBJ_set_ctype,49L
#define BOOST_PP_SEQ_FOLD_LEFT_I_77(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_78, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(78, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define LN_OCSP_sign "OCSP Signing"
#define BOOST_CORE_NONCOPYABLE_HPP 
#define _GLIBCXX_GUARD_WAITING_BIT __guard_test_bit (2, 1)
#define TLS13_AD_MISSING_EXTENSION 109
#define LN_aes_128_ccm "aes-128-ccm"
#define APACHE_THRIFT_ACCESSOR_metadata 
#define NID_dnsName 1092
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010001 (1)(0)(1)(0)(0)(0)(1),
#define BOOST_INTEL_WORKAROUND_GUARD 1
#define OBJ_camellia OBJ_ntt_ds,3L,1L,9L
#define BOOST_INTRUSIVE_HASHTABLE_NODE_HPP 
#define X509_R_NEWER_CRL_NOT_NEWER 132
#define BOOST_PP_SEQ_FOLD_LEFT_86(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_86(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _mm512_mask_shufflelo_epi16(W,U,A,B) ((__m512i) __builtin_ia32_pshuflw512_mask ((__v32hi)(__m512i)(A), (int)(B), (__v32hi)(__m512i)(W), (__mmask32)(U)))
#define BOOST_PP_SEQ_SIZE_200(_) BOOST_PP_SEQ_SIZE_201
#define BOOST_PP_SEQ_SIZE_201(_) BOOST_PP_SEQ_SIZE_202
#define BOOST_PP_SEQ_SIZE_202(_) BOOST_PP_SEQ_SIZE_203
#define BOOST_PP_SEQ_SIZE_203(_) BOOST_PP_SEQ_SIZE_204
#define BOOST_PP_SEQ_SIZE_204(_) BOOST_PP_SEQ_SIZE_205
#define BOOST_PP_SEQ_SIZE_205(_) BOOST_PP_SEQ_SIZE_206
#define BOOST_PP_SEQ_SIZE_206(_) BOOST_PP_SEQ_SIZE_207
#define OBJ_id_pbkdf2 OBJ_pkcs5,12L
#define BOOST_PP_SEQ_SIZE_209(_) BOOST_PP_SEQ_SIZE_210
#define __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
#define ILL_ILLOPC ILL_ILLOPC
#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_SHA256 "ECDHE-RSA-AES128-SHA256"
#define OBJ_id_smime_cti_ets_proofOfApproval OBJ_id_smime_cti,5L
#define CHARTYPE_LAST_ESC_2253 0x40
#define BOOST_PP_SEQ_SIZE_210(_) BOOST_PP_SEQ_SIZE_211
#define BOOST_PP_SEQ_SIZE_211(_) BOOST_PP_SEQ_SIZE_212
#define BOOST_PP_SEQ_SIZE_212(_) BOOST_PP_SEQ_SIZE_213
#define BOOST_PP_SEQ_SIZE_214(_) BOOST_PP_SEQ_SIZE_215
#define BOOST_PP_SEQ_SIZE_215(_) BOOST_PP_SEQ_SIZE_216
#define BOOST_PP_SEQ_SIZE_216(_) BOOST_PP_SEQ_SIZE_217
#define BOOST_PP_SEQ_SIZE_217(_) BOOST_PP_SEQ_SIZE_218
#define IPPROTO_IDP IPPROTO_IDP
#define SN_id_smime_ct_DVCSResponseData "id-smime-ct-DVCSResponseData"
#define sk_deep_copy OPENSSL_sk_deep_copy
#define DH_F_DHPARAMS_PRINT_FP 101
#define LN_netscape_cert_sequence "Netscape Certificate Sequence"
#define TLS1_TXT_DH_DSS_WITH_AES_256_SHA256 "DH-DSS-AES256-SHA256"
#define BOOST_RWSTD_VER_WORKAROUND_GUARD 1
#define __daddr_t_defined 
#define X509V3_R_NO_ISSUER_CERTIFICATE 121
#define PRIuMAX __PRI64_PREFIX "u"
#define BOOST_PP_WHILE_128_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_129, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(129, s))
#define BOOST_PP_SEQ_SIZE_221(_) BOOST_PP_SEQ_SIZE_222
#define BOOST_PP_SEQ_SIZE_222(_) BOOST_PP_SEQ_SIZE_223
#define NID_rsa 19
#define BOOST_PP_SEQ_SIZE_224(_) BOOST_PP_SEQ_SIZE_225
#define SO_RCVTIMEO_OLD 20
#define BOOST_PP_SEQ_SIZE_227(_) BOOST_PP_SEQ_SIZE_228
#define BOOST_PP_SEQ_SIZE_229(_) BOOST_PP_SEQ_SIZE_230
#define IPV6_HDRINCL 36
#define X509_V_ERR_CRL_HAS_EXPIRED 12
#define EVP_R_NO_KEY_SET 154
#define _GLIBCXX_TR1_POLY_LAGUERRE_TCC 1
#define PKCS7_F_PKCS7_SIGN_ADD_SIGNER 137
#define BIO_F_DGRAM_SCTP_WRITE 133
#define NID_X500 11
#define THRIFT_FLAG_DECLARE(_name,_type) apache::thrift::detail::FlagWrapper<_type>& THRIFT_FLAG_WRAPPER__ ##_name()
#define NID_X509 12
#define BOOST_PP_SEQ_SIZE_230(_) BOOST_PP_SEQ_SIZE_231
#define BOOST_PP_SEQ_SIZE_231(_) BOOST_PP_SEQ_SIZE_232
#define BOOST_PP_SEQ_SIZE_232(_) BOOST_PP_SEQ_SIZE_233
#define KU_KEY_ENCIPHERMENT 0x0020
#define NON_EMPTY_TRANSLATION_UNIT static void *dummy = &dummy;
#define BOOST_PP_SEQ_SIZE_235(_) BOOST_PP_SEQ_SIZE_236
#define BOOST_PP_SEQ_SIZE_237(_) BOOST_PP_SEQ_SIZE_238
#define BOOST_HAS_NRVO 
#define BOOST_PP_REPEAT_2_10(m,d) BOOST_PP_REPEAT_2_9(m, d) m(3, 9, d)
#define BOOST_PP_REPEAT_2_11(m,d) BOOST_PP_REPEAT_2_10(m, d) m(3, 10, d)
#define BOOST_PP_REPEAT_2_12(m,d) BOOST_PP_REPEAT_2_11(m, d) m(3, 11, d)
#define BOOST_PP_REPEAT_2_13(m,d) BOOST_PP_REPEAT_2_12(m, d) m(3, 12, d)
#define BOOST_PP_REPEAT_2_14(m,d) BOOST_PP_REPEAT_2_13(m, d) m(3, 13, d)
#define EVP_R_UNSUPPORTED_ALGORITHM 156
#define BOOST_PP_REPEAT_2_17(m,d) BOOST_PP_REPEAT_2_16(m, d) m(3, 16, d)
#define BOOST_PP_REPEAT_2_19(m,d) BOOST_PP_REPEAT_2_18(m, d) m(3, 18, d)
#define OBJ_setAttr_Token_B0Prime OBJ_setAttr_TokenType,2L
#define SSL_CTX_set1_curves SSL_CTX_set1_groups
#define _mm512_mask_i32gather_ps(V1OLD,MASK,INDEX,ADDR,SCALE) (__m512) __builtin_ia32_gathersiv16sf ((__v16sf)(__m512) (V1OLD), (void const *) (ADDR), (__v16si)(__m512i) (INDEX), (__mmask16) (MASK), (int) (SCALE))
#define _mm512_maskz_ternarylogic_epi32(U,A,B,C,I) ((__m512i) __builtin_ia32_pternlogd512_maskz ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(I), (__mmask16)(U)))
#define SSL_R_MIXED_HANDSHAKE_AND_NON_HANDSHAKE_DATA 293
#define EVP_CTRL_SET_SBOX 0x1e
#define BOOST_PP_SEQ_SIZE_240(_) BOOST_PP_SEQ_SIZE_241
#define BOOST_PP_SEQ_SIZE_241(_) BOOST_PP_SEQ_SIZE_242
#define BOOST_PP_SEQ_SIZE_243(_) BOOST_PP_SEQ_SIZE_244
#define BOOST_PP_SEQ_SIZE_245(_) BOOST_PP_SEQ_SIZE_246
#define BOOST_PP_SEQ_SIZE_246(_) BOOST_PP_SEQ_SIZE_247
#define BOOST_PP_SEQ_SIZE_248(_) BOOST_PP_SEQ_SIZE_249
#define RSA_F_RSA_PRINT 115
#define BOOST_PP_REPEAT_2_20(m,d) BOOST_PP_REPEAT_2_19(m, d) m(3, 19, d)
#define OBJ_id_GostR3410_2001 OBJ_cryptopro,19L
#define NID_ac_targeting 288
#define BOOST_PP_REPEAT_2_23(m,d) BOOST_PP_REPEAT_2_22(m, d) m(3, 22, d)
#define BOOST_PP_REPEAT_2_24(m,d) BOOST_PP_REPEAT_2_23(m, d) m(3, 23, d)
#define BOOST_PP_REPEAT_2_25(m,d) BOOST_PP_REPEAT_2_24(m, d) m(3, 24, d)
#define GOOGLE_PREDICT_FALSE(x) (__builtin_expect(x, 0))
#define BOOST_PP_REPEAT_2_28(m,d) BOOST_PP_REPEAT_2_27(m, d) m(3, 27, d)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_19(s,p,o,m) 0
#define _rotl(a,b) __rold((a), (b))
#define _GLIBCXX_HAVE_MODF 1
#define EINPROGRESS 115
#define __HAVE_DISTINCT_FLOAT32X 0
#define BOOST_PP_SEQ_SIZE_250(_) BOOST_PP_SEQ_SIZE_251
#define BOOST_PP_SEQ_SIZE_251(_) BOOST_PP_SEQ_SIZE_252
#define BOOST_PP_SEQ_SIZE_253(_) BOOST_PP_SEQ_SIZE_254
#define _SC_SEM_VALUE_MAX _SC_SEM_VALUE_MAX
#define LN_target_information "X509v3 AC Targeting"
#define BOOST_PP_SEQ_SIZE_256(_) BOOST_PP_SEQ_SIZE_257
#define TLS1_CK_PSK_WITH_ARIA_128_GCM_SHA256 0x0300C06A
#define _mm256_mask_permutex_epi64(W,M,X,I) ((__m256i) __builtin_ia32_permdi256_mask ((__v4di)(__m256i)(X), (int)(I), (__v4di)(__m256i)(W), (__mmask8)(M)))
#define BOOST_PP_REPEAT_2_30(m,d) BOOST_PP_REPEAT_2_29(m, d) m(3, 29, d)
#define BOOST_PP_REPEAT_2_32(m,d) BOOST_PP_REPEAT_2_31(m, d) m(3, 31, d)
#define BOOST_PP_REPEAT_2_33(m,d) BOOST_PP_REPEAT_2_32(m, d) m(3, 32, d)
#define BOOST_PP_REPEAT_2_34(m,d) BOOST_PP_REPEAT_2_33(m, d) m(3, 33, d)
#define BOOST_PP_REPEAT_2_35(m,d) BOOST_PP_REPEAT_2_34(m, d) m(3, 34, d)
#define BOOST_PP_REPEAT_2_36(m,d) BOOST_PP_REPEAT_2_35(m, d) m(3, 35, d)
#define INT_FAST8_MIN (-128)
#define BOOST_PP_REPEAT_2_39(m,d) BOOST_PP_REPEAT_2_38(m, d) m(3, 38, d)
#define NID_setAttr_IssCap 623
#define LN_basic_constraints "X509v3 Basic Constraints"
#define evsignal_pending(ev,tv) event_pending((ev), EV_SIGNAL, (tv))
#define JEMALLOC_USABLE_SIZE_CONST 
#define BOOST_PP_SEQ_FOLD_LEFT_I_243(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_244, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(244, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define ASN1_R_TOO_LARGE 223
#define X509_V_ERR_KEYUSAGE_NO_CERTSIGN 32
#define BOOST_PP_REPEAT_2_40(m,d) BOOST_PP_REPEAT_2_39(m, d) m(3, 39, d)
#define BOOST_PP_REPEAT_2_41(m,d) BOOST_PP_REPEAT_2_40(m, d) m(3, 40, d)
#define BOOST_PP_REPEAT_2_42(m,d) BOOST_PP_REPEAT_2_41(m, d) m(3, 41, d)
#define BOOST_PP_REPEAT_2_44(m,d) BOOST_PP_REPEAT_2_43(m, d) m(3, 43, d)
#define EVENT1_EVENT_H_INCLUDED_ 
#define LN_aria_192_cbc "aria-192-cbc"
#define BOOST_PP_REPEAT_2_47(m,d) BOOST_PP_REPEAT_2_46(m, d) m(3, 46, d)
#define BOOST_PP_REPEAT_2_48(m,d) BOOST_PP_REPEAT_2_47(m, d) m(3, 47, d)
#define BOOST_PP_REPEAT_2_49(m,d) BOOST_PP_REPEAT_2_48(m, d) m(3, 48, d)
#define _BITS_TYPES_H 1
#define _mm512_maskz_ternarylogic_epi64(U,A,B,C,I) ((__m512i) __builtin_ia32_pternlogq512_maskz ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(I), (__mmask8)(U)))
#define BIO_get_fd(b,c) BIO_ctrl(b,BIO_C_GET_FD,0,(char *)(c))
#define BIO_get_fp(b,fpp) BIO_ctrl(b,BIO_C_GET_FILE_PTR,0,(char *)(fpp))
#define SSL2_MT_CLIENT_HELLO 1
#define FP_INT_TOWARDZERO 2
#define _SMMINTRIN_H_INCLUDED 
#define EC_F_PKEY_EC_SIGN 218
#define BOOST_PP_REPEAT_2_50(m,d) BOOST_PP_REPEAT_2_49(m, d) m(3, 49, d)
#define BOOST_PP_REPEAT_2_51(m,d) BOOST_PP_REPEAT_2_50(m, d) m(3, 50, d)
#define BOOST_PP_REPEAT_2_53(m,d) BOOST_PP_REPEAT_2_52(m, d) m(3, 52, d)
#define BOOST_PP_REPEAT_2_54(m,d) BOOST_PP_REPEAT_2_53(m, d) m(3, 53, d)
#define BOOST_PP_REPEAT_2_55(m,d) BOOST_PP_REPEAT_2_54(m, d) m(3, 54, d)
#define BOOST_PP_REPEAT_2_57(m,d) BOOST_PP_REPEAT_2_56(m, d) m(3, 56, d)
#define BOOST_PP_REPEAT_2_58(m,d) BOOST_PP_REPEAT_2_57(m, d) m(3, 57, d)
#define BOOST_PP_REPEAT_2_59(m,d) BOOST_PP_REPEAT_2_58(m, d) m(3, 58, d)
#define V_ASN1_APPLICATION 0x40
#define LN_aria_192_ccm "aria-192-ccm"
#define _POSIX_READER_WRITER_LOCKS 200809L
#define BOOST_VARIANT_AUX_INITIALIZER_T(mpl_seq,typename_base) ::boost::mpl::iter_fold< mpl_seq , ::boost::mpl::pair< ::boost::detail::variant::initializer_root , ::boost::mpl::int_<0> > , ::boost::mpl::protect< ::boost::detail::variant::make_initializer_node > >::type::first
#define BOOST_PP_REPEAT_1_135(m,d) BOOST_PP_REPEAT_1_134(m, d) m(2, 134, d)
#define _mm512_mask_gf2p8affine_epi64_epi8(A,B,C,D,E) ((__m512i) __builtin_ia32_vgf2p8affineqb_v64qi_mask((__v64qi)(__m512i)(C), (__v64qi)(__m512i)(D), (int)(E), (__v64qi)(__m512i)(A), (__mmask64)(B)))
#define CLONE_SIGHAND 0x00000800
#define RAND_R_TOO_LITTLE_NONCE_REQUESTED 135
#define SO_WIFI_STATUS 41
#define BOOST_PP_REPEAT_2_60(m,d) BOOST_PP_REPEAT_2_59(m, d) m(3, 59, d)
#define BOOST_PP_REPEAT_2_61(m,d) BOOST_PP_REPEAT_2_60(m, d) m(3, 60, d)
#define BOOST_PP_REPEAT_2_63(m,d) BOOST_PP_REPEAT_2_62(m, d) m(3, 62, d)
#define BOOST_PP_REPEAT_2_65(m,d) BOOST_PP_REPEAT_2_64(m, d) m(3, 64, d)
#define BOOST_PP_REPEAT_2_66(m,d) BOOST_PP_REPEAT_2_65(m, d) m(3, 65, d)
#define BOOST_PP_REPEAT_2_67(m,d) BOOST_PP_REPEAT_2_66(m, d) m(3, 66, d)
#define BOOST_PP_REPEAT_2_68(m,d) BOOST_PP_REPEAT_2_67(m, d) m(3, 67, d)
#define BOOST_PP_REPEAT_2_69(m,d) BOOST_PP_REPEAT_2_68(m, d) m(3, 68, d)
#define NETDB_SUCCESS 0
#define X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED 60
#define SN_id_cmc "id-cmc"
#define BIO_F_BIO_METH_NEW 146
#define STA_NANO 0x2000
#define _kand_mask16 _mm512_kand
#define BOOST_PP_REPEAT_1_139(m,d) BOOST_PP_REPEAT_1_138(m, d) m(2, 138, d)
#define _GLIBCXX_HAVE_STRTOLD 1
#define GTHR_ACTIVE_PROXY __gthrw_(__pthread_key_create)
#define V_ASN1_EXTERNAL 8
#define _STL_TREE_H 1
#define ENOTEMPTY 39
#define BOOST_PP_WHILE_168_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_169, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(169, s))
#define SN_id_tc26_gost_3410_2012_512_paramSetA "id-tc26-gost-3410-2012-512-paramSetA"
#define SN_id_tc26_gost_3410_2012_512_paramSetB "id-tc26-gost-3410-2012-512-paramSetB"
#define SN_id_tc26_gost_3410_2012_512_paramSetC "id-tc26-gost-3410-2012-512-paramSetC"
#define BOOST_PP_REPEAT_2_72(m,d) BOOST_PP_REPEAT_2_71(m, d) m(3, 71, d)
#define BOOST_PP_REPEAT_2_73(m,d) BOOST_PP_REPEAT_2_72(m, d) m(3, 72, d)
#define BOOST_PP_REPEAT_2_74(m,d) BOOST_PP_REPEAT_2_73(m, d) m(3, 73, d)
#define BOOST_PP_REPEAT_2_75(m,d) BOOST_PP_REPEAT_2_74(m, d) m(3, 74, d)
#define BOOST_PP_REPEAT_2_76(m,d) BOOST_PP_REPEAT_2_75(m, d) m(3, 75, d)
#define SSL_F_DO_DTLS1_WRITE 245
#define BOOST_PP_REPEAT_2_78(m,d) BOOST_PP_REPEAT_2_77(m, d) m(3, 77, d)
#define __PTHREAD_MUTEX_HAVE_PREV 1
#define OBJ_lastModifiedBy OBJ_pilotAttributeType,24L
#define _mm256_mask_cmp_epi64_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmpq256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(P), (__mmask8)(M)))
#define _mm512_mask_cvtt_roundps_epu64(W,U,A,B) ((__m512i)__builtin_ia32_cvttps2uqq512_mask ((A), (__v8di)(W), (U), (B)))
#define BOOST_PP_SEQ_FOLD_LEFT_I_248(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_249, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(249, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define CONF_MFLAGS_IGNORE_MISSING_FILE 0x10
#define APACHE_THRIFT_ACCESSOR_compressionAlgos 
#define LN_invalidity_date "Invalidity Date"
#define BOOST_MPL_AT_FWD_HPP_INCLUDED 
#define EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE 230
#define TLSEXT_hash_sha224 3
#define SN_setct_PANToken "setct-PANToken"
#define _CMP_UNORD_S 0x13
#define BOOST_PP_REPEAT_2_80(m,d) BOOST_PP_REPEAT_2_79(m, d) m(3, 79, d)
#define BOOST_PP_REPEAT_2_82(m,d) BOOST_PP_REPEAT_2_81(m, d) m(3, 81, d)
#define BOOST_PP_REPEAT_2_83(m,d) BOOST_PP_REPEAT_2_82(m, d) m(3, 82, d)
#define BOOST_PP_REPEAT_2_84(m,d) BOOST_PP_REPEAT_2_83(m, d) m(3, 83, d)
#define BOOST_PP_REPEAT_2_85(m,d) BOOST_PP_REPEAT_2_84(m, d) m(3, 84, d)
#define BOOST_PP_REPEAT_2_86(m,d) BOOST_PP_REPEAT_2_85(m, d) m(3, 85, d)
#define BOOST_PP_REPEAT_2_87(m,d) BOOST_PP_REPEAT_2_86(m, d) m(3, 86, d)
#define SN_ext_key_usage "extendedKeyUsage"
#define RSA_F_PKEY_RSA_SIGN 142
#define EC_F_EC_GROUP_GET_ECPKPARAMETERS 262
#define SSL_R_CCS_RECEIVED_EARLY 133
#define SSL_READING 3
#define BOOST_PP_REPEAT_2_90(m,d) BOOST_PP_REPEAT_2_89(m, d) m(3, 89, d)
#define BOOST_PP_REPEAT_2_91(m,d) BOOST_PP_REPEAT_2_90(m, d) m(3, 90, d)
#define BOOST_PP_REPEAT_2_92(m,d) BOOST_PP_REPEAT_2_91(m, d) m(3, 91, d)
#define BOOST_PP_REPEAT_2_93(m,d) BOOST_PP_REPEAT_2_92(m, d) m(3, 92, d)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_154(s,p,o,m) 0
#define BOOST_PP_REPEAT_2_97(m,d) BOOST_PP_REPEAT_2_96(m, d) m(3, 96, d)
#define BOOST_PP_REPEAT_2_98(m,d) BOOST_PP_REPEAT_2_97(m, d) m(3, 97, d)
#define DTLS_set_link_mtu(ssl,mtu) SSL_ctrl((ssl),DTLS_CTRL_SET_LINK_MTU,(mtu),NULL)
#define RSA_F_PKEY_RSA_VERIFY 149
#define MS_ACTIVE (1<<30)
#define EVENT__PACKAGE_VERSION "2.1.12-stable"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_155(s,p,o,m) 0
#define OBJ_setct_RegFormReqTBE OBJ_set_ctype,76L
#define SSL_F_TLS_CONSTRUCT_CERTIFICATE_AUTHORITIES 542
#define BOOST_MPL_ARG_HPP_INCLUDED 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101010 (1)(0)(1)(0)(1)(0)(1)(0),
#define BOOST_PP_FOR_55_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(56, s) BOOST_PP_IIF(c, BOOST_PP_FOR_56, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(56, s), p, o, m)
#define __glibcxx_requires_sorted_pred(_First,_Last,_Pred) 
#define SSL_R_SSLV3_ALERT_NO_CERTIFICATE 1041
#define OBJ_setct_AuthResTBE OBJ_set_ctype,53L
#define LN_netscape_cert_extension "Netscape Certificate Extension"
#define EVP_AEAD_TLS1_AAD_LEN 13
#define CRYPTO_F_CRYPTO_MEMDUP 115
#define OBJ_setct_AuthResTBS OBJ_set_ctype,17L
#define OBJ_title OBJ_X509,12L
#define IOC_INOUT ((_IOC_WRITE|_IOC_READ) << _IOC_DIRSHIFT)
#define OBJ_Enterprises OBJ_Private,1L
#define TLSEXT_hash_sha256 4
#define BIO_FP_TEXT 0x10
#define PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST 108
#define OBJ_sha3_512 OBJ_nist_hashalgs,10L
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_158(s,p,o,m) 0
#define TLS1_CK_DHE_RSA_WITH_AES_256_SHA 0x03000039
#define BIO_get_md(b,mdp) BIO_ctrl(b,BIO_C_GET_MD,0,(char *)(mdp))
#define BOOST_PP_SEQ_FOLD_LEFT_214(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_214(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define OBJ_pbmac1 OBJ_pkcs5,14L
#define _GLIBCXX_MUTEX 1
#define EVP_R_PRIVATE_KEY_DECODE_ERROR 145
#define OBJ_id_smime_alg_3DESwrap OBJ_id_smime_alg,3L
#define NID_id_Gost28147_89_CryptoPro_C_ParamSet 826
#define _GLIBCXX_IOS 1
#define OBJ_simpleSecurityObject OBJ_pilotObjectClass,19L
#define LN_ms_upn "Microsoft User Principal Name"
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define NID_pilotAttributeType27 479
#define BOOST_PP_CONFIG_STRICT() 0x0001
#define BOOST_INTRUSIVE_OPTION_TYPE(OPTION_NAME,TYPE,TYPEDEF_EXPR,TYPEDEF_NAME) template< class TYPE> struct OPTION_NAME { template<class Base> struct pack : Base { typedef TYPEDEF_EXPR TYPEDEF_NAME; }; };
#define LN_setAttr_SecDevSig "secure device signature"
#define OBJ_X9_62_c2onb191v5 OBJ_X9_62_c_TwoCurve,9L
#define BOOST_PP_FOR_1_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(2, s) BOOST_PP_IIF(c, BOOST_PP_FOR_2, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(2, s), p, o, m)
#define SO_BINDTODEVICE 25
#define OBJ_X9_62_prime192v2 OBJ_X9_62_primeCurve,2L
#define SN_setct_PIDualSignedTBE "setct-PIDualSignedTBE"
#define OBJ_X500algorithms OBJ_X500,8L
#define SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS 83
#define __ASM_X86_BITSPERLONG_H 
#define SSL_CB_READ 0x04
#define TLS1_CK_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C051
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
#define BOOST_PP_BOOL_151 1
#define BOOST_PP_SEQ_FOLD_LEFT_90(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_90(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define _GLIBCXX_HAVE_ATAN2F 1
#define _GLIBCXX_HAVE_ATAN2L 1
#define EVP_MAX_KEY_LENGTH 64
#define LN_aes_128_ctr "aes-128-ctr"
#define M_LN10f32 __f32 (2.302585092994045684017991454684364208)
#define _SC_LEVEL3_CACHE_ASSOC _SC_LEVEL3_CACHE_ASSOC
#define __pconfig_b(leaf,b,retval) __asm__ __volatile__ ("pconfig\n\t" : "=a" (retval) : "a" (leaf), "b" (b) : "cc")
#define TLS1_RFC_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256"
#define OBJ_set_policy OBJ_id_set,5L
#define BOOST_NOINLINE __attribute__ ((__noinline__))
#define _PTR_TRAITS_H 1
#define X509_V_ERR_NO_EXPLICIT_POLICY 43
#define BOOST_PP_DEC_101 100
#define BIO_set_accept_bios(b,bio) BIO_ctrl(b,BIO_C_SET_ACCEPT,3, (char *)(bio))
#define NID_id_aca_authenticationInfo 354
#define _DEFAULT_SOURCE 1
#define _LINUX_POSIX_TYPES_H 
#define BOOST_PP_SEQ_FOLD_LEFT_96(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_96(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SN_id_GostR3411_94_CryptoProParamSet "id-GostR3411-94-CryptoProParamSet"
#define TLSEXT_TYPE_post_handshake_auth 49
#define BOOST_PP_INC_200 201
#define SN_ms_smartcard_login "msSmartcardLogin"
#define LN_ct_precert_signer "CT Precertificate Signer"
#define COMPACT_GOOGLE_LOG_WARNING google::LogMessage( __FILE__, __LINE__, google::GLOG_WARNING)
#define BOOST_PP_BOOL_159 1
#define SSL_set_min_proto_version(s,version) SSL_ctrl(s, SSL_CTRL_SET_MIN_PROTO_VERSION, version, NULL)
#define TLS1_TXT_DH_DSS_WITH_SEED_SHA "DH-DSS-SEED-SHA"
#define __LOCK_ALIGNMENT 
#define _XOPEN_REALTIME_THREADS 1
#define BOOST_PP_FOR_130_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(131, s) BOOST_PP_IIF(c, BOOST_PP_FOR_131, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(131, s), p, o, m)
#define EVP_PKEY_CTRL_RSA_PSS_SALTLEN (EVP_PKEY_ALG_CTRL + 2)
#define BOOST_PP_REPEAT_1_190(m,d) BOOST_PP_REPEAT_1_189(m, d) m(2, 189, d)
#define LN_aes_256_ofb128 "aes-256-ofb"
#define M_LN10f64 __f64 (2.302585092994045684017991454684364208)
#define BOOST_PP_INC_206 207
#define EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES 164
#define SCHED_OTHER 0
#define SN_set_policy_root "set-policy-root"
#define __PTHREAD_RWLOCK_INITIALIZER(__flags) 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, __flags
#define EVENT__HAVE_STRUCT_LINGER 1
#define SSL_F_SSL_SET_CIPHER_LIST 271
#define SSL_F_SSL3_ENC 608
#define SSL_R_DUPLICATE_COMPRESSION_ID 309
#define SN_dhSinglePass_stdDH_sha224kdf_scheme "dhSinglePass-stdDH-sha224kdf-scheme"
#define NID_organizationalUnitName 18
#define EC_F_ECPKPARAMETERS_PRINT_FP 150
#define BOOST_PP_WHILE_64_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_65, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(65, s))
#define IPV6_AUTHHDR 10
#define OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE 
#define OBJ_singleLevelQuality OBJ_pilotAttributeType,50L
#define NID_safeContentsBag 155
#define OBJ_favouriteDrink OBJ_pilotAttributeType,5L
#define BOOST_PP_REPEAT_1_193(m,d) BOOST_PP_REPEAT_1_192(m, d) m(2, 192, d)
#define SSL_TXT_kGOST "kGOST"
#define EVP_PKS_DSA 0x0200
#define NID_policy_mappings 747
#define X509V3_R_OTHERNAME_ERROR 147
#define OBJ_dstu28147_wrap OBJ_dstu28147,5L
#define FP_ILOGB0 (-2147483647 - 1)
#define BOOST_TT_ALIGNMENT_OF_HPP_INCLUDED 
#define BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC(i,trait) BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC_IMPL(i, trait) template<> struct trait<non_sequence_tag> {};
#define NID_id_pkix_OCSP_valid 373
#define SSL3_MT_SERVER_HELLO 2
#define TLSEXT_TYPE_supported_groups 10
#define SSL3_CK_EDH_DSS_DES_40_CBC_SHA SSL3_CK_DHE_DSS_DES_40_CBC_SHA
#define __STDC_HOSTED__ 1
#define SSL_OP_MSIE_SSLV2_RSA_PADDING 0x0
#define OBJ_setct_CredReqTBS OBJ_set_ctype,32L
#define TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA 0x0300C018
#define EC_R_NO_PARAMETERS_SET 139
#define OBJ_id_aca_authenticationInfo OBJ_id_aca,1L
#define __aligned_be64 __be64 __attribute__((aligned(8)))
#define RLIM_SAVED_CUR RLIM_INFINITY
#define _mm512_maskz_shldi_epi16(A,B,C,D) ((__m512i) __builtin_ia32_vpshld_v32hi_mask ((__v32hi)(__m512i)(B), (__v32hi)(__m512i)(C),(int)(D), (__v32hi)(__m512i)_mm512_setzero_si512 (), (__mmask32)(A)))
#define ASN1_F_ASN1_PCTX_NEW 205
#define OBJ_setct_CapRevResTBE OBJ_set_ctype,67L
#define __swab64(x) (__builtin_constant_p((__u64)(x)) ? ___constant_swab64(x) : __fswab64(x))
#define _SYS_SELECT_H 1
#define BOOST_PP_WHILE_209_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_210, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(210, s))
#define OBJ_sendRouter OBJ_id_kp,23L
#define _mm_blend_pd(X,Y,M) ((__m128d) __builtin_ia32_blendpd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(M)))
#define _mm_blend_ps(X,Y,M) ((__m128) __builtin_ia32_blendps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(M)))
#define NID_Mail 388
#define SOL_UDP 17
#define OBJ_id_mod_dvcs OBJ_id_pkix_mod,15L
#define _mm512_shuffle_i32x4(X,Y,C) ((__m512i) __builtin_ia32_shuf_i32x4_mask ((__v16si)(__m512i)(X), (__v16si)(__m512i)(Y), (int)(C), (__v16si)(__m512i)_mm512_undefined_epi32 (), (__mmask16)-1))
#define SO_EE_RFC4884_FLAG_INVALID 1
#define ASN1_R_SHORT_LINE 150
#define _SC_AIO_MAX _SC_AIO_MAX
#define LN_aria_192_ctr "aria-192-ctr"
#define _mm256_mmask_i64gather_epi64(V1OLD,MASK,INDEX,ADDR,SCALE) (__m256i) __builtin_ia32_gather3div4di ((__v4di)(__m256i) (V1OLD), (void const *) (ADDR), (__v4di)(__m256i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define PRIdPTR __PRIPTR_PREFIX "d"
#define SSL_F_DTLSV1_LISTEN 350
#define SN_id_it_signKeyPairTypes "id-it-signKeyPairTypes"
#define LN_hmac_sha3_384 "hmac-sha3-384"
#define EVENT__HAVE_SYS_TIME_H 1
#define _mm512_maskz_shldi_epi32(A,B,C,D) ((__m512i) __builtin_ia32_vpshld_v16si_mask ((__v16si)(__m512i)(B), (__v16si)(__m512i)(C),(int)(D), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(A)))
#define BOOST_PP_REPEAT_1_142(m,d) BOOST_PP_REPEAT_1_141(m, d) m(2, 141, d)
#define BOOST_HASH_HAS_OPTIONAL 1
#define NID_id_smime_ct_receipt 204
#define EXFLAG_CRITICAL 0x200
#define _IOC_TYPESHIFT (_IOC_NRSHIFT+_IOC_NRBITS)
#define SSL_F_SSL_CHECK_PRIVATE_KEY 163
#define SSL_F_SSL_NEW 186
#define SN_ansi_X9_62 "ansi-X9-62"
#define evtimer_set(ev,cb,arg) event_set((ev), -1, 0, (cb), (arg))
#define NID_setct_CapRevReqTBE 583
#define BOOST_PP_VARIADIC_HAS_OPT_ELEM0(e0,...) BOOST_PP_VARIADIC_HAS_OPT_ELEM_0(e0,__VA_ARGS__)
#define CRYPTO_MEM_CHECK_ON 0x1
#define NID_setct_CapRevReqTBS 547
#define BOOST_PP_SEQ_SIZE_20(_) BOOST_PP_SEQ_SIZE_21
#define BOOST_PP_AUTO_REC(pred,n) BOOST_PP_NODE_ENTRY_ ## n(pred)
#define BOOST_PP_FOR_70(s,p,o,m) BOOST_PP_FOR_70_C(BOOST_PP_BOOL(p(71, s)), s, p, o, m)
#define TLS1_TXT_SRP_SHA_RSA_WITH_AES_128_CBC_SHA "SRP-RSA-AES-128-CBC-SHA"
#define EC_F_EC_GROUP_CHECK_DISCRIMINANT 171
#define TLS1_RFC_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384"
#define _GLIBCXX_VARIANT 1
#define LN_janetMailbox "janetMailbox"
#define NID_id_Gost28147_89_cc 849
#define PTHREAD_BARRIER_SERIAL_THREAD -1
#define NID_sendProxiedRouter 1028
#define LN_aes_192_cbc "aes-192-cbc"
#define IMPLEMENT_PEM_write_cb_fp_const(name,type,str,asn1) int PEM_write_ ##name(FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write((i2d_of_void *)i2d_ ##asn1,str,fp,x,enc,kstr,klen,cb,u); }
#define CHECK_STREQ(s1,s2) CHECK_STROP(strcmp, ==, true, s1, s2)
#define __f64x(x) x ##l
#define BOOST_PP_REPEAT_2_223(m,d) BOOST_PP_REPEAT_2_222(m, d) m(3, 222, d)
#define BOOST_PP_WHILE_256_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_257, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(257, s))
#define NID_id_cct_PKIData 361
#define TLS1_VERSION_MINOR 0x01
#define _mm512_maskz_shldi_epi64(A,B,C,D) ((__m512i) __builtin_ia32_vpshld_v8di_mask ((__v8di)(__m512i)(B), (__v8di)(__m512i)(C),(int)(D), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(A)))
#define PEM_F_PEM_X509_INFO_READ_BIO 116
#define SN_stateOrProvinceName "ST"
#define BOOST_TT_CONFIG_HPP_INCLUDED 
#define LN_aes_192_ccm "aes-192-ccm"
#define BOOST_UNREACHABLE_RETURN(x) __builtin_unreachable();
#define _EXT_NUMERIC_TRAITS 1
#define _GLIBCXX_CXA_VEC_CTOR_RETURN(x) return
#define _GLIBCXX_HAVE_FMODF 1
#define BOOST_PP_EXPAND(x) BOOST_PP_EXPAND_I(x)
#define __cpp_lib_three_way_comparison 201907L
#define _mm_maskz_fmadd_round_ss(U,A,B,C,R) (__m128) __builtin_ia32_vfmaddss3_maskz (A, B, C, U, R)
#define CPP2_PROTOCOL_PROTOCOL_H_ 1
#define FMT_BUFFER_CONTEXT(Char) basic_format_context<detail::buffer_appender<Char>, Char>
#define TLS1_RFC_PSK_WITH_ARIA_256_GCM_SHA384 "TLS_PSK_WITH_ARIA_256_GCM_SHA384"
#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
#define NID_setAttr_Token_EMV 626
#define X509_V_FLAG_NOTIFY_POLICY 0x800
#define SN_aes_192_cfb128 "AES-192-CFB"
#define TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 "ECDHE-ECDSA-ARIA256-GCM-SHA384"
#define OBJ_dNSDomain OBJ_pilotObjectClass,15L
#define NI_NOFQDN 4
#define OBJ_id_smime_ct_DVCSRequestData OBJ_id_smime_ct,7L
#define BOOST_PP_FOR_117_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(118, s) BOOST_PP_IIF(c, BOOST_PP_FOR_118, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(118, s), p, o, m)
#define EC_F_EC_GFP_MONT_FIELD_ENCODE 134
#define TLS1_CK_RSA_WITH_AES_256_CCM_8 0x0300C0A1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_89(op,st,ss,sz) 0
#define TLS1_CK_ECDHE_RSA_WITH_NULL_SHA 0x0300C010
#define OBJ_id_smime_aa_contentHint OBJ_id_smime_aa,4L
#define OBJ_supportedApplicationContext OBJ_X509,30L
#define TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA 0x03000089
#define TLS1_3_RFC_AES_128_GCM_SHA256 "TLS_AES_128_GCM_SHA256"
#define BIO_C_SET_CONNECT 100
#define _mm_maskz_shufflelo_epi16(U,A,B) ((__m128i) __builtin_ia32_pshuflw128_mask ((__v8hi)(__m128i)(A), (int)(B), (__v8hi)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define EC_R_INVALID_FIELD 103
#define CT_F_CTLOG_NEW_FROM_BASE64 118
#define SSL_want_nothing(s) (SSL_want(s) == SSL_NOTHING)
#define SN_id_regInfo "id-regInfo"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010100 (0)(1)(0)(1)(0)(0),
#define SN_id_smime_mod_oid "id-smime-mod-oid"
#define EC_F_EC_KEY_SIMPLE_CHECK_KEY 258
#define X509_V_FLAG_USE_DELTAS 0x2000
#define PKCS7_NOCRL 0x2000
#define PEM_R_PVK_TOO_SHORT 125
#define ASN1_R_BOOLEAN_IS_WRONG_LENGTH 106
#define BOOST_PP_INTERCEPT_86 
#define _GLIBCXX_STDLIB_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_7(op,st,ss,sz) 0
#define _STDDEF_H 
#define ERR_R_DSA_LIB ERR_LIB_DSA
#define BN_R_DIV_BY_ZERO 103
#define _mm512_maskz_roundscale_pd(A,B,C) ((__m512d) __builtin_ia32_rndscalepd_mask ((__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd(), (__mmask8)(A), _MM_FROUND_CUR_DIRECTION))
#define MATH_ERRNO 1
#define BOOST_PP_NODE_11(p) BOOST_PP_IIF(p(11), 11, 12)
#define BOOST_PP_NODE_13(p) BOOST_PP_IIF(p(13), 13, 14)
#define BOOST_PP_NODE_14(p) BOOST_PP_IIF(p(14), BOOST_PP_NODE_13, BOOST_PP_NODE_15)
#define BOOST_PP_NODE_16(p) BOOST_PP_IIF(p(16), BOOST_PP_NODE_8, BOOST_PP_NODE_24)
#define BOOST_PP_NODE_17(p) BOOST_PP_IIF(p(17), 17, 18)
#define BOOST_PP_NODE_18(p) BOOST_PP_IIF(p(18), BOOST_PP_NODE_17, BOOST_PP_NODE_19)
#define BOOST_PP_NODE_19(p) BOOST_PP_IIF(p(19), 19, 20)
#define OBJ_sha384WithRSAEncryption OBJ_pkcs1,12L
#define NID_inhibit_any_policy 748
#define FOLLY_PP_DETAIL_FOR_EACH_1(fn,n,...) FOLLY_PP_DETAIL_FOR_EACH_2(fn, n, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_2(fn,n,...) FOLLY_PP_DETAIL_FOR_EACH_REC_ ##n(fn, __VA_ARGS__)
#define AF_BRIDGE PF_BRIDGE
#define IDP_PRESENT 0x1
#define LN_hold_instruction_call_issuer "Hold Instruction Call Issuer"
#define BLKIOMIN _IO(0x12,120)
#define BOOST_PP_NODE_21(p) BOOST_PP_IIF(p(21), 21, 22)
#define OBJ_id_pda_dateOfBirth OBJ_id_pda,1L
#define SSL_set1_sigalgs(s,slist,slistlen) SSL_ctrl(s,SSL_CTRL_SET_SIGALGS,slistlen,(int *)(slist))
#define SSL_R_CIPHER_CODE_WRONG_LENGTH 137
#define BOOST_PP_NODE_25(p) BOOST_PP_IIF(p(25), 25, 26)
#define BOOST_PP_NODE_26(p) BOOST_PP_IIF(p(26), BOOST_PP_NODE_25, BOOST_PP_NODE_27)
#define BOOST_PP_NODE_27(p) BOOST_PP_IIF(p(27), 27, 28)
#define B_ASN1_GRAPHICSTRING 0x0020
#define BOOST_PP_NODE_29(p) BOOST_PP_IIF(p(29), 29, 30)
#define _STL_BVECTOR_H 1
#define BOOST_PP_FOR_197_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(198, s) BOOST_PP_IIF(c, BOOST_PP_FOR_198, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(198, s), p, o, m)
#define _mm512_maskz_shuffle_f64x2(U,X,Y,C) ((__m512d) __builtin_ia32_shuf_f64x2_mask ((__v8df)(__m512d)(X), (__v8df)(__m512d)(Y), (int)(C), (__v8df)(__m512d)_mm512_setzero_pd(), (__mmask8)(U)))
#define BIO_FLAGS_IO_SPECIAL 0x04
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110111 (1)(1)(0)(1)(1)(1),
#define SO_NO_TSOCKS 201
#define SN_id_smime_ct_publishCert "id-smime-ct-publishCert"
#define BOOST_MOVE_ADL_MOVE_SWAP_HPP 
#define PKCS7_R_NO_SIGNATURES_ON_DATA 123
#define NID_blake2b512 1056
#define _SYS_POLL_H 1
#define EVP_CTRL_CCM_SET_IVLEN EVP_CTRL_AEAD_SET_IVLEN
#define B_ASN1_GENERALSTRING 0x0080
#define BOOST_PP_BOOL_162 1
#define OBJ_sect409k1 OBJ_secg_ellipticCurve,36L
#define BOOST_PP_NODE_30(p) BOOST_PP_IIF(p(30), BOOST_PP_NODE_29, BOOST_PP_NODE_31)
#define BOOST_PP_NODE_31(p) BOOST_PP_IIF(p(31), 31, 32)
#define BOOST_PP_NODE_32(p) BOOST_PP_IIF(p(32), BOOST_PP_NODE_16, BOOST_PP_NODE_48)
#define BOOST_PP_NODE_33(p) BOOST_PP_IIF(p(33), 33, 34)
#define BOOST_PP_NODE_34(p) BOOST_PP_IIF(p(34), BOOST_PP_NODE_33, BOOST_PP_NODE_35)
#define EC_R_COORDINATES_OUT_OF_RANGE 146
#define BOOST_PP_NODE_36(p) BOOST_PP_IIF(p(36), BOOST_PP_NODE_34, BOOST_PP_NODE_38)
#define BOOST_PP_NODE_37(p) BOOST_PP_IIF(p(37), 37, 38)
#define BOOST_PP_NODE_38(p) BOOST_PP_IIF(p(38), BOOST_PP_NODE_37, BOOST_PP_NODE_39)
#define BOOST_PP_NODE_39(p) BOOST_PP_IIF(p(39), 39, 40)
#define BOOST_PP_FOR_204(s,p,o,m) BOOST_PP_FOR_204_C(BOOST_PP_BOOL(p(205, s)), s, p, o, m)
#define BOOST_PP_FOR_205(s,p,o,m) BOOST_PP_FOR_205_C(BOOST_PP_BOOL(p(206, s)), s, p, o, m)
#define BOOST_PP_FOR_206(s,p,o,m) BOOST_PP_FOR_206_C(BOOST_PP_BOOL(p(207, s)), s, p, o, m)
#define BOOST_PP_FOR_207(s,p,o,m) BOOST_PP_FOR_207_C(BOOST_PP_BOOL(p(208, s)), s, p, o, m)
#define BOOST_PP_FOR_208(s,p,o,m) BOOST_PP_FOR_208_C(BOOST_PP_BOOL(p(209, s)), s, p, o, m)
#define BOOST_PP_FOR_209(s,p,o,m) BOOST_PP_FOR_209_C(BOOST_PP_BOOL(p(210, s)), s, p, o, m)
#define _GXX_NULLPTR_T 
#define DCHECK_EQ(val1,val2) CHECK_EQ(val1, val2)
#define lh_error OPENSSL_LH_error
#define BOOST_PP_WHILE_135_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_136, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(136, s))
#define __SIZEOF_PTHREAD_BARRIER_T 32
#define SN_id_pkix_OCSP_acceptableResponses "acceptableResponses"
#define _POSIX2_RE_DUP_MAX 255
#define SSL_F_TLS_PARSE_CTOS_SRP 576
#define TLS1_CK_DH_DSS_WITH_ARIA_128_GCM_SHA256 0x0300C058
#define OBJ_name OBJ_X509,41L
#define MADV_PAGEOUT 21
#define BOOST_PP_NODE_41(p) BOOST_PP_IIF(p(41), 41, 42)
#define BOOST_PP_NODE_42(p) BOOST_PP_IIF(p(42), BOOST_PP_NODE_41, BOOST_PP_NODE_43)
#define BOOST_PP_NODE_45(p) BOOST_PP_IIF(p(45), 45, 46)
#define BOOST_PP_FOR_210(s,p,o,m) BOOST_PP_FOR_210_C(BOOST_PP_BOOL(p(211, s)), s, p, o, m)
#define BOOST_PP_NODE_47(p) BOOST_PP_IIF(p(47), 47, 48)
#define BOOST_PP_FOR_212(s,p,o,m) BOOST_PP_FOR_212_C(BOOST_PP_BOOL(p(213, s)), s, p, o, m)
#define BOOST_PP_NODE_49(p) BOOST_PP_IIF(p(49), 49, 50)
#define BOOST_PP_FOR_214(s,p,o,m) BOOST_PP_FOR_214_C(BOOST_PP_BOOL(p(215, s)), s, p, o, m)
#define BOOST_PP_FOR_215(s,p,o,m) BOOST_PP_FOR_215_C(BOOST_PP_BOOL(p(216, s)), s, p, o, m)
#define BOOST_PP_FOR_216(s,p,o,m) BOOST_PP_FOR_216_C(BOOST_PP_BOOL(p(217, s)), s, p, o, m)
#define BOOST_PP_FOR_217(s,p,o,m) BOOST_PP_FOR_217_C(BOOST_PP_BOOL(p(218, s)), s, p, o, m)
#define ERR_LIB_NONE 1
#define BOOST_PP_FOR_219(s,p,o,m) BOOST_PP_FOR_219_C(BOOST_PP_BOOL(p(220, s)), s, p, o, m)
#define BOOST_PP_BOOL_168 1
#define TLS1_RFC_ECDHE_RSA_WITH_RC4_128_SHA "TLS_ECDHE_RSA_WITH_RC4_128_SHA"
#define NID_iana 381
#define S_TYPEISSHM(buf) __S_TYPEISSHM(buf)
#define BOOST_PP_BOOL_169 1
#define __DECL_SIMD_sincosf 
#define SSL_F_SSL_READ_INTERNAL 523
#define __DECL_SIMD_sincosl 
#define SSL_BUILD_CHAIN_FLAG_NO_ROOT 0x2
#define _mm512_maskz_roundscale_ps(A,B,C) ((__m512) __builtin_ia32_rndscaleps_mask ((__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A), _MM_FROUND_CUR_DIRECTION))
#define BOOST_MOVE_IS_UNION_IMPL(T) BOOST_MOVE_IS_UNION(T)
#define BOOST_PP_NODE_50(p) BOOST_PP_IIF(p(50), BOOST_PP_NODE_49, BOOST_PP_NODE_51)
#define SN_X9_62_tpBasis "tpBasis"
#define EC_F_PKEY_EC_CTRL_STR 198
#define BOOST_PP_NODE_54(p) BOOST_PP_IIF(p(54), BOOST_PP_NODE_53, BOOST_PP_NODE_55)
#define BOOST_PP_NODE_55(p) BOOST_PP_IIF(p(55), 55, 56)
#define BOOST_PP_NODE_56(p) BOOST_PP_IIF(p(56), BOOST_PP_NODE_52, BOOST_PP_NODE_60)
#define BOOST_PP_NODE_57(p) BOOST_PP_IIF(p(57), 57, 58)
#define BOOST_PP_NODE_58(p) BOOST_PP_IIF(p(58), BOOST_PP_NODE_57, BOOST_PP_NODE_59)
#define BOOST_PP_NODE_59(p) BOOST_PP_IIF(p(59), 59, 60)
#define BOOST_PP_FOR_225(s,p,o,m) BOOST_PP_FOR_225_C(BOOST_PP_BOOL(p(226, s)), s, p, o, m)
#define BOOST_PP_FOR_226(s,p,o,m) BOOST_PP_FOR_226_C(BOOST_PP_BOOL(p(227, s)), s, p, o, m)
#define BIO_C_GET_ACCEPT 124
#define RSA_FLAG_THREAD_SAFE 0x0010
#define EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR (EVP_PKEY_ALG_CTRL + 2)
#define DCHECK_GT(val1,val2) CHECK_GT(val1, val2)
#define LN_rc2_64_cbc "rc2-64-cbc"
#define _mm512_extracti64x4_epi64(X,C) ((__m256i) __builtin_ia32_extracti64x4_mask ((__v8di)(__m512i) (X), (int) (C), (__v4di)(__m256i)_mm256_undefined_si256 (), (__mmask8)-1))
#define THRIFT2_PROTOCOL_TSIMPLEJSONPROTOCOL_TCC_ 1
#define _mm512_maskz_cvtt_roundps_epi32(U,A,B) ((__m512i)__builtin_ia32_cvttps2dq512_mask(A, (__v16si)_mm512_setzero_si512 (), U, B))
#define NID_algorithm 376
#define MS_RMT_MASK (MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION| MS_LAZYTIME)
#define SSL_F_TLS_PARSE_CTOS_POST_HANDSHAKE_AUTH 620
#define BOOST_PP_WHILE_244_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_245, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(245, s))
#define SN_whirlpool "whirlpool"
#define BOOST_PP_NODE_61(p) BOOST_PP_IIF(p(61), 61, 62)
#define BOOST_PP_NODE_62(p) BOOST_PP_IIF(p(62), BOOST_PP_NODE_61, BOOST_PP_NODE_63)
#define BOOST_PP_NODE_63(p) BOOST_PP_IIF(p(63), 63, 64)
#define BOOST_PP_NODE_64(p) BOOST_PP_IIF(p(64), BOOST_PP_NODE_32, BOOST_PP_NODE_96)
#define SN_member_body "member-body"
#define BOOST_PP_NODE_66(p) BOOST_PP_IIF(p(66), BOOST_PP_NODE_65, BOOST_PP_NODE_67)
#define BOOST_PP_FOR_231(s,p,o,m) BOOST_PP_FOR_231_C(BOOST_PP_BOOL(p(232, s)), s, p, o, m)
#define BOOST_PP_NODE_68(p) BOOST_PP_IIF(p(68), BOOST_PP_NODE_66, BOOST_PP_NODE_70)
#define B_ASN1_PRINTABLE B_ASN1_NUMERICSTRING| B_ASN1_PRINTABLESTRING| B_ASN1_T61STRING| B_ASN1_IA5STRING| B_ASN1_BIT_STRING| B_ASN1_UNIVERSALSTRING| B_ASN1_BMPSTRING| B_ASN1_UTF8STRING| B_ASN1_SEQUENCE| B_ASN1_UNKNOWN
#define BOOST_PP_FOR_235(s,p,o,m) BOOST_PP_FOR_235_C(BOOST_PP_BOOL(p(236, s)), s, p, o, m)
#define BOOST_PP_FOR_236(s,p,o,m) BOOST_PP_FOR_236_C(BOOST_PP_BOOL(p(237, s)), s, p, o, m)
#define BOOST_PP_FOR_237(s,p,o,m) BOOST_PP_FOR_237_C(BOOST_PP_BOOL(p(238, s)), s, p, o, m)
#define BOOST_PP_FOR_238(s,p,o,m) BOOST_PP_FOR_238_C(BOOST_PP_BOOL(p(239, s)), s, p, o, m)
#define BOOST_PP_FOR_239(s,p,o,m) BOOST_PP_FOR_239_C(BOOST_PP_BOOL(p(240, s)), s, p, o, m)
#define CMSerr(f,r) ERR_PUT_error(ERR_LIB_CMS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define DH_F_DH_NEW_BY_NID 104
#define _SC_XOPEN_STREAMS _SC_XOPEN_STREAMS
#define EVP_CIPH_FLAG_PIPELINE 0X800000
#define UDP_GRO 104
#define BOOST_PP_FOR_22_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(23, s) BOOST_PP_IIF(c, BOOST_PP_FOR_23, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(23, s), p, o, m)
#define HEADER_COMP_H 
#define ASYNC_PAUSE 2
#define BOOST_PP_NODE_71(p) BOOST_PP_IIF(p(71), 71, 72)
#define BOOST_PP_NODE_73(p) BOOST_PP_IIF(p(73), 73, 74)
#define BOOST_PP_NODE_74(p) BOOST_PP_IIF(p(74), BOOST_PP_NODE_73, BOOST_PP_NODE_75)
#define BOOST_PP_NODE_75(p) BOOST_PP_IIF(p(75), 75, 76)
#define BOOST_PP_NODE_78(p) BOOST_PP_IIF(p(78), BOOST_PP_NODE_77, BOOST_PP_NODE_79)
#define BOOST_PP_NODE_79(p) BOOST_PP_IIF(p(79), 79, 80)
#define BOOST_PP_FOR_244(s,p,o,m) BOOST_PP_FOR_244_C(BOOST_PP_BOOL(p(245, s)), s, p, o, m)
#define BOOST_PP_FOR_245(s,p,o,m) BOOST_PP_FOR_245_C(BOOST_PP_BOOL(p(246, s)), s, p, o, m)
#define BOOST_PP_FOR_246(s,p,o,m) BOOST_PP_FOR_246_C(BOOST_PP_BOOL(p(247, s)), s, p, o, m)
#define BOOST_PP_FOR_247(s,p,o,m) BOOST_PP_FOR_247_C(BOOST_PP_BOOL(p(248, s)), s, p, o, m)
#define BOOST_PP_FOR_248(s,p,o,m) BOOST_PP_FOR_248_C(BOOST_PP_BOOL(p(249, s)), s, p, o, m)
#define BOOST_PP_FOR_249(s,p,o,m) BOOST_PP_FOR_249_C(BOOST_PP_BOOL(p(250, s)), s, p, o, m)
#define _GLIBCXX_HAVE_LOCALE_H 1
#define BOOST_MPL_AUX_ARG_ADL_BARRIER_DECL(type) using ::BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE::type;
#define EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE 209
#define SSL_COMP_free_compression_methods() while(0) continue
#define OBJ_sha224 OBJ_nist_hashalgs,4L
#define ENOSR 63
#define _mm_maskz_reduce_pd(U,A,B) ((__m128d) __builtin_ia32_reducepd128_mask ((__v2df)(__m128d)(A), (int)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U)))
#define LN_crl_reason "X509v3 CRL Reason Code"
#define S_ISDIR(mode) __S_ISTYPE((mode), __S_IFDIR)
#define _mm_maskz_reduce_ps(U,A,B) ((__m128) __builtin_ia32_reduceps128_mask ((__v4sf)(__m128)(A), (int)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U)))
#define TLSEXT_hash_sha512 6
#define SN_sha "SHA"
#define BOOST_PP_NODE_80(p) BOOST_PP_IIF(p(80), BOOST_PP_NODE_72, BOOST_PP_NODE_88)
#define BOOST_PP_NODE_82(p) BOOST_PP_IIF(p(82), BOOST_PP_NODE_81, BOOST_PP_NODE_83)
#define BOOST_PP_NODE_83(p) BOOST_PP_IIF(p(83), 83, 84)
#define BOOST_PP_NODE_84(p) BOOST_PP_IIF(p(84), BOOST_PP_NODE_82, BOOST_PP_NODE_86)
#define BOOST_PP_NODE_85(p) BOOST_PP_IIF(p(85), 85, 86)
#define BOOST_PP_NODE_86(p) BOOST_PP_IIF(p(86), BOOST_PP_NODE_85, BOOST_PP_NODE_87)
#define OBJ_hmacWithSHA384 OBJ_rsadsi,2L,10L
#define BOOST_PP_NODE_89(p) BOOST_PP_IIF(p(89), 89, 90)
#define LN_id_ppl_inheritAll "Inherit all"
#define BOOST_PP_FOR_255(s,p,o,m) BOOST_PP_FOR_255_C(BOOST_PP_BOOL(p(256, s)), s, p, o, m)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_37(s,p,o,m) 0
#define SN_brainpoolP224r1 "brainpoolP224r1"
#define BOOST_PP_BOOL_10 1
#define CHECKED_PTR_OF(type,p) ((void*) (1 ? p : (type*)0))
#define _mm512_maskz_cvtt_roundps_epi64(U,A,B) ((__m512i)__builtin_ia32_cvttps2qq512_mask ((A), (__v8di)_mm512_setzero_si512 (), (U), (B)))
#define SN_bf_cbc "BF-CBC"
#define BOOST_PP_BOOL_12 1
#define MOUNT_ATTR_NOEXEC 0x00000008
#define BOOST_PP_NODE_90(p) BOOST_PP_IIF(p(90), BOOST_PP_NODE_89, BOOST_PP_NODE_91)
#define BOOST_PP_NODE_91(p) BOOST_PP_IIF(p(91), 91, 92)
#define BOOST_PP_NODE_92(p) BOOST_PP_IIF(p(92), BOOST_PP_NODE_90, BOOST_PP_NODE_94)
#define BOOST_PP_NODE_93(p) BOOST_PP_IIF(p(93), 93, 94)
#define BOOST_PP_NODE_95(p) BOOST_PP_IIF(p(95), 95, 96)
#define BOOST_PP_NODE_96(p) BOOST_PP_IIF(p(96), BOOST_PP_NODE_80, BOOST_PP_NODE_112)
#define BOOST_PP_NODE_97(p) BOOST_PP_IIF(p(97), 97, 98)
#define BOOST_PP_NODE_98(p) BOOST_PP_IIF(p(98), BOOST_PP_NODE_97, BOOST_PP_NODE_99)
#define BOOST_PP_NODE_99(p) BOOST_PP_IIF(p(99), 99, 100)
#define LN_countryName "countryName"
#define FOLLY_PP_DETAIL_FOR_EACH_REC_2(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_1(fn, __VA_ARGS__)
#define SSL_R_NO_CHANGE_FOLLOWING_HRR 214
#define X509_R_AKID_MISMATCH 110
#define BOOST_PP_BOOL_14 1
#define __FLT64X_MANT_DIG__ 64
#define SN_SMIMECapabilities "SMIME-CAPS"
#define OBJ_sect409r1 OBJ_secg_ellipticCurve,37L
#define SSL_R_COMPRESSION_DISABLED 343
#define BIO_TYPE_ACCEPT (13|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)
#define _mm_dp_pd(X,Y,M) ((__m128d) __builtin_ia32_dppd ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(M)))
#define SN_brainpoolP224t1 "brainpoolP224t1"
#define _mm_mask_fixupimm_pd(X,U,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmpd128_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U)))
#define OBJ_email_protect OBJ_id_kp,4L
#define _mm_dp_ps(X,Y,M) ((__m128) __builtin_ia32_dpps ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(M)))
#define SSL_R_NOT_REPLACING_CERTIFICATE 289
#define OBJ_dsa_with_SHA384 OBJ_sigAlgs,3L
#define __pie__ 2
#define PKCS7_F_PKCS7_ADD_CERTIFICATE 100
#define _mm_maskz_reduce_sd(U,A,B,C) ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (), (__mmask8)(U)))
#define CLD_EXITED CLD_EXITED
#define TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA"
#define NID_id_GostR3410_2001_CryptoPro_A_ParamSet 840
#define SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA "EDH-DSS-DES-CBC3-SHA"
#define BIO_F_BIO_ACCEPT_NEW 152
#define BOOST_PP_WHILE_79(p,o,s) BOOST_PP_WHILE_79_C(BOOST_PP_BOOL(p(80, s)), p, o, s)
#define __cpp_delegating_constructors 200604L
#define NID_name 173
#define BOOST_GCC_CXX11 
#define BOOST_PP_WHILE_1_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_2, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(2, s))
#define PEM_R_KEYBLOB_HEADER_PARSE_ERROR 122
#define FS_INLINE_DATA_FL 0x10000000
#define NID_sect131r1 719
#define BOOST_PP_REPEAT_1_154(m,d) BOOST_PP_REPEAT_1_153(m, d) m(2, 153, d)
#define FOLLY_SAFE_DCHECK(expr,...) FOLLY_DETAIL_SAFE_CHECK_IMPL( 1, 0, (expr), FOLLY_PP_STRINGIZE(expr), __VA_ARGS__)
#define _MM_ROUND_NEAREST 0x0000
#define NID_ecdsa_with_SHA512 796
#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)
#define __SIZEOF_LONG_DOUBLE__ 16
#define SSL_set_dh_auto(s,onoff) SSL_ctrl(s,SSL_CTRL_SET_DH_AUTO,onoff,NULL)
#define DCHECK_NE(val1,val2) CHECK_NE(val1, val2)
#define SN_camellia_192_cmac "CAMELLIA-192-CMAC"
#define NID_setAttr_GenCryptgrm 631
#define TLS1_FLAGS_ENCRYPT_THEN_MAC TLS1_FLAGS_ENCRYPT_THEN_MAC_READ
#define OBJ_id_PasswordBasedMAC OBJ_ISO_US,113533L,7L,66L,13L
#define OBJ_ccitt OBJ_itu_t
#define FMT_ASSERT(condition,message) ((condition) ? (void)0 : ::fmt::detail::assert_fail(__FILE__, __LINE__, (message)))
#define OBJ_buildingName OBJ_pilotAttributeType,48L
#define SN_id_qcs "id-qcs"
#define OBJ_SMIME OBJ_pkcs9,16L
#define SSL_R_NO_CERTIFICATES_RETURNED 176
#define _mm_mask_fixupimm_sd(X,U,Y,Z,C) ((__m128d)__builtin_ia32_fixupimmsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__v2di)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define OPENSSL_RSA_FIPS_MIN_MODULUS_BITS 1024
#define NID_sha256 672
#define BOOST_TT_IS_COPY_CONSTRUCTIBLE_HPP_INCLUDED 
#define CONF_F_MODULE_LOAD_DSO 117
#define _mm_mask_fixupimm_ss(X,U,Y,Z,C) ((__m128)__builtin_ia32_fixupimmss_mask ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__v4si)(__m128i)(Z), (int)(C), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION))
#define BOOST_MOVE_IS_TRIVIALLY_MOVE_ASSIGNABLE(T) ::boost::move_detail::is_pod<T>::value
#define LN_aes_192_ctr "aes-192-ctr"
#define ATOMIC_BOOL_LOCK_FREE __GCC_ATOMIC_BOOL_LOCK_FREE
#define OPENSSL_INIT_ENGINE_AFALG 0x00008000L
#define RLIMIT_SIGPENDING __RLIMIT_SIGPENDING
#define _mm512_shrdi_epi64(A,B,C) ((__m512i) __builtin_ia32_vpshrd_v8di ((__v8di)(__m512i)(A), (__v8di)(__m512i)(B),(int)(C)))
#define SSL_F_OSSL_STATEM_CLIENT_READ_TRANSITION 417
#define BOOST_PP_FOR_129_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(130, s) BOOST_PP_IIF(c, BOOST_PP_FOR_130, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(130, s), p, o, m)
#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
#define _mm512_maskz_shuffle_i64x2(U,X,Y,C) ((__m512i) __builtin_ia32_shuf_i64x2_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)(C), (__v8di)(__m512i)_mm512_setzero_si512 (), (__mmask8)(U)))
#define OBJ_info_access OBJ_id_pe,1L
#define EAI_FAIL -4
#define _mm_mpsadbw_epu8(X,Y,M) ((__m128i) __builtin_ia32_mpsadbw128 ((__v16qi)(__m128i)(X), (__v16qi)(__m128i)(Y), (int)(M)))
#define COMP_R_ZLIB_DEFLATE_ERROR 99
#define TLS1_TXT_RSA_WITH_AES_128_SHA256 "AES128-SHA256"
#define BOOST_CORE_EXPLICIT_OPERATOR_BOOL_HPP 
#define EVP_PKEY_CTRL_SET_DIGEST_SIZE 14
#define ASN1_F_ASN1_ITEM_D2I_FP 206
#define BOOST_PP_WHILE_31_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_32, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(32, s))
#define EV_UINT16_MAX UINT16_MAX
#define LN_id_ppl_anyLanguage "Any language"
#define BOOST_PP_SEQ_FOLD_LEFT_I_50(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_51, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(51, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define FS_POLICY_FLAGS_PAD_16 FSCRYPT_POLICY_FLAGS_PAD_16
#define LN_associatedDomain "associatedDomain"
#define _MM_EXTRACT_FLOAT(D,S,N) { (D) = __builtin_ia32_vec_ext_v4sf ((__v4sf)(S), (N)); }
#define SSL_R_BAD_KEY_UPDATE 122
#define _GLIBCXX_NAMESPACE_LDBL 
#define __USE_ISOC95 1
#define __USE_ISOC99 1
#define BOOST_UTILITY_COMPARE_POINTEES_25AGO2003_HPP 
#define _GLIBCXX_HAVE_WCHAR_H 1
#define TLS1_CK_DHE_RSA_WITH_CHACHA20_POLY1305 0x0300CCAA
#define BOOST_PP_FOR_238_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(239, s) BOOST_PP_IIF(c, BOOST_PP_FOR_239, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(239, s), p, o, m)
#define NID_dhSinglePass_cofactorDH_sha256kdf_scheme 943
#define ERR_R_INIT_FAIL (6|ERR_R_FATAL)
#define BOOST_DINKUMWARE_STDLIB_WORKAROUND_GUARD 1
#define BN_F_BN_MOD_EXP_MONT 109
#define OBJ_aria_128_ccm OBJ_aria,37L
#define ASN1_d2i_fp_of(type,xnew,d2i,in,x) ((type*)ASN1_d2i_fp(CHECKED_NEW_OF(type, xnew), CHECKED_D2I_OF(type, d2i), in, CHECKED_PPTR_OF(type, x)))
#define EVP_PKEY_RSA NID_rsaEncryption
#define __isctype_l(c,type,locale) ((locale)->__ctype_b[(int) (c)] & (unsigned short int) type)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1011011 (1)(0)(1)(1)(0)(1)(1),
#define EC_R_BIGNUM_OUT_OF_RANGE 144
#define SSL_ASYNC_NO_JOBS 6
#define _mm256_permute2x128_si256(X,Y,M) ((__m256i) __builtin_ia32_permti256 ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(M)))
#define SN_hkdf "HKDF"
#define LN_dsaWithSHA1 "dsaWithSHA1"
#define BOOST_PP_DEC_0 0
#define SN_dnQualifier "dnQualifier"
#define RSA_R_DATA_TOO_SMALL 111
#define _mm_roti_epi64(A,N) ((__m128i) __builtin_ia32_vprotqi ((__v2di)(__m128i)(A), (int)(N)))
#define BOOST_PP_WHILE_170_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_171, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(171, s))
#define LN_id_pkix_OCSP_serviceLocator "OCSP Service Locator"
#define NID_pilot 437
#define SSL_R_BAD_PACKET_LENGTH 115
#define PEM_F_LOAD_IV 101
#define __DBL_HAS_INFINITY__ 1
#define _GLIBCXX_STDIO_EOF -1
#define SN_userId "UID"
#define _PC_SYMLINK_MAX _PC_SYMLINK_MAX
#define NID_sect233k1 726
#define OBJ_id_aes256_wrap_pad OBJ_aes,48L
#define IPV6_PMTUDISC_OMIT 5
#define PEM_STRING_DSA "DSA PRIVATE KEY"
#define BOOST_PP_REPEAT_1_23(m,d) BOOST_PP_REPEAT_1_22(m, d) m(2, 22, d)
#define BOOST_PP_SEQ_FOLD_LEFT_I_86(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_87, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(87, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _PC_REC_MIN_XFER_SIZE _PC_REC_MIN_XFER_SIZE
#define BOOST_PP_DEC_3 2
#define SN_qcStatements "qcStatements"
#define OBJ_aes_256_cbc OBJ_aes,42L
#define MSG_FASTOPEN MSG_FASTOPEN
#define EVP_MD_CTX_type(e) EVP_MD_type(EVP_MD_CTX_md(e))
#define SSL_R_TOO_MUCH_EARLY_DATA 164
#define OBJ_camellia_192_ctr OBJ_camellia,29L
#define RAND_F_RAND_DRBG_GET_ENTROPY 120
#define stdin stdin
#define PRIi16 "i"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_110110 (1)(1)(0)(1)(1)(0),
#define OBJ_F_OBJ_DUP 101
#define SN_id_smime_mod_ets_eSigPolicy_88 "id-smime-mod-ets-eSigPolicy-88"
#define SN_sha3_224 "SHA3-224"
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 0x0300C009
#define EVP_CTRL_SBOX_USED 0x1f
#define COMP_F_BIO_ZLIB_FLUSH 99
#define BOOST_PP_SEQ_FOLD_LEFT_I_55(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_56, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(56, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define OBJ_aes_256_ccm OBJ_aes,47L
#define X509V3_R_INVALID_POLICY_IDENTIFIER 134
#define __FLT_MANT_DIG__ 24
#define NID_X9_62_c2pnb208w1 693
#define NID_setext_genCrypt 601
#define SSL_F_SSL3_READ_BYTES 148
#define EVP_R_FIPS_MODE_NOT_SUPPORTED 167
#define SN_id_smime_mod_ets_eSigPolicy_97 "id-smime-mod-ets-eSigPolicy-97"
#define SN_ipsec3 "Oakley-EC2N-3"
#define XN_FLAG_SEP_CPLUS_SPC (2 << 16)
#define BOOST_PP_BOOL_173 1
#define X509V3_R_INVALID_NAME 106
#define BOOST_PP_SEQ_FOLD_LEFT_I_56(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_57, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(57, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX_USE_UTIME 1
#define ASN1_STRING_FLAG_NDEF 0x010
#define M_2_SQRTPIf32 __f32 (1.128379167095512573896158903121545172)
#define BOOST_PP_FOR_89_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(90, s) BOOST_PP_IIF(c, BOOST_PP_FOR_90, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(90, s), p, o, m)
#define _ISOC11_SOURCE 1
#define SUN_LEN(ptr) ((size_t) (((struct sockaddr_un *) 0)->sun_path) + strlen ((ptr)->sun_path))
#define _XABORT_CONFLICT (1 << 2)
#define BOOST_PP_DEC_9 8
#define BOOST_PP_REPEAT_2_201(m,d) BOOST_PP_REPEAT_2_200(m, d) m(3, 200, d)
#define _GLIBCXX_HAVE_SINCOSF 1
#define EVP_PKEY_CTX_set_rsa_padding(ctx,pad) RSA_pkey_ctx_ctrl(ctx, -1, EVP_PKEY_CTRL_RSA_PADDING, pad, NULL)
#define SSL_F_SSL_USE_PRIVATEKEY 201
#define TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA256 0x0300C037
#define BOOST_PP_BOOL_179 1
#define SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT 272
#define OBJ_documentVersion OBJ_pilotAttributeType,13L
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG 64
#define get_rfc3526_prime_6144 BN_get_rfc3526_prime_6144
#define EXFLAG_PROXY 0x400
#define NID_rc2_40_cbc 98
#define BOOST_MPL_INSERT_RANGE_HPP_INCLUDED 
#define SN_seed_ofb128 "SEED-OFB"
#define EVP_F_EVP_PKEY_DECRYPT 104
#define TLS1_AD_ACCESS_DENIED 49
#define OBJ_setct_CredRevReqTBEX OBJ_set_ctype,72L
#define ERR_load_crypto_strings() OPENSSL_init_crypto(OPENSSL_INIT_LOAD_CRYPTO_STRINGS, NULL)
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_CBC_SHA "ECDH-ECDSA-AES256-SHA"
#define LC_IDENTIFICATION_MASK (1 << __LC_IDENTIFICATION)
#define SN_set_brand_Diners "set-brand-Diners"
#define TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA "ECDHE-PSK-AES256-CBC-SHA"
#define SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT 301
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101000 (0)(0)(1)(0)(1)(0)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101001 (0)(0)(1)(0)(1)(0)(0)(1),
#define OBJ_brainpoolP192t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,4L
#define _SIDD_UNIT_MASK 0x40
#define NID_id_cct 268
#define BOOST_PP_LIST_FOLD_LEFT_2ND_D BOOST_PP_LIST_FOLD_LEFT_D
#define EVP_F_EVP_PKEY_DERIVE_SET_PEER 155
#define M_2_SQRTPIf64 __f64 (1.128379167095512573896158903121545172)
#define PRIi64 __PRI64_PREFIX "i"
#define SSL_R_USE_SRTP_NOT_NEGOTIATED 369
#define SSL3_RT_MAX_ENCRYPTED_OVERHEAD (256 + SSL3_RT_MAX_MD_SIZE)
#define __cpp_lib_optional 201606L
#define OBJ_id_tc26_sign_constants OBJ_id_tc26_constants,1L
#define _mm_extract_pi16(A,N) ((int) __builtin_ia32_vec_ext_v4hi ((__v4hi)(__m64)(A), (int)(N)))
#define MSG_TRYHARD MSG_DONTROUTE
#define SSL_R_CONNECTION_TYPE_NOT_SET 144
#define EVUTIL_INVALID_SOCKET -1
#define BIO_C_SET_SUFFIX 151
#define PF_SMC 43
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101011 (0)(0)(1)(0)(1)(0)(1)(1),
#define _mm512_mask_alignr_epi8(W,U,X,Y,N) ((__m512i) __builtin_ia32_palignr512_mask ((__v8di)(__m512i)(X), (__v8di)(__m512i)(Y), (int)((N) * 8), (__v8di)(__m512i)(W), (__mmask64)(U)))
#define BOOST_FUNCTIONAL_HASH_DETAIL_HASH_FLOAT_HEADER 
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_44(s,p,o,m) 0
#define LC_NAME_MASK (1 << __LC_NAME)
#define ASN1_F_APPEND_EXP 176
#define DSA_FLAG_FIPS_CHECKED 0x0800
#define sk_shift OPENSSL_sk_shift
#define _mm_mask_ror_epi32(W,U,A,B) ((__m128i)__builtin_ia32_prord128_mask ((__v4si)(__m128i)(A), (int)(B), (__v4si)(__m128i)(W), (__mmask8)(U)))
#define IDP_ONLYUSER 0x4
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define LN_searchGuide "searchGuide"
#define NID_sha 41
#define OBJ_id_it_signKeyPairTypes OBJ_id_it,2L
#define BOOST_MPL_AUX_CONFIG_GCC_HPP_INCLUDED 
#define BOOST_PP_BOOL_21 1
#define EVP_PKEY_CTX_set_dh_paramgen_type(ctx,typ) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_TYPE, typ, NULL)
#define EVP_F_EVP_PKEY_GET0_RSA 121
#define BOOST_STATIC_CONSTEXPR static BOOST_CONSTEXPR_OR_CONST
#define LN_issuer_alt_name "X509v3 Issuer Alternative Name"
#define BOOST_PP_BOOL_22 1
#define SSL_R_CUSTOM_EXT_HANDLER_ALREADY_INSTALLED 206
#define SSL_set_mtu(ssl,mtu) SSL_ctrl((ssl),SSL_CTRL_SET_MTU,(mtu),NULL)
#define SA_RESETHAND 0x80000000
#define OBJ_id_pkip OBJ_id_pkix,5L
#define OBJ_id_pkix 1L,3L,6L,1L,5L,5L,7L
#define FOLLY_CREATE_QUAL_INVOKER_SUITE(name,funcpath) FOLLY_CREATE_QUAL_INVOKER(name ##_fn, funcpath); FOLLY_MAYBE_UNUSED FOLLY_INLINE_VARIABLE constexpr name ##_fn name {}
#define ASYNC_F_ASYNC_START_JOB 105
#define OBJ_id_aca_role OBJ_id_aca,5L
#define SPLICE_F_MOVE 1
#define BOOST_PP_WHILE_202_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_203, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(203, s))
#define BIO_FLAGS_RWS (BIO_FLAGS_READ|BIO_FLAGS_WRITE|BIO_FLAGS_IO_SPECIAL)
#define BOOST_TT_IS_EMPTY_HPP_INCLUDED 
#define SSL_F_TLS1_SET_GROUPS 629
#define _mm_cvtt_roundsd_u32(A,B) ((unsigned)__builtin_ia32_vcvttsd2usi32(A, B))
#define __cpp_rvalue_references 200610L
#define LN_iso "iso"
#define BOOST_PP_FOR_164_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(165, s) BOOST_PP_IIF(c, BOOST_PP_FOR_165, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(165, s), p, o, m)
#define X509V3_R_DIRNAME_ERROR 149
#define _mm_mask_ror_epi64(W,U,A,B) ((__m128i)__builtin_ia32_prorq128_mask ((__v2di)(__m128i)(A), (int)(B), (__v2di)(__m128i)(W), (__mmask8)(U)))
#define BOOST_PP_BOOL_29 1
#define LN_des_cbc "des-cbc"
#define DH_F_COMPUTE_KEY 102
#define BOOST_PP_REPEAT_2_230(m,d) BOOST_PP_REPEAT_2_229(m, d) m(3, 229, d)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_114(op,st,ss,sz) 0
#define EC_R_MISSING_PARAMETERS 124
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_115(op,st,ss,sz) 0
#define EVP_CHACHAPOLY_TLS_TAG_LEN 16
#define BOOST_PP_REPEAT_2_231(m,d) BOOST_PP_REPEAT_2_230(m, d) m(3, 230, d)
#define _mm256_i64scatter_epi32(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv8si ((void *) (ADDR), (__mmask8)0xFF, (__v4di)(__m256i) (INDEX), (__v4si)(__m128i) (V1), (int) (SCALE))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_143 143
#define SSL_F_TLS_CONSTRUCT_CKE_DHE 404
#define _mm512_maskz_rsqrt28_round_pd(U,A,C) __builtin_ia32_rsqrt28pd_mask(A, (__v8df)_mm512_setzero_pd(), U, C)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_117(op,st,ss,sz) 0
#define BOOST_PP_WHILE_98_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_99, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(99, s))
#define NID_X9_62_id_ecPublicKey 408
#define ASN1_F_ASN1_D2I_FP 109
#define PDP_ENDIAN __PDP_ENDIAN
#define CONF_R_UNABLE_TO_CREATE_NEW_SECTION 103
#define NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet 829
#define _SC_STREAM_MAX _SC_STREAM_MAX
#define __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
#define X509_SIG_INFO_TLS 0x2
#define NID_sm2 1172
#define NID_sm3 1143
#define TLSEXT_TYPE_client_authz 7
#define SSL_R_SSLV3_ALERT_BAD_CERTIFICATE 1042
#define TCP_REPAIR_ON 1
#define SSL_F_SSL3_INIT_FINISHED_MAC 397
#define TLS1_RFC_PSK_WITH_NULL_SHA384 "TLS_PSK_WITH_NULL_SHA384"
#define BOOST_PREPROCESSOR_LIST_ADT_HPP 
#define _mm_cvtt_roundsd_u64(A,B) ((unsigned long long)__builtin_ia32_vcvttsd2usi64(A, B))
#define BOOST_PP_SEQ_FOLD_LEFT_I_135(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_136, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(136, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define NID_sm4_ofb128 1135
#define BOOST_PP_DIV_BASE_O_I(d,r,x,y) (BOOST_PP_INC(r), BOOST_PP_SUB_D(d, x, y), y)
#define IPPROTO_RSVP IPPROTO_RSVP
#define OBJ_X9_62_prime_field OBJ_X9_62_id_fieldType,1L
#define V_ASN1_UNIVERSALSTRING 28
#define SSL_ERROR_SYSCALL 5
#define BOOST_PP_SEQ_SIZE_35(_) BOOST_PP_SEQ_SIZE_36
#define DH_F_DH_CMS_DECRYPT 114
#define BOOST_PP_WHILE_211_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_212, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(212, s))
#define OBJ_id_cmc_getCert OBJ_id_cmc,15L
#define SSL_CTX_get_default_read_ahead(ctx) SSL_CTX_get_read_ahead(ctx)
#define NID_id_aca_encAttrs 399
#define FOLLY_STORAGE_CONSTEXPR constexpr
#define _PTRDIFF_T_DECLARED 
#define _mm256_i64scatter_epi64(ADDR,INDEX,V1,SCALE) __builtin_ia32_scatterdiv4di ((void *) (ADDR), (__mmask8)0xFF, (__v4di)(__m256i) (INDEX), (__v4di)(__m256i) (V1), (int) (SCALE))
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE
#define _IOC_DIRBITS 2
#define FS_XFLAG_REALTIME 0x00000001
#define FS_EXTENT_FL 0x00080000
#define X509_V_ERR_EC_KEY_EXPLICIT_PARAMS 79
#define NID_ms_ext_req 171
#define NID_ct_cert_scts 954
#define STA_PLL 0x0001
#define STATX_GID 0x00000010U
#define BOOST_PP_REPEAT_2_239(m,d) BOOST_PP_REPEAT_2_238(m, d) m(3, 238, d)
#define BOOST_PREPROCESSOR_IDENTITY_HPP 
#define MCAST_EXCLUDE 0
#define NID_initials 101
#define BOOST_MPL_ITER_PUSH_FRONT_HPP_INCLUDED 
#define TCP_KEEPIDLE 4
#define NID_private_key_usage_period 84
#define SSL_CTX_set_tlsext_ticket_keys(ctx,keys,keylen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TLSEXT_TICKET_KEYS,keylen,keys)
#define OBJ_aria_128_ctr OBJ_aria,5L
#define _mm_cvt_roundss_si32(A,B) ((int)__builtin_ia32_vcvtss2si32(A, B))
#define NID_id_cmc 263
#define LOG_EVERY_N(severity,n) SOME_KIND_OF_LOG_EVERY_N(severity, (n), google::LogMessage::SendToLog)
#define IPPROTO_AH IPPROTO_AH
#define EC_F_EC_GFP_NISTP224_POINTS_MUL 228
#define _mm256_inserti32x4(X,Y,C) ((__m256i) __builtin_ia32_inserti32x4_256_mask ((__v8si)(__m256i) (X), (__v4si)(__m128i) (Y), (int) (C), (__v8si)(__m256i)_mm256_setzero_si256 (), (__mmask8)-1))
#define SSL_F_SSL_CTX_CHECK_PRIVATE_KEY 168
#define LN_sha512_256WithRSAEncryption "sha512-256WithRSAEncryption"
#define OBJ_dstu28147_cfb OBJ_dstu28147,3L
#define SSL_F_SSL3_CHANGE_CIPHER_STATE 129
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010101 (1)(0)(1)(0)(1)(0)(1),
#define DTLS1_RT_HEARTBEAT 24
#define SN_id_regCtrl_oldCertID "id-regCtrl-oldCertID"
#define BOOST_EXPLICIT_TEMPLATE_NON_TYPE(t,v) 
#define EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M 185
#define __cpp_rvalue_reference 200610L
#define __swab16(x) (__builtin_constant_p((__u16)(x)) ? ___constant_swab16(x) : __fswab16(x))
#define SSL_TXT_CHACHA20 "CHACHA20"
#define TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA 0x03000043
#define _mm256_maskz_shuffle_i64x2(U,X,Y,C) ((__m256i) __builtin_ia32_shuf_i64x2_256_mask ((__v4di)(__m256i)(X), (__v4di)(__m256i)(Y), (int)(C), (__v4di)(__m256i)_mm256_setzero_si256 (), (__mmask8)(U)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010110 (1)(0)(1)(0)(1)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1010111 (1)(0)(1)(0)(1)(1)(1),
#define BOOST_PP_WHILE_161_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_162, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(162, s))
#define SSL_F_TLS_PROCESS_SKE_ECDHE 420
#define TLS1_CK_PSK_WITH_AES_128_CCM_8 0x0300C0A8
#define _FXSRINTRIN_H_INCLUDED 
#define SSL_R_UNKNOWN_CIPHER_TYPE 249
#define LN_caRepository "CA Repository"
#define si_lower _sifields._sigfault._bounds._addr_bnd._lower
#define SSL_F_SSL_WRITE_EARLY_DATA 526
#define TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384"
#define SN_ms_code_com "msCodeCom"
#define FOLLY_HAVE_DWARF 1
#define UINT64_C(c) c ## UL
#define OPENSSL_INIT_ENGINE_OPENSSL 0x00000800L
#define OPENSSL_add_all_algorithms_conf() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS | OPENSSL_INIT_ADD_ALL_DIGESTS | OPENSSL_INIT_LOAD_CONFIG, NULL)
#define NID_setct_PResData 533
#define FS_CASEFOLD_FL 0x40000000
#define X509_name_cmp(a,b) X509_NAME_cmp((a),(b))
#define OBJ_setct_CredRevReqTBSX OBJ_set_ctype,36L
#define BIO_R_WSASTARTUP 122
#define BOOST_PP_REPEAT_2_198(m,d) BOOST_PP_REPEAT_2_197(m, d) m(3, 197, d)
#define RSA_F_RSA_PADDING_ADD_X931 127
#define SN_id_tc26_gost_28147_param_Z "id-tc26-gost-28147-param-Z"
#define ASN1_F_LONG_C2I 166
#define SN_id_smime_cti_ets_proofOfReceipt "id-smime-cti-ets-proofOfReceipt"
#define FOLLY_HAVE_PTHREAD_ATFORK 1
#define EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES 163
#define NID_X9cm 185
#define BOOST_PP_SLOT_OFFSET_7(x) BOOST_PP_SLOT_OFFSET_8(x) % 1000000UL
#define X509V3_set_ctx_nodb(ctx) (ctx)->db = NULL;
#define NID_OCSP_sign 180
#define BOOST_PP_SLOT_OFFSET_8(x) BOOST_PP_SLOT_OFFSET_9(x) % 10000000UL
#define DSAerr(f,r) ERR_PUT_error(ERR_LIB_DSA,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG 0x0
#define __pid_t_defined 
#define BOOST_PP_WHILE_16_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_17, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(17, s))
#define NID_X9_62_c2pnb272w1 699
#define PF_X25 9
#define __GCC_HAVE_DWARF2_CFI_ASM 1
#define X509_R_NO_CRL_NUMBER 130
#define NID_auth_null 1053
#define _GLIBCXX_IOMANIP 1
#define BOOST_GPU_ENABLED 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100001 (1)(0)(0)(0)(0)(1),
#define TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 0x030000BB
#define _GLIBCXX_IOSTREAM 1
#define BIO_buffer_get_num_lines(b) BIO_ctrl(b,BIO_CTRL_GET,0,NULL)
#define BOOST_PREPROCESSOR_ENUM_HPP 
#define OBJ_pilotOrganization OBJ_pilotObjectClass,20L
#define SN_chacha20_poly1305 "ChaCha20-Poly1305"
#define BOOST_PP_INC_230 231
#define TLS1_TXT_RSA_WITH_AES_128_CCM_8 "AES128-CCM8"
#define X509_FLAG_NO_ATTRIBUTES (1L << 11)
#define BOOST_MPL_VECTOR_AUX_EMPTY_HPP_INCLUDED 
#define PKCS7_NOOLDMIMETYPE 0x400
#define BOOST_PP_INC_231 232
#define INADDR_ANY ((in_addr_t) 0x00000000)
#define NID_rc5_cfb64 122
#define NID_aes_192_cbc_hmac_sha1 917
#define BOOST_PP_INC_233 234
#define DH_F_DO_DH_PRINT 100
#define NI_DGRAM 16
#define BOOST_PP_INC_234 235
#define OBJ_aria_128_cfb128 OBJ_aria,3L
#define NID_auth_gost01 1050
#define __useconds_t_defined 
#define CRYPTO_F_OPENSSL_ATEXIT 114
#define MS_KERNMOUNT (1<<22)
#define M_LOG2E 1.4426950408889634074
#define OBJ_pkcs7_encrypted OBJ_pkcs7,6L
#define IPPROTO_IP IPPROTO_IP
#define _mm_maskz_slli_epi64(U,X,C) ((__m128i)__builtin_ia32_psllqi128_mask ((__v2di)(__m128i)(X), (int)(C), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)(U)))
#define _GCC_LIMITS_H_ 
#define BOOST_PP_FOR_205_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(206, s) BOOST_PP_IIF(c, BOOST_PP_FOR_206, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(206, s), p, o, m)
#define _mm_mask_cmp_pd_mask(M,X,Y,P) ((__mmask8) __builtin_ia32_cmppd128_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)(M)))
#define WNOHANG 1
#define NID_auth_gost12 1051
#define __cpp_lib_integer_sequence 201304
#define BOOST_PP_DEC_118 117
#define BN_R_NOT_INITIALIZED 107
#define LN_stateOrProvinceName "stateOrProvinceName"
#define DH_CHECK_PUBKEY_INVALID 0x04
#define CHECK_NOTNULL(val) google::CheckNotNull(__FILE__, __LINE__, "'" #val "' Must be non NULL", (val))
#define SN_id_aes192_wrap_pad "id-aes192-wrap-pad"
#define CHECK_ERR(invocation) PLOG_IF(FATAL, GOOGLE_PREDICT_BRANCH_NOT_TAKEN((invocation) == -1)) << #invocation
#define IMPLEMENT_PEM_rw_cb(name,type,str,asn1) IMPLEMENT_PEM_read(name, type, str, asn1) IMPLEMENT_PEM_write_cb(name, type, str, asn1)
#define _mm512_add_round_pd(A,B,C) (__m512d)__builtin_ia32_addpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)
#define __exctype_l(name) extern int name (int, locale_t) __THROW
#define _GLIBCXX_HAVE_FINITEF 1
#define _GLIBCXX_HAVE_FINITEL 1
#define _mm512_add_round_ps(A,B,C) (__m512)__builtin_ia32_addps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)
#define BOOST_PP_DEC_209 208
#define BOOST_INTRUSIVE_VARIADIC_TEMPLATES 
#define TLS_CT_ECDSA_FIXED_ECDH 66
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_57(s,p,o,m) 0
#define SSL_CTX_sess_timeouts(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_TIMEOUTS,0,NULL)
#define _TMMINTRIN_H_INCLUDED 
#define F_GETFD 1
#define _MM_CMPINT_UNUSED 0x3
#define OBJ_aria_192_cbc OBJ_aria,7L
#define _POSIX_CLOCKRES_MIN 20000000
#define BOOST_PP_WHILE_169_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_170, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(170, s))
#define BOOST_MOVE_INTEL_TT_OPTS 
#define F_GETFL 3
#define LC_MEASUREMENT __LC_MEASUREMENT
#define BOOST_PP_BOOL_31 1
#define RSA_R_UNSUPPORTED_SIGNATURE_TYPE 155
#define NID_id_aca_accessIdentity 355
#define RSA_F_RSA_CHECK_KEY_EX 160
#define NID_setct_CredReqTBE 586
#define BOOST_PP_BOOL_32 1
#define SSL_CB_CONNECT_EXIT (SSL_ST_CONNECT|SSL_CB_EXIT)
#define OBJ_camellia_128_ecb OBJ_camellia,1L
#define BOOST_MPL_BEGIN_END_HPP_INCLUDED 
#define BOOST_PP_BOOL_33 1
#define LN_camellia_192_ecb "camellia-192-ecb"
#define __PTHREAD_MUTEX_INITIALIZER(__kind) 0, 0, 0, 0, __kind, 0, 0, { 0, 0 }
#define SSL_EARLY_DATA_NOT_SENT 0
#define OBJ_aria_192_ccm OBJ_aria,38L
#define SN_id_it_keyPairParamReq "id-it-keyPairParamReq"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_121(op,st,ss,sz) 0
#define BOOST_PP_BOOL_37 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101100 (1)(0)(1)(0)(1)(1)(0)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101101 (1)(0)(1)(0)(1)(1)(0)(1),
#define NID_pkcs9_signingTime 52
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_123(op,st,ss,sz) 0
#define LN_id_DHBasedMac "Diffie-Hellman based MAC"
#define EVP_PKEY_X25519 NID_X25519
#define BOOST_PP_REPEAT_1_171(m,d) BOOST_PP_REPEAT_1_170(m, d) m(2, 170, d)
#define BOOST_PP_CONFIG_MWCC() 0x0008
#define BOOST_VARIANT_DETAIL_ENABLE_RECURSIVE_HPP 
#define TLS1_RFC_SRP_SHA_DSS_WITH_AES_128_CBC_SHA "TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA"
#define BOOST_PP_REPEAT_1_173(m,d) BOOST_PP_REPEAT_1_172(m, d) m(2, 172, d)
#define LN_id_pkix_OCSP_basic "Basic OCSP Response"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10101111 (1)(0)(1)(0)(1)(1)(1)(1),
#define BOOST_PP_FOR_56_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(57, s) BOOST_PP_IIF(c, BOOST_PP_FOR_57, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(57, s), p, o, m)
#define HEADER_X509ERR_H 
#define __DECL_SIMD_sincosf128 
#define X509V3_F_V2I_GENERAL_NAME_EX 117
#define SSL_R_BAD_HELLO_REQUEST 105
#define BIO_should_write(a) BIO_test_flags(a, BIO_FLAGS_WRITE)
#define __O_DIRECTORY 0200000
#define EVUTIL_EAI_SOCKTYPE EAI_SOCKTYPE
#define BOOST_PP_REPEAT_1_178(m,d) BOOST_PP_REPEAT_1_177(m, d) m(2, 177, d)
#define __S_ISUID 04000
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_173(s,p,o,m) 0
#define NID_setct_RegFormResTBS 562
#define sk_new_null OPENSSL_sk_new_null
#define X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY 6
#define NID_aria_256_ccm 1122
#define EC_F_EC_GROUP_CHECK 170
#define SCNoMAX __PRI64_PREFIX "o"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00111000 (0)(0)(1)(1)(1)(0)(0)(0),
#define SO_SNDTIMEO SO_SNDTIMEO_OLD
#define _SC_CHAR_MAX _SC_CHAR_MAX
#define BOOST_MPL_AUX_CONFIG_PP_COUNTER_HPP_INCLUDED 
#define BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE(z,n,args) template< template< BOOST_PP_ENUM_PARAMS(BOOST_PP_INC(n), typename V) > class V > struct BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME(args, n) { };
#define __MODE_T_TYPE __U32_TYPE
#define __cpp_lib_is_swappable 201603
#define BOOST_PP_FOR_2_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(3, s) BOOST_PP_IIF(c, BOOST_PP_FOR_3, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(3, s), p, o, m)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01011010 (0)(1)(0)(1)(1)(0)(1)(0),
#define F_GETLK 5
#define NID_pkcs1 186
#define EISDIR 21
#define SN_setct_PCertResTBS "setct-PCertResTBS"
#define __cpp_lib_incomplete_container_elements 201505
#define CPU_ZERO(cpusetp) __CPU_ZERO_S (sizeof (cpu_set_t), cpusetp)
#define NID_id_mod_qualified_cert_93 279
#define OBJ_setct_CapRevReqTBEX OBJ_set_ctype,66L
#define SSL_CTRL_SET_NOT_RESUMABLE_SESS_CB 79
#define FB_VA_GLUE(a,b) a b
#define SSL_R_TLSV1_UNRECOGNIZED_NAME 1112
#define FOLLY_HAVE_SWAPCONTEXT 1
#define LN_rc4_hmac_md5 "rc4-hmac-md5"
#define X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED 103
#define _GLIBCXX_USE_DEPRECATED 1
#define TLS1_RFC_DHE_RSA_WITH_AES_128_CCM "TLS_DHE_RSA_WITH_AES_128_CCM"
#define BIO_C_SET_SSL 109
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_179(s,p,o,m) 0
#define EVP_F_EVP_PBE_ALG_ADD 115
#define NL_ARGMAX _POSIX_ARG_MAX
#define CPU_XOR_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, ^)
#define OBJ_id_scrypt 1L,3L,6L,1L,4L,1L,11591L,4L,11L
#define ASN1_R_INVALID_BIT_STRING_BITS_LEFT 220
#define TLS1_CK_PSK_WITH_NULL_SHA256 0x030000B0
#define SN_X9_62_c2pnb176v1 "c2pnb176v1"
#define TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA 0x0300C012
#define NID_id_alg_PWRI_KEK 893
#define BLKFRAGET _IO(0x12,101)
#define AF_KCM PF_KCM
#define BN_F_BN_GENCB_NEW 143
#define IPPROTO_TP IPPROTO_TP
#define BOOST_CONFIG_WORKAROUND_HPP 
#define X509_R_CRL_ALREADY_DELTA 127
#define BOOST_PP_INTERCEPT_101 
#define __AVX512VBMI2INTRIN_H_INCLUDED 
#define SSL_R_EXTENSION_NOT_RECEIVED 279
#define NID_pilotDSA 456
#define FOR_EACH(i,c) if (bool _FE_ANON(s1_) = false) { } else for (auto&& _FE_ANON(s2_) = (c); !_FE_ANON(s1_); _FE_ANON(s1_) = true) for (auto i = _FE_ANON(s2_).begin(); i != _FE_ANON(s2_).end(); ++i)
#define SN_ecdsa_with_Recommended "ecdsa-with-Recommended"
#define BOOST_PP_FOR_131_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(132, s) BOOST_PP_IIF(c, BOOST_PP_FOR_132, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(132, s), p, o, m)
#define NID_localKeyID 157
#define __DEC128_MIN__ 1E-6143DL
#define EVP_SealUpdate(a,b,c,d,e) EVP_EncryptUpdate(a,b,c,d,e)
#define DH_CHECK_P_NOT_STRONG_PRIME DH_CHECK_P_NOT_SAFE_PRIME
#define TLSEXT_TYPE_srp 12
#define AF_KEY PF_KEY
#define EVP_PKEY_CTRL_DIGESTINIT 7
#define BOOST_PP_SEQ_FOLD_LEFT_I_176(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_177, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(177, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_INTERCEPT_104 
#define LN_kisa "kisa"
#define BOOST_MPL_AUX_ARG_TYPEDEF_HPP_INCLUDED 
#define BN_R_ARG2_LT_ARG3 100
#define BOOST_PP_WHILE_65_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_66, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(66, s))
#define BOOST_PP_INTERCEPT_105 
#define EVENT__HAVE_SETRLIMIT 1
#define EVENT__HAVE_SYS_SOCKET_H 1
#define OBJ_oscca OBJ_ISO_CN,10197L
#define NID_pilotAttributeType 438
#define SN_id_tc26_hmac_gost_3411_2012_256 "id-tc26-hmac-gost-3411-2012-256"
#define UINT_LEAST64_WIDTH 64
#define SSL_CTRL_GET_TMP_KEY 133
#define _mm_mask_sub_round_sd(W,U,A,B,C) (__m128d)__builtin_ia32_subsd_mask_round(A, B, W, U, C)
#define BOOST_PP_BOOL_192 1
#define SSL_F_TLS1_ENC 401
#define OBJ_bsearch(type1,key,type2,base,num,cmp) ((type2 *)OBJ_bsearch_(CHECKED_PTR_OF(type1,key),CHECKED_PTR_OF(type2,base), num,sizeof(type2), ((void)CHECKED_PTR_OF(type1,cmp ##_type_1), (void)CHECKED_PTR_OF(type2,cmp ##_type_2), cmp ##_BSEARCH_CMP_FN)))
#define OBJ_nistAlgorithms OBJ_csor,4L
#define _mm_mask_sub_round_ss(W,U,A,B,C) (__m128)__builtin_ia32_subss_mask_round(A, B, W, U, C)
#define BOOST_PP_INTERCEPT_107 
#define ILL_ILLADR ILL_ILLADR
#define PEM_R_BAD_IV_CHARS 103
#define SSL_F_OSSL_STATEM_CLIENT_PROCESS_MESSAGE 594
#define GOOGLE_LOG_WARNING(counter) google::LogMessage(__FILE__, __LINE__, google::GLOG_WARNING, counter, &google::LogMessage::SendToLog)
#define LN_sha512 "sha512"
#define si_addr _sifields._sigfault.si_addr
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100010 (1)(0)(0)(0)(1)(0),
#define EC_F_EC_POINT_BN2POINT 280
#define SSL_clear_mode(ssl,op) SSL_ctrl((ssl),SSL_CTRL_CLEAR_MODE,(op),NULL)
#define LN_id_qt_cps "Policy Qualifier CPS"
#define SSL_TXT_AES128 "AES128"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100011 (1)(0)(0)(0)(1)(1),
#define MPW_CPLUS_WORKAROUND_GUARD 1
#define NID_id_mod_cmp2000 284
#define BOOST_PROGRAM_OPTIONS_DYN_LINK 1
#define __NO_INLINE__ 1
#define BOOST_PP_SEQ_ELEM_99(_) BOOST_PP_SEQ_ELEM_98
#define _mm_cvtt_roundsd_si32(A,B) ((int)__builtin_ia32_vcvttsd2si32(A, B))
#define ASN1_R_INVALID_UTF8STRING 134
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_90(op,st,ss,sz) 0
#define BOOST_PP_BOOL_198 1
#define _m_pinsrw(A,D,N) _mm_insert_pi16(A, D, N)
#define ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE 164
#define BOOST_PP_BOOL_199 1
#define SN_sect113r1 "sect113r1"
#define SN_sect113r2 "sect113r2"
#define SN_basic_constraints "basicConstraints"
#define LONG_LONG_MAX __LONG_LONG_MAX__
#define OBJ_id_GostR3410_2001_ParamSet_cc OBJ_cryptocom,1L,8L,1L
#define BOOST_PP_INC_243 244
#define __cpp_lib_math_constants 201907L
#define NID_setct_CredRevResData 555
#define SN_setext_track2 "setext-track2"
#define X509_R_PUBLIC_KEY_ENCODE_ERROR 126
#define LN_supportedAlgorithms "supportedAlgorithms"
#define DSA_F_DSA_NEW_METHOD 103
#define EVP_F_CHACHA20_POLY1305_CTRL 182
#define BIO_C_SET_SOCKS 135
#define DH_F_DH_CHECK_EX 121
#define TLS1_RFC_DHE_PSK_WITH_AES_256_CCM_8 "TLS_PSK_DHE_WITH_AES_256_CCM_8"
#define DH_R_CHECK_PUBKEY_INVALID 122
#define _GLIBCXX_HAVE_COMPLEX_H 1
#define INT_LEAST8_MIN (-128)
#define BLKDISCARD _IO(0x12,119)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_60(s,p,o,m) 0
#define SN_dsaWithSHA "DSA-SHA"
#define EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES 168
#define APACHE_THRIFT_ACCESSOR_t_typedef 
#define OBJ_associatedName OBJ_pilotAttributeType,38L
#define BIO_FLAGS_WRITE 0x02
#define BOOST_PP_DEC_214 213
#define SNAN (__builtin_nans (""))
#define GEN_URI 6
#define BOOST_PP_DEC_215 214
#define BOOST_PP_INC_18 19
#define OBJ_aRecord OBJ_pilotAttributeType,26L
#define _mm_cvtt_roundsd_si64(A,B) ((long long)__builtin_ia32_vcvttsd2si64(A, B))
#define LN_ipsecEndSystem "IPSec End System"
#define BOOST_PP_DEC_216 215
#define __NCPUBITS (8 * sizeof (__cpu_mask))
#define RSA_R_INVALID_PADDING_MODE 141
#define SO_KEEPALIVE 9
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_65(s,p,o,m) 0
#define PEM_R_MISSING_DEK_IV 129
#define _GLIBCXX_USE_DECIMAL_FLOAT 1
#define __cpp_lib_shared_ptr_arrays 201611L
#define BOOST_PP_FOR_91_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(92, s) BOOST_PP_IIF(c, BOOST_PP_FOR_92, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(92, s), p, o, m)
#define _mm512_mask_cmp_epu16_mask(M,X,Y,P) ((__mmask32) __builtin_ia32_ucmpw512_mask ((__v32hi)(__m512i)(X), (__v32hi)(__m512i)(Y), (int)(P), (__mmask32)(M)))
#define X509V3_F_X509V3_PARSE_LIST 109
#define RSA_FLAG_CHECKED 0x0800
#define SSL_KEY_UPDATE_REQUESTED 1
#define TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "ECDHE-PSK-CAMELLIA128-SHA256"
#define X509_V_FLAG_POLICY_CHECK 0x80
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_94(op,st,ss,sz) 0
#define TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA 0x03000085
#define TLS1_CK_RSA_WITH_NULL_SHA256 0x0300003B
#define X509_STORE_CTX_set_chain X509_STORE_CTX_set0_untrusted
#define BOOST_INTRUSIVE_DETAIL_ITERATOR_HPP 
#define SSL_R_APPLICATION_DATA_AFTER_CLOSE_NOTIFY 291
#define BN_TBIT ((BN_ULONG)1 << (BN_BITS2 - 1))
#define EVUTIL_EAI_FAMILY EAI_FAMILY
#define __SIZEOF_LONG_LONG__ 8
#define NID_setext_pinSecure 603
#define X509V3_R_INVALID_MULTIPLE_RDNS 161
#define SSL3_TXT_EDH_DSS_DES_40_CBC_SHA "EXP-EDH-DSS-DES-CBC-SHA"
#define NID_brainpoolP512t1 934
#define MS_VERBOSE 32768
#define BOOST_PP_BOOL_44 1
#define FSCRYPT_MAX_KEY_SIZE 64
#define SSL_AD_INAPPROPRIATE_FALLBACK TLS1_AD_INAPPROPRIATE_FALLBACK
#define __USE_XOPEN2K8 1
#define _SC_NL_MSGMAX _SC_NL_MSGMAX
#define SSL_F_SSL_USE_PSK_IDENTITY_HINT 273
#define _mm_cvt_roundsd_si32(A,B) ((int)__builtin_ia32_vcvtsd2si32(A, B))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_96(op,st,ss,sz) 0
#define BN_F_BN_MOD_INVERSE_NO_BRANCH 139
#define ERR_R_EC_LIB ERR_LIB_EC
#define NID_id_HMACGostR3411_94 810
#define BOOST_PP_BOOL_48 1
#define CERT_PKEY_CERT_TYPE 0x400
#define OBJ_janetMailbox OBJ_pilotAttributeType,46L
#define SSL_F_TLS_PROCESS_NEXT_PROTO 383
#define OBJ_setct_CapRevReqTBSX OBJ_set_ctype,30L
#define LINE_MAX _POSIX2_LINE_MAX
#define BOOST_PP_SEQ_SIZE_42(_) BOOST_PP_SEQ_SIZE_43
#define __STRING(x) #x
#define TLS1_TXT_RSA_PSK_WITH_RC4_128_SHA "RSA-PSK-RC4-SHA"
#define EVP_PKEY_DH_KDF_NONE 1
#define LN_RSA_SHA3_224 "RSA-SHA3-224"
#define GEN_RID 8
#define SIGVTALRM 26
#define TLSEXT_signature_rsa 1
#define APACHE_THRIFT_ACCESSOR_protocol 
#define BOOST_PP_SEQ_SIZE_43(_) BOOST_PP_SEQ_SIZE_44
#define BOOST_MPL_BEGIN_END_FWD_HPP_INCLUDED 
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define SN_ecdsa_with_Specified "ecdsa-with-Specified"
#define NID_bf_cbc 91
#define SN_id_alg_dh_sig_hmac_sha1 "id-alg-dh-sig-hmac-sha1"
#define BOOST_PP_REPEAT_1_186(m,d) BOOST_PP_REPEAT_1_185(m, d) m(2, 185, d)
#define RLIMIT_CPU RLIMIT_CPU
#define ASN1_dup_of(type,i2d,d2i,x) ((type*)ASN1_dup(CHECKED_I2D_OF(type, i2d), CHECKED_D2I_OF(type, d2i), CHECKED_PTR_OF(type, x)))
#define BOOST_PP_REPEAT_2_245(m,d) BOOST_PP_REPEAT_2_244(m, d) m(3, 244, d)
#define __attribute_used__ __attribute__ ((__used__))
#define LN_hmacWithSHA512 "hmacWithSHA512"
#define RAND_R_UNSUPPORTED_DRBG_TYPE 120
#define LONG_LONG_MIN (-LONG_LONG_MAX - 1LL)
#define HEADER_SSL2_H 
#define RAND_R_ERROR_RETRIEVING_ENTROPY 110
#define X509_V_ERR_CERT_SIGNATURE_FAILURE 7
#define NID_aes_256_ocb 960
#define SI_ASYNCIO SI_ASYNCIO
#define SSL_F_SSL3_CTRL 213
#define _mm_cvt_roundsd_si64(A,B) ((long long)__builtin_ia32_vcvtsd2si64(A, B))
#define BOOST_PP_SEQ_SIZE_46(_) BOOST_PP_SEQ_SIZE_47
#define LN_any_policy "X509v3 Any Policy"
#define SSL_CTRL_CHAIN 88
#define BOOST_PP_SEQ_FOLD_LEFT_I_92(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_93, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(93, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define SN_id_GostR3410_94_cc "gost94cc"
#define _SC_TRACE _SC_TRACE
#define LN_pkcs7_signedAndEnveloped "pkcs7-signedAndEnvelopedData"
#define OBJ_netscape_ssl_server_name OBJ_netscape_cert_extension,12L
#define RSA_PKCS1_OAEP_PADDING 4
#define SN_setAttr_SecDevSig "setAttr-SecDevSig"
#define FOLLY_USE_SYMBOLIZER 1
#define LN_RSA_SHA3_256 "RSA-SHA3-256"
#define __attribute_nonstring__ __attribute__ ((__nonstring__))
#define SSL3_RT_MAX_COMPRESSED_OVERHEAD 1024
#define EXFLAG_SS 0x2000
#define BOOST_PP_LIST_FOLD_RIGHT_197(o,s,l) BOOST_PP_LIST_FOLD_LEFT_197(o, s, BOOST_PP_LIST_REVERSE_D(197, l))
#define X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE 4
#define IN6_IS_ADDR_V4COMPAT(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && ntohl (__a->__in6_u.__u6_addr32[3]) > 1; }))
#define BOOST_PP_FOR_198_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(199, s) BOOST_PP_IIF(c, BOOST_PP_FOR_199, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(199, s), p, o, m)
#define EVP_R_MEMORY_LIMIT_EXCEEDED 172
#define __BYTE_ORDER __LITTLE_ENDIAN
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE
#define IP_PMTUDISC_DO 2
#define SIOCGPGRP 0x8904
#define FD_CLOEXEC 1
#define SSL_CONF_TYPE_FILE 0x2
#define OBJ_id_smime_aa_ets_signerAttr OBJ_id_smime_aa,18L
#define PEM_F_PEM_DEF_CALLBACK 100
#define SSL_CTX_set1_groups_list(ctx,s) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_GROUPS_LIST,0,(char *)(s))
#define EVP_F_EVP_CIPHER_CTX_CTRL 124
#define _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
#define ERR_LIB_BIO 32
#define LN_id_Gost28147_89_cc "GOST 28147-89 Cryptocom ParamSet"
#define BOOST_PP_TUPLE_EAT_1(e0) 
#define BOOST_PP_TUPLE_EAT_2(e0,e1) 
#define BOOST_PP_TUPLE_EAT_3(e0,e1,e2) 
#define BOOST_PP_TUPLE_EAT_4(e0,e1,e2,e3) 
#define BOOST_PP_TUPLE_EAT_5(e0,e1,e2,e3,e4) 
#define BOOST_PP_TUPLE_EAT_6(e0,e1,e2,e3,e4,e5) 
#define BOOST_PP_TUPLE_EAT_7(e0,e1,e2,e3,e4,e5,e6) 
#define BOOST_PP_TUPLE_EAT_8(e0,e1,e2,e3,e4,e5,e6,e7) 
#define BOOST_PP_TUPLE_EAT_9(e0,e1,e2,e3,e4,e5,e6,e7,e8) 
#define SN_localityName "L"
#define BOOST_PP_SEQ_FOLD_LEFT_I_96(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_97, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(97, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define EC_F_PKEY_EC_DERIVE 217
#define OBJ_id_aca_chargingIdentity OBJ_id_aca,3L
#define OBJ_userCertificate OBJ_X509,36L
#define SN_id_smime_alg_RC2wrap "id-smime-alg-RC2wrap"
#define ASN1_F_X509_NAME_ENCODE 203
#define SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE 307
#define IPV6_TRANSPARENT 75
#define SN_ct_precert_signer "ct_precert_signer"
#define NID_gost89_cnt_12 975
#define _SC_SHRT_MAX _SC_SHRT_MAX
#define TCP_COOKIE_PAIR_SIZE (2*TCP_COOKIE_MAX)
#define EVP_PKEY_CTRL_CMS_ENCRYPT 9
#define BOOST_PP_SEQ_FOLD_LEFT_I_114(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_115, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(115, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define _GLIBCXX11_USE_C99_COMPLEX 1
#define FITHAW _IOWR('X', 120, int)
#define LC_ALL_MASK (LC_CTYPE_MASK | LC_NUMERIC_MASK | LC_TIME_MASK | LC_COLLATE_MASK | LC_MONETARY_MASK | LC_MESSAGES_MASK | LC_PAPER_MASK | LC_NAME_MASK | LC_ADDRESS_MASK | LC_TELEPHONE_MASK | LC_MEASUREMENT_MASK | LC_IDENTIFICATION_MASK )
#define NID_ecdsa_with_SHA3_224 1112
#define FOLLY_ASSUME_FBVECTOR_COMPATIBLE_1(...) namespace folly { template <class T1> FOLLY_ASSUME_RELOCATABLE(__VA_ARGS__<T1>); }
#define FOLLY_ASSUME_FBVECTOR_COMPATIBLE_3(...) namespace folly { template <class T1, class T2, class T3> FOLLY_ASSUME_RELOCATABLE(__VA_ARGS__<T1, T2, T3>); }
#define FOLLY_ASSUME_FBVECTOR_COMPATIBLE_4(...) namespace folly { template <class T1, class T2, class T3, class T4> FOLLY_ASSUME_RELOCATABLE(__VA_ARGS__<T1, T2, T3, T4>); }
#define i2d_DSAparams_fp(fp,x) ASN1_i2d_fp(i2d_DSAparams,(fp), (unsigned char *)(x))
#define _SC_THREAD_ATTR_STACKSIZE _SC_THREAD_ATTR_STACKSIZE
#define LN_id_pkix_OCSP_archiveCutoff "OCSP Archive Cutoff"
#define OBJ_pkcs5 OBJ_pkcs,5L
#define OBJ_pkcs7 OBJ_pkcs,7L
#define OBJ_pkcs9 OBJ_pkcs,9L
#define TRY_AGAIN 2
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
#define SSL_TICKET_SUCCESS_RENEW 6
#define OBJ_camellia_192_ecb OBJ_camellia,21L
#define BOOST_PP_FOR_23_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(24, s) BOOST_PP_IIF(c, BOOST_PP_FOR_24, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(24, s), p, o, m)
#define ASN1_R_ILLEGAL_TIME_VALUE 184
#define OBJ_id_smime_aa_ets_revocationValues OBJ_id_smime_aa,24L
#define _mm256_mask_shuffle_f64x2(W,U,X,Y,C) ((__m256d) __builtin_ia32_shuf_f64x2_256_mask ((__v4df)(__m256d)(X), (__v4df)(__m256d)(Y), (int)(C), (__v4df)(__m256d)(W), (__mmask8)(U)))
#define _mm_shrdi_epi64(A,B,C) ((__m128i) __builtin_ia32_vpshrd_v2di ((__v2di)(__m128i)(A), (__v2di)(__m128i)(B),(int)(C)))
#define SO_INCOMING_CPU 49
#define SYS_F_FFLUSH 18
#define BOOST_PP_REPEAT_2_211(m,d) BOOST_PP_REPEAT_2_210(m, d) m(3, 210, d)
#define BIO_F_BIO_NREAD0 124
#define __CPUMASK(cpu) ((__cpu_mask) 1 << ((cpu) % __NCPUBITS))
#define OBJ_setct_CertReqData OBJ_set_ctype,45L
#define SSL_F_TLS_GET_MESSAGE_BODY 351
#define SN_aes_256_ofb128 "AES-256-OFB"
#define NID_id_regCtrl_protocolEncrKey 320
#define OBJ_ad_OCSP OBJ_id_ad,1L
#define RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R 168
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_100101 (1)(0)(0)(1)(0)(1),
#define LN_pkcs9_challengePassword "challengePassword"
#define TLS1_FLAGS_TLS_PADDING_BUG 0x0
#define SSL_OP_TLS_BLOCK_PADDING_BUG 0x0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001001 (1)(1)(0)(0)(1)(0)(0)(1),
#define NID_ecdsa_with_SHA3_256 1113
#define NID_userId 458
#define BIO_get_mem_data(b,pp) BIO_ctrl(b,BIO_CTRL_INFO,0,(char *)(pp))
#define FOLLY_ARM 0
#define SN_setAttr_T2cleartxt "setAttr-T2cleartxt"
#define LN_aes_256_cbc_hmac_sha256 "aes-256-cbc-hmac-sha256"
#define _mm512_maskz_range_round_pd(U,A,B,C,R) ((__m512d) __builtin_ia32_rangepd512_mask ((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(C), (__v8df)_mm512_setzero_pd (), (__mmask8)(U), (R)))
#define BOOST_PP_INC_250 251
#define TLS1_CK_RSA_WITH_AES_128_CCM 0x0300C09C
#define FP_ILOGBNAN (-2147483647 - 1)
#define BOOST_PP_REPEAT_2_214(m,d) BOOST_PP_REPEAT_2_213(m, d) m(3, 213, d)
#define _mm512_maskz_range_round_ps(U,A,B,C,R) ((__m512) __builtin_ia32_rangeps512_mask ((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(C), (__v16sf)_mm512_setzero_ps (), (__mmask16)(U), (R)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001010 (1)(1)(0)(0)(1)(0)(1)(0),
#define _mm512_maskz_srli_epi32(U,X,C) ((__m512i) __builtin_ia32_psrldi512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)_mm512_setzero_si512 (), (__mmask16)(U)))
#define X509_TRUST_UNTRUSTED 3
#define OBJ_id_it_caKeyUpdateInfo OBJ_id_it,5L
#define OBJ_pilotObject OBJ_pilotObjectClass,3L
#define M_PI_2l 1.570796326794896619231321691639751442L
#define _SC_MESSAGE_PASSING _SC_MESSAGE_PASSING
#define FS_APPEND_FL 0x00000020
#define LN_dsa_with_SHA3_384 "dsa_with_SHA3-384"
#define _mm512_mask_shuffle_epi32(W,U,X,C) ((__m512i) __builtin_ia32_pshufd512_mask ((__v16si)(__m512i)(X), (int)(C), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define __INT_FAST32_TYPE__ long int
#define SN_netscape_cert_sequence "nsCertSequence"
#define SN_id_Gost28147_89_None_KeyMeshing "id-Gost28147-89-None-KeyMeshing"
#define BOOST_PP_INC_253 254
#define _GLIBCXX_NOEXCEPT_QUAL noexcept (_NE)
#define SSL_F_TLS_PARSE_CTOS_SERVER_NAME 573
#define SSL_set_tlsext_status_type(ssl,type) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE,type,NULL)
#define AF_ROUTE PF_ROUTE
#define BOOST_PP_SEQ_SIZE_54(_) BOOST_PP_SEQ_SIZE_55
#define RAND_F_DRBG_BYTES 101
#define TLS1_RFC_PSK_WITH_AES_128_CBC_SHA "TLS_PSK_WITH_AES_128_CBC_SHA"
#define ASN1_F_ASN1_TIME_ADJ 217
#define EVP_PKEY_CTRL_PKCS7_SIGN 5
#define BOOST_PP_ITERATION_FINISH_1_DIGIT_3 0
#define _SC_C_LANG_SUPPORT _SC_C_LANG_SUPPORT
#define EVP_PKEY_SM2 NID_sm2
#define TLS1_RFC_DHE_DSS_WITH_AES_256_GCM_SHA384 "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384"
#define SIG_DFL ((__sighandler_t) 0)
#define RAND_R_DRBG_ALREADY_INITIALIZED 129
#define BOOST_PP_LIST_IS_CONS(list) BOOST_PP_IS_BINARY(list)
#define ASN1_F_I2A_ASN1_OBJECT 126
#define BIO_F_BIO_NEW_DGRAM_SCTP 145
#define _GLIBCXX_USE_C99_MATH_TR1 1
#define _GLIBCXX_HAVE_POLL_H 1
#define _mm_extract_epi8(X,N) ((int) (unsigned char) __builtin_ia32_vec_ext_v16qi ((__v16qi)(__m128i)(X), (int)(N)))
#define SIG_ATOMIC_MIN (-2147483647-1)
#define NID_id_smime_aa_signatureType 239
#define X509_V_ERR_OUT_OF_MEM 17
#define BOOST_MPL_PUSH_FRONT_FWD_HPP_INCLUDED 
#define BOOST_INTRUSIVE_LIST_HOOK_HPP 
#define X509_V_ERR_NO_VALID_SCTS 71
#define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 1
#define XN_FLAG_FN_LN (1 << 21)
#define SSL_cache_hit(s) SSL_session_reused(s)
#define __glibcxx_requires_irreflexive(_First,_Last) 
#define X509_F_X509_LOAD_CRL_FILE 112
#define PEM_F_DO_PK8PKEY 126
#define _COMPILER_VERSION_WORKAROUND_GUARD 1
#define BOOST_INTRUSIVE_OBTAIN_TYPE_WITH_EVAL_DEFAULT(INSTANTIATION_NS_PREFIX,T,TNAME,TIMPL) typename INSTANTIATION_NS_PREFIX boost_intrusive_eval_default_type_ ## TNAME< T, TIMPL >::type
#define BOOST_PP_WHILE_183_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_184, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(184, s))
#define LN_des_cdmf "des-cdmf"
#define BOOST_PP_DEC_227 226
#define _SC_SHRT_MIN _SC_SHRT_MIN
#define TLS1_CK_DHE_DSS_WITH_ARIA_128_GCM_SHA256 0x0300C056
#define _PSTL_VERSION_MAJOR (_PSTL_VERSION / 1000)
#define evutil_gettimeofday(tv,tz) gettimeofday((tv), (tz))
#define NID_kx_any 1063
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_0000100 (0)(0)(0)(0)(1)(0)(0),
#define OBJ_id_cmc_confirmCertAcceptance OBJ_id_cmc,24L
#define FSCRYPT_POLICY_FLAG_IV_INO_LBLK_32 0x10
#define _SC_2_C_VERSION _SC_2_C_VERSION
#define OBJ_id_regCtrl_oldCertID OBJ_id_regCtrl,5L
#define SSL_F_DTLS_GET_REASSEMBLED_MESSAGE 370
#define OBJ_netscape_renewal_url OBJ_netscape_cert_extension,7L
#define NID_setct_HODInput 526
#define _MOVDIRINTRIN_H_INCLUDED 
#define LN_crl_number "X509v3 CRL Number"
#define _SIZE_T_DECLARED 
#define IMPLEMENT_PEM_write_fp_const(name,type,str,asn1) int PEM_write_ ##name(FILE *fp, const type *x) { return PEM_ASN1_write((i2d_of_void *)i2d_ ##asn1,str,fp,(void *)x,NULL,NULL,0,NULL,NULL); }
#define _POSIX_THREADS 200809L
#define BOOST_HAS_TRIVIAL_COPY(T) ((__has_trivial_copy(T) BOOST_INTEL_TT_OPTS) && !is_reference<T>::value)
#define SSL_F_SSL_CERT_NEW 162
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011001 (1)(0)(0)(1)(1)(0)(0)(1),
#define M_PI_4f32x __f32x (0.785398163397448309615660845819875721)
#define BOOST_MOVE_IS_EMPTY(T) __is_empty(T)
#define INT_FAST64_WIDTH 64
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_42(op,st,ss,sz) 0
#define EC_F_EC_GROUP_NEW 108
#define OBJ_id_tc26_agreement OBJ_id_tc26_algorithms,6L
#define OBJ_id_cmc_identityProof OBJ_id_cmc,3L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_141(op,st,ss,sz) 0
#define SSL_R_NO_CIPHER_MATCH 185
#define ASN1_R_EXPECTING_AN_OBJECT 116
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_142(op,st,ss,sz) 0
#define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
#define SN_kx_dhe_psk "KxDHE-PSK"
#define SSL_F_TLS_POST_PROCESS_CLIENT_KEY_EXCHANGE 384
#define F_SETLK64 6
#define LC_NUMERIC_MASK (1 << __LC_NUMERIC)
#define __BIG_ENDIAN 4321
#define ASN1_F_D2I_PUBLICKEY 155
#define BOOST_PP_DEC_60 59
#define BOOST_PP_WHILE_52_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_53, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(53, s))
#define X509V3_R_MISSING_VALUE 124
#define BOOST_INTRUSIVE_SLIST_ITERATOR_HPP 
#define BOOST_PP_WHILE_239_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_240, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(240, s))
#define FSCRYPT_POLICY_FLAG_IV_INO_LBLK_64 0x08
#define BOOST_PP_FOR_239_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(240, s) BOOST_PP_IIF(c, BOOST_PP_FOR_240, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(240, s), p, o, m)
#define ERR_LIB_X509 11
#define _mm_i64gather_epi32(BASE,INDEX,SCALE) (__m128i) __builtin_ia32_gatherdiv4si ((__v4si) _mm_setzero_si128 (), (int const *) (BASE), (__v2di)(__m128i) (INDEX), (__v4si)_mm_set1_epi32 (-1), (int) (SCALE))
#define OBJ_id_smime_aa_signatureType OBJ_id_smime_aa,28L
#define _SIDD_NEGATIVE_POLARITY 0x10
#define HEADER_SSL_H 
#define I2D_OF(type) int (*)(type *,unsigned char **)
#define SSL_R_UNSUPPORTED_STATUS_TYPE 329
#define DTLS_CTRL_SET_LINK_MTU 120
#define BOOST_IS_CLASS(T) __is_class(T)
#define X509_FILETYPE_PEM 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110000 (1)(1)(1)(1)(0)(0)(0)(0),
#define BOOST_PP_WHILE_189_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_190, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(190, s))
#define BOOST_PP_ENUM_PARAMS(count,param) BOOST_PP_REPEAT(count, BOOST_PP_ENUM_PARAMS_M, param)
#define OBJ_pbe_WithSHA1And40BitRC4 OBJ_pkcs12_pbeids,2L
#define __ID_T_TYPE __U32_TYPE
#define BOOST_PP_WHILE_171_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_172, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(172, s))
#define BOOST_TT_IS_CONSTRUCTIBLE_HPP_INCLUDED 
#define OPENSSL_INIT_NO_ADD_ALL_DIGESTS 0x00000020L
#define BIO_CTRL_DGRAM_GET_MTU 41
#define OBJ_X9_62_c2pnb368w1 OBJ_X9_62_c_TwoCurve,19L
#define OBJ_bsearch_ex(type1,key,type2,base,num,cmp,flags) ((type2 *)OBJ_bsearch_ex_(CHECKED_PTR_OF(type1,key),CHECKED_PTR_OF(type2,base), num,sizeof(type2), ((void)CHECKED_PTR_OF(type1,cmp ##_type_1), (void)type_2=CHECKED_PTR_OF(type2,cmp ##_type_2), cmp ##_BSEARCH_CMP_FN)),flags)
#define BOOST_MPL_NEGATE_HPP_INCLUDED 
#define FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF 0x00000001
#define SN_sm3 "SM3"
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11101000 (1)(1)(1)(0)(1)(0)(0)(0),
#define _PSTL_PRAGMA_LOCATION " [Parallel STL message]: "
#define B_ASN1_GENERALIZEDTIME 0x8000
#define SOL_RAW 255
#define XN_FLAG_FN_SN 0
#define _GLIBCXX_HAVE_SYS_IPC_H 1
#define BOOST_PP_SEQ_FOLD_LEFT_I_40(op,st,ss,sz) BOOST_PP_IF(BOOST_PP_DEC(sz), BOOST_PP_SEQ_FOLD_LEFT_I_41, BOOST_PP_SEQ_FOLD_LEFT_F)(op, op(41, st, BOOST_PP_SEQ_HEAD(ss)), BOOST_PP_SEQ_TAIL(ss), BOOST_PP_DEC(sz))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_187(s,p,o,m) 0
#define SSL3_CK_EDH_RSA_DES_40_CBC_SHA SSL3_CK_DHE_RSA_DES_40_CBC_SHA
#define LN_ms_ctl_sign "Microsoft Trust List Signing"
#define IORING_FEAT_CUR_PERSONALITY (1U << 4)
#define _LOCALE_FACETS_NONIO_TCC 1
#define _BITS_TIME64_H 1
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_8 8
#define CT_F_CTLOG_NEW 117
#define SN_rsaOAEPEncryptionSET "rsaOAEPEncryptionSET"
#define _mm256_maskz_getmant_pd(U,X,B,C) ((__m256d) __builtin_ia32_getmantpd256_mask ((__v4df)(__m256d) (X), (int)(((C)<<2) | (B)), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)(U)))
#define X509V3_EXT_UNKNOWN_MASK (0xfL << 16)
#define __glibcxx_requires_partitioned_lower_pred(_First,_Last,_Value,_Pred) 
#define SN_ecdsa_with_SHA1 "ecdsa-with-SHA1"
#define ASN1_R_ILLEGAL_TAGGED_ANY 127
#define NID_serialNumber 105
#define OBJ_qcStatements OBJ_id_pe,3L
#define OBJ_ecdsa_with_Recommended OBJ_X9_62_id_ecSigType,2L
#define BIO_R_NO_PORT_DEFINED 113
#define BOOST_MPL_PROTECT_HPP_INCLUDED 
#define CRYPTO_R_ILLEGAL_HEX_DIGIT 102
#define SN_setAttr_Cert "setAttr-Cert"
#define SN_des_ede3_cfb1 "DES-EDE3-CFB1"
#define SN_mdc2WithRSA "RSA-MDC2"
#define SSL_R_SSL3_EXT_INVALID_MAX_FRAGMENT_LENGTH 232
#define BOOST_INTRUSIVE_DOCIGN(T1) T1
#define SSL_F_DERIVE_SECRET_KEY_AND_IV 514
#define BOOST_PP_REPEAT_1_42(m,d) BOOST_PP_REPEAT_1_41(m, d) m(2, 41, d)
#define TLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA 0x0300C01B
#define OBJ_searchGuide OBJ_X509,14L
#define SOL_RDS 276
#define HEADER_BNERR_H 
#define EC_F_I2D_ECPKPARAMETERS 191
#define SSL_F_TLS_CONSTRUCT_KEY_UPDATE 517
#define SRTP_NULL_SHA1_32 0x0006
#define SN_setAttr_IssCap_T2 "setAttr-IssCap-T2"
#define SSL_CTX_add0_chain_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN_CERT,0,(char *)(x509))
#define MSG_TRUNC MSG_TRUNC
#define JEMALLOC_EXPORT JEMALLOC_ATTR(visibility("default"))
#define ASN1_R_FIELD_MISSING 121
#define __f32(x) x ##f
#define RAND_R_FWRITE_ERROR 123
#define LN_auth_dss "auth-dss"
#define LN_documentSeries "documentSeries"
#define OBJ_aes_192_gcm OBJ_aes,26L
#define SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet "id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet"
#define FOLLY_INVOKE_MEMBER(membername) [](auto&& __folly_param_o, auto&&... __folly_param_a) FOLLY_CXX17_CONSTEXPR FOLLY_DETAIL_FORWARD_BODY( FOLLY_DETAIL_FORWARD_REF(__folly_param_o) .membername(FOLLY_DETAIL_FORWARD_REF(__folly_param_a)...))
#define PEM_F_CHECK_BITLEN_DSA 130
#define X509_V_ERR_INVALID_CALL 69
#define TLS1_CK_PSK_WITH_RC4_128_SHA 0x0300008A
#define NID_pbmac1 162
#define SN_setct_BatchAdminReqData "setct-BatchAdminReqData"
#define EVBUF_FS_DISABLE_SENDFILE 0x04
#define BIO_rw_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_READ|BIO_FP_WRITE,name)
#define BIO_C_SHUTDOWN_WR 142
#define EVPerr(f,r) ERR_PUT_error(ERR_LIB_EVP,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define NID_sshServer 1026
#define DECLARE_PEM_read(name,type) DECLARE_PEM_read_bio(name, type) DECLARE_PEM_read_fp(name, type)
#define _SC_THREAD_PROCESS_SHARED _SC_THREAD_PROCESS_SHARED
#define EVENT__VERSION "2.1.12-stable"
#define __SIZEOF_PTRDIFF_T__ 8
#define LN_organizationIdentifier "organizationIdentifier"
#define SSL_AD_DECODE_ERROR TLS1_AD_DECODE_ERROR
#define SEEK_SET 0
#define RLIMIT_CORE RLIMIT_CORE
#define POLL_MSG POLL_MSG
#define _MM_FROUND_TO_ZERO 0x03
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00101111 (0)(0)(1)(0)(1)(1)(1)(1),
#define _m_pextrw(A,N) _mm_extract_pi16(A, N)
#define SSL_F_TLS_FINISH_HANDSHAKE 597
#define M_LN2f64 __f64 (0.693147180559945309417232121458176568)
#define BOOST_PP_INTERCEPT_118 
#define SSLEAY_CFLAGS OPENSSL_CFLAGS
#define ASYNC_FINISH 3
#define NID_id_smime_cti_ets_proofOfOrigin 251
#define _GLIBCXX_HAVE_COSF 1
#define _GLIBCXX_HAVE_COSL 1
#define BIO_C_GET_WRITE_BUF_SIZE 137
#define _GLIBCXX_USE_FLOAT128 1
#define SN_id_ppl_inheritAll "id-ppl-inheritAll"
#define X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION 36
#define LN_dhpublicnumber "X9.42 DH"
#define SO_TIMESTAMP SO_TIMESTAMP_OLD
#define OBJ_ED448 1L,3L,101L,113L
#define SSL_F_TLS_PROCESS_SERVER_CERTIFICATE 367
#define SSL_TXT_kECDHEPSK "kECDHEPSK"
#define _MM_ROUND_DOWN 0x2000
#define SSL_MAX_SID_CTX_LENGTH 32
#define APACHE_THRIFT_ACCESSOR_functions 
#define SRTP_NULL_SHA1_80 0x0005
#define TLS1_RFC_DHE_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256"
#define DH_F_DH_CHECK_PUB_KEY_EX 123
#define _POSIX_IPV6 200809L
#define BOOST_PP_INTERCEPT_206 
#define EC_F_EC_POINTS_MUL 290
#define _mm_rcp28_sd(A,B) __builtin_ia32_rcp28sd_round(B, A, _MM_FROUND_CUR_DIRECTION)
#define EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN 164
#define OBJ_x509ExtAdmission OBJ_identified_organization,36L,8L,3L,3L
#define sigmask(sig) ((int)(1u << ((sig) - 1)))
#define PKEY_DISABLE_WRITE 0x2
#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES 295
#define _mm256_maskz_srli_epi16(U,A,B) ((__m256i) __builtin_ia32_psrlwi256_mask ((__v16hi)(__m256i)(A), (int)(B), (__v16hi)_mm256_setzero_si256 (), (__mmask16)(U)))
#define TLS1_TXT_DHE_RSA_WITH_AES_128_SHA256 "DHE-RSA-AES128-SHA256"
#define EVENT__HAVE_EVENTFD 1
#define EAI_OVERFLOW -12
#define EVENT__HAVE_VASPRINTF 1
#define BOOST_PP_FOR_165_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(166, s) BOOST_PP_IIF(c, BOOST_PP_FOR_166, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(166, s), p, o, m)
#define NID_id_smime_aa_ets_archiveTimeStamp 238
#define BOOST_PP_SEQ_SIZE_105(_) BOOST_PP_SEQ_SIZE_106
#define BOOST_PP_DEC_230 229
#define BOOST_PP_INTERCEPT_77 
#define IP_BLOCK_SOURCE 38
#define BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE_SPEC(t,v) 
#define APACHE_THRIFT_ACCESSOR_queueTimeoutMs 
#define BOOST_MPL_AUX_HAS_TYPE_HPP_INCLUDED 
#define OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik,2L
#define NID_id_smime_aa_ets_signerLocation 228
#define VLOG_EVERY_N(verboselevel,n) LOG_IF_EVERY_N(INFO, VLOG_IS_ON(verboselevel), n)
#define SSL3_CT_DSS_FIXED_DH 4
#define SN_grasshopper_ofb "grasshopper-ofb"
#define BOOST_GCC_WORKAROUND_GUARD 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_81(s,p,o,m) 0
#define UINT_FAST32_MAX (18446744073709551615UL)
#define OPENSSL_NO_FUZZ_AFL 
#define BOOST_PP_WHILE_99_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_100, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(100, s))
#define _mm256_maskz_srli_epi32(U,A,B) ((__m256i) __builtin_ia32_psrldi256_mask ((__v8si)(__m256i)(A), (int)(B), (__v8si)_mm256_setzero_si256 (), (__mmask8)(U)))
#define OBJ_id_it_unsupportedOIDs OBJ_id_it,7L
#define TLS1_AD_USER_CANCELLED 90
#define BOOST_PREPROCESSOR_REPETITION_ENUM_TRAILING_PARAMS_HPP 
#define DTLS1_HM_BAD_FRAGMENT -2
#define _GLIBCXX_END_EXTERN_C }
#define SSL_CTRL_GET_MAX_PROTO_VERSION 131
#define BIO_F_BIO_SOCKET_NBIO 142
#define TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA384 0x0300C038
#define BOOST_PP_REPEAT_1_213(m,d) BOOST_PP_REPEAT_1_212(m, d) m(2, 212, d)
#define EFD_NONBLOCK EFD_NONBLOCK
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_86(s,p,o,m) 0
#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA "DH-RSA-CAMELLIA256-SHA"
#define _PATH_NSSWITCH_CONF "/etc/nsswitch.conf"
#define OBJ_id_Gost28147_89 OBJ_cryptopro,21L
#define NID_capwapAC 1023
#define FOLLY_DECLARE_REUSED(name,...) struct __folly_reused_type_ ##name { __VA_ARGS__ object; }; auto& name = ::folly::SingletonThreadLocal<__folly_reused_type_ ##name>::get().object; auto __folly_reused_g_ ##name = ::folly::makeGuard([&] { name.clear(); })
#define TLSEXT_TYPE_renegotiate 0xff01
#define V_ASN1_T61STRING 20
#define APACHE_THRIFT_ACCESSOR_message 
#define BOOST_PP_REPEAT_1_215(m,d) BOOST_PP_REPEAT_1_214(m, d) m(2, 214, d)
#define RSA_R_INVALID_OAEP_PARAMETERS 161
#define SSL_CTRL_SESS_CONNECT_GOOD 22
#define BIO_CLOSE 0x01
#define BOOST_PP_WHILE_212_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_213, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(213, s))
#define SSL_R_BAD_CIPHER 186
#define BOOST_PP_SEQ_SIZE_50(_) BOOST_PP_SEQ_SIZE_51
#define BOOST_MPL_O1_SIZE_FWD_HPP_INCLUDED 
#define PTHREAD_DESTRUCTOR_ITERATIONS _POSIX_THREAD_DESTRUCTOR_ITERATIONS
#define NID_id_tc26_gost_3410_2012_512_paramSetTest 997
#define BOOST_PP_BOOL_65 1
#define SN_setct_CapTokenSeq "setct-CapTokenSeq"
#define _mm256_maskz_srli_epi64(U,A,B) ((__m256i) __builtin_ia32_psrlqi256_mask ((__v4di)(__m256i)(A), (int)(B), (__v4di)_mm256_setzero_si256 (), (__mmask8)(U)))
#define __lwpins32(D2,D1,F) (__builtin_ia32_lwpins32 ((unsigned int) (D2), (unsigned int) (D1), (unsigned int) (F)))
#define SRTP_AES128_CM_SHA1_32 0x0002
#define SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE 290
#define BOOST_MPL_AUX_ITER_FOLD_IF_IMPL_HPP_INCLUDED 
#define BOOST_PP_SEQ_SIZE_52(_) BOOST_PP_SEQ_SIZE_53
#define __pconfig_generic(leaf,b,c,d,retval) __asm__ __volatile__ ("pconfig\n\t" : "=a" (retval), "=b" (b), "=c" (c), "=d" (d) : "a" (leaf), "b" (b), "c" (c), "d" (d) : "cc")
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_102(p,o,s) 0
#define _mm512_cvt_roundepu64_ps(A,B) ((__m256)__builtin_ia32_cvtuqq2ps512_mask ((__v8di)(A), (__v8sf)_mm256_setzero_ps (), -1, (B)))
#define NID_id_mod_cmp 277
#define BOOST_PP_ENUM_M_3_I(z,n,m,d) BOOST_PP_COMMA_IF(n) m(z, n, d)
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_153(op,st,ss,sz) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01000 (0)(1)(0)(0)(0),
#define NID_sha384WithRSAEncryption 669
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_154(op,st,ss,sz) 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_105(p,o,s) 0
#define _mm512_mask_prefetch_i64gather_ps(INDEX,MASK,ADDR,SCALE,HINT) __builtin_ia32_gatherpfqps ((__mmask8) (MASK), (__v8di)(__m512i) (INDEX), (void *) (ADDR), (int) (SCALE), (int) (HINT))
#define _mm512_maskz_reduce_pd(U,A,B) ((__m512d) __builtin_ia32_reducepd512_mask ((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_setzero_pd (), (__mmask8)(U)))
#define _mm256_reduce_pd(A,B) ((__m256d) __builtin_ia32_reducepd256_mask ((__v4df)(__m256d)(A), (int)(B), (__v4df)_mm256_setzero_pd(), (__mmask8)-1))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_106(p,o,s) 0
#define SSL_R_PIPELINE_FAILURE 406
#define LN_aes_128_ecb "aes-128-ecb"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_157(op,st,ss,sz) 0
#define POLL_OUT POLL_OUT
#define _mm_mask_shuffle_pd(W,U,A,B,C) ((__m128d)__builtin_ia32_shufpd128_mask ((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U)))
#define X509_V_ERR_SIGNATURE_ALGORITHM_MISMATCH 76
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001 (1)(1)(0)(0)(1),
#define OBJ_issuerSignTool OBJ_member_body,643L,100L,112L
#define NID_ED25519 1087
#define EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS 193
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_1 (1),
#define BOOST_PP_REPEAT_1_239(m,d) BOOST_PP_REPEAT_1_238(m, d) m(2, 238, d)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000110 (1)(0)(0)(0)(0)(1)(1)(0),
#define NID_document 447
#define __ICL_WORKAROUND_GUARD 1
#define NID_poly1305 1061
#define OBJ_seeAlso OBJ_X509,34L
#define OBJ_id_smime_aa_dvcs_dvc OBJ_id_smime_aa,29L
#define __cpp_lib_node_extract 201606
#define BN_F_BN_POOL_GET 147
#define OBJ_id_smime_mod OBJ_SMIME,0L
#define BOOST_PP_FOR_96(s,p,o,m) BOOST_PP_FOR_96_C(BOOST_PP_BOOL(p(97, s)), s, p, o, m)
#define _mm_mask3_fnmadd_round_sd(A,B,C,U,R) (__m128d) __builtin_ia32_vfmaddsd3_mask3 (A, -(B), C, U, R)
#define BOOST_PP_SEQ_CAT_S(s,seq) BOOST_PP_IF( BOOST_PP_DEC(BOOST_PP_SEQ_SIZE(seq)), BOOST_PP_SEQ_CAT_S_I_A, BOOST_PP_SEQ_CAT_S_I_B )(s, seq)
#define SSL_CTX_add_extra_chain_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_EXTRA_CHAIN_CERT,0,(char *)(x509))
#define EVP_PKEY_CTX_set_dh_kdf_type(ctx,kdf) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_TYPE, kdf, NULL)
#define _mm_mask3_fnmadd_round_ss(A,B,C,U,R) (__m128) __builtin_ia32_vfmaddss3_mask3 (A, -(B), C, U, R)
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000111 (1)(0)(0)(0)(0)(1)(1)(1),
#define ASN1_R_TYPE_NOT_PRIMITIVE 195
#define M_1_PIl 0.318309886183790671537767526745028724L
#define SSL3_MT_END_OF_EARLY_DATA 5
#define BOOST_NOEXCEPT_IF(Predicate) noexcept((Predicate))
#define BOOST_PP_WHILE_120_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_121, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(121, s))
#define SSL_F_TLS_PARSE_CTOS_STATUS_REQUEST 577
#define SPLICE_F_FD_IN_FIXED (1U << 31)
#define BOOST_TEMPLATED_STREAM_TEMPLATE_ALLOC(E,T,A) template < typename E , typename T , typename A >
#define __INT_FAST32_WIDTH__ 64
#define SSL_CTRL_SET_GROUPS 91
#define _mm_maskz_getexp_ss(U,A,B) (__m128)__builtin_ia32_getexpss_mask_round(A, B, (__v4sf)_mm_setzero_ps(), U, _MM_FROUND_CUR_DIRECTION)
#define SN_dsaWithSHA1_2 "DSA-SHA1-old"
#define HEADER_RANDERR_H 
#define OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet OBJ_cryptopro,31L,6L
#define __SYSCALL_WORDSIZE 64
#define SO_DEBUG 1
#define BOOST_VARIANT_CLASS_OR_TYPENAME_TO_SEQ_typename typename)(
#define SSL_F_TLS_CONSTRUCT_STOC_HELLO 376
#define _POSIX_SEM_NSEMS_MAX 256
#define ATOMIC_POINTER_LOCK_FREE __GCC_ATOMIC_POINTER_LOCK_FREE
#define SRTP_AES128_CM_SHA1_80 0x0001
#define EVP_DECODE_LENGTH(l) (((l)+3)/4*3+80)
#define NID_id_pkix_OCSP_path 374
#define __UINT_FAST16_MAX__ 0xffffffffffffffffUL
#define EC_R_POINT_COORDINATES_BLIND_FAILURE 163
#define __ELF__ 1
#define BOOST_PP_IS_EMPTY_FUNCTION2(...) __VA_OPT__(0,) 1
#define O_ASYNC 020000
#define SSL_R_WRONG_CERTIFICATE_TYPE 383
#define SSL_F_SSL3_SETUP_READ_BUFFER 156
#define LN_destinationIndicator "destinationIndicator"
#define SN_id_Gost28147_89_CryptoPro_C_ParamSet "id-Gost28147-89-CryptoPro-C-ParamSet"
#define __stub_lchmod 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_010001 (0)(1)(0)(0)(0)(1),
#define _mm_mask_shuffle_ps(W,U,A,B,C) ((__m128) __builtin_ia32_shufps128_mask ((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U)))
#define TLS1_RFC_RSA_WITH_AES_256_SHA "TLS_RSA_WITH_AES_256_CBC_SHA"
#define NID_shake128 1100
#define _mm_blend_epi16(X,Y,M) ((__m128i) __builtin_ia32_pblendw128 ((__v8hi)(__m128i)(X), (__v8hi)(__m128i)(Y), (int)(M)))
#define EVP_MD_CTRL_DIGALGID 0x1
#define _CS_XBS5_ILP32_OFF32_LDFLAGS _CS_XBS5_ILP32_OFF32_LDFLAGS
#define OBJ_caRepository OBJ_id_ad,5L
#define PKCS7_F_PKCS7_SET_TYPE 110
#define LN_des_ede_cfb64 "des-ede-cfb"
#define SN_id_GostR3411_94 "md_gost94"
#define SSL3_TXT_RSA_DES_40_CBC_SHA "EXP-DES-CBC-SHA"
#define PF_QIPCRTR 42
#define S_IROTH (S_IRGRP >> 3)
#define OBJ_certicom_arc OBJ_identified_organization,132L
#define SN_hold_instruction_code "holdInstructionCode"
#define IORING_UNREGISTER_PERSONALITY 10
#define BOOST_THROW_EXCEPTION(x) ::boost::throw_exception(x, BOOST_CURRENT_LOCATION)
#define _SC_MEMORY_PROTECTION _SC_MEMORY_PROTECTION
#define EVP_PBE_TYPE_OUTER 0x0
#define DSA_F_PKEY_DSA_KEYGEN 121
#define OBJ_countryCode3c OBJ_X509,98L
#define OBJ_ripemd160 1L,3L,36L,3L,2L,1L
#define OBJ_countryCode3n OBJ_X509,99L
#define OBJ_dnQualifier OBJ_X509,46L
#define _INTTYPES_H 1
#define FMT_STRING(s) FMT_STRING_IMPL(s, fmt::compile_string)
#define BOOST_PP_WHILE_136_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_137, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(137, s))
#define BOOST_INTRUSIVE_DETAIL_ASSERT_HPP 
#define BOOST_MPL_CFG_TYPEOF_BASED_SEQUENCES 
#define BN_F_BN_MOD_EXP_SIMPLE 126
#define _mm_mask_getexp_ss(W,U,A,B) (__m128)__builtin_ia32_getexpss_mask_round(A, B, W, U, _MM_FROUND_CUR_DIRECTION)
#define EVP_MD_FLAG_FIPS 0x0400
#define SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED 197
#define SSL_R_TLSV1_ALERT_INTERNAL_ERROR 1080
#define FS_IOC_GET_ENCRYPTION_NONCE _IOR('f', 27, __u8[16])
#define SEEK_HOLE 4
#define _SC_UIO_MAXIOV _SC_UIO_MAXIOV
#define LN_aria_192_ecb "aria-192-ecb"
#define SIG_ATOMIC_MAX (2147483647)
#define THRIFT_EVENTHANDLERBASE_H_ 1
#define PLOG_EVERY_N(severity,n) SOME_KIND_OF_PLOG_EVERY_N(severity, (n), google::LogMessage::SendToLog)
#define OBJ_netscape_cert_sequence OBJ_netscape_data_type,5L
#define BOOST_PREPROCESSOR_REPETITION_REPEAT_HPP 
#define _GLIBCXX_GCC_GTHR_H 
#define OBJ_id_tc26_gost_3410_2012_512_paramSetTest OBJ_id_tc26_gost_3410_2012_512_constants,0L
#define FOLLY_GLIBCXX_NAMESPACE_CXX11_END _GLIBCXX_END_NAMESPACE_CXX11
#define BOOST_HAS_PTHREAD_YIELD 
#define SIGSTOP 19
#define SO_NOFCS 43
#define _SC_LEVEL3_CACHE_SIZE _SC_LEVEL3_CACHE_SIZE
#define X509_FLAG_NO_SIGNAME (1L << 3)
#define X509v3_KU_UNDEF 0xffff
#define OBJ_aria_192_ecb OBJ_aria,6L
#define BOOST_PP_INTERCEPT_213 
#define TLS1_VERSION 0x0301
#define evutil_timerisset(tvp) timerisset(tvp)
#define BIO_set_ssl_mode(b,client) BIO_ctrl(b,BIO_C_SSL_MODE,client,NULL)
#define _mm512_mask_rol_epi32(W,U,A,B) ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)(__m512i)(W), (__mmask16)(U)))
#define _mm512_mask3_fmsubadd_round_pd(A,B,C,U,R) (__m512d)__builtin_ia32_vfmsubaddpd512_mask3(A, B, C, U, R)
#define TLS1_CK_PSK_WITH_ARIA_256_GCM_SHA384 0x0300C06B
#define EVUTIL_AI_V4MAPPED AI_V4MAPPED
#define _mm512_mask3_fmsubadd_round_ps(A,B,C,U,R) (__m512)__builtin_ia32_vfmsubaddps512_mask3(A, B, C, U, R)
#define BOOST_MPL_APPLY_FWD_HPP_INCLUDED 
#define __cpp_lib_not_fn 201603
#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 "DH-DSS-CAMELLIA128-SHA256"
#define BOOST_RV_REF_BEG 
#define CT_F_SCT_SET_LOG_ENTRY_TYPE 102
#define BOOST_PP_INTERCEPT_216 
#define NID_id_smime_aa_ets_contentTimestamp 231
#define SSL_F_SSL_SET_CERT_AND_KEY 621
#define EBADRQC 56
#define TLSEXT_TYPE_use_srtp 14
#define OPENSSL_INIT_ASYNC 0x00000100L
#define PEM_TYPE_MIC_ONLY 20
#define SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED 1045
#define SSL3_RT_CHANGE_CIPHER_SPEC 20
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_194(s,p,o,m) 0
#define NID_aes_128_xts 913
#define _mm_insert_epi32(D,S,N) ((__m128i) __builtin_ia32_vec_set_v4si ((__v4si)(__m128i)(D), (int)(S), (int)(N)))
#define NID_SMIME 188
#define BLKBSZSET _IOW(0x12,113,size_t)
#define _SC_LEVEL1_DCACHE_SIZE _SC_LEVEL1_DCACHE_SIZE
#define DH_R_CHECK_PUBKEY_TOO_SMALL 124
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_90(s,p,o,m) 0
#define SN_id_smime_aa_smimeEncryptCerts "id-smime-aa-smimeEncryptCerts"
#define SSL_SERVERINFOV1 1
#define SSL_SERVERINFOV2 2
#define BOOST_MPL_AUX_BEGIN_END_IMPL_HPP_INCLUDED 
#define BOOST_PP_FOR_57_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(58, s) BOOST_PP_IIF(c, BOOST_PP_FOR_58, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(58, s), p, o, m)
#define SN_id_pkix_OCSP_serviceLocator "serviceLocator"
#define OBJ_Management OBJ_internet,2L
#define FOLLY_HAVE_RECVMMSG 1
#define BOOST_PP_DEC_246 245
#define EVP_F_INT_CTX_NEW 157
#define DEFINE_STACK_OF(t) SKM_DEFINE_STACK_OF(t, t, t)
#define BOOST_PP_TUPLE_EAT_N(size) BOOST_PP_TUPLE_EAT_N_I(size)
#define OBJ_brainpoolP160r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,1L
#define BOOST_INTRUSIVE_DETECT_FUNCTION(Class,InstantiationKey,ReturnType,Identifier,Params) ::boost::intrusive::function_detector::DetectMember_ ##InstantiationKey_ ##Identifier< Class, ReturnType (Class::*)Params, ReturnType (Class::*)Params const, ReturnType (*)Params >::check
#define BN_F_BN_MONT_CTX_NEW 149
#define OBJ_data OBJ_itu_t,9L
#define SSL_CTRL_GET_SERVER_TMP_KEY SSL_CTRL_GET_PEER_TMP_KEY
#define OPENSSL_EC_NAMED_CURVE 0x001
#define DTLS_MIN_VERSION DTLS1_VERSION
#define S_IFSOCK __S_IFSOCK
#define BOOST_PP_DEC_249 248
#define _mm_mask_shldi_epi16(A,B,C,D,E) ((__m128i) __builtin_ia32_vpshld_v8hi_mask ((__v8hi)(__m128i)(C), (__v8hi)(__m128i)(D), (int)(E), (__v8hi)(__m128i)(A), (__mmask8)(B)))
#define X509v3_KU_KEY_AGREEMENT 0x0008
#define OPENSSL_PLATFORM 3
#define CTerr(f,r) ERR_PUT_error(ERR_LIB_CT,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define SSL_R_BAD_RSA_ENCRYPT 119
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_100(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_101(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_102(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_103(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_104(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_105(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_106(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_109(s,p,o,m) 0
#define LN_rc4 "rc4"
#define _SC_BC_DIM_MAX _SC_BC_DIM_MAX
#define IPV6_JOIN_GROUP 20
#define NID_hmacWithMD5 797
#define SN_certificate_policies "certificatePolicies"
#define SN_secp384r1 "secp384r1"
#define OBJ_brainpoolP160t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,2L
#define BOOST_PP_ENUM_PARAMS_M(z,n,param) BOOST_PP_COMMA_IF(n) param ## n
#define LN_id_GostR3410_2001 "GOST R 34.10-2001"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_111(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_112(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_113(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_115(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_116(s,p,o,m) 0
#define BOOST_PP_BOOL_75 1
#define NID_crossCertificatePair 884
#define _mm_maskz_shrdi_epi16(A,B,C,D) ((__m128i) __builtin_ia32_vpshrd_v8hi_mask ((__v8hi)(__m128i)(B), (__v8hi)(__m128i)(C),(int)(D), (__v8hi)(__m128i)_mm_setzero_si128 (), (__mmask8)(A)))
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define EC_F_EC_GROUP_GET_CURVE 291
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_111(p,o,s) 0
#define EVP_delete_cipher_alias(alias) OBJ_NAME_remove(alias,OBJ_NAME_TYPE_CIPHER_METH|OBJ_NAME_ALIAS);
#define MLOCK_ONFAULT 1U
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_112(p,o,s) 0
#define SSL_R_SSL_SESSION_ID_TOO_LONG 408
#define _mm512_maskz_cvtps_ph(W,A,I) ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I), (__v16hi)_mm256_setzero_si256 (), (__mmask16) (W)))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_120(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_121(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_122(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_123(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_124(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_125(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_126(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_127(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_128(s,p,o,m) 0
#define CT_R_SCT_LOG_ID_MISMATCH 114
#define EVENT__HAVE_OPENSSL 1
#define io_uring_for_each_cqe(ring,head,cqe) for (head = *(ring)->cq.khead; (cqe = (head != io_uring_smp_load_acquire((ring)->cq.ktail) ? &(ring)->cq.cqes[head & (*(ring)->cq.kring_mask)] : NULL)); head++)
#define BOOST_MPL_LIST_AUX_EMPTY_HPP_INCLUDED 
#define _mm256_permute2f128_ps(X,Y,C) ((__m256) __builtin_ia32_vperm2f128_ps256 ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(C)))
#define _mm256_mask_i64gather_pd(SRC,BASE,INDEX,MASK,SCALE) (__m256d) __builtin_ia32_gatherdiv4df ((__v4df)(__m256d) (SRC), (double const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4df)(__m256d) (MASK), (int) (SCALE))
#define CRYPTO_num_locks() (1)
#define LC_COLLATE_MASK (1 << __LC_COLLATE)
#define _mm256_mask_i64gather_ps(SRC,BASE,INDEX,MASK,SCALE) (__m128) __builtin_ia32_gatherdiv4sf256 ((__v4sf)(__m128) (SRC), (float const *) (BASE), (__v4di)(__m256i) (INDEX), (__v4sf)(__m128) (MASK), (int) (SCALE))
#define _mm_mask_blend_epi32(__U,__A,__W) ((__m128i) __builtin_ia32_blendmd_128_mask ((__v4si) (__A), (__v4si) (__W), (__mmask8) (__U)))
#define DECLARE_PEM_write_const(name,type) DECLARE_PEM_write_bio_const(name, type) DECLARE_PEM_write_fp_const(name, type)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_130(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_134(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_135(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_136(s,p,o,m) 0
#define IP_DROP_SOURCE_MEMBERSHIP 40
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_138(s,p,o,m) 0
#define X509_F_X509_PUBKEY_DECODE 148
#define BOOST_PP_WHILE_39_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_40, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(40, s))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_167(op,st,ss,sz) 0
#define THRIFT_TRANSPORT_TTRANSPORT_H 1
#define LN_hmac_sha3_512 "hmac-sha3-512"
#define BIO_cb_post(a) ((a)&BIO_CB_RETURN)
#define NID_setAttr_T2Enc 632
#define BOOST_HAS_TR1_COMPLEX_INVERSE_TRIG 
#define SN_aes_128_ocb "AES-128-OCB"
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_119(p,o,s) 0
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001001 (0)(1)(0)(0)(1)(0)(0)(1),
#define NID_pkcs9_extCertAttributes 56
#define FS_INDEX_FL 0x00001000
#define _mm512_mask_cvt_roundepu32_ps(W,U,A,B) (__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(A), W, U, B)
#define OBJ_internet OBJ_iana
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_140(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_141(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_142(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_143(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_144(s,p,o,m) 0
#define SN_shaWithRSAEncryption "RSA-SHA"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_146(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_147(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_148(s,p,o,m) 0
#define SSL_F_ADD_KEY_SHARE 512
#define DECLARE_ASN1_PRINT_FUNCTION(stname) DECLARE_ASN1_PRINT_FUNCTION_fname(stname, stname)
#define BOOST_PP_REPEAT_3_49(m,d) BOOST_PP_REPEAT_3_48(m, d) m(4, 48, d)
#define _mm_mask_shldi_epi64(A,B,C,D,E) ((__m128i) __builtin_ia32_vpshld_v2di_mask ((__v2di)(__m128i)(C), (__v2di)(__m128i)(D), (int)(E), (__v2di)(__m128i)(A), (__mmask8)(B)))
#define BOOST_PP_SEQ_SIZE_11(_) BOOST_PP_SEQ_SIZE_12
#define OBJ_id_qt_unotice OBJ_id_qt,2L
#define BOOST_PP_SEQ_SIZE_14(_) BOOST_PP_SEQ_SIZE_15
#define BOOST_PP_SEQ_SIZE_15(_) BOOST_PP_SEQ_SIZE_16
#define BOOST_PP_SEQ_SIZE_16(_) BOOST_PP_SEQ_SIZE_17
#define BOOST_MPL_REVERSE_FOLD_HPP_INCLUDED 
#define SSL_R_NO_VALID_SCTS 216
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001010 (0)(1)(0)(0)(1)(0)(1)(0),
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_01001011 (0)(1)(0)(0)(1)(0)(1)(1),
#define BOOST_PP_FOR_132_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(133, s) BOOST_PP_IIF(c, BOOST_PP_FOR_133, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(133, s), p, o, m)
#define BOOST_PP_ENUM_BINARY_PARAMS_M(z,n,pp) BOOST_PP_ENUM_BINARY_PARAMS_M_IM(z, n, BOOST_PP_TUPLE_REM_2 pp)
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_150(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_151(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_152(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_153(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_156(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_157(s,p,o,m) 0
#define LN_ext_req "Extension Request"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_159(s,p,o,m) 0
#define __INT_FAST64_WIDTH__ 64
#define SSL_F_TLS_CONSTRUCT_HELLO_REQUEST 373
#define _mm512_cvt_roundps_epu32(A,B) ((__m512i)__builtin_ia32_cvtps2udq512_mask(A, (__v16si)_mm512_undefined_epi32 (), -1, B))
#define BOOST_PP_SEQ_SIZE_21(_) BOOST_PP_SEQ_SIZE_22
#define BOOST_PP_SEQ_SIZE_22(_) BOOST_PP_SEQ_SIZE_23
#define BOOST_PP_SEQ_SIZE_23(_) BOOST_PP_SEQ_SIZE_24
#define BOOST_PP_SEQ_SIZE_24(_) BOOST_PP_SEQ_SIZE_25
#define BOOST_PP_SEQ_SIZE_25(_) BOOST_PP_SEQ_SIZE_26
#define BOOST_PP_REPEAT_1_50(m,d) BOOST_PP_REPEAT_1_49(m, d) m(2, 49, d)
#define BOOST_PP_IS_BINARY(x) BOOST_PP_CHECK(x, BOOST_PP_IS_BINARY_CHECK)
#define BOOST_PP_SEQ_SIZE_29(_) BOOST_PP_SEQ_SIZE_30
#define BIO_TYPE_NONE 0
#define __UQUAD_TYPE unsigned long int
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_160(s,p,o,m) 0
#define SSL_TXT_AES_GCM "AESGCM"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_162(s,p,o,m) 0
#define _kshiftli_mask32(X,Y) ((__mmask32) __builtin_ia32_kshiftlisi ((__mmask32)(X), (__mmask8)(Y)))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_164(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_165(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_166(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_167(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_168(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_169(s,p,o,m) 0
#define BOOST_TT_IS_CONSTRUCTIBLE_CONFORMING 1
#define _BITS_UIO_LIM_H 1
#define _mm_maskz_shrdi_epi64(A,B,C,D) ((__m128i) __builtin_ia32_vpshrd_v2di_mask ((__v2di)(__m128i)(B), (__v2di)(__m128i)(C),(int)(D), (__v2di)(__m128i)_mm_setzero_si128 (), (__mmask8)(A)))
#define SN_setct_CapReqTBEX "setct-CapReqTBEX"
#define EVP_des_cfb EVP_des_cfb64
#define BOOST_PP_WHILE_66_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_67, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(67, s))
#define BOOST_INTRUSIVE_UNORDERED_SET_HOOK_HPP 
#define CHECK_EQ(val1,val2) CHECK_OP(_EQ, ==, val1, val2)
#define BOOST_PP_SEQ_SIZE_32(_) BOOST_PP_SEQ_SIZE_33
#define BOOST_PP_SEQ_SIZE_33(_) BOOST_PP_SEQ_SIZE_34
#define BOOST_PP_SEQ_SIZE_34(_) BOOST_PP_SEQ_SIZE_35
#define BOOST_PP_SEQ_SIZE_36(_) BOOST_PP_SEQ_SIZE_37
#define BOOST_PP_SEQ_SIZE_37(_) BOOST_PP_SEQ_SIZE_38
#define NID_data 434
#define BOOST_PP_SEQ_SIZE_39(_) BOOST_PP_SEQ_SIZE_40
#define STA_PPSFREQ 0x0002
#define EADDRNOTAVAIL 99
#define BOOST_PP_INTERCEPT_120 
#define BOOST_PP_SEQ_FOLD_LEFT_50(op,st,ss) BOOST_PP_SEQ_FOLD_LEFT_I_50(op, st, ss, BOOST_PP_SEQ_SIZE(ss))
#define SSL3_CK_RSA_RC4_40_MD5 0x03000003
#define RAND_F_RAND_WRITE_FILE 112
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_170(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_171(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_175(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_176(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_177(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_178(s,p,o,m) 0
#define _mm_shufflelo_epi16(A,N) ((__m128i)__builtin_ia32_pshuflw ((__v8hi)(__m128i)(A), (int)(N)))
#define BOOST_VARIANT_DETAIL_APPLY_VISITOR_BINARY_HPP 
#define BOOST_PP_FOR_241_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(242, s) BOOST_PP_IIF(c, BOOST_PP_FOR_242, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(242, s), p, o, m)
#define NID_des_cbc 31
#define __FLT_DIG__ 6
#define __FSID_T_TYPE struct { int __val[2]; }
#define BOOST_PP_SEQ_SIZE_40(_) BOOST_PP_SEQ_SIZE_41
#define LN_documentAuthor "documentAuthor"
#define BOOST_PP_SEQ_SIZE_44(_) BOOST_PP_SEQ_SIZE_45
#define EXT_BITSTRING(nid,table) { nid, 0, ASN1_ITEM_ref(ASN1_BIT_STRING), 0,0,0,0, 0,0, (X509V3_EXT_I2V)i2v_ASN1_BIT_STRING, (X509V3_EXT_V2I)v2i_ASN1_BIT_STRING, NULL, NULL, table}
#define HEADER_X509V3_H 
#define BOOST_PP_SEQ_SIZE_47(_) BOOST_PP_SEQ_SIZE_48
#define BOOST_PP_SEQ_SIZE_49(_) BOOST_PP_SEQ_SIZE_50
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11011110 (1)(1)(0)(1)(1)(1)(1)(0),
#define SN_setct_CapReqTBE "setct-CapReqTBE"
#define REG_CSGSFS REG_CSGSFS
#define _GLIBCXX_USE_WCHAR_T 1
#define XN_FLAG_SEP_COMMA_PLUS (1 << 16)
#define TLSEXT_signature_ecdsa 3
#define SN_setct_CapReqTBS "setct-CapReqTBS"
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_180(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_181(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_183(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_184(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_185(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_186(s,p,o,m) 0
#define EBADF 9
#define BOOST_PP_LIST_IS_NIL(list) BOOST_PP_COMPL(BOOST_PP_IS_BINARY(list))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_189(s,p,o,m) 0
#define BOOST_VARIANT_DETAIL_OVER_SEQUENCE_HPP 
#define TLS1_RFC_ECDHE_RSA_WITH_NULL_SHA "TLS_ECDHE_RSA_WITH_NULL_SHA"
#define CHECK_GE(val1,val2) CHECK_OP(_GE, >=, val1, val2)
#define __glibcxx_class_requires(_a,_b) 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110101 (0)(0)(1)(1)(0)(1)(0)(1),
#define EVENT__HAVE_POLL 1
#define CHECK_GT(val1,val2) CHECK_OP(_GT, > , val1, val2)
#define _mm512_cvt_roundps_epu64(A,B) ((__m512i)__builtin_ia32_cvtps2uqq512_mask ((A), (__v8di)_mm512_setzero_si512 (), -1, (B)))
#define BOOST_PP_SEQ_SIZE_53(_) BOOST_PP_SEQ_SIZE_54
#define BOOST_PP_SEQ_SIZE_55(_) BOOST_PP_SEQ_SIZE_56
#define BOOST_PP_SEQ_SIZE_56(_) BOOST_PP_SEQ_SIZE_57
#define BOOST_PP_SEQ_SIZE_57(_) BOOST_PP_SEQ_SIZE_58
#define BOOST_PP_SEQ_SIZE_58(_) BOOST_PP_SEQ_SIZE_59
#define EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING 159
#define RAND_F_RAND_LOAD_FILE 111
#define ASN1_R_LIST_ERROR 188
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_190(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_191(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_192(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_193(s,p,o,m) 0
#define _kshiftli_mask64(X,Y) ((__mmask64) __builtin_ia32_kshiftlidi ((__mmask64)(X), (__mmask8)(Y)))
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_196(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_197(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_198(s,p,o,m) 0
#define BOOST_PP_FOR_CHECK_BOOST_PP_FOR_199(s,p,o,m) 0
#define _GLIBCXX_FORWARD(_Tp,__val) std::forward<_Tp>(__val)
#define TLS1_RFC_DHE_RSA_WITH_AES_256_SHA "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"
#define SSL_OP_PRIORITIZE_CHACHA 0x00200000U
#define BOOST_PP_SEQ_SIZE_60(_) BOOST_PP_SEQ_SIZE_61
#define S_IXUSR __S_IEXEC
#define BOOST_PP_SEQ_SIZE_63(_) BOOST_PP_SEQ_SIZE_64
#define BOOST_PP_SEQ_SIZE_64(_) BOOST_PP_SEQ_SIZE_65
#define BOOST_PP_SEQ_SIZE_65(_) BOOST_PP_SEQ_SIZE_66
#define BOOST_PP_SEQ_SIZE_67(_) BOOST_PP_SEQ_SIZE_68
#define BOOST_PP_SEQ_SIZE_68(_) BOOST_PP_SEQ_SIZE_69
#define ASN1_PKEY_CTRL_SET1_TLS_ENCPT 0x9
#define RLIMIT_FSIZE RLIMIT_FSIZE
#define PTRDIFF_WIDTH __WORDSIZE
#define MALLOCX_TCACHE(tc) ((int)(((tc)+2) << 8))
#define SN_gost89_cnt_12 "gost89-cnt-12"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_146(op,st,ss,sz) 0
#define BOOST_PP_WHILE_117_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_118, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(118, s))
#define NID_pkcs9_unstructuredName 49
#define DSA_R_DECODE_ERROR 104
#define OBJ_id_cmc_recipientNonce OBJ_id_cmc,7L
#define TLS1_RFC_ADH_WITH_AES_128_SHA "TLS_DH_anon_WITH_AES_128_CBC_SHA"
#define BOOST_PP_SEQ_SIZE_73(_) BOOST_PP_SEQ_SIZE_74
#define BOOST_PP_SEQ_SIZE_74(_) BOOST_PP_SEQ_SIZE_75
#define BOOST_PP_SEQ_SIZE_75(_) BOOST_PP_SEQ_SIZE_76
#define BOOST_PP_SEQ_SIZE_76(_) BOOST_PP_SEQ_SIZE_77
#define BOOST_PP_SEQ_SIZE_77(_) BOOST_PP_SEQ_SIZE_78
#define BOOST_PP_SEQ_SIZE_78(_) BOOST_PP_SEQ_SIZE_79
#define IPV6_RTHDR 57
#define TLS1_TXT_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 "ECDH-ARIA256-GCM-SHA384"
#define _GLIBCXX_USE_NANOSLEEP 1
#define CERT_PKEY_EE_SIGNATURE 0x10
#define SSL_TXT_AES256 "AES256"
#define LN_textEncodedORAddress "textEncodedORAddress"
#define EVP_R_INVALID_OPERATION 148
#define BOOST_PP_SEQ_SIZE_85(_) BOOST_PP_SEQ_SIZE_86
#define BOOST_PP_SEQ_SIZE_86(_) BOOST_PP_SEQ_SIZE_87
#define BOOST_PP_SEQ_SIZE_88(_) BOOST_PP_SEQ_SIZE_89
#define BOOST_PP_SEQ_SIZE_89(_) BOOST_PP_SEQ_SIZE_90
#define TLS1_CK_DHE_PSK_WITH_NULL_SHA384 0x030000B5
#define BOOST_PP_SUB_D(d,x,y) BOOST_PP_TUPLE_ELEM(2, 0, BOOST_PP_WHILE_ ## d(BOOST_PP_SUB_P, BOOST_PP_SUB_O, (x, y)))
#define __FD_SET(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))
#define BOOST_VARIANT_CLASS_OR_TYPENAME_TO_SEQ_class class)(
#define SSL_CB_WRITE 0x08
#define SSL_F_DANE_TLSA_ADD 394
#define NID_delta_crl 140
#define NID_ffdhe3072 1127
#define __WNOTHREAD 0x20000000
#define EVP_PKEY_CTX_get0_dh_kdf_ukm(ctx,p) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_UKM, 0, (void *)(p))
#define _mm256_maskz_shuffle_i32x4(U,X,Y,C) ((__m256i) __builtin_ia32_shuf_i32x4_256_mask ((__v8si)(__m256i)(X), (__v8si)(__m256i)(Y), (int)(C), (__v8si)(__m256i) _mm256_setzero_si256 (), (__mmask8)(U)))
#define EVUTIL_AI_NUMERICHOST AI_NUMERICHOST
#define BOOST_PP_FOR_92_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(93, s) BOOST_PP_IIF(c, BOOST_PP_FOR_93, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(93, s), p, o, m)
#define AF_LLC PF_LLC
#define _mm512_mask_exp2a23_pd(W,U,A) _mm512_mask_exp2a23_round_pd(W, U, A, _MM_FROUND_CUR_DIRECTION)
#define BOOST_PP_SEQ_SIZE_95(_) BOOST_PP_SEQ_SIZE_96
#define BOOST_PP_SEQ_SIZE_96(_) BOOST_PP_SEQ_SIZE_97
#define CHECK_LE(val1,val2) CHECK_OP(_LE, <=, val1, val2)
#define ENETUNREACH 101
#define BOOST_PP_SEQ_ELEM_23(_) BOOST_PP_SEQ_ELEM_22
#define SSL_CTX_set1_sigalgs(ctx,slist,slistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SIGALGS,slistlen,(int *)(slist))
#define BUF_strlcat(dst,src,size) OPENSSL_strlcat(dst, src, size)
#define CHECK_LT(val1,val2) CHECK_OP(_LT, < , val1, val2)
#define SSL_OP_NO_QUERY_MTU 0x00001000U
#define BOOST_MPL_AUX_VALUE_WKND_HPP_INCLUDED 
#define BOOST_PP_REPEAT_2_226(m,d) BOOST_PP_REPEAT_2_225(m, d) m(3, 225, d)
#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1
#define LN_aes_192_ecb "aes-192-ecb"
#define PRIxPTR __PRIPTR_PREFIX "x"
#define UINT32_C(c) c ## U
#define DH_F_DH_CHECK_PARAMS_EX 122
#define FOLLY_GLIBCXX_NAMESPACE_CXX11_BEGIN inline _GLIBCXX_BEGIN_NAMESPACE_CXX11
#define TLS_MD_SERVER_FINISH_CONST "server finished"
#define BOOST_INTRUSIVE_INSTANTIATE_DEFAULT_TYPE_TMPLT(TNAME) template <typename T> struct boost_intrusive_has_type_ ## TNAME { template <typename X> static char test(int, typename X::TNAME*); template <typename X> static int test(...); static const bool value = (1 == sizeof(test<T>(0, 0))); }; template <typename T, typename DefaultType> struct boost_intrusive_default_type_ ## TNAME { struct DefaultWrap { typedef DefaultType TNAME; }; typedef typename ::boost::intrusive::detail::if_c < boost_intrusive_has_type_ ## TNAME<T>::value , T, DefaultWrap>::type::TNAME type; };
#define FS_DAX_FL 0x02000000
#define SN_setct_CapTokenTBS "setct-CapTokenTBS"
#define OBJ_aes OBJ_nistAlgorithms,1L
#define X509_R_INVALID_ATTRIBUTES 138
#define CHECK_NE(val1,val2) CHECK_OP(_NE, !=, val1, val2)
#define BOOST_MPL_AUX_CONFIG_COMPILER_HPP_INCLUDED 
#define SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE 1114
#define _mm_cvt_roundss_u32(A,B) ((unsigned)__builtin_ia32_vcvtss2usi32(A, B))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00011111 (0)(0)(0)(1)(1)(1)(1)(1),
#define NID_dsa_with_SHA3_512 1111
#define FOLLY_GNU_DISABLE_WARNING_INTERNAL2(warningName) #warningName
#define __SIZEOF_SHORT__ 2
#define SSL3_CK_ADH_RC4_128_MD5 0x03000018
#define SEM_VALUE_MAX (2147483647)
#define SSL_ERROR_ZERO_RETURN 6
#define SSL_CONF_FLAG_CLIENT 0x4
#define NID_organizationalStatus 491
#define TLS1_TXT_DHE_RSA_WITH_AES_128_CCM "DHE-RSA-AES128-CCM"
#define THRIFT_ASYNC_CPP2CHANNEL_H_ 1
#define BN_BITS2 (BN_BYTES * 8)
#define CHECK_OP(name,op,val1,val2) CHECK_OP_LOG(name, op, val1, val2, google::LogMessageFatal)
#define evutil_timerclear(tvp) timerclear(tvp)
#define TLS1_CK_DH_anon_WITH_ARIA_256_GCM_SHA384 0x0300C05B
#define MOD_TAI ADJ_TAI
#define OBJ_hmacWithDstu34311 OBJ_ua_pki,1L,1L,2L
#define BOOST_PP_SLOT_CC_7_D(a,b,c,d,e,f,g) a ## b ## c ## d ## e ## f ## g
#define _mm_i32gather_ps(BASE,INDEX,SCALE) (__m128) __builtin_ia32_gathersiv4sf ((__v4sf) _mm_setzero_ps (), (float const *) (BASE), (__v4si)(__m128i) (INDEX), (__v4sf) _mm_cmpeq_ps (_mm_setzero_ps (), _mm_setzero_ps ()), (int) (SCALE))
#define SSL_R_TLSV1_ALERT_UNKNOWN_CA 1048
#define NID_wap_wsg_idm_ecid_wtls8 741
#define _GLIBCXX_NOEXCEPT_PARM , bool _NE
#define BOOST_PP_REPEAT_1_226(m,d) BOOST_PP_REPEAT_1_225(m, d) m(2, 225, d)
#define PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE 150
#define ENOSPC 28
#define RAND_F_RAND_DRBG_INSTANTIATE 108
#define B_ASN1_T61STRING 0x0004
#define BOOST_LIBSTDCXX_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)
#define NID_secp128r1 706
#define NID_secp128r2 707
#define _GLIBCXX_TXN_SAFE 
#define BOOST_INTRUSIVE_DETAIL_PARENT_FROM_MEMBER_HPP 
#define TLS1_RFC_DH_anon_WITH_ARIA_128_GCM_SHA256 "TLS_DH_anon_WITH_ARIA_128_GCM_SHA256"
#define X509V3_ADD_DELETE 5L
#define OBJ_hmacWithSHA512 OBJ_rsadsi,2L,11L
#define _mm_cvt_roundss_u64(A,B) ((unsigned long long)__builtin_ia32_vcvtss2usi64(A, B))
#define OBJ_RSA_SHA3_224 OBJ_sigAlgs,13L
#define X509_V_FLAG_X509_STRICT 0x20
#define LN_cACertificate "cACertificate"
#define __extern_inline extern __inline __attribute__ ((__gnu_inline__))
#define NID_id_GostR3410_94_CryptoPro_C_ParamSet 834
#define LN_id_GostR3410_94_cc "GOST 34.10-94 Cryptocom"
#define SO_RCVBUF 8
#define OPEN_TREE_CLOEXEC O_CLOEXEC
#define OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet OBJ_cryptopro,33L,1L
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_237(p,o,s) 0
#define SSL_CTRL_SET_DH_AUTO 118
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_121(p,o,s) 0
#define RSA_FLAG_NON_FIPS_ALLOW 0x0400
#define BOOST_PP_FOR_199_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(200, s) BOOST_PP_IIF(c, BOOST_PP_FOR_200, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(200, s), p, o, m)
#define _GLIBCXX_HAVE_LOG10F 1
#define SN_ecdsa_with_SHA256 "ecdsa-with-SHA256"
#define _GLIBCXX_HAVE_LOG10L 1
#define SSL_F_SSL_LOG_MASTER_SECRET 498
#define ASN1_F_ASN1_STRING_SET 186
#define OBJ_camellia_256_cbc 1L,2L,392L,200011L,61L,1L,1L,1L,4L
#define __SIZEOF_INT128__ 16
#define BIO_R_UNSUPPORTED_IP_FAMILY 146
#define SN_setct_CapReqTBSX "setct-CapReqTBSX"
#define NID_camellia_192_ecb 755
#define SSL_AD_ILLEGAL_PARAMETER SSL3_AD_ILLEGAL_PARAMETER
#define __LDBL_MAX_10_EXP__ 4932
#define BOOST_PP_WHILE_137_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_138, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(138, s))
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_176(op,st,ss,sz) 0
#define BOOST_CONFIG_HPP 
#define timeout_add(ev,tv) event_add((ev), (tv))
#define DECLARE_PEM_rw_const(name,type) DECLARE_PEM_read(name, type) DECLARE_PEM_write_const(name, type)
#define _mm256_srli_si256(A,N) ((__m256i)__builtin_ia32_psrldqi256 ((__m256i)(A), (int)(N) * 8))
#define _ALIGNED_BUFFER_H 1
#define BIO_R_LOOKUP_RETURNED_NOTHING 142
#define DLOG_EVERY_N(severity,n) LOG_EVERY_N(severity, n)
#define OBJ_Independent OBJ_id_ppl,2L
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_178(op,st,ss,sz) 0
#define OBJ_RSA_SHA3_256 OBJ_sigAlgs,14L
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10011000 (1)(0)(0)(1)(1)(0)(0)(0),
#define LN_RSA_SHA3_384 "RSA-SHA3-384"
#define OBJ_dITRedirect OBJ_pilotAttributeType,54L
#define X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED 38
#define LN_mime_mhs_bodies "mime-mhs-bodies"
#define BIO_set_accept_name(b,name) BIO_ctrl(b,BIO_C_SET_ACCEPT,0, (char *)(name))
#define BOOST_MPL_ITERATOR_TAG_HPP_INCLUDED 
#define ENOSTR 60
#define _LOCALE_FACETS_TCC 1
#define DECLARE_ASN1_FUNCTIONS_fname(type,itname,name) DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name)
#define X509_PURPOSE_DYNAMIC 0x1
#define EVENT__HAVE_GETPROTOBYNUMBER 1
#define BOOST_PP_NODE_180(p) BOOST_PP_IIF(p(180), BOOST_PP_NODE_178, BOOST_PP_NODE_182)
#define SIOCSPGRP 0x8902
#define NID_id_pkix_OCSP_CrlID 367
#define SSL_F_OSSL_STATEM_CLIENT13_WRITE_TRANSITION 598
#define INADDR_NONE ((in_addr_t) 0xffffffff)
#define SYS_F_FSTAT 24
#define SSL3_MT_HELLO_REQUEST 0
#define SN_id_pkix_OCSP_noCheck "noCheck"
#define BOOST_PP_WHILE_246_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_247, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(247, s))
#define TLS1_HB_REQUEST 1
#define SSL_MODE_NO_AUTO_CHAIN 0x00000008U
#define IPPROTO_DSTOPTS IPPROTO_DSTOPTS
#define SSL_MODE_SEND_FALLBACK_SCSV 0x00000080U
#define _AVX512VBMI2VLINTRIN_H_INCLUDED 
#define _SC_REGEXP _SC_REGEXP
#define DH_CHECK_PUBKEY_TOO_LARGE 0x02
#define SN_itu_t "ITU-T"
#define _VA_LIST_DEFINED 
#define BOOST_PP_FOR_24_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(25, s) BOOST_PP_IIF(c, BOOST_PP_FOR_25, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(25, s), p, o, m)
#define LN_aria_192_cfb8 "aria-192-cfb8"
#define TLS1_TXT_DHE_RSA_WITH_AES_128_SHA "DHE-RSA-AES128-SHA"
#define __SIZEOF_WCHAR_T__ 4
#define ASN1_F_PARSE_TAGGING 182
#define NID_setAttr_Token_B0Prime 627
#define _FUNCTIONAL_HASH_H 1
#define SSL_AD_DECRYPTION_FAILED TLS1_AD_DECRYPTION_FAILED
#define BEV_EVENT_TIMEOUT 0x40
#define ASN1_R_INVALID_OBJECT_ENCODING 216
#define OBJ_X500 2L,5L
#define OBJ_id_tc26_gost_3410_2012_512_paramSetA OBJ_id_tc26_gost_3410_2012_512_constants,1L
#define TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA "RSA-PSK-AES128-CBC-SHA"
#define SN_SMIME "SMIME"
#define BOOST_JOIN(X,Y) BOOST_DO_JOIN(X, Y)
#define LN_rc2_ofb64 "rc2-ofb"
#define FOLLY_PP_DETAIL_FOR_EACH_REC_0(fn,...) 
#define FOLLY_PP_DETAIL_FOR_EACH_REC_1(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_0(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_3(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_2(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_5(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_4(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_7(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_6(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_8(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_7(fn, __VA_ARGS__)
#define FOLLY_PP_DETAIL_FOR_EACH_REC_9(fn,a,...) fn(a) FOLLY_PP_DETAIL_FOR_EACH_REC_8(fn, __VA_ARGS__)
#define OBJ_ms_csp_name 1L,3L,6L,1L,4L,1L,311L,17L,1L
#define OBJ_international_organizations OBJ_joint_iso_itu_t,23L
#define SSL_set_tmp_rsa(ssl,rsa) 1
#define __LC_NAME 8
#define SSL_F_SSL_READ_EX 434
#define ASN1_F_ASN1_GET_OBJECT 114
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11001111 (1)(1)(0)(0)(1)(1)(1)(1),
#define SN_bf_ecb "BF-ECB"
#define ECANCELED 125
#define TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"
#define __bool_true_false_are_defined 1
#define HEADER_LHASH_H 
#define LN_id_GostR3411_94 "GOST R 34.11-94"
#define X509_F_X509_TO_X509_REQ 126
#define BOOST_PP_WHILE_78_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_79, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(79, s))
#define BUF_strlcpy(dst,src,size) OPENSSL_strlcpy(dst, src, size)
#define NID_id_GostR3410_2001_cc 851
#define OBJ_id_smime_ct_receipt OBJ_id_smime_ct,1L
#define DH_F_GENERATE_KEY 103
#define BOOST_PP_NODE_188(p) BOOST_PP_IIF(p(188), BOOST_PP_NODE_186, BOOST_PP_NODE_190)
#define SSL_R_ILLEGAL_POINT_COMPRESSION 162
#define NID_subject_directory_attributes 769
#define _BITS_LOCALE_H 1
#define _GLIBCXX_USE_NLS 1
#define SN_id_GostR3410_94_bBis "id-GostR3410-94-bBis"
#define NID_ecdsa_with_SHA3_384 1114
#define _GLIBCXX_TR1_GAMMA_TCC 1
#define LN_md5WithRSA "md5WithRSA"
#define BOOST_MSVC_TYPENAME typename
#define SN_aria_256_cfb128 "ARIA-256-CFB"
#define SSL_F_TLS_PROCESS_CLIENT_KEY_EXCHANGE 382
#define PEM_F_PEM_ASN1_WRITE 104
#define RLIMIT_NICE __RLIMIT_NICE
#define BOOST_COPY_ASSIGN_REF_2_TEMPL_ARGS(TYPE,ARG1,ARG2) const TYPE<ARG1, ARG2> &
#define BOOST_PP_INTERCEPT_230 
#define SN_dsa_with_SHA224 "dsa_with_SHA224"
#define TLS1_TXT_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "DHE-PSK-CAMELLIA128-SHA256"
#define __INT_WCHAR_T_H 
#define AT_STATX_SYNC_TYPE 0x6000
#define EVP_delete_digest_alias(alias) OBJ_NAME_remove(alias,OBJ_NAME_TYPE_MD_METH|OBJ_NAME_ALIAS);
#define NID_brainpoolP192t1 924
#define TLS1_TXT_RSA_WITH_AES_256_SHA "AES256-SHA"
#define PEM_R_KEYBLOB_TOO_SHORT 123
#define EC_R_NO_PRIVATE_VALUE 154
#define RAND_F_DRBG_GET_ENTROPY 105
#define SSL_CB_READ_ALERT (SSL_CB_ALERT|SSL_CB_READ)
#define SN_ipsecEndSystem "ipsecEndSystem"
#define MREMAP_MAYMOVE 1
#define SN_hmac "HMAC"
#define __STDC_UTF_32__ 1
#define _BITS_STDIO_LIM_H 1
#define FOLLY_ASSUME_FBVECTOR_COMPATIBLE_2(...) namespace folly { template <class T1, class T2> FOLLY_ASSUME_RELOCATABLE(__VA_ARGS__<T1, T2>); }
#define _mm512_maskz_add_round_ps(U,A,B,C) (__m512)__builtin_ia32_addps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)
#define SYSLOG(severity) SYSLOG_ ## severity(0).stream()
#define SN_aes_192_ocb "AES-192-OCB"
#define FALLOC_FL_PUNCH_HOLE 0x02
#define BOOST_PP_WHILE_33_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_34, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(34, s))
#define TLS1_CK_ADH_WITH_AES_256_SHA256 0x0300006D
#define OPENSSL_INIT_SSL_DEFAULT (OPENSSL_INIT_LOAD_SSL_STRINGS | OPENSSL_INIT_LOAD_CRYPTO_STRINGS)
#define LN_dstu28147 "DSTU Gost 28147-2009"
#define _mm_mmask_i32gather_pd(V1OLD,MASK,INDEX,ADDR,SCALE) (__m128d) __builtin_ia32_gather3siv2df ((__v2df)(__m128d) (V1OLD), (void const *) (ADDR), (__v4si)(__m128i) (INDEX), (__mmask8) (MASK), (int) (SCALE))
#define IN6_IS_ADDR_SITELOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfec00000); }))
#define STA_PPSJITTER 0x0200
#define SN_md5_sha1 "MD5-SHA1"
#define OBJ_pkcs1 OBJ_pkcs,1L
#define SN_dsa_with_SHA256 "dsa_with_SHA256"
#define _PATH_HOSTS "/etc/hosts"
#define LN_aRecord "aRecord"
#define UTIME_OMIT ((1l << 30) - 2l)
#define EC_F_EC_GFP_SIMPLE_OCT2POINT 103
#define LN_no_rev_avail "X509v3 No Revocation Available"
#define __glibcxx_class_requires2(_a,_b,_c) 
#define __glibcxx_class_requires3(_a,_b,_c,_d) 
#define __glibcxx_class_requires4(_a,_b,_c,_d,_e) 
#define MS_SLAVE (1<<19)
#define OBJ_pkcs3 OBJ_pkcs,3L
#define SSL3_MAX_SSL_SESSION_ID_LENGTH 32
#define NID_id_tc26_wrap_gostr3412_2015_kuznyechik 1182
#define NID_Domain 392
#define OBJ_aria_128_ecb OBJ_aria,1L
#define _mm256_maskz_permute_pd(U,X,C) ((__m256d) __builtin_ia32_vpermilpd256_mask ((__v4df)(__m256d)(X), (int)(C), (__v4df)(__m256d)_mm256_setzero_pd (), (__mmask8)(U)))
#define SPLICE_F_NONBLOCK 2
#define _mm256_maskz_permute_ps(U,X,C) ((__m256) __builtin_ia32_vpermilps256_mask ((__v8sf)(__m256)(X), (int)(C), (__v8sf)(__m256)_mm256_setzero_ps (), (__mmask8)(U)))
#define SSL_F_TLS_PROCESS_SKE_DHE 419
#define EVENT2_UTIL_H_INCLUDED_ 
#define STATX_ATTR_MOUNT_ROOT 0x00002000
#define DH_F_DH_PRIV_DECODE 110
#define _GLIBCXX_STD_FUNCTION_H 1
#define _SC_LEVEL1_DCACHE_ASSOC _SC_LEVEL1_DCACHE_ASSOC
#define BOOST_PP_LIST_FOLD_LEFT_168(o,s,l) BOOST_PP_IIF(BOOST_PP_LIST_IS_CONS(l), BOOST_PP_LIST_FOLD_LEFT_169, s BOOST_PP_TUPLE_EAT_3)(o, BOOST_PP_EXPR_IIF(BOOST_PP_LIST_IS_CONS(l), o)(169, s, BOOST_PP_LIST_FIRST(l)), BOOST_PP_LIST_REST(l))
#define BOOST_PP_SEQ_SIZE_61(_) BOOST_PP_SEQ_SIZE_62
#define BOOST_PP_WHILE_245_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_246, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(246, s))
#define BOOST_PP_FOR_58_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(59, s) BOOST_PP_IIF(c, BOOST_PP_FOR_59, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(59, s), p, o, m)
#define BIO_CTRL_DGRAM_GET_PEER 46
#define PKCS7_R_WRONG_CONTENT_TYPE 113
#define LN_dSAQuality "dSAQuality"
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define BOOST_PREPROCESSOR_ENUM_PARAMS_HPP 
#define OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik,1L
#define LN_hmacWithSHA512_224 "hmacWithSHA512-224"
#define BOOST_TT_IS_FUNCTION_HPP_INCLUDED 
#define NID_X9_62_c2onb191v4 691
#define SSL_F_TLS_CONSTRUCT_STOC_NEXT_PROTO_NEG 457
#define __CPU_ALLOC(count) __sched_cpualloc (count)
#define EAI_SYSTEM -11
#define SN_id_pkix_OCSP_Nonce "Nonce"
#define SSL_get_max_proto_version(s) SSL_ctrl(s, SSL_CTRL_GET_MAX_PROTO_VERSION, 0, NULL)
#define DSA_R_PARAMETER_ENCODING_ERROR 105
#define NID_setct_PANData 519
#define BOOST_MPL_NEXT_HPP_INCLUDED 
#define __cpp_runtime_arrays 198712L
#define SSL_SESS_CACHE_NO_AUTO_CLEAR 0x0080
#define IMPLEMENT_PEM_read_fp(name,type,str,asn1) type *PEM_read_ ##name(FILE *fp, type **x, pem_password_cb *cb, void *u){ return PEM_ASN1_read((d2i_of_void *)d2i_ ##asn1, str,fp,(void **)x,cb,u); }
#define SN_setct_AuthResTBEX "setct-AuthResTBEX"
#define LN_des_ede_ofb64 "des-ede-ofb"
#define SSL_F_TLS_CONSTRUCT_CTOS_SIG_ALGS 477
#define OBJ_aes_256_ecb OBJ_aes,41L
#define EVP_get_cipherbyobj(a) EVP_get_cipherbynid(OBJ_obj2nid(a))
#define _CMP_EQ_US 0x18
#define _mm256_clmulepi64_epi128(A,B,C) ((__m256i) __builtin_ia32_vpclmulqdq_v4di ((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (int)(C)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11110011 (1)(1)(1)(1)(0)(0)(1)(1),
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_132(p,o,s) 0
#define SN_id_GostR3411_94_with_GostR3410_94 "id-GostR3411-94-with-GostR3410-94"
#define TLS1_3_CK_CHACHA20_POLY1305_SHA256 0x03001303
#define TLS1_RFC_DH_DSS_WITH_ARIA_128_GCM_SHA256 "TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256"
#define __INTPTR_TYPE__ long int
#define SN_X500algorithms "X500algorithms"
#define EVENT2_TAG_COMPAT_H_INCLUDED_ 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_103 103
#define OBJ_camellia_192_cmac OBJ_camellia,30L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_106 106
#define OBJ_camellia_256_ctr OBJ_camellia,49L
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_109 109
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_135(p,o,s) 0
#define CRYPTO_F_OPENSSL_LH_NEW 126
#define __cpp_lib_tuple_element_t 201402L
#define LN_Enterprises "Enterprises"
#define NID_ucl 436
#define LN_id_GostR3410_94DH "GOST R 34.10-94 DH"
#define BOOST_PREPROCESSOR_REPETITION_FOR_HPP 
#define NID_dhSinglePass_cofactorDH_sha1kdf_scheme 941
#define EVP_PKEY_OP_VERIFYCTX (1<<7)
#define ev_intptr_t intptr_t
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_111 111
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_112 112
#define _SC_SYNCHRONIZED_IO _SC_SYNCHRONIZED_IO
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_116 116
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_119 119
#define ASN1_PCTX_FLAGS_NO_MSTRING_TYPE 0x020
#define _mm_mask_getmant_round_sd(W,U,X,Y,C,D,R) ((__m128d)__builtin_ia32_getmantsd_mask_round ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(((D)<<2) | (C)), (__v2df)(__m128d)(W), (__mmask8)(U), (R)))
#define SO_TIMESTAMP_NEW 63
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_139(p,o,s) 0
#define OBJ_dsa_with_sha2 OBJ_nistAlgorithms,3L
#define SSL_CTRL_CHAIN_CERT 89
#define _CS_XBS5_LPBIG_OFFBIG_LIBS _CS_XBS5_LPBIG_OFFBIG_LIBS
#define APACHE_THRIFT_ACCESSOR_service_info 
#define _PATH_PROTOCOLS "/etc/protocols"
#define EVP_PKEY_CTX_set_ecdh_kdf_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_MD, 0, (void *)(md))
#define TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C075
#define BOOST_PP_LIST_FOR_EACH_I(macro,data,list) BOOST_PP_FOR((macro, data, list, 0), BOOST_PP_LIST_FOR_EACH_I_P, BOOST_PP_LIST_FOR_EACH_I_O, BOOST_PP_LIST_FOR_EACH_I_M)
#define SOCK_CLOEXEC SOCK_CLOEXEC
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_121 121
#define BOOST_PP_LIST_FOR_EACH_O(r,md,i,elem) BOOST_PP_LIST_FOR_EACH_O_D(r, BOOST_PP_TUPLE_ELEM(2, 0, md), BOOST_PP_TUPLE_ELEM(2, 1, md), elem)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_124 124
#define BOOST_PP_LIST_FOR_EACH_R(r,macro,data,list) BOOST_PP_LIST_FOR_EACH_I_R(r, BOOST_PP_LIST_FOR_EACH_O, (macro, data), list)
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_129 129
#define NID_aria_128_ofb128 1068
#define X509V3_F_V3_GENERIC_EXTENSION 116
#define BOOST_MOVE_SEEDOC(TYPE) TYPE
#define X509V3_F_X509V3_ADD1_I2D 140
#define TLS_MD_MAX_CONST_SIZE 22
#define SSL_F_SSL_SET_CT_VALIDATION_CALLBACK 399
#define NID_id_on_personalData 347
#define SN_setct_CRLNotificationResTBS "setct-CRLNotificationResTBS"
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_134 134
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_135 135
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_139 139
#define HEADER_CONFERR_H 
#define EC_F_NISTP224_PRE_COMP_NEW 227
#define EAI_AGAIN -3
#define SN_sshServer "secureShellServer"
#define __cpp_lib_void_t 201411
#define CT_F_SCT_SET0_LOG_ID 101
#define SSL_CTX_set1_curves_list SSL_CTX_set1_groups_list
#define EVENT_BASE_COUNT_ACTIVE 1U
#define BOOST_PP_INTERCEPT_130 
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00000000 (0)(0)(0)(0)(0)(0)(0)(0),
#define __enclu_bcd(leaf,b,c,d,retval) __asm__ __volatile__("enclu\n\t" : "=a" (retval) : "a" (leaf), "b" (b), "c" (c), "d" (d) : "cc")
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_140 140
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_142 142
#define EAI_NOTCANCELED -102
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_145 145
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_146 146
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_147 147
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_149 149
#define BOOST_PP_WHILE_43_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_44, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(44, s))
#define SSL3_TXT_EDH_RSA_DES_40_CBC_SHA "EXP-EDH-RSA-DES-CBC-SHA"
#define FSCRYPT_POLICY_V1 0
#define FSCRYPT_POLICY_V2 2
#define __HAVE_FLOAT128 1
#define FS_COMPRBLK_FL 0x00000200
#define SSL_CTRL_SESS_CB_HIT 28
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_00110110 (0)(0)(1)(1)(0)(1)(1)(0),
#define NID_dhSinglePass_cofactorDH_sha224kdf_scheme 942
#define _kshiftri_mask32(X,Y) ((__mmask32) __builtin_ia32_kshiftrisi ((__mmask32)(X), (__mmask8)(Y)))
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_150 150
#define ERR_LIB_PKCS12 35
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_153 153
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_157 157
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_158 158
#define OPENSSL_NO_HEARTBEATS 
#define NID_clearance 395
#define SN_id_tc26_digest "id-tc26-digest"
#define IMPLEMENT_LHASH_DOALL_ARG(type,argtype) int_implement_lhash_doall(type, argtype, type)
#define SCNxLEAST8 "hhx"
#define SN_setct_AuthRevReqTBS "setct-AuthRevReqTBS"
#define LN_undef "undefined"
#define BIO_NOCLOSE 0x00
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_111001 (1)(1)(1)(0)(0)(1),
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_160 160
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_161 161
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_162 162
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_164 164
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_165 165
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_166 166
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_168 168
#define _GLIBCXX_HAVE_SYS_TYPES_H 1
#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CBC_SHA "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
#define BOOST_MPL_AUX_FRONT_IMPL_HPP_INCLUDED 
#define BOOST_PP_REPEAT_1_68(m,d) BOOST_PP_REPEAT_1_67(m, d) m(2, 67, d)
#define BOOST_PP_MOD(x,y) BOOST_PP_TUPLE_ELEM(3, 1, BOOST_PP_DIV_BASE(x, y))
#define _mm512_maskz_gf2p8affine_epi64_epi8(A,B,C,D) ((__m512i) __builtin_ia32_vgf2p8affineqb_v64qi_mask((__v64qi)(__m512i)(B), (__v64qi)(__m512i)(C), (int)(D), (__v64qi)(__m512i) _mm512_setzero_si512 (), (__mmask64)(A)))
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_11010000 (1)(1)(0)(1)(0)(0)(0)(0),
#define FALLOC_FL_COLLAPSE_RANGE 0x08
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_170 170
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_171 171
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_173 173
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_174 174
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_175 175
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_176 176
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_177 177
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_178 178
#define BOOST_PP_INTERCEPT_137 
#define NID_buildingName 494
#define BOOST_PP_FOR_166_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(167, s) BOOST_PP_IIF(c, BOOST_PP_FOR_167, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(167, s), p, o, m)
#define __time_t_defined 1
#define _SC_INT_MIN _SC_INT_MIN
#define SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_GROUPS 480
#define BOOST_PP_INTERCEPT_138 
#define _AVX512FINTRIN_H_INCLUDED 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_180 180
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_181 181
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_182 182
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_183 183
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_184 184
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_187 187
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_188 188
#define BOOST_HAS_FLOAT128 
#define SSL_AD_UNRECOGNIZED_NAME TLS1_AD_UNRECOGNIZED_NAME
#define LN_id_Gost28147_89 "GOST 28147-89"
#define SSL_R_PARSE_TLSEXT 227
#define SN_id_GostR3410_94_CryptoPro_XchA_ParamSet "id-GostR3410-94-CryptoPro-XchA-ParamSet"
#define OBJ_X9_62_prime239v1 OBJ_X9_62_primeCurve,4L
#define _mm_mask_cmp_round_sd_mask(M,X,Y,P,R) ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (M), R))
#define LN_des_ede3_cfb1 "des-ede3-cfb1"
#define OPENSSL_NO_EGD 
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_191 191
#define SSL_F_TLS_PARSE_STOC_SCT 564
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_194 194
#define _SC_V6_LPBIG_OFFBIG _SC_V6_LPBIG_OFFBIG
#define BOOST_PP_SEQ_SIZE_BOOST_PP_SEQ_SIZE_197 197
#define _mm_mask_getmant_round_ss(W,U,X,Y,C,D,R) ((__m128)__builtin_ia32_getmantss_mask_round ((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(((D)<<2) | (C)), (__v4sf)(__m128)(W), (__mmask8)(U), (R)))
#define _mm512_maskz_rol_epi64(U,A,B) ((__m512i)__builtin_ia32_prolq512_mask ((__v8di)(__m512i)(A), (int)(B), (__v8di)_mm512_setzero_si512 (), (__mmask8)(U)))
#define EVP_PK_DSA 0x0002
#define BOOST_PP_INC_45 46
#define SSL_F_CT_MOVE_SCTS 345
#define BIO_dup_state(b,ret) BIO_ctrl(b,BIO_CTRL_DUP,0,(char *)(ret))
#define EWOULDBLOCK EAGAIN
#define LN_houseIdentifier "houseIdentifier"
#define _CS_POSIX_V7_LP64_OFF64_LDFLAGS _CS_POSIX_V7_LP64_OFF64_LDFLAGS
#define TLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256 0x0300009E
#define ASN1_R_NON_HEX_CHARACTERS 141
#define CRYPTO_F_SK_RESERVE 129
#define SN_gost_mac_12 "gost-mac-12"
#define NID_aria_128_cbc 1066
#define OBJ_setct_PIUnsignedTBE OBJ_set_ctype,51L
#define BOOST_PREPROCESSOR_CONTROL_DETAIL_WHILE_HPP 
#define RSA_R_MISSING_PRIVATE_KEY 179
#define BOOST_PP_BOOL_41 1
#define BOOST_PP_WHILE_213_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_214, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(214, s))
#define ECDSAerr(f,r) ERR_PUT_error(ERR_LIB_ECDSA,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define PRIuLEAST8 "u"
#define SSL_R_BAD_VALUE 384
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_51(op,st,ss,sz) 0
#define NID_aria_128_ccm 1120
#define BOOST_PP_REPEAT_1_231(m,d) BOOST_PP_REPEAT_1_230(m, d) m(2, 230, d)
#define BOOST_PP_INTERCEPT_247 
#define X509V3_ADD_REPLACE 2L
#define PF_NETROM 6
#define BOOST_PP_INTERCEPT_248 
#define SN_sendRouter "sendRouter"
#define BOOST_PP_REPEAT_1_232(m,d) BOOST_PP_REPEAT_1_231(m, d) m(2, 231, d)
#define PEM_STRING_ECDSA_PUBLIC "ECDSA PUBLIC KEY"
#define _mm256_mask_shuffle_f32x4(W,U,X,Y,C) ((__m256) __builtin_ia32_shuf_f32x4_256_mask ((__v8sf)(__m256)(X), (__v8sf)(__m256)(Y), (int)(C), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define SN_ieee_siswg "ieee-siswg"
#define _mm256_mask_i32scatter_epi32(ADDR,MASK,INDEX,V1,SCALE) __builtin_ia32_scattersiv8si ((void *) (ADDR), (__mmask8) (MASK), (__v8si)(__m256i) (INDEX), (__v8si)(__m256i) (V1), (int) (SCALE))
#define SSL_R_TLSV1_ALERT_DECRYPT_ERROR 1051
#define BOOST_PP_EXPR_IIF_0(expr) 
#define SN_id_GostR3410_94 "gost94"
#define PLOG(severity) GOOGLE_PLOG(severity, 0).stream()
#define SN_setct_AuthResTBSX "setct-AuthResTBSX"
#define BOOST_PP_DEC_142 141
#define __DECL_SIMD_sincosf32x 
#define SN_setext_pinAny "setext-pinAny"
#define BOOST_TEMPLATED_STREAM_ARGS_ALLOC(E,T,A) typename E , typename T , typename A
#define BN_R_PRIVATE_KEY_TOO_LARGE 117
#define FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR 1
#define _GLIBCXX_HAVE_SINCOS 1
#define BOOST_PP_REPEAT_1_234(m,d) BOOST_PP_REPEAT_1_233(m, d) m(2, 233, d)
#define __cpp_lib_filesystem 201703
#define NID_id_ct_asciiTextWithCRLF 787
#define FOLLY_NODISCARD [[nodiscard]]
#define _mm512_permutex_epi64(X,I) ((__m512i) __builtin_ia32_permdi512_mask ((__v8di)(__m512i)(X), (int)(I), (__v8di)(__m512i) (_mm512_undefined_epi32 ()), (__mmask8)(-1)))
#define V_ASN1_ISO64STRING 26
#define BOOST_PP_REPEAT_1_101(m,d) BOOST_PP_REPEAT_1_100(m, d) m(2, 100, d)
#define BOOST_PP_REPEAT_1_102(m,d) BOOST_PP_REPEAT_1_101(m, d) m(2, 101, d)
#define BOOST_PP_REPEAT_1_104(m,d) BOOST_PP_REPEAT_1_103(m, d) m(2, 103, d)
#define BOOST_PP_REPEAT_1_106(m,d) BOOST_PP_REPEAT_1_105(m, d) m(2, 105, d)
#define BOOST_PP_REPEAT_1_107(m,d) BOOST_PP_REPEAT_1_106(m, d) m(2, 106, d)
#define ASN1_PCTX_FLAGS_SHOW_TYPE 0x008
#define _mm512_shrdi_epi16(A,B,C) ((__m512i) __builtin_ia32_vpshrd_v32hi ((__v32hi)(__m512i)(A), (__v32hi)(__m512i)(B),(int)(C)))
#define SSL3_AD_UNSUPPORTED_CERTIFICATE 43
#define TLS1_CK_ECDH_anon_WITH_NULL_SHA 0x0300C015
#define SSL_F_TLS_SCAN_CLIENTHELLO_TLSEXT 450
#define INADDR_ALLSNOOPERS_GROUP ((in_addr_t) 0xe000006a)
#define SMIME_ASCIICRLF 0x80000
#define SSL_SENT_SHUTDOWN 1
#define BOOST_PP_SEQ_SIZE_71(_) BOOST_PP_SEQ_SIZE_72
#define EC_F_BN_TO_FELEM 224
#define ASN1_STRING_FLAG_X509_TIME 0x100
#define SN_camellia_192_cfb1 "CAMELLIA-192-CFB1"
#define BOOST_PP_REPEAT_1_116(m,d) BOOST_PP_REPEAT_1_115(m, d) m(2, 115, d)
#define BOOST_PP_REPEAT_1_117(m,d) BOOST_PP_REPEAT_1_116(m, d) m(2, 116, d)
#define EVP_R_EXPECTING_A_DSA_KEY 129
#define _GLIBCXX_BUILTIN_IS_SAME_AS(T,U) __is_same_as(T, U)
#define BLKDISCARDZEROES _IO(0x12,124)
#define SSL_F_DTLS_PROCESS_HELLO_VERIFY 386
#define BOOST_PP_NODE_ENTRY_32(p) BOOST_PP_NODE_16(p)(p)(p)(p)(p)
#define EVENT__HAVE_GETEUID 1
#define TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA384 "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384"
#define BN_F_BN_CTX_NEW 106
#define SPLICE_F_MORE 4
#define BOOST_PP_REPEAT_1_120(m,d) BOOST_PP_REPEAT_1_119(m, d) m(2, 119, d)
#define BOOST_PP_REPEAT_1_122(m,d) BOOST_PP_REPEAT_1_121(m, d) m(2, 121, d)
#define SSL3_CK_DHE_DSS_DES_64_CBC_SHA 0x03000012
#define _GLIBCXX_END_NAMESPACE_CONTAINER 
#define BOOST_PP_REPEAT_1_125(m,d) BOOST_PP_REPEAT_1_124(m, d) m(2, 124, d)
#define BOOST_PP_REPEAT_1_126(m,d) BOOST_PP_REPEAT_1_125(m, d) m(2, 125, d)
#define BOOST_PP_REPEAT_1_128(m,d) BOOST_PP_REPEAT_1_127(m, d) m(2, 127, d)
#define _mm512_shrdi_epi32(A,B,C) ((__m512i) __builtin_ia32_vpshrd_v16si ((__v16si)(__m512i)(A), (__v16si)(__m512i)(B),(int)(C)))
#define BIOerr(f,r) ERR_PUT_error(ERR_LIB_BIO,(f),(r),OPENSSL_FILE,OPENSSL_LINE)
#define EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS (EVP_PKEY_ALG_CTRL + 2)
#define LN_documentTitle "documentTitle"
#define STA_UNSYNC 0x0040
#define LN_nSRecord "nSRecord"
#define OBJ_subtreeMaximumQuality OBJ_pilotAttributeType,52L
#define BOOST_PP_REPEAT_1_130(m,d) BOOST_PP_REPEAT_1_129(m, d) m(2, 129, d)
#define BOOST_PP_REPEAT_1_131(m,d) BOOST_PP_REPEAT_1_130(m, d) m(2, 130, d)
#define NID_id_smime_aa_timeStampToken 225
#define BOOST_PP_REPEAT_1_134(m,d) BOOST_PP_REPEAT_1_133(m, d) m(2, 133, d)
#define BOOST_PP_REPEAT_1_136(m,d) BOOST_PP_REPEAT_1_135(m, d) m(2, 135, d)
#define BOOST_PP_REPEAT_1_137(m,d) BOOST_PP_REPEAT_1_136(m, d) m(2, 136, d)
#define BOOST_PP_REPEAT_1_138(m,d) BOOST_PP_REPEAT_1_137(m, d) m(2, 137, d)
#define LN_aes_192_cbc_hmac_sha1 "aes-192-cbc-hmac-sha1"
#define ASN1_R_ASN1_SIG_PARSE_ERROR 204
#define EVP_R_INVALID_KEY 163
#define TLS1_RFC_DHE_RSA_WITH_AES_256_SHA256 "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"
#define OBJ_dhKeyAgreement OBJ_pkcs3,1L
#define SN_initials "initials"
#define get_rfc3526_prime_4096 BN_get_rfc3526_prime_4096
#define BOOST_TT_IS_BASE_AND_DERIVED_HPP_INCLUDED 
#define PKCS7_F_PKCS7_ADD_RECIPIENT_INFO 102
#define BOOST_INTRUSIVE_OPTIONS_HPP 
#define LN_aria_256_cbc "aria-256-cbc"
#define __tobody(c,f,a,args) (__extension__ ({ int __res; if (sizeof (c) > 1) { if (__builtin_constant_p (c)) { int __c = (c); __res = __c < -128 || __c > 255 ? __c : (a)[__c]; } else __res = f args; } else __res = (a)[(int) (c)]; __res; }))
#define STATX_INO 0x00000100U
#define BOOST_PP_REPEAT_1_140(m,d) BOOST_PP_REPEAT_1_139(m, d) m(2, 139, d)
#define TLS1_AD_NO_RENEGOTIATION 100
#define ASN1_STRFLGS_SHOW_TYPE 0x40
#define BOOST_PP_REPEAT_1_143(m,d) BOOST_PP_REPEAT_1_142(m, d) m(2, 142, d)
#define BOOST_PP_REPEAT_1_145(m,d) BOOST_PP_REPEAT_1_144(m, d) m(2, 144, d)
#define BOOST_PP_REPEAT_1_146(m,d) BOOST_PP_REPEAT_1_145(m, d) m(2, 145, d)
#define BOOST_PP_REPEAT_1_147(m,d) BOOST_PP_REPEAT_1_146(m, d) m(2, 146, d)
#define BOOST_PP_REPEAT_1_149(m,d) BOOST_PP_REPEAT_1_148(m, d) m(2, 148, d)
#define _mm512_cmp_round_ps_mask(X,Y,P,R) ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X), (__v16sf)(__m512)(Y), (int)(P), (__mmask16)-1, R))
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_145(p,o,s) 0
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_195(op,st,ss,sz) 0
#define BOOST_PP_NODE_ENTRY_64(p) BOOST_PP_NODE_32(p)(p)(p)(p)(p)(p)
#define _mm512_maskz_cvt_roundepu64_pd(U,A,B) ((__m512d)__builtin_ia32_cvtuqq2pd512_mask ((__v8di)(A), (__v8df)_mm512_setzero_pd (), (U), (B)))
#define __UINT32_TYPE__ unsigned int
#define _mm512_maskz_cvt_roundepu64_ps(U,A,B) ((__m256)__builtin_ia32_cvtuqq2ps512_mask ((__v8di)(A), (__v8sf)_mm256_setzero_ps (), (U), (B)))
#define LN_aria_256_ccm "aria-256-ccm"
#define BOOST_PP_REPEAT_1_150(m,d) BOOST_PP_REPEAT_1_149(m, d) m(2, 149, d)
#define BOOST_PP_REPEAT_1_151(m,d) BOOST_PP_REPEAT_1_150(m, d) m(2, 150, d)
#define BOOST_PP_REPEAT_1_152(m,d) BOOST_PP_REPEAT_1_151(m, d) m(2, 151, d)
#define BOOST_PP_REPEAT_1_153(m,d) BOOST_PP_REPEAT_1_152(m, d) m(2, 152, d)
#define BOOST_PP_REPEAT_1_155(m,d) BOOST_PP_REPEAT_1_154(m, d) m(2, 154, d)
#define BOOST_PP_REPEAT_1_157(m,d) BOOST_PP_REPEAT_1_156(m, d) m(2, 156, d)
#define BOOST_PP_REPEAT_1_158(m,d) BOOST_PP_REPEAT_1_157(m, d) m(2, 157, d)
#define BOOST_PP_REPEAT_1_159(m,d) BOOST_PP_REPEAT_1_158(m, d) m(2, 158, d)
#define BOOST_PP_SEQ_SIZE_79(_) BOOST_PP_SEQ_SIZE_80
#define OPENSSL_NPN_UNSUPPORTED 0
#define BOOST_PP_WHILE_CHECK_BOOST_PP_WHILE_148(p,o,s) 0
#define GLOG_MSVC_PUSH_DISABLE_WARNING(n) 
#define SSL_AD_DECRYPT_ERROR TLS1_AD_DECRYPT_ERROR
#define EVP_F_EVP_PKEY_COPY_PARAMETERS 103
#define _GLIBCXX_USE_CLOCK_MONOTONIC 1
#define SSL3_TXT_DH_RSA_DES_64_CBC_SHA "DH-RSA-DES-CBC-SHA"
#define BOOST_PP_SEQ_FOLD_LEFT_CHECK_BOOST_PP_SEQ_FOLD_LEFT_I_199(op,st,ss,sz) 0
#define LN_rfc822Mailbox "rfc822Mailbox"
#define BOOST_PP_REPEAT_1_160(m,d) BOOST_PP_REPEAT_1_159(m, d) m(2, 159, d)
#define BOOST_PP_REPEAT_1_161(m,d) BOOST_PP_REPEAT_1_160(m, d) m(2, 160, d)
#define BOOST_PP_REPEAT_1_162(m,d) BOOST_PP_REPEAT_1_161(m, d) m(2, 161, d)
#define BOOST_PP_REPEAT_1_163(m,d) BOOST_PP_REPEAT_1_162(m, d) m(2, 162, d)
#define BOOST_PP_REPEAT_1_164(m,d) BOOST_PP_REPEAT_1_163(m, d) m(2, 163, d)
#define BOOST_PP_REPEAT_1_165(m,d) BOOST_PP_REPEAT_1_164(m, d) m(2, 164, d)
#define BOOST_PP_REPEAT_1_166(m,d) BOOST_PP_REPEAT_1_165(m, d) m(2, 165, d)
#define BOOST_PP_REPEAT_1_167(m,d) BOOST_PP_REPEAT_1_166(m, d) m(2, 166, d)
#define BOOST_PP_REPEAT_1_168(m,d) BOOST_PP_REPEAT_1_167(m, d) m(2, 167, d)
#define BOOST_PP_REPEAT_1_169(m,d) BOOST_PP_REPEAT_1_168(m, d) m(2, 168, d)
#define _PC_2_SYMLINKS _PC_2_SYMLINKS
#define __LP64_OFF64_CFLAGS "-m64"
#define EBADSLT 57
#define SN_camellia_192_cfb8 "CAMELLIA-192-CFB8"
#define OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac OBJ_id_tc26_cipher_gostr3412_2015_magma,2L
#define EVUTIL_AI_ADDRCONFIG AI_ADDRCONFIG
#define AI_CANONNAME 0x0002
#define SSL_BUILD_CHAIN_FLAG_IGNORE_ERROR 0x8
#define NID_id_it_caKeyUpdateInfo 302
#define X509_TRUST_COMPAT 1
#define NID_friendlyCountryName 490
#define NID_set_msgExt 514
#define OBJ_setct_PANToken OBJ_set_ctype,1L
#define OBJ_setct_PIData OBJ_set_ctype,5L
#define NID_setct_BatchAdminResTBE 593
#define BOOST_PP_REPEAT_1_170(m,d) BOOST_PP_REPEAT_1_169(m, d) m(2, 169, d)
#define SSL_F_SSL_DO_CONFIG 391
#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
#define BOOST_PP_REPEAT_1_174(m,d) BOOST_PP_REPEAT_1_173(m, d) m(2, 173, d)
#define BOOST_PP_REPEAT_1_175(m,d) BOOST_PP_REPEAT_1_174(m, d) m(2, 174, d)
#define BOOST_PP_REPEAT_1_177(m,d) BOOST_PP_REPEAT_1_176(m, d) m(2, 176, d)
#define _mm_srli_si128(A,N) ((__m128i)__builtin_ia32_psrldqi128 ((__m128i)(A), (int)(N) * 8))
#define SN_ED25519 "ED25519"
#define NID_shake256 1101
#define LN_documentPublisher "documentPublisher"
#define EVP_seed_cfb EVP_seed_cfb128
#define __HAVE_DISTINCT_FLOAT64X 0
#define X509_REQ_extract_key(a) X509_REQ_get_pubkey(a)
#define BOOST_PP_FOR_207_C(c,s,p,o,m) BOOST_PP_IIF(c, m, BOOST_PP_TUPLE_EAT_2)(208, s) BOOST_PP_IIF(c, BOOST_PP_FOR_208, BOOST_PP_TUPLE_EAT_4)(BOOST_PP_EXPR_IIF(c, o)(208, s), p, o, m)
#define NID_id_smime_spq_ets_sqt_unotice 250
#define OBJ_id_pkix_OCSP OBJ_ad_OCSP
#define BOOST_PP_REPEAT_1_180(m,d) BOOST_PP_REPEAT_1_179(m, d) m(2, 179, d)
#define BOOST_PP_REPEAT_1_181(m,d) BOOST_PP_REPEAT_1_180(m, d) m(2, 180, d)
#define BOOST_PP_REPEAT_1_182(m,d) BOOST_PP_REPEAT_1_181(m, d) m(2, 181, d)
#define BOOST_PP_REPEAT_1_183(m,d) BOOST_PP_REPEAT_1_182(m, d) m(2, 182, d)
#define BOOST_PP_REPEAT_1_184(m,d) BOOST_PP_REPEAT_1_183(m, d) m(2, 183, d)
#define BOOST_PP_REPEAT_1_185(m,d) BOOST_PP_REPEAT_1_184(m, d) m(2, 184, d)
#define _mm256_mask_roundscale_ps(W,U,A,B) ((__m256) __builtin_ia32_rndscaleps_256_mask ((__v8sf)(__m256)(A), (int)(B), (__v8sf)(__m256)(W), (__mmask8)(U)))
#define BOOST_PP_REPEAT_1_188(m,d) BOOST_PP_REPEAT_1_187(m, d) m(2, 187, d)
#define BOOST_PP_REPEAT_1_189(m,d) BOOST_PP_REPEAT_1_188(m, d) m(2, 188, d)
#define DH_R_MODULUS_TOO_LARGE 103
#define SN_grasshopper_mac "grasshopper-mac"
#define FS_ENCRYPTION_MODE_AES_256_XTS FSCRYPT_MODE_AES_256_XTS
#define CHECKED_NEW_OF(type,xnew) ((void *(*)(void)) (1 ? xnew : ((type *(*)(void))0)))
#define BOOST_PP_WHILE_24_C(c,p,o,s) BOOST_PP_IIF(c, BOOST_PP_WHILE_25, s BOOST_PP_TUPLE_EAT_3)(p, o, BOOST_PP_IIF(c, o, BOOST_PP_NIL BOOST_PP_TUPLE_EAT_2)(25, s))
#define X509_V_FLAG_INHIBIT_MAP 0x400
#define BOOST_MOVE_IS_EMPTY_IMPL(T) BOOST_MOVE_IS_EMPTY(T)
#define INTMAX_MIN (-__INT64_C(9223372036854775807)-1)
#define _mm_getexp_round_sd(A,B,R) ((__m128d)__builtin_ia32_getexpsd128_round((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), R))
#define SN_ecdsa_with_SHA224 "ecdsa-with-SHA224"
#define M_LN2f32 __f32 (0.693147180559945309417232121458176568)
#define BOOST_PP_REPEAT_1_191(m,d) BOOST_PP_REPEAT_1_190(m, d) m(2, 190, d)
#define BOOST_PP_REPEAT_1_192(m,d) BOOST_PP_REPEAT_1_191(m, d) m(2, 191, d)
#define BOOST_PP_REPEAT_1_194(m,d) BOOST_PP_REPEAT_1_193(m, d) m(2, 193, d)
#define BOOST_PP_REPEAT_1_195(m,d) BOOST_PP_REPEAT_1_194(m, d) m(2, 194, d)
#define BOOST_PP_REPEAT_1_196(m,d) BOOST_PP_REPEAT_1_195(m, d) m(2, 195, d)
#define SSL_SECOP_EE_KEY (16 | SSL_SECOP_OTHER_CERT)
#define BOOST_PP_REPEAT_1_198(m,d) BOOST_PP_REPEAT_1_197(m, d) m(2, 197, d)
#define BOOST_PP_REPEAT_1_199(m,d) BOOST_PP_REPEAT_1_198(m, d) m(2, 198, d)
#define SSL_MODE_SEND_CLIENTHELLO_TIME 0x00000020U
#define LN_aria_128_cfb1 "aria-128-cfb1"
#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
#define LN_aria_128_cfb8 "aria-128-cfb8"
#define X509V3_conf_err(val) ERR_add_error_data(6, "section:", (val)->section, ",name:", (val)->name, ",value:", (val)->value)
#define SCM_TIMESTAMPNS SO_TIMESTAMPNS
#define SSL_F_DTLS1_CHECK_TIMEOUT_NUM 318
#define _ALL_SOURCE 1
#define OBJ_sendOwner OBJ_id_kp,25L
#define X509_PURPOSE_OCSP_HELPER 8
#define __exctype(name) extern int name (int) __THROW
#define NID_id_Gost28147_89_MAC 815
#define BOOST_ALIGNMENT(x) alignas(x)
#define _SC_NZERO _SC_NZERO
#define X509V3_F_NOTICE_SECTION 132
#define SSL_TXT_CAMELLIA128 "CAMELLIA128"
#define SN_id_aca_accessIdentity "id-aca-accessIdentity"
#define EC_F_EC_GROUP_SET_GENERATOR 111
#define OBJ_setct_CardCInitResTBS OBJ_set_ctype,42L
#define OBJ_camellia_128_gcm OBJ_camellia,6L
#define INT_FAST8_MAX (127)
#define POSIX_MADV_RANDOM 1
#define SN_subjectSignTool "subjectSignTool"
#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"
#define _mm256_maskz_ternarylogic_epi32(U,A,B,C,I) ((__m256i) __builtin_ia32_pternlogd256_maskz ((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (__v8si)(__m256i)(C), (int)(I), (__mmask8)(U)))
#define __glibcxx_requires_irreflexive_pred(_First,_Last,_Pred) 
#define ASN1_STRING_FLAG_CONT 0x020
#define TLS_CT_GOST01_SIGN 22
#define FS_ENCRYPTION_MODE_AES_128_CTS FSCRYPT_MODE_AES_128_CTS
#define SSL_CTX_get_mode(ctx) SSL_CTX_ctrl((ctx),SSL_CTRL_MODE,0,NULL)
#define sk_find_ex OPENSSL_sk_find_ex
#define LN_seed_cbc "seed-cbc"
#define TLS1_RFC_DHE_DSS_WITH_SEED_SHA "TLS_DHE_DSS_WITH_SEED_CBC_SHA"
#define EVENT__HAVE_SPLICE 1
#define MREMAP_FIXED 2
#define _MM_EXCEPT_MASK 0x003f
#define _NETDB_H 1
#define BOOST_DETAIL_BINARY_LITERAL_ELEMENT_10000100 (1)(0)(0)(0)(0)(1)(0)(0),
#define _mm512_maskz_rol_epi32(U,A,B) ((__m512i)__builtin_ia32_prold512_mask ((__v16si)(__m512i)(A), (int)(B), (__v16si)_mm512_setzero_si512 (), (__mmask16)(U)))
#define SN_dhpublicnumber "dhpublicnumber"
#define ASN1_F_ASN1_SCTX_NEW 221
#define EVP_PKEY_X448 NID_X448
#define SN_setct_PI "setct-PI"
#define PEM_STRING_DHPARAMS "DH PARAMETERS"
#define NID_ad_dvcs 364
#define BIO_CTRL_DGRAM_GET_SEND_TIMEOUT 36
#define ASN1_R_UNKNOWN_FORMAT 160
#define THRIFT_ASYNC_RESPONSECHANNEL_H_ 1
#define PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME 135
#define BIO_get_conn_hostname(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,0))
#define SN_sha256 "SHA256"
#define EV_INT64_MAX INT64_MAX
#define EVP_CIPHER_CTX_type(c) EVP_CIPHER_type(EVP_CIPHER_CTX_cipher(c))
#define X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED 155
#define i2d_DHxparams_fp(fp,x) ASN1_i2d_fp(i2d_DHxparams,(fp), (unsigned char *)(x))
#define __fsblkcnt_t_defined 
#define CT_R_UNSUPPORTED_ENTRY_TYPE 102
#define NID_registeredAddress 870
#define X_OK 1
#define NID_destinationIndicator 871
#define IPPROTO_UDPLITE IPPROTO_UDPLITE
#define _DECLARE_OBJ_BSEARCH_CMP_FN(scope,type1,type2,nm) static int nm ##_cmp_BSEARCH_CMP_FN(const void *, const void *); static int nm ##_cmp(type1 const *, type2 const *); scope type2 * OBJ_bsearch_ ##nm(type1 *key, type2 const *base, int num)
#define __S_ISGID 02000
